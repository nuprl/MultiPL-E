language: lua
name: HumanEval_152_compare
results:
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local results = {}\n    for i = 1, #game\
    \ do\n        local diff = math.abs(guess - game[i])\n        if game[i] == guess\
    \ then\n            results[i] = 0\n        else\n            results[i] = diff\n\
    \        end\n    end\n    return results\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpkw2ijj45.lua:12:\
    \ attempt to perform arithmetic on a table value (local 'guess')\nstack traceback:\n\
    \t/tmp/tmpkw2ijj45.lua:12: in local 'candidate'\n\t/tmp/tmpkw2ijj45.lua:25: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  local matches = {0,1,2,3,3,4,4,4,5,5,5,5,6}\n\
    \  local scores = {9,10,10,10,10,11,12,12,12,12,14,15,15,15,15,16}\n  local result\
    \ = {}\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2,\
    \ -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0},\
    \ {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp9rc8fiih.lua:23: ''end'' expected (to close ''function'' at
    line 9) near <eof>

    '
  stdout: ''
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  local differences = {}\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpeue8q6h1.lua:21: ''end'' expected (to close ''function'' at
    line 9) near <eof>

    '
  stdout: ''
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  local scores = {}\n  for i = 1, #game do\n\
    \    scores[i] = -game[i]\n  end\n  for i = 1, #guess do\n    scores[i] = abs(guess[i]\
    \ - scores[i])\n  end\n  return scores\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpl5v8yw6g.lua:15:\
    \ attempt to call a nil value (global 'abs')\nstack traceback:\n\t/tmp/tmpl5v8yw6g.lua:15:\
    \ in local 'candidate'\n\t/tmp/tmpl5v8yw6g.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    -- write your comparison here\n    return\
    \ 0\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2,\
    \ -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0},\
    \ {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpu_aw3oyo.lua:17:\
    \ expected: {0, 0, 0, 0, 3, 3}\nactual: 0\nstack traceback:\n\t/tmp/tmpu_aw3oyo.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n\tlocal scores = {\n\t\t{ game[0], game[1], game[2],\
    \ game[3], game[4] },\n\t\t{ game[5], game[6], game[7], game[8], game[9] },\n\t\
    \t{ game[10], game[11], game[12], game[13], game[14] },\n\t\t{ game[15], game[16],\
    \ game[17], game[18], game[19] },\n\t\t{ game[20], game[21], game[22], game[23],\
    \ game[24] }\n\t}\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2,\
    \ 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0,\
    \ 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp2epteku3.lua:27: ''end'' expected (to close ''function'' at
    line 9) near <eof>

    '
  stdout: ''
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  local scores = {\n    50, 50, 100, 150, 200,\n\
    \    10, 20, 30, 40, 50,\n    100, 150, 200, 250, 250,\n  }\n  local guesses =\
    \ {\n    25, 50, 100, 150, 200,\n    50, 100, 150, 200, 250,\n    250, 250, 300,\
    \ 350, 350,\n  }\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2,\
    \ 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0,\
    \ 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp6cjniwlt.lua:30: ''end'' expected (to close ''function'' at
    line 9) near <eof>

    '
  stdout: ''
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  local function compare_to_scores(scores, guesses)\n\
    \    local total = 0\n    for i=1,#scores do\n      total = total + abs(scores[i\
    \ - 1]-guess[i])\n    end\n    return total\n  end\n  local guesses = { guess[1],\
    \ guess[2], guess[3], guess[4] }\n  local scores = { game[1], game[2], game[3],\
    \ game[4] }\n  -- Note: You can compare scores and guesses separately if both\
    \ arrays are of equal size.\n  return compare_to_scores(scores, guesses)\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpuarhoa3e.lua:13:\
    \ attempt to perform arithmetic on a nil value (field '?')\nstack traceback:\n\
    \t/tmp/tmpuarhoa3e.lua:13: in function </tmp/tmpuarhoa3e.lua:10>\n\t(...tail calls...)\n\
    \t/tmp/tmpuarhoa3e.lua:26: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 error\n"
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  local scores = {1,5,7,3,5,1,3,7,4,1}\n  local\
    \ guesses = {1,5,7,3,5,2,3,7,4,1}\n  local out = {}\n  for i = 1,#guesses do\n\
    \    local score = scores[i]\n    local guess = guesses[i]\n    out[i] = #out\
    \ + 1\n    -- compare scores\n    if abs(guess - score) < 1 then\n      out[i]\
    \ = out[i] - 1\n    end\n  end\n  return out\nend\nprint(compare({1,5,7,3,5,1,3,7,4,1},\
    \ {1,5,7,3,5,2,3,7,4,1}))\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: "lua: /tmp/tmp_ny_0e0d.lua:18: attempt to call a nil value (global 'abs')\n\
    stack traceback:\n\t/tmp/tmp_ny_0e0d.lua:18: in local 'compare'\n\t/tmp/tmp_ny_0e0d.lua:24:\
    \ in main chunk\n\t[C]: in ?\n"
  stdout: ''
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    -- TODO: your code here\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp3kg1fr5h.lua:16:\
    \ expected: {0, 0, 0, 0, 3, 3}\nactual: nil\nstack traceback:\n\t/tmp/tmp3kg1fr5h.lua:16:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local index = 0\n    local gameLen = #game\n\
    \    local guessLen = #guess\n    local newGuess = { }\n    for i = 1, guessLen\
    \ do\n        if game[i] == guess[i] then\n            newGuess[index] = 0\n \
    \       else\n            newGuess[index] = game[i] - guess[i]\n        end\n\
    \        index = index + 1\n    end\n    return newGuess\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpxarpa3j_.lua:28:\
    \ expected: {0, 0, 0, 0, 3, 3}\nactual: {0=0, 0, 0, 0, 3, 3}\nstack traceback:\n\
    \t/tmp/tmpxarpa3j_.lua:28: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local function error(err)\n        print(\"\
    Catched error: \", err)\n    end\n    local function success(game, guess)\n  \
    \      -- local function success(game, guess)\n        -- local function success(guess)\n\
    \        return game\n    end\n    local function game(guess)\n        -- local\
    \ function game(guess)\n        return success(guess)\n    end\n    local function\
    \ guess(game, score)\n        -- local function guess(game, score)\n        return\
    \ game(guess)\n    end\n    local function game(guess)\n        -- local function\
    \ game(guess)\n        return success(guess)\n    end\n    local function guess(game,\
    \ score)\n        -- local function guess(game, score)\n        return game(guess)\n\
    \    end\n    local function game(guess)\n        -- local function game(guess)\n\
    \        return success(guess)\n    end\n    local function guess(game, score)\n\
    \        -- local function guess(game, score)\n        return game(guess)\n  \
    \  end\n    local function guess(guess)\n        -- local function guess(guess)\n\
    \        return success(guess)\n    end\n    local function guess(guess)\n   \
    \     -- local function guess(guess)\n        return success(guess)\n    end\n\
    \    local function guess(guess)\n        -- local function guess(guess)\n   \
    \     return success(guess)\n    end\n    local function guess(game, score)\n\
    \        -- local function guess(game, score)\n        return game(guess)\n  \
    \  end\n    local function guess(guess)\n        -- local function guess(guess)\n\
    \        return success(guess)\n    end\n    local function guess(game, score)\n\
    \        -- local function guess(game, score)\n        return game(guess)\n  \
    \  end\n    local function guess(score)\n        -- local function guess(score)\n\
    \        return success(score)\n    end\n    local function score(score)\n   \
    \     -- local function score(score)\n        return success(score)\n    end\n\
    \    local function guess(game, score)\n        -- local function guess(game,\
    \ score)\n        return game(guess)\n    end\n    local function guess(score)\n\
    \        -- local function guess(score)\n        return success(score)\n    end\n\
    \    local function guess(game, score)\n        -- local function guess(game,\
    \ score)\n        return game(guess)\n    end\n    local function guess(guess)\n\
    \        -- local function guess(guess)\n        return success(guess)\n    end\n\
    \    local function guess(guess)\n        -- local function guess(guess)\n   \
    \     return success(guess)\n\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpz4_ly3qw.lua:94: ''end'' expected (to close ''function'' at
    line 90) near ''lu''

    '
  stdout: ''
  timestamp: 1659823740
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  local result = {} -- return value\n  for i\
    \ = 1, #game, 1 do\n    local score = game[i]\n    local guess = guess[i]\n  \
    \  if guess ~= 0 then\n      local wrong = score-guess -- absolute difference\n\
    \      table.insert(result, wrong) -- append the difference to the return value\n\
    \    else\n      table.insert(result, 0)\n    end\n  end\n  return result\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  local distance = 0\n  local scores = {game[1],\
    \ game[2], game[3], game[4], game[5], game[6]}\n  for idx = 1, #guess do\n   \
    \ distance = toNumber(guess[idx])-scores[idx]\n    if distance > 0 then\n    \
    \  distance = math.abs(distance)\n    end\n  end\n  return distance\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpqvigdrg0.lua:13:\
    \ attempt to call a nil value (global 'toNumber')\nstack traceback:\n\t/tmp/tmpqvigdrg0.lua:13:\
    \ in local 'candidate'\n\t/tmp/tmpqvigdrg0.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  -- write your implementation here\n  return\
    \ game:diff(guess)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpf6hz28cm.lua:11:\
    \ attempt to call a nil value (method 'diff')\nstack traceback:\n\t/tmp/tmpf6hz28cm.lua:11:\
    \ in local 'candidate'\n\t/tmp/tmpf6hz28cm.lua:17: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  local score1, score2 = game[1], game[2]\n \
    \ local diff = {}\n  for _, v in pairs(guess) do\n    diff[v] = abs(score1[v]\
    \ - score2[v])\n  end\n  return diff\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp6fjix4hp.lua:13:\
    \ attempt to index a number value (local 'score1')\nstack traceback:\n\t/tmp/tmp6fjix4hp.lua:13:\
    \ in local 'candidate'\n\t/tmp/tmp6fjix4hp.lua:21: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local scores = {}\n    local gscores = {}\n\
    \    for i=1,#game do\n        table.insert(scores, game[i])\n        table.insert(gscores,\
    \ guess[i])\n    end\n    \n    local diffs = {}\n    for i=1,#gscores do\n  \
    \      table.insert(diffs, abs(gscores[i]-scores[i]))\n    end\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpsgg5apl3.lua:31: ''end'' expected (to close ''function'' at
    line 9) near <eof>

    '
  stdout: ''
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  -- This code assumes our guess array is sorted.\n\
    \  local i,j\n  local game = { ... }\n  local guess = { ... }\n  local result\
    \ = 0\n  for i = 1, #game do -- iterate over our scores\n    for j = 1, #guess\
    \ do -- iterate over our guesses\n      -- If the two indices do not match, exit\
    \ the loop.\n      if game[i] == guess[j] then\n        return -1\n      end\n\
    \    end\n    -- If we don't exit the loop, it's because we found a match.\n \
    \   -- Add the difference between the guess and the score.\n    local diff = abs(game[i]\
    \ - guess[i])\n    result = result + diff\n  end\n  return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpkv5cm8c1.lua:12: cannot use ''...'' outside a vararg function
    near ''...''

    '
  stdout: ''
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local scores = {\n        -- A: -7, B: -6,\
    \ C: -5, D: -4, E: -3, F: -2, G: -1, H: 0, I: 1, J: 2, K: 3, L: 4, M: 5, N: 6,\
    \ O: 7, P: 8, Q: 9, R: 10, S: 11, T: 12, U: 13, V: 14, W: 15, X: 16, Y: 17, Z:\
    \ 18, a: 0, b: 0, c: 0, d: 0, e: 0, f: 0, g: 0, h: 0, i: 0, j: 0, k: 0, l: 0,\
    \ m: 0, n: 0,\n    }\n    local guesses = {\n        -- A: -7, B: -6, C: -5, D:\
    \ -4, E: -3, F: -2, G: -1, H: 0, I: 1, J: 2, K: 3, L: 4, M: 5, N: 6, O: 7, P:\
    \ 8, Q: 9, R: 10, S: 11, T: 12, U: 13, V: 14, W: 15, X: 16, Y: 17, Z: 18, a: 0,\
    \ b: 0, c: 0, d: 0, e: 0, f: 0, g: 0, h: 0, i: 0, j: 0, k: 0, l: 0, m: 0, n: 0,\n\
    \    }\n    for i = 1, #game, 1 do\n        -- For each score, calculate how far\
    \ off the score is from each guess. \n        -- If the guesses are correct, the\
    \ scores will be equal and we can return 0.\n        -- If the guesses are not\
    \ correct, we can return the absolute difference of the scores and the guesses.\n\
    \        local difference = abs(scores[i] - guesses[i])\n        if scores[i]\
    \ == guesses[i] then return 0 end\n        if difference > 0 then return difference\
    \ end\n    end\n    return difference\nend\nprint(compare({-7, -6, -5, -4, -3,\
    \ -2, -1, 0, 1,  2,  3,  4,  5,  6,  7,  8,  9,  10, 11, 12, 13, 14, 15, 16, 17,\
    \ 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36,\
    \ 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55,\
    \ 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74,\
    \ 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93,\
    \ 94, 95, 96, 97, 98, 99, 100}, {-7, -6, -5, -4, -3, -2, -1, 0, 1,  2,  3,  4,\
    \  5,  6,  7,  8,  9,  10, \nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpf4nibw0a.lua:29: ''}'' expected (to close ''{'' at line 26)
    near ''function''

    '
  stdout: ''
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local correct = 0\n    for i, x in ipairs(game)\
    \ do\n      if x == guess[i] then\n        correct = correct + 1\n      end\n\
    \    end\n    return correct\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp9zlmcsrw.lua:22:\
    \ expected: {0, 0, 0, 0, 3, 3}\nactual: 4\nstack traceback:\n\t/tmp/tmp9zlmcsrw.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    assert(#game == #guess)\n    local function\
    \ check(g)\n        local ok, delta, score = #g > 0, #g < #game, g[#g]\n     \
    \   if ok then\n            if score > g[score] then -- guess is wrong, return\
    \ it's delta\n                delta = math.abs(guess[score] - score)\n       \
    \         return delta\n            end\n            -- guess is correct, return\
    \ nothing\n            return nil\n        end\n        -- guess is not correct\
    \ and we still have guesses to try\n        return check(g + 1)\n    end\n   \
    \ return check(1) -- starting with first guess only\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpugyetugl.lua:12:\
    \ attempt to get length of a number value (local 'g')\nstack traceback:\n\t/tmp/tmpugyetugl.lua:12:\
    \ in function </tmp/tmpugyetugl.lua:11>\n\t(...tail calls...)\n\t/tmp/tmpugyetugl.lua:30:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n\tlocal correct = {}\n\tlocal total = 0\n\tfor\
    \ i = 0, #game do\n\t\tlocal score = game[i]\n\t\tif guess == score then\n\t\t\
    \tcorrect[i] = 0\n\t\t\ttotal = total + 1\n\t\telse\n\t\t\tlocal diff = guess\
    \ - score\n\t\t\tif diff > 0 then\n\t\t\t\tcorrect[i] = diff\n\t\t\t\ttotal =\
    \ total + 1\n\t\t\tend\n\t\tend\n\tend\n\treturn correct, total\nend\nprint(compare({5,8,3,4,5},\
    \ {6,9,5,6,9}))\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2,\
    \ -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0},\
    \ {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: "lua: /tmp/tmpwfcwh8_0.lua:18: attempt to perform arithmetic on a table\
    \ value (local 'guess')\nstack traceback:\n\t/tmp/tmpwfcwh8_0.lua:18: in local\
    \ 'compare'\n\t/tmp/tmpwfcwh8_0.lua:27: in main chunk\n\t[C]: in ?\n"
  stdout: ''
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    -- your code here\n    return -- your answer\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0f1f76hk.lua:17:\
    \ expected: {0, 0, 0, 0, 3, 3}\nactual: nil\nstack traceback:\n\t/tmp/tmp0f1f76hk.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823740
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  local results = {}\n  for i = 1, #game do\n\
    \    local score = game[i]\n    local guess = guess[i]\n    local scoreDiff =\
    \ math.abs(score - guess)\n    results[#results + 1] = scoreDiff\n  end\n  return\
    \ results\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2,\
    \ -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0},\
    \ {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n\tlocal ret = {} -- the return value\n\tlocal\
    \ guessed, score = game:GetScore(guess)\n\t\n\t-- If the guess is correct, return\
    \ 0, if not correct the difference\n\t-- This is just an indicator of how wrong\
    \ we were.\n\tif guessed == score then\n\t\tret[0] = 0\n\telse\n\t\tret[0] = score-guessed\n\
    \tend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate =\
    \ compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}),\
    \ {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0,\
    \ 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3},\
    \ {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1,\
    \ 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp2yvt_jx1.lua:30: ''end'' expected (to close ''function'' at
    line 9) near <eof>

    '
  stdout: ''
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n   local scores = {{1,2,3},{4,5,6},{7,8,9}}\n\
    \   local guesses = {{1,2,3},{4,5,6},{7,8,9}}\n   local results = {}\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpxyww7x8r.lua:23: ''end'' expected (to close ''function'' at
    line 9) near <eof>

    '
  stdout: ''
  timestamp: 1659823740
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  if #game~=#guess then \n    return nil\n  else\n\
    \    local out = {}\n    for i=1,#game do\n      local diff = (guess[i] - game[i])\n\
    \      if diff < 0 then diff = -diff end\n      if diff == 0 then\n        out[i]\
    \ = 0\n      else\n        out[i] = diff\n      end\n    end\n    return out\n\
    \  end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2,\
    \ -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0},\
    \ {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  -- write your solution here\n  return game\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpw9ddeht3.lua:17:\
    \ expected: {0, 0, 0, 0, 3, 3}\nactual: {1, 2, 3, 4, 5, 1}\nstack traceback:\n\
    \t/tmp/tmpw9ddeht3.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n\t-- Your code goes here\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmphl4ntfn8.lua:16:\
    \ expected: {0, 0, 0, 0, 3, 3}\nactual: nil\nstack traceback:\n\t/tmp/tmphl4ntfn8.lua:16:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  -- code goes here\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmphtplzqlr.lua:16:\
    \ expected: {0, 0, 0, 0, 3, 3}\nactual: nil\nstack traceback:\n\t/tmp/tmphtplzqlr.lua:16:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n   local results = {}\n   for i=1,#game,2 do\n\
    \      local score = game[i]\n      local guess = guess[i]\n      table.insert(results,\
    \ math.abs(guess-score))\n   end\n   return results\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpe8l5ydln.lua:22:\
    \ expected: {0, 0, 0, 0, 3, 3}\nactual: {0, 0, 3}\nstack traceback:\n\t/tmp/tmpe8l5ydln.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local scores = {\n        [\"blue\"] = 30,\n\
    \        [\"green\"] = 20,\n        [\"red\"] = 35,\n        [\"yellow\"] = 25\n\
    \    }\n    local guesses = {\n        [\"blue\"] = 3,\n        [\"green\"] =\
    \ 3,\n        [\"red\"] = 3,\n        [\"yellow\"] = 2\n    }\n    local ans =\
    \ {} -- the resulting array to be returned\n    local offset = 0\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmppn8iddw7.lua:34: ''end'' expected (to close ''function'' at
    line 9) near <eof>

    '
  stdout: ''
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  if #game ~= #guess then return end\n  local\
    \ scores = {}\n  local diffs = {}\n  for i = 1, #game do\n    table.insert(scores,\
    \ abs(game[i] - guess[i]))\n    if game[i] == guess[i] then\n      table.insert(diffs,\
    \ 0)\n    else\n      table.insert(diffs, abs(game[i] - guess[i]) - 1)\n    end\n\
    \  end\n  return scores\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpygn_zk32.lua:14:\
    \ attempt to call a nil value (global 'abs')\nstack traceback:\n\t/tmp/tmpygn_zk32.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpygn_zk32.lua:27: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  local difference = nil\n  local correctness\
    \ = nil\n  for i=1, #game do\n    difference = game[i] - guess[i]\n    if difference\
    \ < 0 then\n      difference = difference * -1\n    end\n    if difference ==\
    \ 0 then\n      difference = 0\n    end\n    if difference > 0 then\n      difference\
    \ = difference\n    else\n      difference = difference * -1\n    end\n    correctness\
    \ = correctness + difference\n  end\n  return correctness\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpdjmmgqzk.lua:25:\
    \ attempt to perform arithmetic on a nil value (local 'correctness')\nstack traceback:\n\
    \t/tmp/tmpdjmmgqzk.lua:25: in local 'candidate'\n\t/tmp/tmpdjmmgqzk.lua:33: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n   local gameScores = {100,200,300}\n   local\
    \ gameGuesses = {60,70,80}\n   local compareArray = table.Copy(guess)\n   local\
    \ compared = 0\n   while compared < #compareArray do\n      local score = 0\n\
    \      for i = 1, #game do\n         if game[i] == gameScores[game[i]] then\n\
    \            score = score + 1\n         end\n      end\n      compared = compared\
    \ + score\n      compareArray[compared] = compareArray[compared] - score\n   end\n\
    \   return compareArray\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpo990vzi2.lua:12:\
    \ attempt to call a nil value (field 'Copy')\nstack traceback:\n\t/tmp/tmpo990vzi2.lua:12:\
    \ in local 'candidate'\n\t/tmp/tmpo990vzi2.lua:30: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n   local bestScore = game:score()\n   local bestGuess\
    \ = game:guess()\n   local scoreArray = game:scores()\n   local guessArray = game:guesses()\n\
    \   local diffs = {}\n   for i = 1, #guessArray do\n      local score = scoreArray[i]\n\
    \      local guess = guessArray[i]\n      local newScore = score\n      if guess\
    \ ~= bestGuess then\n         newScore = score - bestScore\n      end\n      if\
    \ newScore ~= bestScore then\n         local diff = abs(bestGuess - guess)\n \
    \        bestScore = newScore\n         bestGuess = guess\n         diffs[#diffs\
    \ + 1] = diff\n      end\n   end\n   return diffs\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpwq440483.lua:10:\
    \ attempt to call a nil value (method 'score')\nstack traceback:\n\t/tmp/tmpwq440483.lua:10:\
    \ in local 'candidate'\n\t/tmp/tmpwq440483.lua:35: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local results = {}\n    for i=1,#game do\n\
    \        local diff = abs(guess[i] - game[i])\n        if guess[i] ~= game[i]\
    \ then results[i] = diff end\n    end\n    return results\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpktcgel4y.lua:12:\
    \ attempt to call a nil value (global 'abs')\nstack traceback:\n\t/tmp/tmpktcgel4y.lua:12:\
    \ in local 'candidate'\n\t/tmp/tmpktcgel4y.lua:21: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n\tlocal game = [[\n\t\t0 5 3 4 1 1\n\t\t2 3 1\
    \ 5 4 5\n\t\t3 5 6 6 7 3\n\t]] \n\tlocal guess = [[\n\t\t3 4 5 4 5 1\n\t\t2 3\
    \ 1 5 4 5\n\t\t3 5 6 6 7 3\n\t]]\n\tlocal answer = 3\n\tlocal off = compare(game,\
    \ guess)\n\tprint(off)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp3urvc_6z.lua:21:\
    \ stack overflow\nstack traceback:\n\t/tmp/tmp3urvc_6z.lua:21: in upvalue 'compare'\n\
    \t/tmp/tmp3urvc_6z.lua:21: in upvalue 'compare'\n\t/tmp/tmp3urvc_6z.lua:21: in\
    \ upvalue 'compare'\n\t/tmp/tmp3urvc_6z.lua:21: in upvalue 'compare'\n\t/tmp/tmp3urvc_6z.lua:21:\
    \ in upvalue 'compare'\n\t/tmp/tmp3urvc_6z.lua:21: in upvalue 'compare'\n\t/tmp/tmp3urvc_6z.lua:21:\
    \ in upvalue 'compare'\n\t/tmp/tmp3urvc_6z.lua:21: in upvalue 'compare'\n\t/tmp/tmp3urvc_6z.lua:21:\
    \ in upvalue 'compare'\n\t...\t(skipping 166644 levels)\n\t/tmp/tmp3urvc_6z.lua:21:\
    \ in local 'candidate'\n\t/tmp/tmp3urvc_6z.lua:28: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.090 seconds, 0 successes, 1 error\n"
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n\tlocal result = {}\n\tlocal count = 0\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpqimhp9fv.lua:22: ''end'' expected (to close ''function'' at
    line 9) near <eof>

    '
  stdout: ''
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n   -- do your stuff here\n   return 0\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp9oa49uzb.lua:17:\
    \ expected: {0, 0, 0, 0, 3, 3}\nactual: 0\nstack traceback:\n\t/tmp/tmp9oa49uzb.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  -- TODO: your code here\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6w2e4zxq.lua:16:\
    \ expected: {0, 0, 0, 0, 3, 3}\nactual: nil\nstack traceback:\n\t/tmp/tmp6w2e4zxq.lua:16:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local scores = {\n        { 10, 10, 7, 6,\
    \ 5, 2, 0 },\n        { 4, 5, 2, 7, 3, 6, 1 },\n        { 2, 5, 6, 4, 8, 3, 7\
    \ },\n        { 1, 3, 6, 4, 8, 9, 10 },\n        { 7, 2, 8, 0, 8, 3, 4 },\n  \
    \  }\n    local guesses = {\n        { 4, 2, 7, 3, 6, 1, 0 },\n        { 8, 5,\
    \ 6, 4, 8, 9, 10 },\n        { 1, 3, 6, 4, 8, 9, 10 },\n        { 7, 2, 8, 0,\
    \ 8, 3, 4 },\n        { 4, 5, 2, 7, 3, 6, 1 },\n        { 8, 5, 6, 4, 8, 9, 10\
    \ },\n    }\n    local function compare(game, guess)\n        local scores = {\n\
    \            { 10, 10, 7, 6, 5, 2, 0 },\n            { 4, 5, 2, 7, 3, 6, 1 },\n\
    \            { 2, 5, 6, 4, 8, 3, 7 },\n            { 1, 3, 6, 4, 8, 9, 10 },\n\
    \            { 7, 2, 8, 0, 8, 3, 4 },\n        }\n        local guesses = {\n\
    \            { 4, 2, 7, 3, 6, 1, 0 },\n            { 8, 5, 6, 4, 8, 9, 10 },\n\
    \            { 1, 3, 6, 4, 8, 9, 10 },\n            { 7, 2, 8, 0, 8, 3, 4 },\n\
    \            { 4, 5, 2, 7, 3, 6, 1 },\n            { 8, 5, 6, 4, 8, 9, 10 },\n\
    \        }\n        local function compare(game, guess)\n            local scores\
    \ = {\n                { 10, 10, 7, 6, 5, 2, 0 },\n                { 4, 5, 2,\
    \ 7, 3, 6, 1 },\n                { 2, 5, 6, 4, 8, 3, 7 },\n                { 1,\
    \ 3, 6, 4, 8, 9, 10 },\n                { 7, 2, 8, 0, 8, 3, 4 },\n           \
    \ }\n            local guesses = {\n                { 4, 2, 7, 3, 6, 1, 0 },\n\
    \                { 8, 5, 6, 4, 8, 9, 10 },\n                { 1, 3, 6, 4, 8, 9,\
    \ 10 },\n                { 7, 2, 8, 0, 8, 3, 4 },\n                { 4, 5, 2,\
    \ 7, 3, 6, 1 },\n                { 8, 5, 6, 4, 8, 9, 10 },\n            }\n  \
    \          local function compare(game, guess)\n                local scores =\
    \ {\n                    { 10, 10, 7, 6, 5, 2, 0 },\n                    { 4,\
    \ 5, 2, 7, 3, 6, 1 },\n                    { 2, 5, 6, 4, 8, 3, 7 },\n        \
    \            { 1, 3, 6, 4, 8, 9, 10 },\n                    { 7, 2, 8, 0, 8, 3,\
    \ 4 },\n                }\n                local guesses = {\n               \
    \     { 4, 2, 7, 3, 6, 1, 0 },\n                    { 8, 5, 6, 4, 8, 9, 10 },\n\
    \                    { 1, 3, 6, \nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpcvxscn9o.lua:71: ''}'' expected (to close ''{'' at line 68)
    near ''function''

    '
  stdout: ''
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local distances = {}\n    for i = 1, #game\
    \ do\n        --print(\"\\t\", guess[i])\n        distances[i] = abs(game[i] -\
    \ guess[i])\n    end\n    return distances\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp9cyfs785.lua:13:\
    \ attempt to call a nil value (global 'abs')\nstack traceback:\n\t/tmp/tmp9cyfs785.lua:13:\
    \ in local 'candidate'\n\t/tmp/tmp9cyfs785.lua:21: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local gameScores = game:score()\n    local\
    \ guessScores = guess:score()\n    local result = {}\n    for i = 1, #gameScores\
    \ do\n        result[i] = 0\n    end\n    for i = 1, #guessScores do\n       \
    \ if gameScores[i] == guessScores[i] then\n            result[i] = 0\n       \
    \ elseif gameScores[i] < guessScores[i] then\n            result[i] = gameScores[i]\
    \ - guessScores[i]\n        else\n            result[i] = guessScores[i] - gameScores[i]\n\
    \        end\n    end\n    return result\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpil7w0y4o.lua:10:\
    \ attempt to call a nil value (method 'score')\nstack traceback:\n\t/tmp/tmpil7w0y4o.lua:10:\
    \ in local 'candidate'\n\t/tmp/tmpil7w0y4o.lua:31: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    return \nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp169bv9cu.lua:16:\
    \ expected: {0, 0, 0, 0, 3, 3}\nactual: nil\nstack traceback:\n\t/tmp/tmp169bv9cu.lua:16:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  local gameScore = game[2]\n  local guessScore\
    \ = guess[2]\n  local results = {}\n  for i = 1, #guess do\n    local diff = guessScore[i]\
    \ - gameScore[i]\n    if diff < 0 then diff = -diff end\n    results[i] = diff\n\
    \  end\n  return results\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpf47obst7.lua:14:\
    \ attempt to index a number value (local 'guessScore')\nstack traceback:\n\t/tmp/tmpf47obst7.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpf47obst7.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  return guess:map(function (x)\n    return x\
    \ - game[x]\n  end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp8rwpd2fk.lua:10:\
    \ attempt to call a nil value (method 'map')\nstack traceback:\n\t/tmp/tmp8rwpd2fk.lua:10:\
    \ in local 'candidate'\n\t/tmp/tmp8rwpd2fk.lua:18: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659823740
- exit_code: -1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local score = {1,2,3,4}\n    local guess\
    \ = {1,3,7,1}\n    return compare(score,guess)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659823745
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    return \nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp169bv9cu.lua:16:\
    \ expected: {0, 0, 0, 0, 3, 3}\nactual: nil\nstack traceback:\n\t/tmp/tmp169bv9cu.lua:16:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n   -- todo\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpk0zkepeq.lua:16:\
    \ expected: {0, 0, 0, 0, 3, 3}\nactual: nil\nstack traceback:\n\t/tmp/tmpk0zkepeq.lua:16:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n   local bestScore = game[0]\n   local bestScoreIndex\
    \ = game[1]\n   local bestGuessIndex = game[2]\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpf3k8n81q.lua:23: ''end'' expected (to close ''function'' at
    line 9) near <eof>

    '
  stdout: ''
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  -- TODO: compare guesses, return score or difference\
    \ of guesses\n  return 0\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmptfspqefg.lua:17:\
    \ expected: {0, 0, 0, 0, 3, 3}\nactual: 0\nstack traceback:\n\t/tmp/tmptfspqefg.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local correct = { }\n    for i=1,#game do\
    \ \n       if game[i] == guess then \n           correct[i] = 0\n       else\n\
    \           correct[i] = abs(game[i]-guess)\n       end\n    end\n    return correct\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpcqdrftbr.lua:15:\
    \ attempt to perform arithmetic on a table value (local 'guess')\nstack traceback:\n\
    \t/tmp/tmpcqdrftbr.lua:15: in local 'candidate'\n\t/tmp/tmpcqdrftbr.lua:24: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local scores = {\n        [13] = {4, 8, 5},\n\
    \        [8] = {12, 14, 7},\n        [11] = {9, 10, 3},\n    }\n    local guesses\
    \ = {\n        [13] = {4, 7, 9},\n        [8] = {12, 11, 10},\n        [11] =\
    \ {9, 10, 3},\n    }\n    --[[\n        Your code should work with the following\
    \ tests:\n        compare({4, 8, 5}, {4, 7, 9})\n        returns {{0, 0, 0}}\n\
    \        compare({4, 8, 5}, {4, 5, 9})\n        returns {{1, 0, 0}}\n        compare({4,\
    \ 8, 5}, {4, 4, 5})\n        returns {{0, 0, 1}}\n        compare({4, 8, 5}, {7,\
    \ 7, 9})\n        returns {{0, 0, -1}}\n        compare({4, 8, 5}, {7, 7, 4})\n\
    \        returns {{0, 0, 1}}\n    ]]\n    local correct = 0\n    local total =\
    \ 0\n    for i = 1, #guesses do\n        for j = 1, #guesses[i] do\n         \
    \   if guesses[i][j] == game[i][j] then\n                correct = correct + 1\n\
    \                total = total + 1\n            end\n        end\n    end\n  \
    \  --[[\n        if the total is 0, you won, otherwise you lose.\n        Since\
    \ there are 3 games, if the total is 1 then you won.\n    ]]\n    if total ==\
    \ 0 then\n        return {correct, 0, 0}\n    else\n        return {total, abs(correct\
    \ - total), 0}\n    end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpftegthe_.lua:57:\
    \ expected: {0, 0, 0, 0, 3, 3}\nactual: {0, 0, 0}\nstack traceback:\n\t/tmp/tmpftegthe_.lua:57:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n   local game = [1,5,2,2,4]\n   local guess =\
    \ [2,3,1,5,4]\n   local results = {}\n   for i=1,#guess do\n      table.insert(results,\
    \ absdiff(guess[i], game[i]))\n   end\n   return results\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpomsqytyl.lua:10: unexpected symbol near ''[''

    '
  stdout: ''
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n   local scores = {}\n   for i=1,#game do\n \
    \     scores[i] = abs(game[i]-guess[i])\n   end\n   return scores\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp5jze_pbk.lua:12:\
    \ attempt to call a nil value (global 'abs')\nstack traceback:\n\t/tmp/tmp5jze_pbk.lua:12:\
    \ in local 'candidate'\n\t/tmp/tmp5jze_pbk.lua:20: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n   local results = {}\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpiimnmcue.lua:21: ''end'' expected (to close ''function'' at
    line 9) near <eof>

    '
  stdout: ''
  timestamp: 1659823740
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n   local results = {}\n   for i = 1, #game do\n\
    \      if game[i] == guess[i] then\n         -- guess is correct\n         results[i]\
    \ = 0\n      elseif game[i] == guess[i] and game[i] > guess[i] then\n        \
    \ -- guess is too low\n         results[i] = game[i] - guess[i]\n      elseif\
    \ game[i] == guess[i] and game[i] < guess[i] then\n         -- guess is too high\n\
    \         results[i] = guess[i] - game[i]\n      else\n         -- guess was wrong\n\
    \         results[i] = game[i] - guess[i]\n      end\n   end\n   return results\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    return game:GetScore() - abs(guess[game:GetGuesses()\
    \ - 1])\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2,\
    \ -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0},\
    \ {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpmac8779d.lua:10:\
    \ attempt to call a nil value (method 'GetScore')\nstack traceback:\n\t/tmp/tmpmac8779d.lua:10:\
    \ in local 'candidate'\n\t/tmp/tmpmac8779d.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n\t-- your code\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpe6iv9cls.lua:16:\
    \ expected: {0, 0, 0, 0, 3, 3}\nactual: nil\nstack traceback:\n\t/tmp/tmpe6iv9cls.lua:16:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  local correct = game[1]\n  local game2 = {}\n\
    \  for _, game in pairs(game) do\n    local diff = 0\n    for _, b in ipairs(guess)\
    \ do diff = diff + (b-game) end\n    game2[_] = diff\n  end\n  return game2\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_rq17ktx.lua:23:\
    \ expected: {0, 0, 0, 0, 3, 3}\nactual: {4, -2, -8, -14, -20, 4}\nstack traceback:\n\
    \t/tmp/tmp_rq17ktx.lua:23: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  -- some code goes here\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpmg413lw2.lua:16:\
    \ expected: {0, 0, 0, 0, 3, 3}\nactual: nil\nstack traceback:\n\t/tmp/tmpmg413lw2.lua:16:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n\tlocal correct = 0\n\tlocal difference\n\tfor\
    \ i = 1, #guess do\n\t\tif game[i] ~= guess[i] then\n\t\t\tdifference = abs(game[i]\
    \ - guess[i])\n\t\t\tif difference == 0 then\n\t\t\t\tcorrect = correct + 1\n\t\
    \t\tend\n\t\tend\n\tend\n\treturn correct .. difference\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7j2ii9c4.lua:14:\
    \ attempt to call a nil value (global 'abs')\nstack traceback:\n\t/tmp/tmp7j2ii9c4.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmp7j2ii9c4.lua:26: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    if game[#game] > #guess then return nil end\n\
    \    local diff = {}\n    for i = 1, #game, 1 do\n        if game[i] == guess[i]\
    \ then\n            diff[i] = 0\n        else\n            diff[i] = abs(game[i]\
    \ - guess[i])\n        end\n    end\n    return diff\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmphup42wr8.lua:16:\
    \ attempt to call a nil value (global 'abs')\nstack traceback:\n\t/tmp/tmphup42wr8.lua:16:\
    \ in local 'candidate'\n\t/tmp/tmphup42wr8.lua:25: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n   -- your code here\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpsrzo04bt.lua:16:\
    \ expected: {0, 0, 0, 0, 3, 3}\nactual: nil\nstack traceback:\n\t/tmp/tmpsrzo04bt.lua:16:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local score1 = {1, 2, 3}\n    local score2\
    \ = {3, 2, 1}\n    local guess = {1, 2, 3}\n    return compare_scores(score1,\
    \ score2, guess) \nend \nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpkmxhnl39.lua:13:\
    \ attempt to call a nil value (global 'compare_scores')\nstack traceback:\n\t\
    /tmp/tmpkmxhnl39.lua:13: in local 'candidate'\n\t/tmp/tmpkmxhnl39.lua:19: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local i = 0\n    local scores = 0\n    local\
    \ guesses = {}\n    for i = 1,#game do\n        table.insert(guesses, guess[i])\n\
    \    end\n    local correct = #guesses\n    local guesses_sum = 0\n    local sum_guesses\
    \ = #guesses\n    for i = 1,#guess do\n        table.insert(guesses, guess[i])\n\
    \    end\n    for i = 1,#game-1 do\n        scores = scores + game[i]\n    end\n\
    \    for i = 1,#guess do\n        sum_guesses = sum_guesses + guess[i]\n    end\n\
    \    for i = 1,#guesses do\n        guesses_sum = guesses_sum + guess[i]\n   \
    \ end\n    if guesses_sum == sum_guesses then\n        for i = 1,#guess do\n \
    \           if guess[i] == game[i] then\n                correct = correct + 1\n\
    \            end\n        end\n    end\n    if correct == #guess then\n      \
    \  return scores\n    else\n        return abs(scores - guesses_sum)\n    end\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpi4mlnls2.lua:29:\
    \ attempt to perform arithmetic on a nil value (field '?')\nstack traceback:\n\
    \t/tmp/tmpi4mlnls2.lua:29: in local 'candidate'\n\t/tmp/tmpi4mlnls2.lua:48: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    -- todo: your code goes here\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp3cghf_yx.lua:16:\
    \ expected: {0, 0, 0, 0, 3, 3}\nactual: nil\nstack traceback:\n\t/tmp/tmp3cghf_yx.lua:16:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n\tlocal scores = {\n\t\t{0,0}, {2,3}, {3,6},\
    \ {3,9}, {4,1}, {5,8}, {7,4}, {10,1}\n\t}\n\tlocal guesses = {\n\t\t{ 0,0 }, {\
    \ 1,2 }, { 2,3 }, { 3,4 }, { 4,5 }, { 5,6 }, { 6,7 }, { 7,8 }, { 8,9 },\n\t\t\
    { 9,10 },\n\t}\n\t-- your code goes here!\n\tlocal results = {}\n\tlocal sum =\
    \ 0\n\tfor i = 1, #game, 1 do\n\t\tlocal g = guesses[i - 1]\n\t\tlocal s = scores[i-1]\n\
    \t\tlocal diff = abs(g[1] - s[1] + g[2] - s[2] + g[3] - s[3] - g[4] - s[4] - g[5]\
    \ - s[5])\n\t\tif diff > 0 then\n\t\t\ttable.insert(results, diff)\n\t\t\tsum\
    \ = 1\n\t\telse\n\t\t\tsum = sum + diff\n\t\tend\n\tend\n\tif sum == 0 then\n\t\
    \treturn results\n\telse\n\t\treturn results\n\tend\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpwx44wuxt.lua:23:\
    \ attempt to index a nil value (local 'g')\nstack traceback:\n\t/tmp/tmpwx44wuxt.lua:23:\
    \ in local 'candidate'\n\t/tmp/tmpwx44wuxt.lua:41: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n\tlocal correct = 0\n\tlocal total = 0\n\tfor\
    \ i = 0, #game do\n\t\tif game[i] == guess[i] then\n\t\t\tcorrect = correct +\
    \ 1\n\t\tend\n\t\ttotal = total + 1\n\tend\n\treturn { correct, total }\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp7uqosgmn.lua:24:\
    \ expected: {0, 0, 0, 0, 3, 3}\nactual: {5, 7}\nstack traceback:\n\t/tmp/tmp7uqosgmn.lua:24:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    if game[#game]~=#guess then return end\n\
    \    local result={}\n    for i=1,#guess do\n        result[i]=game[#game]-guess[i]\n\
    \    end\n    return table.remove(result)\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpgrwxye6p.lua:21:\
    \ expected: {0, 0, 0, 0, 3, 3}\nactual: nil\nstack traceback:\n\t/tmp/tmpgrwxye6p.lua:21:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  -- Your code goes here.\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpc3ecggws.lua:16:\
    \ expected: {0, 0, 0, 0, 3, 3}\nactual: nil\nstack traceback:\n\t/tmp/tmpc3ecggws.lua:16:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local index1, index2 = 1, #game - 1\n   \
    \ local best = 0\n    local current = 0\n    while index1 <= index2 do\n     \
    \   current = abs(game[index1] - guess[index2])\n        best = best if best >\
    \ current else current\n        index1 = index1 + 1\n        index2 = index2 -\
    \ 1\n    end\n    return best\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpkd3wx1ag.lua:15: ''then'' expected near ''else''

    '
  stdout: ''
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local scores = {}\n    local total = 0\n\
    \    for i = 1, #game do\n        local score = game[i]\n        if guess[i] ==\
    \ score then\n            total = total + 1\n        elseif total > 0 and guess[i]\
    \ == score then\n            total = total + 1\n        else\n            total\
    \ = total\n            scores[i] = abs(guess[i] - score)\n        end\n    end\n\
    \    return scores\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp0rf8eykc.lua:20:\
    \ attempt to call a nil value (global 'abs')\nstack traceback:\n\t/tmp/tmp0rf8eykc.lua:20:\
    \ in local 'candidate'\n\t/tmp/tmp0rf8eykc.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local diff = {}\n    for i = 1, #game do\n\
    \        diff[i] = abs(guess[i]-game[i])\n    end\n    return diff\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpmswrrnrr.lua:12:\
    \ attempt to call a nil value (global 'abs')\nstack traceback:\n\t/tmp/tmpmswrrnrr.lua:12:\
    \ in local 'candidate'\n\t/tmp/tmpmswrrnrr.lua:20: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local results = {}\n    for _, score in ipairs(game)\
    \ do\n        results[score] = guess[score] == score\n    end\n    return results\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmps61vtspy.lua:20:\
    \ expected: {0, 0, 0, 0, 3, 3}\nactual: {true, true, true, true, false}\nstack\
    \ traceback:\n\t/tmp/tmps61vtspy.lua:20: in function 'test_humaneval'\n\nRan 1\
    \ tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local playerGuess = {}\n    for i = 1, #game\
    \ do -- populate the array\n        playerGuess[i] = game[i]\n    end\n    for\
    \ i = 1, #guess do -- populate the array\n        playerGuess[i] = guess[i]\n\
    \    end\n    \n    -- return the difference between each player guess\n    local\
    \ guesses = {}\n    for i = 1, #playerGuess, 2 do\n        guesses[i] = playerGuess[i]\
    \ - playerGuess[i+1]\n    end\n    return guesses\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpbg2ptn7e.lua:29:\
    \ expected: {0, 0, 0, 0, 3, 3}\nactual: {-1, 3=-1, 5=4}\nstack traceback:\n\t\
    /tmp/tmpbg2ptn7e.lua:29: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    -- This is an example function showing how\
    \ the compare function might work.\n    -- You will need to fill in your own code\
    \ here to return the appropriate score.\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpo2vbf_ft.lua:17:\
    \ expected: {0, 0, 0, 0, 3, 3}\nactual: nil\nstack traceback:\n\t/tmp/tmpo2vbf_ft.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n\t-- TODO: Implement\n\tlocal guesses\n\tlocal\
    \ score\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2,\
    \ -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0},\
    \ {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp1pco8s5d.lua:23: ''end'' expected (to close ''function'' at
    line 9) near <eof>

    '
  stdout: ''
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local results = {}\n    local last_guess\
    \ = nil\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2,\
    \ -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0},\
    \ {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpn25mzjka.lua:22: ''end'' expected (to close ''function'' at
    line 9) near <eof>

    '
  stdout: ''
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local game = {}\n    local guess = {}\n \
    \   local bestScore = -1\n    local bestGuess = nil\n    for i = 1, #game do \n\
    \        game[i] = math.abs(game[i] - guess[i])\n        if game[i] > bestScore\
    \ then\n            bestScore = game[i]\n            bestGuess = i\n        end\n\
    \    end\n    return bestGuess, bestScore\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpymrby9au.lua:27:\
    \ expected: {0, 0, 0, 0, 3, 3}\nactual: nil\nstack traceback:\n\t/tmp/tmpymrby9au.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n\tlocal scores = {}\n\tfor i=1,#game do\n\t\t\
    scores[i] = abs(game[i] - guess[i])\n\tend\n\treturn scores\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7m70nyrp.lua:12:\
    \ attempt to call a nil value (global 'abs')\nstack traceback:\n\t/tmp/tmp7m70nyrp.lua:12:\
    \ in local 'candidate'\n\t/tmp/tmp7m70nyrp.lua:20: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  -- TODO: You will need to think about what\
    \ to do if the scores are of different lengths\n  -- or the guesses are of different\
    \ lengths\n  local scores = {10, 9, 7, 5, 2}\n  local guesses = {3, 9, 1, 10,\
    \ 8}\n  local correct = 0\n  local incorrect = 0\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmprebwco3u.lua:26: ''end'' expected (to close ''function'' at
    line 9) near <eof>

    '
  stdout: ''
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    -- the game and guess arrays have to have\
    \ equal lengths\n    assert(#game  == #guess)\n    -- return an array of the same\
    \ length as the game array which contains -1 for no match, 0 for correct guess,\
    \ 1 for incorrect guess\n    local out = {}\n    for i = 1, #game do\n       \
    \ if game[i] == guess[i] then\n            out[i] = 0\n        else\n        \
    \    out[i] = abs(game[i] - guess[i])\n        end\n    end\n    return out\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpm4wydnmc.lua:18:\
    \ attempt to call a nil value (global 'abs')\nstack traceback:\n\t/tmp/tmpm4wydnmc.lua:18:\
    \ in local 'candidate'\n\t/tmp/tmpm4wydnmc.lua:27: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n\t-- Write your code here\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpgxxw_ara.lua:16:\
    \ expected: {0, 0, 0, 0, 3, 3}\nactual: nil\nstack traceback:\n\t/tmp/tmpgxxw_ara.lua:16:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    --\n    -- YOUR CODE HERE\n    --\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmph_69bi7d.lua:18:\
    \ expected: {0, 0, 0, 0, 3, 3}\nactual: nil\nstack traceback:\n\t/tmp/tmph_69bi7d.lua:18:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823740
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  local scores = {}\n  for i = 1, #game do\n\
    \    scores[i] = math.abs(game[i] - guess[i])\n  end\n  return scores\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    -- This code assumes the game is always played\
    \ against the exact same set of guesses.\n    -- If this is not the case, please\
    \ add an assertion so this function is tested correctly.\n    assert(#game ==\
    \ #guess)\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2,\
    \ -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0},\
    \ {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpbxcs2lgt.lua:23: ''end'' expected (to close ''function'' at
    line 9) near <eof>

    '
  stdout: ''
  timestamp: 1659823740
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  local scores = {}\n  for i = 1, #game do\n\
    \    scores[i] = math.abs(game[i] - guess[i])\n  end\n  return scores\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    if game.scores[1] > game.scores[2] then\n\
    \        -- The first one is definitely wrong, because the second one is the right\
    \ one --\n        return game.scores[1] - game.scores[2] -- Your task here\n \
    \   else\n        return game.scores[2] - game.scores[1] -- Your task here\n \
    \   end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2,\
    \ -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0},\
    \ {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpltl02gw9.lua:10:\
    \ attempt to index a nil value (field 'scores')\nstack traceback:\n\t/tmp/tmpltl02gw9.lua:10:\
    \ in local 'candidate'\n\t/tmp/tmpltl02gw9.lua:21: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    return game:guess(guess)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp7bwtwvgd.lua:10:\
    \ attempt to call a nil value (method 'guess')\nstack traceback:\n\t/tmp/tmp7bwtwvgd.lua:10:\
    \ in local 'candidate'\n\t/tmp/tmp7bwtwvgd.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n\tlocal out = {}\n\tlocal i = 1\n\tfor j in ipairs(game)\
    \ do\n\t\tlocal gameScore = game[i]\n\t\tlocal guessScore = guess[i]\n\t\tif guessScore\
    \ == 0 then\n\t\t\tout[i] = 0\n\t\telse\n\t\t\tout[i] = abs(guessScore - gameScore)\n\
    \t\tend\n\t\ti = i + 1\n\tend\n\treturn out\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp3ompy4g2.lua:18:\
    \ attempt to call a nil value (global 'abs')\nstack traceback:\n\t/tmp/tmp3ompy4g2.lua:18:\
    \ in local 'candidate'\n\t/tmp/tmp3ompy4g2.lua:28: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    -- This is the \"scoring function\" that\
    \ the computer will use for computing and comparing.\n    -- Here we compare the\
    \ guess to each score. The function should return 1 if guess is close to the score,\
    \ and 0 otherwise.\n    -- Note: This scoring function could have been very simple,\
    \ but this demonstrates a point.\n    local function scorer(game, guess)\n   \
    \     if guess == game.score[1] then return 1 end\n        if guess < game.score[1]\
    \ then return 1 end\n        if guess > game.score[1] then return 0 end\n    end\n\
    \    -- We return an array of scores. We use a \"scoring function\" to determine\
    \ a score for each guess.\n    -- We also keep track of the number of times each\
    \ guess was used up, and what score was used.\n    local scores    = { game.score[1]\
    \ }\n    local guesses   = { guess }\n    local num_guesses = 1 -- This is the\
    \ number of times each guess was used up.\n    local total_score = scorer(game,\
    \ game.score[1]) -- This is the score for the first guess.\n    -- The other guesses\
    \ are compared to this score, while the scores remaining are compared to each\
    \ other.\n    -- So the first guess that is equal to score will return 1.\n  \
    \  for i = 2, #game.score do\n        local score = scorer(game, game.score[i])\n\
    \        -- If the score is 0, then we know that the game is correct.\n      \
    \  if score == 0 then\n            return { 0 }\n        end\n        -- If the\
    \ score is not 0, then we need to subtract from the current score.\n        --\
    \ We then add the score to scores array, while we subtract the current guess.\
    \ We then increment the guesses array.\n        -- If the guess is correct, scores\
    \ will be 0, so this will result in an error.\n        -- If the guess is wrong,\
    \ then scores will be 1 and we add the score to scores array.\n        -- If the\
    \ guess is not correct, we subtract the guess, and subtract that score from the\
    \ score.\n        -- If the guess is not correct, we need to subtract the guess,\
    \ and add that score to the score.\n        -- If the guess is not correct, we\
    \ need to subtract the guess, and subtract that score from the score.\n      \
    \  -- This can continue until we run out of guesses.\n        -- We also keep\
    \ track of the total score for each guess and subtract it from the total score\
    \ for the whole game.\n        -- We also keep track of the number of guesses\
    \ for each guess, and add one to it.\n        scores[i] = score\n        total_score\
    \ = total_score - score\n        num_guesses = num_guesses + 1\n    end\n    --\
    \ If the game is correct, we will return an array of zeroes with the number of\
    \ guesses for each guess.\n    return { total_score - scores[1], num_guesses }\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppudpxnzm.lua:20:\
    \ attempt to index a nil value (field 'score')\nstack traceback:\n\t/tmp/tmppudpxnzm.lua:20:\
    \ in local 'candidate'\n\t/tmp/tmppudpxnzm.lua:53: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local results = {}\n    local maxDiff = 0\n\
    \    for i = 0, #game do\n        local diff = abs(game[i] - guess[i])\n     \
    \   if diff > maxDiff then\n            maxDiff = diff\n        end\n    end\n\
    \    table.insert(results, maxDiff)\n    return results\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp9ibw820p.lua:13:\
    \ attempt to perform arithmetic on a nil value (field '?')\nstack traceback:\n\
    \t/tmp/tmp9ibw820p.lua:13: in local 'candidate'\n\t/tmp/tmp9ibw820p.lua:25: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    return { game[0] - guess[0] , game[1] - guess[1],\
    \ game[2] - guess[2] }\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpbffbh4rf.lua:10:\
    \ attempt to perform arithmetic on a nil value (field 'integer index')\nstack\
    \ traceback:\n\t/tmp/tmpbffbh4rf.lua:10: in local 'candidate'\n\t/tmp/tmpbffbh4rf.lua:16:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  -- game - array with the scores \n  -- guess\
    \ - array with the guesses\n  -- Return the scores array for the best guess\n\
    \  local scores = {game[1][1], game[2][1], game[3][1]}\n  local maxDiff = scores[1]\
    \ - scores[2]\n  for i = 2, #scores do\n    local diff = scores[i] - scores[i-1]\n\
    \    if diff > maxDiff then\n      maxDiff = diff\n    end\n  end\n  return maxDiff\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzailg6oj.lua:13:\
    \ attempt to index a number value (field 'integer index')\nstack traceback:\n\t\
    /tmp/tmpzailg6oj.lua:13: in local 'candidate'\n\t/tmp/tmpzailg6oj.lua:27: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n   local scores = {...}\n   local guesses = {...}\n\
    \   \n   -- your code here\n   return guesses\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpxw8wzfic.lua:10: cannot use ''...'' outside a vararg function
    near ''...''

    '
  stdout: ''
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    return game:map(\n        function(v) return\
    \ abs(v - guess) end,\n    )\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpm97ct08q.lua:12: unexpected symbol near '')''

    '
  stdout: ''
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    -- write your code in here\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpbqi1hc9a.lua:16:\
    \ expected: {0, 0, 0, 0, 3, 3}\nactual: nil\nstack traceback:\n\t/tmp/tmpbqi1hc9a.lua:16:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local gameScores = { 3, 12, 14, 11, 5, 8,\
    \ 7, 11, 8, 13, 6 }\n    local guessScores = { 4, 9, 13, 1, 9, 13, 3, 8, 10, 9,\
    \ 1 }\n    local difference = { 0, 0, 0, 0, 0, 0, 0, 0 }\n    local i = 0\n  \
    \  for i = 1, #guess do\n        difference[i] = abs(guessScores[i]-gameScores[i])\n\
    \    end\n    return difference\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmphmr9eh8n.lua:15:\
    \ attempt to call a nil value (global 'abs')\nstack traceback:\n\t/tmp/tmphmr9eh8n.lua:15:\
    \ in local 'candidate'\n\t/tmp/tmphmr9eh8n.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n\tlocal result = {}\n\tlocal len = #game\n\t\
    for i = 1, len do\n\t\tif game[i] ~= guess[i] then \n\t\t\t-- difference between\
    \ game and guess\n\t\t\tresult[i] = abs(game[i] - guess[i])\n\t\telse\n\t\t\t\
    -- no difference, game and guess same\n\t\t\tresult[i] = 0\n\t\tend\n\tend\n\t\
    return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2,\
    \ 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0,\
    \ 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpu5dde1c2.lua:15:\
    \ attempt to call a nil value (global 'abs')\nstack traceback:\n\t/tmp/tmpu5dde1c2.lua:15:\
    \ in local 'candidate'\n\t/tmp/tmpu5dde1c2.lua:27: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local result = {}\n    for i = 1, #guess\
    \ do\n        local guess = guess[i]\n        local score = game[i]\n        if\
    \ guess ~= score then\n            result[i] = abs(guess - score)\n        else\n\
    \            result[i] = 0\n        end\n    end\n    return result\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpw9uq1syc.lua:15:\
    \ attempt to call a nil value (global 'abs')\nstack traceback:\n\t/tmp/tmpw9uq1syc.lua:15:\
    \ in local 'candidate'\n\t/tmp/tmpw9uq1syc.lua:26: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n   local correct, diff, win, lost\n   \n   local\
    \ i, count = 0, 0, 0\n   for i, g in ipairs(game) do\n      if g == guess then\n\
    \         count = count + 1\n      else\n         if g > guess then\n        \
    \    diff = g - guess\n            win = win\n            lost = lost\n      \
    \   else\n            diff = guess - g\n            lost = lost\n         end\n\
    \         correct = correct + 1\n      end\n   end\n   \n   local function abs(x)\n\
    \      return math.abs(x)\n   end\n   \n   local function convert(x)\n      return\
    \ x:round()\n   end\n   \n   local function round(x)\n      x = math.floor(x)\n\
    \      x = x - math.floor(x)\n      return math.floor(x) + 0.5\n   end\n   \n\
    \   local function toInt(x)\n      return int(x)\n   end\n   \n   return (win,\
    \ lost, correct, round(abs(count)), toInt(convert(diff)))\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpezn9ckch.lua:47: '')'' expected near '',''

    '
  stdout: ''
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n-- write your solution here\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmprii6in1_.lua:16:\
    \ expected: {0, 0, 0, 0, 3, 3}\nactual: nil\nstack traceback:\n\t/tmp/tmprii6in1_.lua:16:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  -- Write your code here.\n  return game\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6ujohq69.lua:17:\
    \ expected: {0, 0, 0, 0, 3, 3}\nactual: {1, 2, 3, 4, 5, 1}\nstack traceback:\n\
    \t/tmp/tmp6ujohq69.lua:17: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n\tlocal game = {\n\t\tplayer = game.player,\n\
    \t\tguesses = game.guesses,\n\t\tscores = game.scores,\n\t\ttime = game.time,\n\
    \t\tscorer = game.scorer\n\t}\n\tlocal correct = 0\n\tlocal incorrect = 0\n\t\
    local games = {}\n\tfor i = 1, #game do\n\t\tgames[i] = {\n\t\t\tguess = guess[i],\n\
    \t\t\tscore = game[i].scores[i],\n\t\t\ttime = game[i].time,\n\t\t\tscorer = game[i].scorer\n\
    \t\t}\n\tend\n\tfor i = 1, #games do\n\t\tif games[i].score > 0 then\n\t\t\tlocal\
    \ game = games[i]\n\t\t\tlocal winner = game.scorer\n\t\t\tgame.scorer = game.score\n\
    \t\t\tgame.score = game.scorer\n\t\t\tlocal other = game.scorer\n\t\t\tlocal score\n\
    \t\t\tif winner ~= game.scorer then\n\t\t\t\tscore = game.scorer\n\t\t\t\tgame.scorer\
    \ = game.score\n\t\t\t\tgame.score = game.scorer\n\t\t\t\tgame.score = score\n\
    \t\t\t\tgame.scorer = game.score\n\t\t\telse\n\t\t\t\tscore = game.score\n\t\t\
    \t\tgame.scorer = game.score\n\t\t\t\tgame.score = game.scorer\n\t\t\t\tgame.score\
    \ = score\n\t\t\t\tgame.scorer = game.score\n\t\t\tend\n\t\t\tgame.guesses[i]\
    \ = game.guesses[i] + game.score - game.scorer\n\t\t\tgame.scores[i] = score\n\
    \t\tend\n\tend\n\tlocal guesses\n\tfor i = 1, #game do\n\t\tif game[i].scores\
    \ == game.guesses then\n\t\t\tcorrect = correct + 1\n\t\telse\n\t\t\tincorrect\
    \ = incorrect + 1\n\t\tend\n\tend\n\tif correct == #games then\n\t\treturn {correct\
    \ = correct}\n\telseif incorrect == #games then\n\t\treturn {incorrect = incorrect}\n\
    \telse\n\t\treturn {incorrect = incorrect, correct = correct}\n\tend\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpndggof7t.lua:73:\
    \ expected: {0, 0, 0, 0, 3, 3}\nactual: {correct=0}\nstack traceback:\n\t/tmp/tmpndggof7t.lua:73:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n\tlocal differences = {}\n\tfor i=1,#guess do\n\
    \t\tlocal diff = -game[i]\n\t\tdiff = -diff\n\t\tdifferences[i] = diff\n\tend\n\
    \treturn differences\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpibm702ga.lua:22:\
    \ expected: {0, 0, 0, 0, 3, 3}\nactual: {1, 2, 3, 4, 5, 1}\nstack traceback:\n\
    \t/tmp/tmpibm702ga.lua:22: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local function compareGuess(guess1, guess2)\n\
    \        local function diff(a, b)\n            if a > b then return 1 end\n \
    \           if a < b then return -1 end\n            return 0\n        end\n \
    \       local diff = diff\n        local function compareScore(score1, score2)\n\
    \            local function compareScoreScore(score1, score2)\n              \
    \  if score1 > score2 then return 1 end\n                if score1 < score2 then\
    \ return -1 end\n                return 0\n            end\n            local\
    \ diff = diff\n            local function scoreScore(score1, score2)\n       \
    \         if score1 == score2 then return 0 end\n                local diff =\
    \ diff\n                if score1 < score2 then diff = diff-score2 end\n     \
    \           if score1 > score2 then diff = diff-score1 end\n                return\
    \ diff\n            end\n            local diff = diff\n            local function\
    \ scoreScoreScore(score1, score2)\n                if score1 == score2 then return\
    \ 0 end\n                local diff = diff\n                if score1 < score2\
    \ then diff = diff-score2 end\n                if score1 > score2 then diff =\
    \ diff-score1 end\n                return diff\n            end\n            local\
    \ diff = diff\n            local function scoreScoreScoreScore(score1, score2)\n\
    \                if score1 == score2 then return 0 end\n                local\
    \ diff = diff\n                if score1 < score2 then diff = diff-score2 end\n\
    \                if score1 > score2 then diff = diff-score1 end\n            \
    \    return diff\n            end\n            local diff = diff\n           \
    \ local function scoreScoreScoreScore(score1, score2)\n                if score1\
    \ == score2 then return 0 end\n                local diff = diff\n           \
    \     if score1 < score2 then diff = diff-score2 end\n                if score1\
    \ > score2 then diff = diff-score1 end\n                return diff\n        \
    \    end\n            local diff = diff\n            local function scoreScoreScoreScore(score1,\
    \ score2)\n                if score1 == score2 then return 0 end\n           \
    \     local diff = diff\n                if score1 < score2 then diff = diff-score2\
    \ end\n                if score1 > score2 then diff = diff-score1 end\n      \
    \          return diff\n            end\n            local diff = diff\n     \
    \       local function scoreScoreScoreScoreScore(score1, score2)\n           \
    \     if score1 == score2 then return 0 end\n                local diff = diff\n\
    \                if score1 < score2 then diff = diff-score2 end\n            \
    \    if score1 > score2 then diff = diff-score1 end\n                return diff\n\
    \            end\n            local diff = diff\n            local function scoreScoreScoreScoreScore(score1,\
    \ score2)\n                if score1 == score2 then return 0 end\n\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpcu6bnp63.lua:85: ''end'' expected (to close ''function'' at
    line 72) near <eof>

    '
  stdout: ''
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  -- Return the scores and differences made by\
    \ the guesses.\n  return table.unpack(game.scores):map(function(score)\n    local\
    \ score = score\n    local difference = score - guess[#guess]\n    if difference\
    \ > 0 then\n      -- The guess was wrong. The score was right.\n      return 0\n\
    \    else\n      -- The guess was correct. The score was wrong.\n      return\
    \ difference\n    end\n  end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: 'E

    Tests with errors:

    ------------------

    1) test_humaneval

    attempt to get length of a nil value

    stack traceback:


    Ran 1 tests in 0.000 seconds, 0 successes, 1 error

    '
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n\t-- game = {\"1\",\"6\",\"3\",\"1\",\"3\",\"\
    1\",\"4\",\"0\"}\n\t-- guess = {\"0\",\"1\",\"1\",\"1\",\"3\",\"4\",\"1\",\"0\"\
    }\n\t-- return game:ndiffs(guess)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpmv_f9x0l.lua:18:\
    \ expected: {0, 0, 0, 0, 3, 3}\nactual: nil\nstack traceback:\n\t/tmp/tmpmv_f9x0l.lua:18:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    return game[#game] - game[#game] * math.abs(guess[#game]\
    \ - guess[#game-1])\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_qvfubcs.lua:16:\
    \ expected: {0, 0, 0, 0, 3, 3}\nactual: -3\nstack traceback:\n\t/tmp/tmp_qvfubcs.lua:16:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local scores = {2,4,5,3,3}\n    local guesses\
    \ = {2,4,5,2,4}\n    \n    -- Your code here!\n    \n    return guesses\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpbhcce3fw.lua:21:\
    \ expected: {0, 0, 0, 0, 3, 3}\nactual: {2, 4, 5, 2, 4}\nstack traceback:\n\t\
    /tmp/tmpbhcce3fw.lua:21: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n   -- Write your code here\n   local ret = {}\n\
    \   local cnt = 0\n   for i=1, #game do\n      if game[i] == guess then\n    \
    \     cnt = cnt + 1\n      else\n         cnt = 0\n      end\n   end\n   if cnt\
    \ > 0 then\n      local diff = 1\n      for i=1, #guess do\n         diff = diff\
    \ * abs(game[i] - guess[i])\n      end\n      ret = { cnt, diff }\n   else\n \
    \     ret = { cnt, 0 }\n   end\n   return ret\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpdpp1laxt.lua:35:\
    \ expected: {0, 0, 0, 0, 3, 3}\nactual: {0, 0}\nstack traceback:\n\t/tmp/tmpdpp1laxt.lua:35:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n\tlocal result = {}\n\tlocal score\n\tfor i,\
    \ _ in ipairs(game) do\n\t\tscore = 0\n\t\tfor j, _ in ipairs(guess) do\n\t\t\t\
    score = score + (j - game[i])\n\t\tend\n\t\tresult[i] = math.abs(score - guess[i])\n\
    \tend\n\treturn result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpy8p4p9_9.lua:25:\
    \ expected: {0, 0, 0, 0, 3, 3}\nactual: {14, 7, 0, 7, 11, 17}\nstack traceback:\n\
    \t/tmp/tmpy8p4p9_9.lua:25: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    --print(\"Guess: \" .. guess)\n    local\
    \ scores = {}\n    local results = {}\n    for i = 1, #game do\n        local\
    \ score = game[i]\n        -- print(score)\n        local guessed = guess[i]\n\
    \        -- print(guessed)\n        local difference = abs(guess - score)\n  \
    \      -- print(difference)\n        results[i] = difference\n        scores[i]\
    \ = score\n    end\n    return scores\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp1y9a0ktv.lua:18:\
    \ attempt to perform arithmetic on a table value (local 'guess')\nstack traceback:\n\
    \t/tmp/tmp1y9a0ktv.lua:18: in local 'candidate'\n\t/tmp/tmp1y9a0ktv.lua:29: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n\tlocal game = game or {}\n\tlocal guess = guess\
    \ or {}\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2,\
    \ -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0},\
    \ {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpetvjt5qm.lua:22: ''end'' expected (to close ''function'' at
    line 9) near <eof>

    '
  stdout: ''
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  -- your solution\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmptjop_zkd.lua:16:\
    \ expected: {0, 0, 0, 0, 3, 3}\nactual: nil\nstack traceback:\n\t/tmp/tmptjop_zkd.lua:16:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n   local ans = {}\n   for i = 1, #guess do\n\
    \      if game[i] == guess[i] then\n         ans[i] = 0\n      else\n        \
    \ ans[i] = abs(guess[i] - game[i])\n      end\n   end\n   return ans\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpjc4bckbu.lua:15:\
    \ attempt to call a nil value (global 'abs')\nstack traceback:\n\t/tmp/tmpjc4bckbu.lua:15:\
    \ in local 'candidate'\n\t/tmp/tmpjc4bckbu.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local scores = {\n        { \"1\", \"2\"\
    , \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"\
    13\", \"14\", \"15\" },\n        { \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"\
    7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\" },\n       \
    \ { \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"\
    11\", \"12\", \"13\", \"14\", \"15\" },\n        { \"1\", \"2\", \"3\", \"4\"\
    , \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"\
    15\" },\n        { \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"\
    9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\" },\n        { \"1\", \"2\"\
    , \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"\
    13\", \"14\", \"15\" },\n        { \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"\
    7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\" },\n       \
    \ { \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"\
    11\", \"12\", \"13\", \"14\", \"15\" },\n        { \"1\", \"2\", \"3\", \"4\"\
    , \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"\
    15\" },\n        { \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"\
    9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\" },\n        { \"1\", \"2\"\
    , \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"\
    13\", \"14\", \"15\" },\n        { \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"\
    7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\" },\n       \
    \ { \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"\
    11\", \"12\", \"13\", \"14\", \"15\" },\n        { \"1\", \"2\", \"3\", \"4\"\
    , \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"\
    15\" },\n        { \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"\
    9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\" },\n        { \"1\", \"2\"\
    , \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"\
    13\", \"14\", \"15\" },\n        { \"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"\
    7\", \"8\", \"9\", \"10\", \"11\", \"12\", \"13\", \"14\", \"\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpeigc_nxt.lua:27: unfinished string near ''"''

    '
  stdout: ''
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local scores = {\n        [1,0,0,0],\n  \
    \      [0,0,3,3],\n        [2,1,1,0]\n    }\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp6ajr3b4x.lua:11: '']'' expected near '',''

    '
  stdout: ''
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n   local gameScores = {}\n   for _, match in\
    \ ipairs(game) do\n      gameScores[#gameScores+1] = match\n   end\n   local guessScores\
    \ = {}\n   for _, match in ipairs(guess) do\n      guessScores[#guessScores+1]\
    \ = match\n   end\n   local correctGuesses = {}\n   for _, match in ipairs(gameScores)\
    \ do\n      table.insert(correctGuesses, match)\n   end\n   for _, match in ipairs(guessScores)\
    \ do\n      table.insert(correctGuesses, match)\n   end\n   local maxScores =\
    \ #gameScores\n   local maxGuesses = #guessScores\n   local maxGame = #game\n\
    \   local maxGuess = #guess\n   local sumGuesses = 0\n   local sumScores = 0\n\
    \   local sumGuessesPerGame = 0\n   local sumScoresPerGame = 0\n   local sumCorrectedGuesses\
    \ = 0\n   local sumCorrectedGuessesPerGame = 0\n   local maxCorrectedGuesses =\
    \ #correctGuesses\n   local maxCorrectedGuessesPerGame = #correctGuesses\n   local\
    \ maxCorrectedGuessesPerGameRatio = 0\n   local maxCorrectedGuessesRatio = 0\n\
    \   local maxCorrectedGuessesRatioPerGame = 0\n   local maxCorrectedGuessesRatioPerGame\
    \ = 0\n   local maxCorrectedGuessesRatioPerGameRatio = 0\n   local maxCorrectedGuessesRatioPerGameRatio\
    \ = 0\n   local maxScoreDiff = 0\n   local maxScoreDiffPerGame = 0\n   local maxScoreDiffPerGameRatio\
    \ = 0\n   local maxScoreDiffPerGameRatioRatio = 0\n   for _, gameScore in ipairs(gameScores)\
    \ do\n      sumScores = sumScores + gameScore\n      sumScoresPerGame = sumScoresPerGame\
    \ + gameScore\n      sumGuessesPerGame = sumGuessesPerGame + ((maxScores - sumScores)\
    \ / maxScores)\n      sumCorrectedGuessesPerGame = sumCorrectedGuessesPerGame\
    \ + ((maxCorrectedGuesses - sumCorrectedGuesses) / maxCorrectedGuesses)\n   end\n\
    \   for _, guessScore in ipairs(guessScores) do\n      sumScores = sumScores +\
    \ guessScore\n\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2,\
    \ -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0},\
    \ {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpfyyc43o1.lua:66: ''end'' expected (to close ''for'' at line
    53) near <eof>

    '
  stdout: ''
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  local result={}\n  for i,v in ipairs(game)\
    \ do\n    table.insert(result, abs(v-guess[i]))\n  end\n  return result\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmppva6527x.lua:12:\
    \ attempt to call a nil value (global 'abs')\nstack traceback:\n\t/tmp/tmppva6527x.lua:12:\
    \ in local 'candidate'\n\t/tmp/tmppva6527x.lua:20: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local results = {}\n    for i, score in ipairs(game)\
    \ do\n        -- compare the guessed value to each possible score value in the\
    \ game\n        local result = 0\n        for j = 1, #guess do\n            result\
    \ = result or abs(score - guess[j])\n        end\n        results[i] = result\n\
    \    end\n    return results\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmprp2w4v_j.lua:25:\
    \ expected: {0, 0, 0, 0, 3, 3}\nactual: {0, 0, 0, 0, 0, 0}\nstack traceback:\n\
    \t/tmp/tmprp2w4v_j.lua:25: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local diff = 0\n    for i, score in ipairs(game)\
    \ do\n        if guess == score then\n            diff = 0\n        else\n   \
    \         diff = math.abs(guess - score)\n        end\n    end\n    return diff\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzzn5l9q_.lua:15:\
    \ attempt to perform arithmetic on a table value (local 'guess')\nstack traceback:\n\
    \t/tmp/tmpzzn5l9q_.lua:15: in local 'candidate'\n\t/tmp/tmpzzn5l9q_.lua:24: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n   local ans = {}\n   for i = 1, #game do\n \
    \     -- If this index is a match, check it.\n      if game[i] == guess then\n\
    \         -- If this is a match, then this was a correct guess\n         ans[i]\
    \ = 0\n      else\n         -- If this is not a match, then get the difference\n\
    \         ans[i] = abs(guess - game[i])\n      end\n   end\n   return ans\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp6g5vu0wj.lua:18:\
    \ attempt to perform arithmetic on a table value (local 'guess')\nstack traceback:\n\
    \t/tmp/tmp6g5vu0wj.lua:18: in local 'candidate'\n\t/tmp/tmp6g5vu0wj.lua:27: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local ans = game:score() - guess:sum()\n\
    \    local correct = game:guesses() == guess:length()\n    if correct then\n \
    \       return { 0, 0 }\n    end\n    local diffs = 0\n    for _, score in ipairs(game:scores())\
    \ do\n        local diff = score - guess[diffs]\n        diffs = diffs + 1\n \
    \       if diff ~= 0 then\n            ans = ans - diff\n        end\n    end\n\
    \    return { abs(ans), diffs }\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmph8jdsnai.lua:10:\
    \ attempt to call a nil value (method 'score')\nstack traceback:\n\t/tmp/tmph8jdsnai.lua:10:\
    \ in local 'candidate'\n\t/tmp/tmph8jdsnai.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  local results = {}\n  for i = 1, #game do\n\
    \    results[i] = abs(game[i] - guess[i])\n  end\n  return results\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp5aitvlwx.lua:12:\
    \ attempt to call a nil value (global 'abs')\nstack traceback:\n\t/tmp/tmp5aitvlwx.lua:12:\
    \ in local 'candidate'\n\t/tmp/tmp5aitvlwx.lua:20: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local results = {}\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp7einoo87.lua:21: ''end'' expected (to close ''function'' at
    line 9) near <eof>

    '
  stdout: ''
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local function compareGuess(game, guess)\n\
    \        local totalDiff = 0\n        for i,g in pairs(game) do\n            local\
    \ diff = abs(g-guess[i])\n            totalDiff = totalDiff + diff\n        end\n\
    \        return totalDiff\n    end\n    return { table.removeValues(game, 1),\
    \ table.removeValues(guess, 1) }\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpwqg12wq6.lua:18:\
    \ attempt to call a nil value (field 'removeValues')\nstack traceback:\n\t/tmp/tmpwqg12wq6.lua:18:\
    \ in local 'candidate'\n\t/tmp/tmpwqg12wq6.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n\tlocal total = 0\n\tlocal good = 0\n\tfor i\
    \ = 1, #game do\n\t\ttotal = total + (game[i] - guess[i])\n\t\tif game[i] == guess[i]\
    \ then\n\t\t\tgood = good + 1\n\t\tend\n\tend\n\tif good == #guess then return\
    \ 0 end\n\treturn total\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp1nqhlwj_.lua:25:\
    \ expected: {0, 0, 0, 0, 3, 3}\nactual: 6\nstack traceback:\n\t/tmp/tmp1nqhlwj_.lua:25:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n\t--assert(game:GetNumberOfPlayers()==2)\n\t\
    --assert(guess:GetNumberOfPlayers()==1)\n\t--assert(#game == #guess)\n\tlocal\
    \ total = 0\n\tfor i=1,#game do\n\t\tif game[i]~=guess[i] then \n\t\t\ttotal =\
    \ total + math.abs(game[i]-guess[i])\n\t\tend\n\tend\n\treturn total\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpyi57cxjb.lua:25:\
    \ expected: {0, 0, 0, 0, 3, 3}\nactual: 6\nstack traceback:\n\t/tmp/tmpyi57cxjb.lua:25:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n   -- ... your code ...\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp549a1b9a.lua:16:\
    \ expected: {0, 0, 0, 0, 3, 3}\nactual: nil\nstack traceback:\n\t/tmp/tmp549a1b9a.lua:16:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n\tlocal results = {}\n\tlocal gameScores = {}\n\
    \tlocal guessScores = {}\n\t-- fill arrays\n\tfor k, v in pairs(game) do\n\t\t\
    gameScores[#gameScores+1] = v\n\tend\n\tfor k, v in pairs(guess) do\n\t\tguessScores[#guessScores+1]\
    \ = v\n\tend\n\t-- compare scores\n\tfor k = 1, #gameScores do\n\t\tlocal diff\
    \ = math.abs(guessScores[k] - gameScores[k])\n\t\tif diff > 0 then\n\t\t\tresults[#results+1]\
    \ = diff\n\t\tend\n\tend\n\treturn results\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmph7z7brij.lua:33:\
    \ expected: {0, 0, 0, 0, 3, 3}\nactual: {3, 3}\nstack traceback:\n\t/tmp/tmph7z7brij.lua:33:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n   -- Your code here\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp8dtdl9ss.lua:16:\
    \ expected: {0, 0, 0, 0, 3, 3}\nactual: nil\nstack traceback:\n\t/tmp/tmp8dtdl9ss.lua:16:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n\tlocal scores = {\n\t\t[0] = 3,\n\t\t[1] = 2,\n\
    \t\t[2] = 1,\n\t\t[3] = 1,\n\t\t[4] = 1,\n\t\t[5] = 1,\n\t\t[6] = 1,\n\t\t[7]\
    \ = 1,\n\t\t[8] = 1,\n\t\t[9] = 1,\n\t\t[10] = 1,\n\t\t[11] = 1,\n\t\t[12] = 1,\n\
    \t\t[13] = 1,\n\t\t[14] = 1,\n\t\t[15] = 1,\n\t\t[16] = 1,\n\t\t[17] = 1,\n\t\t\
    [18] = 1,\n\t\t[19] = 1,\n\t\t[20] = 1,\n\t\t[21] = 1,\n\t\t[22] = 1,\n\t\t[23]\
    \ = 1,\n\t\t[24] = 1,\n\t\t[25] = 1,\n\t\t[26] = 1,\n\t\t[27] = 1,\n\t\t[28] =\
    \ 1,\n\t\t[29] = 1,\n\t\t[30] = 1,\n\t\t[31] = 1,\n\t\t[32] = 1,\n\t\t[33] = 1,\n\
    \t\t[34] = 1,\n\t\t[35] = 1,\n\t\t[36] = 1,\n\t\t[37] = 1,\n\t\t[38] = 1,\n\t\t\
    [39] = 1,\n\t\t[40] = 1,\n\t\t[41] = 1,\n\t\t[42] = 1,\n\t\t[43] = 1,\n\t\t[44]\
    \ = 1,\n\t\t[45] = 1,\n\t\t[46] = 1,\n\t\t[47] = 1,\n\t\t[48] = 1,\n\t\t[49] =\
    \ 1,\n\t\t[50] = 1,\n\t\t[51] = 1,\n\t\t[52] = 1,\n\t\t[53] = 1,\n\t\t[54] = 1,\n\
    \t\t[55] = 1,\n\t\t[56] = 1,\n\t\t[57] = 1,\n\t\t[58] = 1,\n\t\t[59] = 1,\n\t\t\
    [60] = 1,\n\t\t[61] = 1,\n\t\t[62] = 1,\n\t\t[63] = 1,\n\t\t[64] = 1,\n\t\t[65]\
    \ = 1,\n\t\t[66] = 1,\n\t\t[67] = 1,\n\t\t[68] = 1,\n\t\t[69] = 1,\n\t\t[70] =\
    \ 1,\n\t\t[71] = 1,\n\t\t[72] = 1,\n\t\t[73] = 1,\n\t\t[74] = 1,\n\t\t[75] = 1,\n\
    \t\t[76] = 1,\n\t\t[77] = 1,\n\t\t[78] = 1,\n\t\t[79] = 1,\n\t\t[80] = 1,\n\t\t\
    [81] = 1,\n\t\t[82] = 1,\n\t\t[83] = 1,\n\t\t[84] = 1,\n\t\t[85] = 1,\n\t\t[86]\
    \ = 1,\n\t\t[87] = 1,\n\t\t[88] = 1,\n\t\t\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp01xif2he.lua:103: ''}'' expected (to close ''{'' at line 10)
    near ''function''

    '
  stdout: ''
  timestamp: 1659823740
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local diff = {}\n    for i, score in ipairs(game)\
    \ do\n        diff[i] = math.abs(guess[i] - score)\n    end\n    return diff\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n   local results = {}\n   for i = 1, #game do\n\
    \      if game[i] == guess[i] then \n         results[i] = 0 -- guess correct\n\
    \      else \n         results[i] = abs(game[i] - guess[i]) -- difference between\
    \ score and guess\n      end\n   end\n   return results\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp6ly9p4pz.lua:15:\
    \ attempt to call a nil value (global 'abs')\nstack traceback:\n\t/tmp/tmp6ly9p4pz.lua:15:\
    \ in local 'candidate'\n\t/tmp/tmp6ly9p4pz.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n\tlocal scores = {\n\t\t{score = 94, expected\
    \ = 93},\n\t\t{score = 88, expected = 83},\n\t\t{score = 86, expected = 81},\n\
    \t\t{score = 97, expected = 95}\n\t}\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp65q0kpq4.lua:26: ''end'' expected (to close ''function'' at
    line 9) near <eof>

    '
  stdout: ''
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local scores = {\n        { 1, 0 },\n   \
    \     { 2, 3 },\n        { 4, 5 },\n        { 6, 8 },\n        { 10, 11 },\n \
    \       { 11, 15 },\n    }\n    local guesses = {\n        { 1, 2 },\n       \
    \ { 2, 3 },\n        { 6, 8 },\n        { 10, 11 },\n        { 11, 15 },\n   \
    \     { 12, 16 },\n    }\n    local expected = {\n        { 1, 2 },\n        {\
    \ 0, -1 },\n        { 10, 11 },\n        { -1, -2 },\n        { -1, -2 },\n  \
    \  }\n    for i,v in ipairs(expected) do\n        local result = game(scores[v[1]],\
    \ guesses[v[1]])\n        print(game)\n        print(guess)\n        print(result)\n\
    \        print()\n    end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpo7x95gy1.lua:34:\
    \ attempt to call a table value (local 'game')\nstack traceback:\n\t/tmp/tmpo7x95gy1.lua:34:\
    \ in local 'candidate'\n\t/tmp/tmpo7x95gy1.lua:45: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n   if game.gameEnded then\n      return 1\n \
    \  else\n      return abs(game.scoreGuesses[guess] - game.scores[guess])\n   end\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzbfc56u8.lua:13:\
    \ attempt to index a nil value (field 'scoreGuesses')\nstack traceback:\n\t/tmp/tmpzbfc56u8.lua:13:\
    \ in local 'candidate'\n\t/tmp/tmpzbfc56u8.lua:20: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local results = {}\n    for i = 0, #guess\
    \ do\n        results[i] = abs(guess[i] - game[i])\n    end\n    return results\n\
    end\nprint(compare(game, guesses)) -- prints [3,0,-3]\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: "lua: /tmp/tmpcthmpaw3.lua:11: attempt to get length of a nil value (local\
    \ 'guess')\nstack traceback:\n\t/tmp/tmpcthmpaw3.lua:11: in local 'compare'\n\t\
    /tmp/tmpcthmpaw3.lua:16: in main chunk\n\t[C]: in ?\n"
  stdout: ''
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  local result = {}\n  for i = 1, #game do\n\
    \    result[i] = abs(game[i] - guess[i])\n  end\n  return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpuh1906t4.lua:12:\
    \ attempt to call a nil value (global 'abs')\nstack traceback:\n\t/tmp/tmpuh1906t4.lua:12:\
    \ in local 'candidate'\n\t/tmp/tmpuh1906t4.lua:20: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659823740
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  local game = game\n  local guess = guess\n\
    \  local scoreTable = {}\n  for i = 1, #game do\n    local newScore = game[i]\n\
    \    local newGuess = guess[i]\n    local difference = math.abs(newGuess - newScore)\n\
    \    scoreTable[i] = difference\n  end\n  return scoreTable\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local best\n    local results = {}\n    for\
    \ i = 1, #game do\n        local score = game[i]\n        local guess = guess[i]\n\
    \        local ok = guess == score\n        if best == nil or (ok and best > score)\
    \ then\n            best = score\n        end\n        if ok then\n          \
    \  table.insert(results, 0)\n        else\n            table.insert(results, best-score)\n\
    \        end\n    end\n    return results\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpsqrbskoz.lua:31:\
    \ expected: {0, 0, 0, 0, 3, 3}\nactual: {0, 0, 0, 0, -4, 0}\nstack traceback:\n\
    \t/tmp/tmpsqrbskoz.lua:31: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  -- The game array contains a list of numbers\
    \ and a list of the correct number.\n  -- The guessed array is just the guesses\
    \ themselves. So guessed is just guess (which is\n  -- already a copy of guess)\n\
    \  return game.numbers[game] ~= guess[game]\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpcj2ummly.lua:13:\
    \ attempt to index a nil value (field 'numbers')\nstack traceback:\n\t/tmp/tmpcj2ummly.lua:13:\
    \ in local 'candidate'\n\t/tmp/tmpcj2ummly.lua:19: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  -- This next part is your solution.\n  -- Don't\
    \ forget to return the result of 'math.abs(...)'!\n  local scores = {\n    score1\
    \ = game.score1,\n    score2 = game.score2,\n    score3 = game.score3,\n    score4\
    \ = game.score4,\n    score5 = game.score5,\n    score6 = game.score6,\n    score7\
    \ = game.score7,\n    score8 = game.score8\n  }\n  local guesses = {\n    guess1\
    \ = game.guess1,\n    guess2 = game.guess2,\n    guess3 = game.guess3,\n    guess4\
    \ = game.guess4,\n    guess5 = game.guess5,\n    guess6 = game.guess6,\n    guess7\
    \ = game.guess7,\n    guess8 = game.guess8\n  }\n  local numGuesses = #guesses\n\
    \  local numScores = #scores\n  local results = {}\n  for i = 1, numGuesses do\n\
    \    local difference = abs(guesses[i] - scores[i])\n    results[i] = difference\n\
    \  end\n  return results\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpu4sqbo4d.lua:45:\
    \ expected: {0, 0, 0, 0, 3, 3}\nactual: {}\nstack traceback:\n\t/tmp/tmpu4sqbo4d.lua:45:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local results = {}\n    for i = 1, #game\
    \ do \n        local score = game[i]\n        local guess = guess[i]\n       \
    \ local diff = abs(guess - score)\n        if diff > 1000 then\n            results[i]\
    \ = diff\n        else\n            results[i] = 0\n        end\n    end\n   \
    \ return results\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmph9ctyqo0.lua:14:\
    \ attempt to call a nil value (global 'abs')\nstack traceback:\n\t/tmp/tmph9ctyqo0.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmph9ctyqo0.lua:27: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local score1 = game[1]\n    local score2\
    \ = game[2]\n    local guesses = game[3]\n    local results = {}\n    for i =\
    \ 1, #guess do\n        results[i] = abs(score1[i] - guess[i])\n    end\n    --\
    \ now do the same for the other answer\n    for i = 1, #score2 do\n        results[i]\
    \ = abs(score1[i] - score2[i])\n    end\n    local result = {0}\n    for i, v\
    \ in pairs(results) do\n        if v > 0 then\n            result[i] = v\n   \
    \     end\n    end\n    return result\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp2r9up8_t.lua:15:\
    \ attempt to index a number value (local 'score1')\nstack traceback:\n\t/tmp/tmp2r9up8_t.lua:15:\
    \ in local 'candidate'\n\t/tmp/tmp2r9up8_t.lua:33: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  -- Your code here\n  return result\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmppm39dynp.lua:17:\
    \ expected: {0, 0, 0, 0, 3, 3}\nactual: nil\nstack traceback:\n\t/tmp/tmppm39dynp.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    -- TODO: Implement me\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpg07xxph7.lua:16:\
    \ expected: {0, 0, 0, 0, 3, 3}\nactual: nil\nstack traceback:\n\t/tmp/tmpg07xxph7.lua:16:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  -- your code here\n  return \nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp594ueary.lua:17:\
    \ expected: {0, 0, 0, 0, 3, 3}\nactual: nil\nstack traceback:\n\t/tmp/tmp594ueary.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n   local compare = {}\n   for i = 1, #guess do\n\
    \      local score = game[i]\n      -- TODO: check for out of range\n      local\
    \ guess = guess[i]\n      if guess ~= score then\n\t local diff = math.abs(guess\
    \ - score)\n\t -- if either of the guesses is less than 0, we still want to return\
    \ an absolute difference\n\t -- otherwise the absolute difference will drop to\
    \ zero and the result would be meaningless\n\t if guess < 0 then\n\t    diff =\
    \ -diff\n\t end\n\t compare[i] = diff\n      end\n   end\n   return compare\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpmizvvmvx.lua:31:\
    \ expected: {0, 0, 0, 0, 3, 3}\nactual: {5=3, 6=-3}\nstack traceback:\n\t/tmp/tmpmizvvmvx.lua:31:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local scores = {10, 7, 1, 4, 3}\n    local\
    \ guesses = {7, 5, 6, 4, 1}\n    local differences = {0, 0, 0, 0, 0}\n    local\
    \ differenceIndex = 0\n    local index = 1\n    local score = 0\n    local i =\
    \ 1\n    while i <= #scores do\n        if game[index] == guess[i] then\n    \
    \        score = score + 1\n        else\n            differences[differenceIndex]\
    \ = abs(guess[i] - scores[i])\n            differenceIndex = differenceIndex +\
    \ 1\n        end\n        i = i + 1\n    end\n    return differences\nend\nprint\
    \ compare(scores, guesses)\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp7dr6h17h.lua:28: syntax error near ''compare''

    '
  stdout: ''
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local result = {} -- Result is an array that\
    \ holds the absolute differences of every guess against the score of each position\n\
    \    for i = 0, #game do -- Loop through every guess in game\n        local j\
    \ = #guess - 1 -- Start at the end of the array\n        while j > 0 do -- Loop\
    \ through every position in guess\n            if abs(guess[j] - game[i]) <= 0.1\
    \ then -- If the difference of the guess at the jth position against the score\
    \ of the ith position is less than 0.1\n                result[i] = 0 -- Assign\
    \ the result to every guess that was missed by an absolute difference of 0.1\n\
    \            else\n                result[i] = abs(guess[j] - game[i]) -- Else\
    \ assign the difference to the ith guess\n                j--; -- Decrement j\
    \ to move the loop to the next position in the array\n            end\n      \
    \  end\n    end\n    return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpsyajsyew.lua:19: syntax error near ''end''

    '
  stdout: ''
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local diff = { }\n    local scoreDiff = {\
    \ }\n    local i, n = #game, #guess\n    for i=1,n do\n        diff[i] = math.abs(guess[i]\
    \ - game[i])\n        scoreDiff[i] = abs(guess[i] - game[i])\n    end\n    return\
    \ scoreDiff, diff\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpeqgexu16.lua:15:\
    \ attempt to call a nil value (global 'abs')\nstack traceback:\n\t/tmp/tmpeqgexu16.lua:15:\
    \ in local 'candidate'\n\t/tmp/tmpeqgexu16.lua:23: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659823740
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  local scores = {}\n  for i = 1, #game do\n\
    \    table.insert(scores, game[i])\n  end\n  local guesses = {}\n  for i = 1,\
    \ #guess do\n    table.insert(guesses, guess[i])\n  end\n  local diffs = { }\n\
    \  for i = 1, #guesses do\n    local difference = math.abs(guesses[i] - scores[i])\n\
    \    table.insert(diffs, difference)\n  end\n  return diffs\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n   local scores = {}\n   for i = 1, #game do\n\
    \      table.insert(scores, game[i])\n   end\n   local guesses = {}\n   for i\
    \ = 1, #guess do\n      table.insert(guesses, guess[i])\n   end\n   local diffs\
    \ = {}\n   for i = 1, #scores do\n      local diff = abs(guesses[i] - scores[i])\n\
    \      if diff == guesses[i] then\n         diffs[i] = 0\n      else\n       \
    \  diffs[i] = diff\n      end\n   end\n   return diffs\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpl7z8bt43.lua:20:\
    \ attempt to call a nil value (global 'abs')\nstack traceback:\n\t/tmp/tmpl7z8bt43.lua:20:\
    \ in local 'candidate'\n\t/tmp/tmpl7z8bt43.lua:33: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n\t-- Create a local copy so we can edit it\n\t\
    local copy = {}\n\tfor k, v in pairs(game) do\n\t\tcopy[k] = v\n\tend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp8yv9y95d.lua:25: ''end'' expected (to close ''function'' at
    line 9) near <eof>

    '
  stdout: ''
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local index = 0\n    local result = {}\n\
    \    for i = 0, #game do -- each score\n        if guess == game[i] then\n   \
    \         result[index] = 0\n        else\n            result[index] = math.abs(guess\
    \ - game[i])\n        end\n        index = index + 1\n    end\n    return result\n\
    end\nprint(compare(\n    {1,2,3,4,5},\n    {1,2,3,4,5,6}\n))\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: "lua: /tmp/tmpnjsp0ub4.lua:16: attempt to perform arithmetic on a table\
    \ value (local 'guess')\nstack traceback:\n\t/tmp/tmpnjsp0ub4.lua:16: in local\
    \ 'compare'\n\t/tmp/tmpnjsp0ub4.lua:22: in main chunk\n\t[C]: in ?\n"
  stdout: ''
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local index = 0\n    local score = 0\n  \
    \  local diff = 0\n    while index+1 <= #game do\n        score = game[index]\
    \ or 0\n        diff = abs(guess - score)\n        if diff == 0 then\n       \
    \     return index\n        end\n        index = index + 1\n    end\n    return\
    \ #game\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2,\
    \ -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0},\
    \ {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpjtm6ydmm.lua:15:\
    \ attempt to perform arithmetic on a table value (local 'guess')\nstack traceback:\n\
    \t/tmp/tmpjtm6ydmm.lua:15: in local 'candidate'\n\t/tmp/tmpjtm6ydmm.lua:27: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local result={}\n    local score={}\n   \
    \ for i, score in ipairs(game) do\n        if guess[i]==score then -- The guess\
    \ is correct\n            result[i]=0\n        else\n            result[i]=abs(guess[i]-score)\n\
    \        end\n    end\n    return result\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpobd3ci19.lua:16:\
    \ attempt to call a nil value (global 'abs')\nstack traceback:\n\t/tmp/tmpobd3ci19.lua:16:\
    \ in local 'candidate'\n\t/tmp/tmpobd3ci19.lua:25: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  local result={}\n  local score={}\n  -- TODO:\
    \ fill in this function.\n  return result\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2tv996ys.lua:19:\
    \ expected: {0, 0, 0, 0, 3, 3}\nactual: {}\nstack traceback:\n\t/tmp/tmp2tv996ys.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local correct = 0\n    for i=1,#game do\n\
    \        if game[i] == guess then \n            correct = correct + 1\n      \
    \  end\n    end\n    return correct\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0q3940yf.lua:22:\
    \ expected: {0, 0, 0, 0, 3, 3}\nactual: 0\nstack traceback:\n\t/tmp/tmp0q3940yf.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n   local gameScore = game[1]\n   local gameGuess\
    \ = game[2]\n   local guess = guess\n   local correct = 0\n   local totalGuesses\
    \ = #gameGuess and #guess or 1\n   for i = 0, totalGuesses-1 do \n      if gameGuess[i]\
    \ == guess[i] then\n         correct = correct + 1\n      end\n   end\n   return\
    \ correct / #gameGuess\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmphw88lurk.lua:14:\
    \ attempt to get length of a number value (local 'gameGuess')\nstack traceback:\n\
    \t/tmp/tmphw88lurk.lua:14: in local 'candidate'\n\t/tmp/tmphw88lurk.lua:26: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local index = {}\n    local index2 = {}\n\
    \    local index3 = {}\n    local index4 = {}\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpq5ggo8f7.lua:24: ''end'' expected (to close ''function'' at
    line 9) near <eof>

    '
  stdout: ''
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n   assert(#game == #guess, \"You passed me a\
    \ vector of games and a vector of guesses that don't match\")\n   local scores\
    \ = {}\n   for idx = 1, #game do\n      table.insert(scores, abs(game[idx] - guess[idx]))\n\
    \   end\n   return scores\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp8hepnfsx.lua:13:\
    \ attempt to call a nil value (global 'abs')\nstack traceback:\n\t/tmp/tmp8hepnfsx.lua:13:\
    \ in local 'candidate'\n\t/tmp/tmp8hepnfsx.lua:21: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  local score = 0\n  local guesses = { \n   \
    \ math.abs(game[1]-guess[1]),\n    math.abs(game[2]-guess[2]),\n    math.abs(game[3]-guess[3]),\n\
    \    math.abs(game[4]-guess[4]),\n    math.abs(game[5]-guess[5]),\n    math.abs(game[6]-guess[6]),\n\
    \    math.abs(game[7]-guess[7]),\n    math.abs(game[8]-guess[8]),\n    math.abs(game[9]-guess[9]),\n\
    \    math.abs(game[10]-guess[10])\n  }\n  return guesses\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpyeuxkm6e.lua:18:\
    \ attempt to perform arithmetic on a nil value (field 'integer index')\nstack\
    \ traceback:\n\t/tmp/tmpyeuxkm6e.lua:18: in local 'candidate'\n\t/tmp/tmpyeuxkm6e.lua:29:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ error\n"
  timestamp: 1659823740
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local result = {}\n    for i = 1, #game do\n\
    \        local score = game[i]\n        local guess = guess[i]\n        result[i]\
    \ = math.abs(guess - score)\n    end\n    return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  -- Write your code here\n  return 0\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6m42t8wh.lua:17:\
    \ expected: {0, 0, 0, 0, 3, 3}\nactual: 0\nstack traceback:\n\t/tmp/tmp6m42t8wh.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local scores = {\n        10, 15, 10, 20,\
    \ 10, 10, 10\n    }\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2,\
    \ 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0,\
    \ 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpl1zusam9.lua:23: ''end'' expected (to close ''function'' at
    line 9) near <eof>

    '
  stdout: ''
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local scores = {}\n    for i = 1, #game do\
    \ scores[i] = game[i] end\n    for i = 1, #guess do scores[i] = scores[i] + guess[i]\
    \ end\n    return scores\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpia2n7_u1.lua:19:\
    \ expected: {0, 0, 0, 0, 3, 3}\nactual: {2, 4, 6, 8, 7, -1}\nstack traceback:\n\
    \t/tmp/tmpia2n7_u1.lua:19: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n\tlocal score = {0,0,0,0,0,0,0,0,0,0,0}\n\tlocal\
    \ results = {0,0,0,0,0,0,0,0,0,0,0}\n\tfor i = 1, #game do\n\t\tlocal score =\
    \ game[i]\n\t\tlocal guess = guess[i]\n\t\tif score > guess then\n\t\t\tresults[#results+1]\
    \ = -1\n\t\telseif score < guess then\n\t\t\tresults[#results+1] = 1\n\t\telse\n\
    \t\t\tresults[#results+1] = 0\n\t\tend\n\tend\n\treturn results\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmps9jbsgvj.lua:29:\
    \ expected: {0, 0, 0, 0, 3, 3}\nactual: {0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,\
    \ 0, 0, -1, -1}\nstack traceback:\n\t/tmp/tmps9jbsgvj.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    return game:index(guess, game:n()) -- get\
    \ index of guess from our table of scores\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpqtulptip.lua:10:\
    \ attempt to call a nil value (method 'n')\nstack traceback:\n\t/tmp/tmpqtulptip.lua:10:\
    \ in local 'candidate'\n\t/tmp/tmpqtulptip.lua:16: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local score = {1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 10}\n    local guess = {1, 2, 3, 4, 5, 6, 7, 8, 10}\n    local scores = {}\n\
    \    local guesses = {}\n    for i = 1, 10 do\n        scores[i] = abs(game[i]\
    \ - guess[i]) -- absolute difference\n        guesses[i] = abs(game[i] - guess[i])\n\
    \    end\n    return scores\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpe6krzu0j.lua:15:\
    \ attempt to call a nil value (global 'abs')\nstack traceback:\n\t/tmp/tmpe6krzu0j.lua:15:\
    \ in local 'candidate'\n\t/tmp/tmpe6krzu0j.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n\tlocal arr1 = game:keys()\n\tlocal arr2 = guess:keys()\n\
    \tlocal results = {}\n\tfor i,v in ipairs(arr1) do\n\t\tif arr2[i] == 1 then\n\
    \t\t\ttable.insert(results, 0)\n\t\telseif arr2[i] == 0 then\n\t\t\ttable.insert(results,\
    \ math.abs(v-arr1[i]))\n\t\telse\n\t\t\ttable.insert(results, v)\n\t\tend\n\t\
    end\n\treturn results\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpi71jwp83.lua:10:\
    \ attempt to call a nil value (method 'keys')\nstack traceback:\n\t/tmp/tmpi71jwp83.lua:10:\
    \ in local 'candidate'\n\t/tmp/tmpi71jwp83.lua:28: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local score = { 7, 9, 5, 3, 8, 2, 6, 5, 9,\
    \ 0, 7, 0, 7, 8, 7, 9, 7, 0, 6, 2, 7, 1, 7, 7, 8, 7, 9, 1, 8, 1, 7, 9, 7, 8 }\n\
    \    local guesses = { 8, 7, 9, 1, 8, 5, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7,\
    \ 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7, 7 }\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpcpfgy6jw.lua:22: ''end'' expected (to close ''function'' at
    line 9) near <eof>

    '
  stdout: ''
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local score1 = game[1]\n    local score2\
    \ = game[2]\n    local guesses = game[3]\n    local matches = 0\n    \n    for\
    \ i=1,#score1 do -- Go through both scores\n        matches = 0\n        for j=1,#score2\
    \ do -- Go through each guess and see if there is a match\n            if guesses[i,j]\
    \ == true and score1[i,j] == score2[i,j] then -- If there is a match, increment\
    \ matches\n                matches = matches + 1\n                break\n    \
    \        end\n        end\n        if matches > 0 then -- If there are matches,\
    \ return how far off we are from correct\n            if matches == 1 then\n \
    \               return 0\n            else\n                return (abs(guesses[i,1]\
    \ - score1[i,1]) - (abs(guesses[i,1] - score2[i,1])))\n            end\n     \
    \   end\n    end\n    return 0 -- If we made it here, we know that there are no\
    \ matches\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2,\
    \ -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0},\
    \ {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp_3atj85s.lua:18: '']'' expected near '',''

    '
  stdout: ''
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local function compareScore(score, guess)\n\
    \        local scoreVector = {}\n        for i = 1, #score do\n            scoreVector[i]\
    \ = abs(score[i] - guess[i])\n        end\n        return scoreVector\n    end\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpamh1q3dq.lua:27: ''end'' expected (to close ''function'' at
    line 9) near <eof>

    '
  stdout: ''
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  local score = game[1]\n  local guesses = game[2]\n\
    \  -- We will assume that the guess list has the same length as the score list\n\
    \  -- We will denote as score what the score is for a given match\n  local guessed_scores\
    \ = { }\n  -- Our array that will contain the final results\n  local results =\
    \ {}\n  -- We will iterate over both lists in parallel and compare each value\n\
    \  for i = 0, #score do -- We will iterate over each value in parallel\n    --\
    \ We want to know if the score at index i matches the guess at index i\n    --\
    \ We want to know if the guess at index i is correct\n    local score = score[i]\n\
    \    local guess = guesses[i]\n    -- We want to know if the guess at index i\
    \ is correct\n    local correct = guess == score\n    -- If the guess is correct\
    \ and we haven't already processed this guess\n    -- We want to update the results\
    \ and update the guessed scores array\n    if correct and not guessed_scores[i]\
    \ then\n      guessed_scores[i] = score\n      -- If all our other scores are\
    \ correct and correct score is the highest score so far\n      if #guessed_scores\
    \ == #score then\n        -- We have already processed all of the scores and we\
    \ have found the highest score\n        -- Let's update the results array with\
    \ our guesses\n        results[i] = guess\n      -- If all our other scores are\
    \ correct but incorrect score is the highest score so far\n      elseif correct\
    \ and #guessed_scores > #score then\n        -- We have already processed all\
    \ of the scores and we have found the highest score\n        -- Let's update the\
    \ results array with our guesses\n        results[i] = guess\n      -- If the\
    \ guess is incorrect and the highest score so far is the correct score\n     \
    \ elseif correct and #guessed_scores == #score then\n        -- We have already\
    \ processed all scores and the guessed score is the highest score so far\n   \
    \     -- Let's update the results array with our guesses\n        results[i] =\
    \ guess\n      -- If the guess is incorrect and the highest score so far is not\
    \ the correct score\n      elseif correct and #guessed_scores < #score then\n\
    \        -- We have already processed all of the scores but the guessed score\
    \ is the highest score so far\n        -- Let's update the results array with\
    \ our guesses\n        results[i] = guess\n      -- If the guessed score is the\
    \ highest score so far and the score is correct\n      elseif correct and #guessed_scores\
    \ == #score and score == guessed_scores[i] then\n        -- We have already processed\
    \ all scores and we have found the highest score\n        -- Let's update the\
    \ results array with our guesses\n        results[i] = guess\n      -- If the\
    \ guessed score is the highest score so far and the score is incorrect \nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmptvb667pt.lua:65: ''end'' expected (to close ''if'' at line
    30) near <eof>

    '
  stdout: ''
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n   -- Return the correct number of points needed\
    \ to get to 'guess' from 'game'\n   -- The returned array should be the same length\
    \ as 'guess', but may be shortened if necessary\n   local points = 0\n   for i=1,#guess\
    \ do -- loop over each guess index\n      -- The loop will terminate as soon as\
    \ a guess is found where 'guess' >= score\n      -- If the score is greater than\
    \ 'guess', the score is subtracted from it, and a 'lost' point is added to the\
    \ score\n      -- If the score is less than or equal to 'guess', then the 'lost'\
    \ point is not added to the score\n      if game[i] <= guess[i] then\n       \
    \  points = points + 1\n         game[i] = game[i] - guess[i]\n      elseif game[i]\
    \ >= guess[i] then\n         points = points + abs(game[i] - guess[i])\n     \
    \ else\n         points = points + abs(game[i] - guess[i]) + 1 -- game is better\
    \ than guess\n      end\n   end\n   return points\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmphuy963he.lua:21:\
    \ attempt to call a nil value (global 'abs')\nstack traceback:\n\t/tmp/tmphuy963he.lua:21:\
    \ in local 'candidate'\n\t/tmp/tmphuy963he.lua:32: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local result = {}\n    for j = 1, #game do\n\
    \       result[j] = abs(guess - game[j])\n    end\n    return result\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = compare\n\
    \    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0,\
    \ 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0}, {0, 0, 0, 0,\
    \ 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1, 2, 3}, {-1, -2,\
    \ -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5}, {-1, 2, 3, 4}),\
    \ {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp0eu7xg63.lua:12:\
    \ attempt to perform arithmetic on a table value (local 'guess')\nstack traceback:\n\
    \t/tmp/tmp0eu7xg63.lua:12: in local 'candidate'\n\t/tmp/tmp0eu7xg63.lua:20: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  -- your code here\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpk9ue1zjz.lua:16:\
    \ expected: {0, 0, 0, 0, 3, 3}\nactual: nil\nstack traceback:\n\t/tmp/tmpk9ue1zjz.lua:16:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local compare = {[0]=0 -- The array for comparison\n\
    \    local index = 0}\n    local score = {}\n    local difference = {}\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmphmvonz6h.lua:11: ''}'' expected (to close ''{'' at line 10)
    near ''local''

    '
  stdout: ''
  timestamp: 1659823740
- exit_code: -1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local scores = {\n        {score=1, guess=100},\n\
    \        {score=2, guess=101},\n        {score=3, guess=100},\n        {score=4,\
    \ guess=101},\n        {score=5, guess=101},\n        {score=6, guess=100},\n\
    \        {score=7, guess=101},\n        {score=8, guess=101},\n    }\n    local\
    \ guesses = {\n        {guess=10},\n        {guess=11},\n        {guess=10},\n\
    \        {guess=10},\n        {guess=11},\n        {guess=10},\n        {guess=11},\n\
    \        {guess=10},\n    }\n    return compare(scores, guesses, 3)\nend\nprint(compare({score=1,\
    \ guess=100}, {guess=10}, {score=1, guess=100}))\nprint(compare({score=1, guess=100},\
    \ {guess=11}, {score=1, guess=100}))\nprint(compare({score=1, guess=100}, {guess=10},\
    \ {score=1, guess=100}))\nprint(compare({score=1, guess=100}, {guess=10}, {score=1,\
    \ guess=100}))\nprint(compare({score=1, guess=100}, {guess=10}, {score=1, guess=100}))\n\
    print(compare({score=1, guess=100}, {guess=10}, {score=1, guess=100}))\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Timeout
  stderr: ''
  stdout: ''
  timestamp: 1659823745
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  local scores = {1,4,3,5,2,6,1}\n  local guesses\
    \ = {2,2,2,2,4,4,4}\n  -- Your code here\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpkezv7o63.lua:18:\
    \ expected: {0, 0, 0, 0, 3, 3}\nactual: nil\nstack traceback:\n\t/tmp/tmpkezv7o63.lua:18:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  -- write your code here\n  -- Return an array\
    \ of length 2, where element 0 is \"guess was too low\", element 1 is \"guess\
    \ was too high\"\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpbjv4e2r6.lua:17:\
    \ expected: {0, 0, 0, 0, 3, 3}\nactual: nil\nstack traceback:\n\t/tmp/tmpbjv4e2r6.lua:17:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n\tlocal score = {}\n\tlocal correct = {}\n\t\
    local off = {}\n\tlocal n = 0\n\tfor _, score in pairs(game) do\n\t\tn = n + 1\n\
    \t\toff[n] = 0\n\t\tif guess[n] == score then\n\t\t\tcorrect[n] = 0\n\t\telse\n\
    \t\t\tcorrect[n] = guess[n] - score\n\t\tend\n\tend\n\treturn off\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2ysgkh4s.lua:29:\
    \ expected: {0, 0, 0, 0, 3, 3}\nactual: {0, 0, 0, 0, 0, 0}\nstack traceback:\n\
    \t/tmp/tmp2ysgkh4s.lua:29: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 failure\n"
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local scores = {}\n    local guesses = {}\n\
    \    for _, score in pairs(game) do\n        scores[_] = score\n    end\n    for\
    \ _, guess in pairs(guess) do\n        guesses[_] = guess\n    end\n    for _,\
    \ guess in pairs(guesses) do\n        guess = math.abs(guess - scores[guess])\n\
    \    end\n    return guesses\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpunew1oec.lua:19:\
    \ attempt to perform arithmetic on a nil value (field '?')\nstack traceback:\n\
    \t/tmp/tmpunew1oec.lua:19: in local 'candidate'\n\t/tmp/tmpunew1oec.lua:27: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659823740
- exit_code: 0
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local correct = 0\n    local distances =\
    \ {}\n    for i = 1, #game do\n        distances[i] = math.abs(game[i] - guess[i])\n\
    \        if game[i] == guess[i] then\n            correct = correct + 1\n    \
    \    end\n    end\n    return distances\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: OK
  stderr: ''
  stdout: '.

    Ran 1 tests in 0.000 seconds, 1 success, 0 failures

    OK

    '
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local function score(a, b)\n        return\
    \ b - a\n    end\n    local function score2(scores, guesses)\n        local score\
    \ = 0\n        local maxScore = scores[1]\n        for i = 2, #scores do\n   \
    \         local score = score2(scores[i], guesses[i])\n            if score >\
    \ maxScore then\n                maxScore = score\n            end\n        end\n\
    \        return maxScore\n    end\n    \n    local guesses = {}\n    for i = 1,\
    \ #guess do\n        guesses[i] = guess[i]\n    end\n    \n    local scores =\
    \ game:scores()\n    return score2(scores, guesses)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpsplfzqle.lua:30:\
    \ attempt to call a nil value (method 'scores')\nstack traceback:\n\t/tmp/tmpsplfzqle.lua:30:\
    \ in local 'candidate'\n\t/tmp/tmpsplfzqle.lua:37: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  local gameScores = {}\n  local guessScores\
    \ = {}\n  for i=1, #game do\n    table.insert(gameScores, game[i])\n    table.insert(guessScores,\
    \ guess[i])\n  end\n  local diffScores = {}\n  for i=1, #guess do\n    local diff\
    \ = abs(guessScores[i] - gameScores[i])\n    table.insert(diffScores, diff)\n\
    \  end\n  return diffScores\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp323fe7jz.lua:18:\
    \ attempt to call a nil value (global 'abs')\nstack traceback:\n\t/tmp/tmp323fe7jz.lua:18:\
    \ in local 'candidate'\n\t/tmp/tmp323fe7jz.lua:27: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  local scoreArray = {}\n  for i,v in ipairs(game)\
    \ do\n    scoreArray[i] = v\n  end\n  scoreArray = scoreArray:sort()\n  for i,v\
    \ in ipairs(guess) do\n    guess[i] = v\n  end\n  guess = guess:sort()\n  local\
    \ score = 0\n  for i,v in ipairs(guess) do\n    local diff = abs(scoreArray[i]\
    \ - v)\n    if diff/scoreArray[i] ~= 0 then\n      score = diff / scoreArray[i]\n\
    \    end\n  end\n  return score\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpciyawo9z.lua:14:\
    \ attempt to call a nil value (method 'sort')\nstack traceback:\n\t/tmp/tmpciyawo9z.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpciyawo9z.lua:32: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  local results = {}\n  for i = 0, #game do\n\
    \    local diff = math.abs(guess - game[i])\n    local incorrect = diff > 1\n\
    \    if incorrect then\n      results[i] = diff or 0\n    end\n  end\n  return\
    \ results\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2,\
    \ -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0, 0, 0, 0, 0},\
    \ {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpgxolckkg.lua:12:\
    \ attempt to perform arithmetic on a table value (local 'guess')\nstack traceback:\n\
    \t/tmp/tmpgxolckkg.lua:12: in local 'candidate'\n\t/tmp/tmpgxolckkg.lua:24: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local results = {}\n    for i = 1, #game\
    \ do\n        if guess[i] > game[i] then\n            results[i] = abs(game[i]\
    \ - guess[i])\n        else\n            results[i] = abs(game[i] - guess[i])\n\
    \        end\n    end\n    return results\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpjurj8sh6.lua:15:\
    \ attempt to call a nil value (global 'abs')\nstack traceback:\n\t/tmp/tmpjurj8sh6.lua:15:\
    \ in local 'candidate'\n\t/tmp/tmpjurj8sh6.lua:24: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n\t-- Write your function here!\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpqhsnd6e5.lua:16:\
    \ expected: {0, 0, 0, 0, 3, 3}\nactual: nil\nstack traceback:\n\t/tmp/tmpqhsnd6e5.lua:16:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local gameScores = {}\n    local guessScores\
    \ = {}\n    for _, score in pairs(game) do \n        table.insert(gameScores,\
    \ math.abs(score - guess[#guess]))\n        table.insert(guessScores, math.abs(guess\
    \ - score))\n    end\n    return gameScores\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = compare\n    lu.assertEquals(candidate({1,\
    \ 2, 3, 4, 5, 1}, {1, 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0,\
    \ 0, 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpa2wsf1t1.lua:14:\
    \ attempt to perform arithmetic on a table value (local 'guess')\nstack traceback:\n\
    \t/tmp/tmpa2wsf1t1.lua:14: in local 'candidate'\n\t/tmp/tmpa2wsf1t1.lua:22: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local scores = {1, 2, 3, 4, 5}\n    local\
    \ guesses = {1, 2, 2, 4}\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp2cefdf85.lua:22: ''end'' expected (to close ''function'' at
    line 9) near <eof>

    '
  stdout: ''
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n    local correct = { [0]=1 }\n    local offset\
    \ = { [0]=0 }\n    for i=1,#game do\n        local score = game[i]\n        local\
    \ guess = guess[i]\n        for j = 1,#correct do correct[j] = 0; end\n      \
    \  for j = 1,#guess do guess[j] = 0; end\n        local correctIndex = #correct\n\
    \        local guessIndex = #guess\n        local totalGuesses = guessIndex -\
    \ correctIndex\n        for j=1,#guessIndex do\n            local difference =\
    \ abs(guess - score)\n            if difference > 0 then\n                correct[guessIndex\
    \ + j] = guess\n                guess[correctIndex + j] = score\n            \
    \    guess[guessIndex + j] = difference\n            end\n        end\n    end\n\
    \    return correct, offset\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp6wvzwbdl.lua:16:\
    \ attempt to get length of a number value (local 'guess')\nstack traceback:\n\t\
    /tmp/tmp6wvzwbdl.lua:16: in local 'candidate'\n\t/tmp/tmp6wvzwbdl.lua:35: in function\
    \ 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n  local scores = game:getScores()\n  local guesses\
    \ = game:getGuesses()\n  local result = {}\n  -- Initialize result with the first\
    \ guess and score\n  result[1] = guess[1]\n  result[2] = scores[1]\n  -- For each\
    \ remaining guess try to guess it further away from our current score\n  for i=2,#guess\
    \ do\n    -- If the guess is close enough we should continue with the next guess\n\
    \    if (result[1] < scores[i]) and (result[1] > scores[i-1]) then\n      result[i]\
    \ = guess[i]\n    else\n      -- If it is too close to the current score, we're\
    \ already at the point where the guess is too far away\n      if result[1] > scores[i-1]\
    \ then\n        -- If we're too far from the last result, just use the current\
    \ result\n        -- Otherwise use the previous result\n        result[i] = result[i-1]\
    \ or result[i]\n      else\n        -- Otherwise just use the current result\n\
    \        result[i] = result[1]\n      end\n    end\n  end\n  -- Finally return\
    \ the result\n  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpucjb1p6j.lua:10:\
    \ attempt to call a nil value (method 'getScores')\nstack traceback:\n\t/tmp/tmpucjb1p6j.lua:10:\
    \ in local 'candidate'\n\t/tmp/tmpucjb1p6j.lua:40: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659823740
- exit_code: 1
  program: "-- I think we all remember that feeling when the result of some long-awaited\n\
    -- event is finally known. The feelings and thoughts you have at that moment are\n\
    -- definitely worth noting down and comparing.\n-- Your task is to determine if\
    \ a person correctly guessed the results of a number of matches.\n-- You are given\
    \ two arrays of scores and guesses of equal length, where each index shows a match.\
    \ \n-- Return an array of the same length denoting how far off each guess was.\
    \ If they have guessed correctly,\n-- the value is 0, and if not, the value is\
    \ the absolute difference between the guess and the score.\n-- example:\nlocal\
    \ function compare(game, guess)\n\t-- TODO: return the correct value\n\t-- local\
    \ game = [[5, 2, 5], [2, 5, 7], [3, 6, 2]]\n\t-- local guess = [5, 3, 2]\n\t--\
    \ return [1, 1, 3]\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = compare\n    lu.assertEquals(candidate({1, 2, 3, 4, 5, 1}, {1,\
    \ 2, 3, 4, 2, -2}), {0, 0, 0, 0, 3, 3})\n    lu.assertEquals(candidate({0, 0,\
    \ 0, 0, 0, 0}, {0, 0, 0, 0, 0, 0}), {0, 0, 0, 0, 0, 0})\n    lu.assertEquals(candidate({1,\
    \ 2, 3}, {-1, -2, -3}), {2, 4, 6})\n    lu.assertEquals(candidate({1, 2, 3, 5},\
    \ {-1, 2, 3, 4}), {2, 0, 0, 1})\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpyzbgk5py.lua:19:\
    \ expected: {0, 0, 0, 0, 3, 3}\nactual: nil\nstack traceback:\n\t/tmp/tmpyzbgk5py.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823740

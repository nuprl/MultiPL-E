language: lua
name: HumanEval_118_get_closest_vowel
results:
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {\"a\", \"e\", \"i\", \"o\", \"\
    u\", \"y\"}\n    local vowel_found = false\n    local vowels_found = nil\n   \
    \ local i = #word\n    while i > 0 do\n        local letter = word:sub(1, i)\n\
    \        vowels_found = vowels_found or #vowels\n        for vowel in vowels do\n\
    \            vowel_found = vowel_found or letter ~= vowel\n        end\n     \
    \   i = i - 1\n    end\n    if vowel_found then\n        return word\n    end\n\
    \    return \"\"\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpghhme7wc.lua:15:\
    \ attempt to call a table value (for iterator 'for iterator')\nstack traceback:\n\
    \t/tmp/tmpghhme7wc.lua:15: in local 'candidate'\n\t/tmp/tmpghhme7wc.lua:29: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  -- your code goes here\n  -- end your code\n  return\
    \ '' -- Your code should return the empty string if there is no vowel\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n\
    \    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpnvs15unk.lua:16:\
    \ expected: \"u\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpnvs15unk.lua:16:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    return string.format(\"%c%c\", string.sub(word,\
    \ string.len(word)-2, string.len(word)), string.sub(word, string.len(word)))\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n\
    \    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp13y7kdlm.lua:8:\
    \ bad argument #2 to 'format' (number expected, got string)\nstack traceback:\n\
    \t/tmp/tmp13y7kdlm.lua:8: in local 'candidate'\n\t/tmp/tmp13y7kdlm.lua:14: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n\tlocal consonant_list = {}\n\t\n\tfor i = 1, #word\
    \ do\n\t\tlocal c = string.byte(word, i)\n\t\t\n\t\tif c > 47 then\n\t\t\tif c\
    \ < 58 then\n\t\t\t\tconsonant_list[#consonant_list + 1] = string.char(c - 64)\n\
    \t\t\telse\n\t\t\t\tconsonant_list[#consonant_list + 1] = string.char(c - 94)\n\
    \t\t\tend\n\t\tend\n\tend\n\t\n\tlocal vowel_list = {}\n\t\n\tfor i = 1, #consonant_list\
    \ do\n\t\tlocal c = consonant_list[i]\n\t\t\n\t\tif c ~= \"\" then\n\t\t\tlocal\
    \ vowel = string.match(\"aeiouAEIOU\", c)\n\t\t\t\n\t\t\tif vowel ~= nil then\n\
    \t\t\t\tvowel_list[#vowel_list + 1] = vowel\n\t\t\tend\n\t\tend\n\tend\n\t\n\t\
    if #vowel_list > 0 then\n\t\tlocal result = vowel_list[#vowel_list]\n\t\t\n\t\t\
    return result\n\tend\n\t\n\treturn \"\"\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzolqesr9.lua:48:\
    \ expected: \"u\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpzolqesr9.lua:48:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  -- your code here\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5235ci0e.lua:14:\
    \ expected: \"u\"\nactual: nil\nstack traceback:\n\t/tmp/tmp5235ci0e.lua:14: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local result = \"\"\n    for i = #word, 2, -1 do\n\
    \        if (string.sub(word, i, i) ~= \"a\" and string.sub(word, i, i) ~= \"\
    e\" and string.sub(word, i, i) ~= \"i\" and string.sub(word, i, i) ~= \"o\" and\
    \ string.sub(word, i, i) ~= \"u\" and not string.sub(word, i, i) ~= \".\" and\
    \ not string.sub(word, i, i) ~= \",\") then\n            return result\n     \
    \   end\n    end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpsc4m4cps.lua:19:\
    \ expected: \"u\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpsc4m4cps.lua:19:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n\t-- code here\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpwahlaryj.lua:14:\
    \ expected: \"u\"\nactual: nil\nstack traceback:\n\t/tmp/tmpwahlaryj.lua:14: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n   \nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp3nvjkgsf.lua:14:\
    \ expected: \"u\"\nactual: nil\nstack traceback:\n\t/tmp/tmp3nvjkgsf.lua:14: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  -- your code goes here\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpinqvre4i.lua:14:\
    \ expected: \"u\"\nactual: nil\nstack traceback:\n\t/tmp/tmpinqvre4i.lua:14: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n\t-- Your code goes here\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpyht718de.lua:14:\
    \ expected: \"u\"\nactual: nil\nstack traceback:\n\t/tmp/tmpyht718de.lua:14: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  -- your code goes here\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpinqvre4i.lua:14:\
    \ expected: \"u\"\nactual: nil\nstack traceback:\n\t/tmp/tmpinqvre4i.lua:14: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n\tif word ~= nil then\n\t\tlocal vowels = {'a','e','i','o','u'}\n\
    \t\tlocal vowels_length = len(vowels)\n\t\tlocal vowels_search = word:sub(1, word:len())\n\
    \t\t\n\t\tif word:len() > 1 then\n\t\t\tlocal last_vowel_index\n\t\t\tfor last_vowel_index\
    \ = word:len() -1 .. 1 do -- Find the last vowel in word\n\t\t\t\tif vowels_search:sub(1,\
    \ 1) ~= vowels[last_vowel_index] then\n\t\t\t\t\tbreak\n\t\t\t\telse\n\t\t\t\t\
    \tlast_vowel_index = last_vowel_index - 1\n\t\t\t\tend\n\t\t\tend\n\t\t\t\n\t\t\
    \tif last_vowel_index > 1 then\n\t\t\t\tlocal last_vowel_length = 1\n\t\t\t\t\
    local vowels_before_index = word:len() - last_vowel_index\n\t\t\t\t\n\t\t\t\t\
    if vowels_before_index > 1 then\n\t\t\t\t\tlocal vowels_before = vowels[last_vowel_index\
    \ - 1]\n\t\t\t\t\tlocal vowels_before_index = word:len() - vowels_before_index\
    \ - 1\n\t\t\t\t\t\n\t\t\t\t\tif word:sub(vowels_before_index - vowels_before,\
    \ vowels_before_index - vowels_before + 1) ~= vowels_before then\n\t\t\t\t\t\t\
    return ''\n\t\t\t\t\tend\n\t\t\t\tend\n\t\t\tend\n\t\tend\n\tend\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp7d20_god.lua:15: '','' expected near ''do''

    '
  stdout: ''
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  if word == nil or word == \"\" then return \"\" end\n\
    \  local vowels = {\"a\", \"e\", \"i\", \"o\", \"u\"}\n  local vowel_str = \"\"\
    \n  for i = #word, 1, -1 do\n    if word[i] == \"a\" or word[i] == \"e\" or word[i]\
    \ == \"i\" or word[i] == \"o\" or word[i] == \"u\" then\n      if vowel_str ==\
    \ \"\" then\n        vowel_str = vowel_str..word[i]\n      else\n        local\
    \ vowel_str = vowel_str..word[i]\n        local index = #vowel_str\n        local\
    \ vowel_flag = true\n        while vowel_flag then\n          vowel_flag = false\n\
    \          for j = 1, #vowels do\n            if vowels[j] == vowel_str[i] then\n\
    \              index = i\n              break\n            end\n          end\n\
    \          -- The condition below is never met so the program never terminates\n\
    \          -- if any condition is met.\n          if #vowel_str > #vowels then\
    \ return \"\" end\n        end\n      end\n    end\n  end\n  return vowel_str\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n\
    \    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp71mt2fyg.lua:19: ''do'' expected near ''then''

    '
  stdout: ''
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6kwct7if.lua:13:\
    \ expected: \"u\"\nactual: nil\nstack traceback:\n\t/tmp/tmp6kwct7if.lua:13: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    return \"\" --write your code here\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpkduod7fw.lua:14:\
    \ expected: \"u\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpkduod7fw.lua:14:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {\"a\", \"e\", \"i\", \"o\", \"\
    u\"}\n    local vowel_left = \"[\"..vowels[1]..\"]:\"\n    local vowel_right =\
    \ \"[\"..vowels[5]..\"]:\"\n    local left_index = 1\n    local right_index =\
    \ 1\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n\
    \    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpro5x620h.lua:32: ''end'' expected (to close ''function'' at
    line 7) near <eof>

    '
  stdout: ''
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {\n        \"a\", \"e\", \"i\",\
    \ \"o\", \"u\",\n        \"A\", \"E\", \"I\", \"O\", \"U\"\n    }\n    -- Your\
    \ code here\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'), 'u')\n\
    \    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp55mzh58t.lua:18:\
    \ expected: \"u\"\nactual: nil\nstack traceback:\n\t/tmp/tmp55mzh58t.lua:18: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    if word == nil then\n        return ''\n    end\n\
    \    local vowels = {'a','e','i','o','u','y','A','E','I','O','U','Y'}\n    local\
    \ vowels_count = 0\n    local vowels_found = 0\n    for i=1,#word,1 do\n     \
    \   if word[i] == 'a' or word[i] == 'e' or word[i] == 'i' or word[i] == 'o' or\
    \ word[i] == 'u' or word[i] == 'y' then\n            vowels_count = vowels_count\
    \ + 1\n        end\n    end\n    if vowels_count ~= 0 then\n        vowels_found\
    \ = 1\n    end\n    for i=#word,1,-1 do\n        if word[i] == 'a' or word[i]\
    \ == 'e' or word[i] == 'i' or word[i] == 'o' or word[i] == 'u' or word[i] == 'y'\
    \ then\n            vowels_count = vowels_count + 1\n            if vowels_count\
    \ > vowels_found then\n                vowels_found = 1\n            end\n   \
    \     end\n    end\n    if vowels_found == 0 then\n        return ''\n    end\n\
    \    for i=#word,1,-1 do\n        if word[i] == 'a' or word[i] == 'e' or word[i]\
    \ == 'i' or word[i] == 'o' or word[i] == 'u' or word[i] == 'y' then\n        \
    \    return word[i]\n        end\n    end\n    return ''\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpn2abjtxt.lua:44:\
    \ expected: \"u\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpn2abjtxt.lua:44:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = \n        {\"a\", \"e\", \"i\",\
    \ \"o\", \"u\"}\n    local vowels_count = #vowels\n    \n    local vowel_count\
    \ = 0\n    local vowel_index = #word\n    local current_vowel\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpv8rzjgka.lua:34: ''end'' expected (to close ''function'' at
    line 7) near <eof>

    '
  stdout: ''
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n   local vowels = {'a','e','i','o','u','y'}\n   for\
    \ i=#word,1,-1 do\n      for j=0,#vowels do\n         if string.sub(word,i-1,i)\
    \ == vowels[j] then\n            return word\n         end\n      end\n   end\n\
    \   return \"\"\nend\nprint(get_closest_vowel(\"Awesome\"))\nprint(get_closest_vowel(\"\
    awesome\"))\nprint(get_closest_vowel(\"Awesomes\"))\nprint(get_closest_vowel(\"\
    HaeCa\"))\nprint(get_closest_vowel(\"Awesome\")) -- return empty string \"nothing\"\
    \ because none of the consonants are between \"a\" and \"e\"\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "\nawesome\n\n\n\nF\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6c7eudor.lua:27:\
    \ expected: \"u\"\nactual: \"yogurt\"\nstack traceback:\n\t/tmp/tmp6c7eudor.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    if word == nil then\n        return ''\n    end\n\
    \    local vowels = { 'a','e','i','o','u' }\n    local vowels_count = 0\n    local\
    \ wordLength = #word\n    local consonants_count = 0\n    local consonants_array\
    \ = {}\n    local consonants_index = 0\n    while consonants_index < wordLength\
    \ do\n        if string.sub(word,consonants_index,consonants_index + 1) ~= ''\
    \ then\n            consonants_count = consonants_count + 1\n        end\n   \
    \     consonants_index = consonants_index + 1\n    end\n    if consonants_count\
    \ > 0 then\n        consonants_count = consonants_count - 1\n        while consonants_count\
    \ >= 0 do\n            local index = consonants_index\n            consonants_index\
    \ = consonants_index + 2\n            if string.sub(word,index,index + 1) ~= ''\
    \ then\n                table.insert(consonants_array,string.sub(word,index,index\
    \ + 1))\n            else\n                consonants_count = consonants_count\
    \ - 1\n            end\n        end\n    else\n        consonants_array = {'',\
    \ ''}\n    end\n    local vowels_index = 0\n    local closest_index = 0\n    local\
    \ closest_distance = math.random(wordLength / 2)\n    while vowels_index < wordLength\
    \ do\n        if string.sub(word,vowels_index + 1,vowels_index + 1) ~= '' then\n\
    \            vowels_count = vowels_count + 1\n        end\n        vowels_index\
    \ = vowels_index + 1\n    end\n    if vowels_count > 0 then\n        vowels_count\
    \ = vowels_count - 1\n        while vowels_count >= 0 do\n            if consonants_array[closest_index]\
    \ ~= '' then\n                if vowels[vowels_index] == consonants_array[closest_index]\
    \ then\n                    local distance = math.abs(vowels_index - consonants_index)\n\
    \                    if distance < closest_distance then\n                   \
    \     closest_index = vowels_index\n                        closest_distance =\
    \ distance\n                    end\n                end\n            end\n  \
    \          vowels_count = vowels_count - 1\n        end\n    else\n        closest_index\
    \ = 1\n        closest_distance = math.abs(wordLength - closest_index)\n    end\n\
    \    if consonants_count <= 0 then\n        return ''\n    end\n    local consonants_count\
    \ = consonants_count - 1\n    while consonants_count >= 0 do\n        if consonants_array[closest_index]\
    \ ~= '' then\n            return consonants_array[closest_index]\n\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpdilo04vv.lua:72: ''end'' expected (to close ''if'' at line
    69) near ''lu''

    '
  stdout: ''
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n\t-- write your code here\n\tlocal vowels = string.char(\"\
    aeiou\")\n\tlocal consonants = string.char(\"bcdfghjklmnpqrstvwxyz\")\n\tlocal\
    \ index = 1\n\twhile word:len() > 1 do\n\t\tif word:sub(1, 1) ~= consonants[index]\
    \ then\n\t\t\tindex = index + 1\n\t\t\tif not string.find(vowels, word:sub(1,\
    \ 1)) then\n\t\t\t\treturn \"\"\n\t\t\tend\n\t\telse\n\t\t\tindex = index + 1\n\
    \t\t\tif word:len() > 2 then\n\t\t\t\tif word:sub(1, 2) ~= consonants[index] then\n\
    \t\t\t\t\tindex = index + 1\n\t\t\t\t\tif not string.find(vowels, word:sub(1,\
    \ 2)) then\n\t\t\t\t\t\treturn \"\"\n\t\t\t\t\tend\n\t\t\t\telse\n\t\t\t\t\tindex\
    \ = index + 1\n\t\t\t\t\tif word:len() > 3 then\n\t\t\t\t\t\tif word:sub(1, 3)\
    \ ~= consonants[index] then\n\t\t\t\t\t\t\tindex = index + 1\n\t\t\t\t\t\t\tif\
    \ not string.find(vowels, word:sub(1, 3)) then\n\t\t\t\t\t\t\t\treturn \"\"\n\t\
    \t\t\t\t\t\tend\n\t\t\t\t\t\telse\n\t\t\t\t\t\t\tindex = index + 1\n\t\t\t\t\t\
    \t\tif word:len() > 4 then\n\t\t\t\t\t\t\t\tif word:sub(1, 4) ~= consonants[index]\
    \ then\n\t\t\t\t\t\t\t\t\tindex = index + 1\n\t\t\t\t\t\t\t\t\tif not string.find(vowels,\
    \ word:sub(1, 4)) then\n\t\t\t\t\t\t\t\t\t\treturn \"\"\n\t\t\t\t\t\t\t\t\tend\n\
    \t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\tindex = index + 1\n\t\t\t\t\t\t\t\t\t\
    if word:len() > 5 then\n\t\t\t\t\t\t\t\t\t\tif word:sub(1, 5) ~= consonants[index]\
    \ then\n\t\t\t\t\t\t\t\t\t\t\tindex = index + 1\n\t\t\t\t\t\t\t\t\t\t\tif not\
    \ string.find(vowels, word:sub(1, 5)) then\n\t\t\t\t\t\t\t\t\t\t\t\treturn \"\"\
    \n\t\t\t\t\t\t\t\t\t\t\tend\n\t\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\t\t\
    index = index + 1\n\t\t\t\t\t\t\t\t\t\t\tif word:len() > 6 then\n\t\t\t\t\t\t\t\
    \t\t\t\t\tif word:sub(1, 6) ~= consonants[index] then\n\t\t\t\t\t\t\t\t\t\t\t\t\
    \tindex = index + 1\n\t\t\t\t\t\t\t\t\t\t\t\t\tif not string.find(vowels, word:sub(1,\
    \ 6)) then\n\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn \"\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\
    end\n\t\t\t\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\t\t\t\tindex = index + 1\n\
    \t\t\t\t\t\t\t\t\t\t\t\t\tif word:len() > 7 then\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    if word:sub(1, 7) ~= consonants[index] then\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tindex\
    \ = index + 1\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif not string.find(vowels, word:sub(1,\
    \ 7)) then\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\treturn \"\"\n\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\t\tend\n\t\t\t\t\t\t\t\t\t\t\t\t\t\telse\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    index = index + 1\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tif word:len() > 8 then\n\t\t\t\
    \t\t\t\t\t\t\t\t\t\t\t\t\tif word:sub(1, 8) ~= consonants[index] then\n\t\t\t\t\
    \t\t\t\t\t\t\t\t\t\t\t\t\tindex = index + 1\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    if not string.find(vowels, word:sub(1, 8)) then\n\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\
    \t\t\treturn \nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmplrpwt983.lua:73: ''end'' expected (to close ''if'' at line
    71) near ''=''

    '
  stdout: ''
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n\t-- your code goes here\n\treturn \"\"\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n\
    \    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpj2gp6v8f.lua:15:\
    \ expected: \"u\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpj2gp6v8f.lua:15:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n\tlocal vowels = {'a', 'e', 'i', 'o', 'u'}\n\tlocal\
    \ vowel_left, vowel_right = word:find(\"%v%v\")\n\tif vowel_right then\n\t\tfor\
    \ _, letter in pairs(vowels) do\n\t\t\tif vowel_right == letter then\n\t\t\t\t\
    return letter\n\t\t\tend\n\t\tend\n\tend\n\treturn \"\"\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb9_884if.lua:23:\
    \ expected: \"u\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpb9_884if.lua:23:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n   if string.find(word, '[aeiou]') ~= nil then\n  \
    \    return \"\"\n   end\n   if string.find(word, '[^aeiou]') ~= nil then\n  \
    \    return \"\"\n   end\n   if string.find(word, '[aeiouAEIOU]') ~= nil then\n\
    \      return \"\"\n   end\n   if string.find(word, '[^aeiouAEIOU]') ~= nil then\n\
    \      return \"\"\n   end\n   if string.find(word, '[bcdfghjklmnpqrstvwxyz]')\
    \ ~= nil then\n      return \"\"\n   end\n   if string.find(word, '[^bcdfghjklmnpqrstvwxyz]')\
    \ ~= nil then\n      return \"\"\n   end\n   if string.find(word, '[bcdfghjklmnpqrstvwxyzABCEGHJKLMNPRSTVWXYZ]')\
    \ ~= nil then\n      return \"\"\n   end\n   if string.find(word, '[^bcdfghjklmnpqrstvwxyzABCEGHJKLMNPRSTVWXYZ]')\
    \ ~= nil then\n      return \"\"\n   end\n   if string.find(word, '[bcdfghjklmnpqrstvwxyzABCDEFGHJKLMNPRSTVWXYZ]')\
    \ ~= nil then\n      return \"\"\n   end\n   if string.find(word, '[^bcdfghjklmnpqrstvwxyzABCDEFGHJKLMNPRSTVWXYZ]')\
    \ ~= nil then\n      return \"\"\n   end\n   if string.find(word, '[bcdfghjklmnpqrstvwxyzABCDEFGHJKLMNPQRSTVWXYZ]')\
    \ ~= nil then\n      return \"\"\n   end\n   if string.find(word, '[^bcdfghjklmnpqrstvwxyzABCDEFGHJKLMNPQRSTVWXYZ]')\
    \ ~= nil then\n      return \"\"\n   end\n   if string.find(word, '[bcdfghjklmnpqrstvwxyzABCDEFGHJKLMNPQRSUVWXYZ]')\
    \ ~= nil then\n      return \"\"\n   end\n   if string.find(word, '[^bcdfghjklmnpqrstvwxyzABCDEFGHJKLMNPQRSUVWXYZ]')\
    \ ~= nil then\n      return \"\"\n   end\n   if string.find(word, '[bcdfghjklmnpqrstvw\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n\
    \    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpdam9u3j7.lua:50: unfinished string near ''''[bcdfghjklmnpqrstvw''

    '
  stdout: ''
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n   -- your code goes here\n   return vowel\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n\
    \    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpky302l7c.lua:15:\
    \ expected: \"u\"\nactual: nil\nstack traceback:\n\t/tmp/tmpky302l7c.lua:15: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    -- 'word' will be your string. \n    local vowels\
    \ = {\n        'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a',\
    \ 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a',\n        'a', 'a', 'a', 'a', 'a', 'a',\
    \ 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a',\n\
    \        'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a',\
    \ 'a', 'a', 'a', 'a', 'a', 'a',\n        'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a',\
    \ 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a',\n        'a', 'a',\
    \ 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a',\
    \ 'a', 'a',\n        'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a',\
    \ 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a',\n        'a', 'a', 'a', 'a', 'a', 'a',\
    \ 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a',\n    \
    \    'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a',\
    \ 'a', 'a', 'a', 'a', 'a',\n        'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a',\
    \ 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a',\n        'a', 'a', 'a', 'a',\
    \ 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a',\n\
    \        'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a',\
    \ 'a', 'a', 'a', 'a', 'a',\n        'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a',\
    \ 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a',\n        'a', 'a', 'a', 'a',\
    \ 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a',\n\
    \        'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a',\
    \ 'a', 'a', 'a', 'a', 'a',\n        'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a',\
    \ 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a',\n        'a', 'a', 'a', 'a', 'a',\
    \ 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a',\n        'a',\
    \ 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a',\
    \ 'a', 'a',\n        'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a',\
    \ 'a', 'a', 'a', 'a', 'a', 'a', 'a',\n        'a', 'a', 'a', 'a', 'a', 'a', 'a',\
    \ 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a',\n        'a', 'a',\
    \ 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a',\n\
    \        'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a',\
    \ 'a', 'a', 'a',\n        'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a',\
    \ 'a', 'a', 'a', 'a', 'a', 'a', 'a',\n        'a', 'a', 'a', 'a', 'a', 'a', 'a',\
    \ 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a',\n        'a', 'a', 'a',\
    \ 'a', 'a', 'a', 'a', 'a', 'a', 'a', 'a', '\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmps8v05tj9.lua:33: unfinished string near ''''''

    '
  stdout: ''
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n   assert(type(word) == \"string\")\n   local vowels\
    \ = \"aeiouAEIOU\"\n   local vowel_index = -1\n   local result = ''\n   for i\
    \ = 1, #word, 1 do\n      local consonant = word[i]\n      if vowel_map[consonant]\
    \ == nil then\n         return '' \n      end\n      local vowel_dist = distance(consonant,\
    \ vowel_map[consonant]) + 1\n      if vowel_dist < vowel_index then\n        \
    \ vowel_index = vowel_dist\n         result = consonant\n      end\n   end\n \
    \  return result\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpzna7jchg.lua:14:\
    \ attempt to index a nil value (global 'vowel_map')\nstack traceback:\n\t/tmp/tmpzna7jchg.lua:14:\
    \ in local 'candidate'\n\t/tmp/tmpzna7jchg.lua:29: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n\t-- Your code goes here\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpyht718de.lua:14:\
    \ expected: \"u\"\nactual: nil\nstack traceback:\n\t/tmp/tmpyht718de.lua:14: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n\treturn \"\"\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_bzc1mm3.lua:14:\
    \ expected: \"u\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmp_bzc1mm3.lua:14:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ vowels_cnt\n    local vowels_position\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpw5jkvzzi.lua:30: ''end'' expected (to close ''function'' at
    line 7) near <eof>

    '
  stdout: ''
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  -- your code here\n  return \"\"\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp8tmn6ryf.lua:15:\
    \ expected: \"u\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmp8tmn6ryf.lua:15:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {}\n    for i=string.len(word)-1:1,-1\
    \ do -- check from end backwards\n        if string.sub(word,i,i) == \"a\" or\
    \ string.sub(word,i,i) == \"e\" or string.sub(word,i,i) == \"i\" or string.sub(word,i,i)\
    \ == \"o\" or string.sub(word,i,i) == \"u\" then -- vowels\n            table.insert(vowels,i)\n\
    \        end\n    end\n    for i=1,string.len(word)-1 do -- check from start backwards\n\
    \        if string.sub(word,i,i) == \"A\" or string.sub(word,i,i) == \"E\" or\
    \ string.sub(word,i,i) == \"I\" or string.sub(word,i,i) == \"O\" or string.sub(word,i,i)\
    \ == \"U\" then -- vowels\n            table.insert(vowels,i)\n        end\n \
    \   end\n    local result = \"\"\n    for i=#vowels, -1 do\n        local vowel\
    \ = string.sub(word,vowels[i],1)\n        if vowel ~= \"\" then\n            local\
    \ dist = string.len(word)-#vowels\n            local j=0\n            for j=1,\
    \ #vowels do\n                if j+1 == vowels[i] then\n                    if\
    \ dist < j+1 then\n                        dist = j+1\n                    end\n\
    \                end\n            end\n            result = result .. vowel\n\
    \        end\n    end\n    return result\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpcc2v9kdp.lua:9: '','' expected near '':''

    '
  stdout: ''
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n\t-- your code goes here\n\tlocal vowels = {\n\t\t\
    ['A'] = true\n\t\t['E'] = true\n\t\t['I'] = true\n\t\t['O'] = true\n\t\t['U']\
    \ = true\n\t\t['Y'] = true\n\t}\n\tfor i = 1, #word do\n\t\tif not vowels[word[i]]\
    \ then\n\t\t\treturn ''\n\t\tend\n\tend\n\treturn word\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpxiwafdvo.lua:11: ''}'' expected (to close ''{'' at line 9)
    near ''[''

    '
  stdout: ''
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n\t-- Solution below\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpgkskb2p6.lua:14:\
    \ expected: \"u\"\nactual: nil\nstack traceback:\n\t/tmp/tmpgkskb2p6.lua:14: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    return \"\"\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp1m8jzevl.lua:14:\
    \ expected: \"u\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmp1m8jzevl.lua:14:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    if word == nil then return nil end\n    local vowels\
    \ = {'a','e','i','o','u','A','E','I','O','U'}\n    local vowelsCount = 0\n   \
    \ for i = 1, #word do \n        local character = word:sub(i, i)\n        if vowels[character]\
    \ ~= nil then\n            vowelsCount = vowelsCount + 1\n        end\n    end\n\
    \    local lastChar = word:sub(1, #word)\n    for i = 1, #lastChar do\n      \
    \  if vowels[lastChar:sub(i, i)] ~= nil then\n            vowelsCount = vowelsCount\
    \ + 1\n        end\n    end\n    if vowelsCount == 0 then return '' end\n    local\
    \ vowelIndex = #vowels\n    local rightCharIndex = #word\n    for i = 1, #word\
    \ do\n        local character = word:sub(i, i)\n        if vowels[character] ~=\
    \ nil then\n            vowelIndex = vowelIndex - 1\n        end\n        if rightCharIndex\
    \ >= 1 then\n            local rightChar = word:sub(rightCharIndex, rightCharIndex)\n\
    \            if vowels[rightChar] ~= nil then\n                vowelIndex = vowelIndex\
    \ - 1\n            end\n        end\n    end\n    return vowels[vowelIndex]\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n\
    \    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp9qkj00xz.lua:44:\
    \ expected: \"u\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmp9qkj00xz.lua:44:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n   -- your code goes here\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpi2h82axt.lua:14:\
    \ expected: \"u\"\nactual: nil\nstack traceback:\n\t/tmp/tmpi2h82axt.lua:14: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    return ''\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzl7zx8kp.lua:14:\
    \ expected: \"u\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpzl7zx8kp.lua:14:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    -- your codes goes here\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpoyx7wske.lua:14:\
    \ expected: \"u\"\nactual: nil\nstack traceback:\n\t/tmp/tmpoyx7wske.lua:14: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n   -- Your code here\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp50ksoayv.lua:14:\
    \ expected: \"u\"\nactual: nil\nstack traceback:\n\t/tmp/tmp50ksoayv.lua:14: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  -- your code here\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5235ci0e.lua:14:\
    \ expected: \"u\"\nactual: nil\nstack traceback:\n\t/tmp/tmp5235ci0e.lua:14: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n\t-- Your code goes here!\n\treturn \nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp3gr4bofw.lua:15:\
    \ expected: \"u\"\nactual: nil\nstack traceback:\n\t/tmp/tmp3gr4bofw.lua:15: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    assert(word:sub(1,1) ~= 'a' and word:sub(1,1) ~=\
    \ 'e' and word:sub(1,1) ~= 'i' and word:sub(1,1) ~= 'o' and word:sub(1,1) ~= 'u',\
    \ \n    'get_closest_vowel function takes word as parameter')\n    local vowels\
    \ = {\n        [\"a\"] = 1, [\"e\"] = 1, [\"i\"] = 1, [\"o\"] = 1, [\"u\"] = 1,\n\
    \        [\"A\"] = 1, [\"E\"] = 1, [\"I\"] = 1, [\"O\"] = 1, [\"U\"] = 1,\n  \
    \      [\"Ah\"] = 1, [\"Ahh\"] = 1, [\"Ahm\"] = 1, [\"Ahmed\"] = 1, [\"Ahmed\"\
    ] = 1, [\"Ahmed\"] = 1, [\"Ahmed\"] = 1,\n        [\"Ahmmed\"] = 1, [\"Ahmed\"\
    ] = 1, [\"Ahmed\"] = 1, [\"Ahmed\"] = 1, [\"Ahmed\"] = 1, [\"Ahmed\"] = 1, [\"\
    Ahmed\"] = 1,\n        [\"Ahmed\"] = 1, [\"Ahmed\"] = 1, [\"Ahmed\"] = 1, [\"\
    Ahmed\"] = 1, [\"Ahmed\"] = 1, [\"Ahmed\"] = 1, [\"Ahmed\"] = 1,\n        [\"\
    Ahmed\"] = 1, [\"Ahmed\"] = 1, [\"Ahmed\"] = 1, [\"Ahmed\"] = 1, [\"Ahmed\"] =\
    \ 1, [\"Ahmed\"] = 1, [\"Ahmed\"] = 1,\n        [\"Ahmed\"] = 1, [\"Ahmed\"] =\
    \ 1, [\"Ahmed\"] = 1, [\"Ahmed\"] = 1, [\"Ahmed\"] = 1, [\"Ahmed\"] = 1, [\"Ahmed\"\
    ] = 1,\n        [\"Ahmed\"] = 1, [\"Ahmed\"] = 1, [\"Ahmed\"] = 1, [\"Ahmed\"\
    ] = 1, [\"Ahmed\"] = 1, [\"Ahmed\"] = 1, [\"Ahmed\"] = 1,\n        [\"Ahmed\"\
    ] = 1, [\"Ahmed\"] = 1, [\"Ahmed\"] = 1, [\"Ahmed\"] = 1, [\"Ahmed\"] = 1, [\"\
    Ahmed\"] = 1, [\"Ahmed\"] = 1,\n        [\"Ahmed\"] = 1, [\"Ahmed\"] = 1, [\"\
    Ahmed\"] = 1, [\"Ahmed\"] = 1, [\"Ahmed\"] = 1, [\"Ahmed\"] = 1, [\"Ahmed\"] =\
    \ 1,\n        [\"Ahmed\"] = 1, [\"Ahmed\"] = 1, [\"Ahmed\"] = 1, [\"Ahmed\"] =\
    \ 1, [\"Ahmed\"] = 1, [\"Ahmed\"] = 1, [\"Ahmed\"] = 1,\n        [\"Ahmed\"] =\
    \ 1, [\"Ahmed\"] = \nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'), 'u')\n\
    \    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp1y0nvvra.lua:23: ''}'' expected (to close ''{'' at line 10)
    near ''=''

    '
  stdout: ''
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n\treturn word\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpgef8ky0b.lua:14:\
    \ expected: \"u\"\nactual: \"yogurt\"\nstack traceback:\n\t/tmp/tmpgef8ky0b.lua:14:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  if word == nil then\n    return nil\n  end\n  local\
    \ vowels = { 'a', 'e', 'i', 'o', 'u' }\n  local vowel_index = #vowels - 1\n  local\
    \ vowel_length = #vowels\n  local vowel_length = word:len()\n  \n  for i = 1,\
    \ (word:len()) - vowel_length do\n    local vowel = word:sub(i,i)\n    if vowel\
    \ == 'a' or vowel == 'e' or vowel == 'i' or vowel == 'o' or vowel == 'u' then\n\
    \      local vowel_index = i - vowel_length\n      while vowel_index >= 0 and\
    \ vowels[vowel_index] == vowel do\n        vowel_index -= 1\n      end\n     \
    \ if vowel_index >= 0 then\n        return word:sub(i,i)\n      end\n    end\n\
    \  end\n  return ''\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp96up7x40.lua:21: syntax error near ''-''

    '
  stdout: ''
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6kwct7if.lua:13:\
    \ expected: \"u\"\nactual: nil\nstack traceback:\n\t/tmp/tmp6kwct7if.lua:13: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    return \"a\"\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmphee02nuz.lua:14:\
    \ expected: \"u\"\nactual: \"a\"\nstack traceback:\n\t/tmp/tmphee02nuz.lua:14:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    -- Your code here\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp18trz1yh.lua:14:\
    \ expected: \"u\"\nactual: nil\nstack traceback:\n\t/tmp/tmp18trz1yh.lua:14: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  local vowels = {\"a\", \"e\", \"i\", \"o\", \"u\"\
    }\n  \n  local n = #word\n  local idx\n  local min_idx = -1\n  \n  for i = 1,\
    \ n do\n    -- Skip the first consonant (which is in the beginning of the word)\n\
    \    idx = i - 1\n    if idx < 0 then\n      idx = n\n    end\n    \n    -- Skip\
    \ the first and last consonants (which is not in the beginning and end of the\
    \ word)\n    if i == 1 or i == n then\n      continue\n    end\n    \n    -- Skip\
    \ the second consonant\n    if i == n then\n      idx = n + 1\n    end\n    \n\
    \    -- Skip the last consonant\n    if i == n then\n      idx = n\n    end\n\
    \    \n    -- Skip vowels in the beginning and ending doesn't count\n    if i\
    \ == 1 or i == n then\n      continue\n    end\n    \n    -- Skip vowels at the\
    \ middle of the word\n    if i == idx then\n      continue\n    end\n    \n  \
    \  -- Skip vowels in the middle of the word (including first and last consonants)\n\
    \    if i == idx + 1 or i == n - 1 then\n      continue\n    end\n    \n    --\
    \ Skip vowels at the end\n    if i == n then\n      idx = n - 1\n    end\n   \
    \ \n    -- Skip vowels at the beginning\n    if i == 1 then\n      idx = 1\n \
    \   end\n    \n    -- If the vowel stands between the second and third consonants,\
    \ \n    -- return the vowel, otherwise return empty string\n    if idx+2 <= n\
    \ and idx+3 < n then\n      if word[idx+1] == word[idx+2] and word[idx+2] == word[idx+3]\
    \ then\n        return word[idx+1]\n      end\n    end\n    \n    -- If the vowel\
    \ stands between the first and second consonants, \n    -- return the vowel, otherwise\
    \ return empty string\n    if idx-1 <= n and idx+2 < n then\n      if word[idx-1]\
    \ == word[idx+2] and word[idx+2] == word[idx+3] then\n        return word[idx-1]\n\
    \      end\n    end\n  end\n  \n  return \"\"\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp7ehmk0k9.lua:24: syntax error near ''end''

    '
  stdout: ''
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    -- your code here\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpqme21mj4.lua:14:\
    \ expected: \"u\"\nactual: nil\nstack traceback:\n\t/tmp/tmpqme21mj4.lua:14: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  -- Your code goes here\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpoo0slai8.lua:14:\
    \ expected: \"u\"\nactual: nil\nstack traceback:\n\t/tmp/tmpoo0slai8.lua:14: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    if word == nil then\n        return nil\n    end\n\
    \    local vowels = string.gmatch(word, \"[aeiouAEIOU]\")\n    if #vowels == 0\
    \ then\n        return word\n    end\n    local vowel_index = 1\n    while vowel_index\
    \ < #vowels do\n        if vowels[vowel_index + 1] >= string.sub(word, 1, #vowels[vowel_index])\
    \ then\n            break\n        end\n        vowel_index = vowel_index + 1\n\
    \    end\n    return string.sub(word, 1, #vowels[vowel_index])\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmph88pk4fg.lua:12:\
    \ attempt to get length of a function value (local 'vowels')\nstack traceback:\n\
    \t/tmp/tmph88pk4fg.lua:12: in local 'candidate'\n\t/tmp/tmph88pk4fg.lua:28: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    return word\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpwes0quf2.lua:14:\
    \ expected: \"u\"\nactual: \"yogurt\"\nstack traceback:\n\t/tmp/tmpwes0quf2.lua:14:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n\t-- Your code here\nend\nprint(get_closest_vowel(\"\
    hello\"))\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "\nF\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpk2pb45ek.lua:15:\
    \ expected: \"u\"\nactual: nil\nstack traceback:\n\t/tmp/tmpk2pb45ek.lua:15: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local index = 1\n    local vowels = { 'a', 'e',\
    \ 'i', 'o', 'u' }\n    local vowel_index = 1\n    \n    -- If the word is empty\
    \ return empty string\n    if word == nil then \n        return ''\n    end\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n\
    \    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp0vd7zhsj.lua:35: ''end'' expected (to close ''function'' at
    line 7) near <eof>

    '
  stdout: ''
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = \"aieouaeou\"\n    local count =\
    \ 0\n    for i = #word, 1, -1 do\n        if word[i] == \"a\" then\n         \
    \   count = count + 1\n        elseif word[i] == \"e\" then\n            count\
    \ = count + 1\n        elseif word[i] == \"i\" then\n            count = count\
    \ + 1\n        elseif word[i] == \"o\" then\n            count = count + 1\n \
    \       elseif word[i] == \"u\" then\n            count = count + 1\n        elseif\
    \ word[i] == \"e\" then\n            count = count + 1\n        elseif word[i]\
    \ == \"o\" then\n            count = count + 1\n        elseif word[i] == \"u\"\
    \ then\n            count = count + 1\n        elseif word[i] == \" \" then\n\
    \            if count == 1 then\n                return word\n            elseif\
    \ count == 2 then\n                return word\n            else\n           \
    \     count = 0\n            end\n        end\n    end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpmfi07av4.lua:42:\
    \ expected: \"u\"\nactual: nil\nstack traceback:\n\t/tmp/tmpmfi07av4.lua:42: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n-- your code here\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpogglh68c.lua:14:\
    \ expected: \"u\"\nactual: nil\nstack traceback:\n\t/tmp/tmpogglh68c.lua:14: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {\"a\", \"e\", \"i\", \"o\", \"\
    u\", \"A\", \"E\", \"I\", \"O\", \"U\", \"a\", \"e\", \"i\", \"o\", \"u\"}\n \
    \   local vowels_count = #vowels\n    local vowel_start = #word\n    local vowel_end\
    \ = vowel_start + vowels_count - 1\n    local vowel_left_side = word\n    local\
    \ vowel_right_side = word\n    for i = 1, vowels_count do\n        if vowels[i]\
    \ == word[vowel_end] then\n            vowel_end = vowel_end - 1\n        elseif\
    \ vowels[i] == word[vowel_start] then\n            vowel_start = vowel_start +\
    \ 1\n        end\n    end\n    for i = 1, vowels_count do\n        if vowel_start\
    \ > 0 then\n            if vowels[i] == word[vowel_end] then\n               \
    \ vowel_end = vowel_end - 1\n            elseif vowels[i] == word[vowel_start]\
    \ then\n                vowel_start = vowel_start + 1\n            end\n     \
    \   end\n    end\n    \n    local vowel_found = \"\"\n    if vowel_start > 0 and\
    \ vowel_end < #word then \n        if word[vowel_start + vowels_count] == word[vowel_end]\
    \ then\n            vowel_found = \"\"\n        else\n            vowel_found\
    \ = word[vowel_end - 1]\n        end\n    end\n    return vowel_found\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n\
    \    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpar596ryi.lua:45:\
    \ expected: \"u\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpar596ryi.lua:45:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n   local vowels = {\"a\", \"e\", \"i\", \"o\", \"u\"\
    }\n   for i = #word, 2, -1 do\n      for i = #vowels, 2, -1 do\n         if vowels[i]\
    \ < word[i] then\n            return word\n         end\n      end\n   end\n \
    \  return \"\"\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'), 'u')\n\
    \    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpatd85okm.lua:11:\
    \ attempt to compare string with nil\nstack traceback:\n\t/tmp/tmpatd85okm.lua:11:\
    \ in local 'candidate'\n\t/tmp/tmpatd85okm.lua:22: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = { \"a\", \"e\", \"i\", \"o\", \"\
    u\" }\n    local len = #word\n    local max_len = len - 1\n    local max_diff\
    \ = 0\n    local min_diff = 0\n    local cur_diff = len\n    local max_vowel =\
    \ -1\n    local min_vowel = -1\n    local vowel_found = false\n    for i = len-1,\
    \ 0, -1 do\n        if cur_diff <= min_diff then\n            if word[cur_diff]\
    \ == vowels[min_vowel] then\n                if min_vowel == -1 then\n       \
    \             min_vowel = i - cur_diff\n                else\n               \
    \     min_vowel = i\n                end\n            end\n        end\n     \
    \   local diff = (cur_diff - i)\n        if diff > max_diff then\n           \
    \ max_diff = diff\n            if min_diff == 0 then\n                max_vowel\
    \ = i - cur_diff\n            else\n                max_vowel = min_vowel\n  \
    \          end\n        end\n        if diff < min_diff then\n            min_diff\
    \ = diff\n        end\n        cur_diff = i - i - 1\n    end\n    return word:sub(1,\
    \ max_vowel)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'), 'u')\n\
    \    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpj81r0i_8.lua:47:\
    \ expected: \"u\"\nactual: \"yogurt\"\nstack traceback:\n\t/tmp/tmpj81r0i_8.lua:47:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = \"AEIOUaeiou\"\n    -- Your code\
    \ here\n    if word:sub(1, 1) in vowels then\n        return \"\"\n    else\n\
    \        local last_index = word:find(vowels, 1, true)\n        local first_index\
    \ = word:find(\"aieou\", 1, true)\n        local result = word[last_index:len()\
    \ - 3]\n        result = word[last_index:len() - 1]\n        return result\n \
    \   end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpcc5ehfza.lua:10: ''then'' expected near ''in''

    '
  stdout: ''
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6kwct7if.lua:13:\
    \ expected: \"u\"\nactual: nil\nstack traceback:\n\t/tmp/tmp6kwct7if.lua:13: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {\"a\", \"e\", \"i\", \"o\", \"\
    u\"}\n    local vowels_found = {}\n    for i = 1, #word do\n        if word:sub(i,\
    \ i) == word:sub(i - 1, i) then\n            for j = 1, #vowels do\n         \
    \       if vowels[j] == word:sub(i - 1, i) then\n                    table.insert(vowels_found,\
    \ j)\n                    \n                end\n            end\n        end\n\
    \    end\n    \n    for i = #vowels_found, #vowels do\n        local vowel_index\
    \ = i\n        local vowel = vowels[vowel_index]\n        local is_vowel_in_word\n\
    \        local word_end\n        \n        if vowel ~= \"u\" then\n          \
    \  is_vowel_in_word = true\n            word_end = word:sub((vowel_index + 1))\n\
    \        elseif vowel == \"u\" then\n            is_vowel_in_word = false\n  \
    \          word_end = word:sub((vowel_index - 1))\n        end\n        \n   \
    \     if is_vowel_in_word then\n            if vowel_index > 1 then\n        \
    \        local vowel_before = word:sub((vowel_index - 2))\n                if\
    \ vowel_before == \"a\" or vowel_before == \"e\" or vowel_before == \"i\" or vowel_before\
    \ == \"o\" or vowel_before == \"u\" then\n                    -- do nothing\n\
    \                else\n                    local vowel_after = word:sub((vowel_index\
    \ + 1))\n                    if vowel_after == \"a\" or vowel_after == \"e\" or\
    \ vowel_after == \"i\" or vowel_after == \"o\" or vowel_after == \"u\" then\n\
    \                        -- do nothing\n                    else\n           \
    \             return \"\"\n                    end\n                end\n    \
    \        end\n            \n            if vowel_index < #word - 2 then\n    \
    \            local vowel_after = word:sub((vowel_index + 2))\n               \
    \ if vowel_after == \"a\" or vowel_after == \"e\" or vowel_after == \"i\" or vowel_after\
    \ == \"o\" or vowel_after == \"u\" then\n                    -- do nothing\n \
    \               else\n                    local vowel_after = word:sub((vowel_index\
    \ + 1))\n                    if vowel_after == \"a\" or vowel_after == \"e\" or\
    \ vowel_after == \"i\" or vowel_after == \"o\" or vowel_after == \"u\" then\n\
    \                        -- do nothing\n                    else\n           \
    \             return \"\"\n                    end\n                end\n    \
    \        end\n        end\n    end\n    \n    -- if #vowels_found > 0 then\n \
    \   --     -- return \"\"\n    -- end\n    \n    for j = 1, #vowels_found do\n\
    \        local vowel = vowels[vowels_found[j]]\n        if vowel ~= \"u\" then\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n\
    \    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpambis5_f.lua:92: ''end'' expected (to close ''if'' at line
    72) near <eof>

    '
  stdout: ''
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {\"a\", \"e\", \"i\", \"o\", \"\
    u\"}\n    local vowel_met_condition = #vowels >= 1 \n    local vowel_met_condition2\
    \ = #vowels >= 2\n    -- print vowel_met_condition\n    -- print vowel_met_condition2\n\
    \    local vowel_met_condition3 = #vowels >= 3\n    -- print vowel_met_condition3\n\
    \    local vowel_met_condition4 = #vowels >= 4\n    -- print vowel_met_condition4\n\
    \    local vowel_met_condition5 = #vowels >= 5\n    -- print vowel_met_condition5\n\
    \    local vowel_met_condition6 = #vowels >= 6\n    -- print vowel_met_condition6\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n\
    \    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpbadm4d1w.lua:40: ''end'' expected (to close ''function'' at
    line 7) near <eof>

    '
  stdout: ''
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n   local vowel_positions = {\n      {1,1}, {2,2}, {3,3},\
    \ {4,4}, {5,5}, {6,6},\n      {7,7}, {8,8}, {9,9}, {10,10}, {11,11}, {12,12},\n\
    \      {13,13}, {14,14}, {15,15}, {16,16},\n   };\n   local vowel_found = false;\n\
    \   for i = #vowel_positions, 1, -1 do\n      local vowel = word:sub(1,vowel_positions[i][1]):lower()\n\
    \      if vowel == \"a\" or vowel == \"e\" or vowel == \"i\" or vowel == \"o\"\
    \ or vowel == \"u\" then\n         vowel_found = true;\n         return word:sub(1,vowel_positions[i][1]);\n\
    \      end\n   end\n   return \"\";\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp9tsngjnn.lua:27:\
    \ expected: \"u\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmp9tsngjnn.lua:27:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  if word == nil or #word == 0 then\n    return nil\n\
    \  end\n  local vowels = {\"a\", \"e\", \"i\", \"o\", \"u\"}\n  local vowels_count\
    \ = 0\n  for i = 1, #word do\n    if word[i] == word:sub(1,i) then\n      vowels_count\
    \ = vowels_count + 1\n    end\n  end\n  if vowels_count < 1 then\n    return word\n\
    \  end\n  if vowels_count > #vowels then\n    return word\n  end\n  local vowel_start\n\
    \  for i = 1, #word do\n    if word[i] == word:sub(1,i) then\n      if vowel_start\
    \ == nil then\n        vowel_start = i\n      end\n      if i > 1 then\n     \
    \   if word[i] == word:sub(i,i-1) then\n          break\n        end\n      end\n\
    \    end\n  end\n  local vowel_end\n  for i = #word, 1, -1 do\n    if word[i]\
    \ == word:sub(i,i) then\n      if vowel_end == nil then\n        vowel_end = i\n\
    \      end\n      if i < #word then\n        if word[i] == word:sub(i,i+1) then\n\
    \          break\n        end\n      end\n    end\n  end\n  if vowel_start ~=\
    \ nil and vowel_end ~= nil then\n    local vowel_found = false\n    local vowel_found_distance\
    \ = nil\n    local vowel_index\n    for i = 1, #word do\n      if word[i] == word:sub(vowel_start,\
    \ vowel_end) then\n        vowel_found = true\n        if vowel_found_distance\
    \ == nil then\n          vowel_found_distance = i - vowel_start\n        end\n\
    \        if vowel_found_distance < i then\n          vowel_index = i\n       \
    \ end\n      end\n    end\n    if vowel_found then\n      return word:sub(vowel_index,\
    \ vowel_index + 1)\n    end\n  end\n  return nil\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpiap7yw5j.lua:75:\
    \ expected: \"u\"\nactual: \"yogurt\"\nstack traceback:\n\t/tmp/tmpiap7yw5j.lua:75:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n\treturn \"\" -- Write your code here\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp1bvp20xd.lua:14:\
    \ expected: \"u\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmp1bvp20xd.lua:14:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  -- Your code here\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpgd_j_675.lua:14:\
    \ expected: \"u\"\nactual: nil\nstack traceback:\n\t/tmp/tmpgd_j_675.lua:14: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  -- Your code here\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpgd_j_675.lua:14:\
    \ expected: \"u\"\nactual: nil\nstack traceback:\n\t/tmp/tmpgd_j_675.lua:14: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {\"a\", \"e\", \"i\", \"o\", \"\
    u\"}\n    local index = nil\n    for i = #word, 1, -1 do\n        for j = #vowels,\
    \ 1, -1 do\n            if vowels[j] >= word[i] then\n                index =\
    \ i\n                break\n            end\n        end\n    end\n    if index\
    \ ~= nil then\n        word = string.sub(word, 1, index-1) .. string.sub(word,\
    \ index+1, #word)\n    end\n    return word\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmphvlzmp_d.lua:12:\
    \ attempt to compare nil with string\nstack traceback:\n\t/tmp/tmphvlzmp_d.lua:12:\
    \ in local 'candidate'\n\t/tmp/tmphvlzmp_d.lua:27: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {\"a\",\"e\",\"i\",\"o\",\"u\",\"\
    y\"}\n    local index = word:find(\"a\")\n    if index ~= nil then\n        index\
    \ = word:find(\"e\")\n        if index ~= nil then\n            index = word:find(\"\
    i\")\n            if index ~= nil then\n                index = word:find(\"o\"\
    )\n                if index ~= nil then\n                    index = word:find(\"\
    u\")\n                    if index ~= nil then\n                        index\
    \ = word:find(\"y\")\n                        if index ~= nil then\n         \
    \                   index = word:find(\"a\")\n                            index\
    \ = word:find(\"e\")\n                            index = word:find(\"i\")\n \
    \                           index = word:find(\"o\")\n                       \
    \     index = word:find(\"u\")\n                            index = word:find(\"\
    y\")\n                            if index ~= nil then\n                     \
    \           index = word:find(\"a\")\n                                index =\
    \ word:find(\"e\")\n                                index = word:find(\"i\")\n\
    \                                index = word:find(\"o\")\n                  \
    \              index = word:find(\"u\")\n                                index\
    \ = word:find(\"y\")\n                                if index ~= nil then\n \
    \                                   return word:sub(0, index)\n              \
    \                  end\n                            end\n                    \
    \    end\n                    end\n                end\n            end\n    \
    \    end\n    end\n    return \"\"\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp8whk664r.lua:50:\
    \ expected: \"u\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmp8whk664r.lua:50:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = { 'a','e','i','o','u' }\n    local\
    \ vowel_ends = {'y','a','e','o','i','y']\n    local vowel_beginnings = {'b','c','d','f','g','h','k','l','m','n','p','q','r','s','t','v','w','x','z'\
    \ }\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n\
    \    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp3g3nh320.lua:9: ''}'' expected near '']''

    '
  stdout: ''
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n   -- your code here\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb4r5ivlh.lua:14:\
    \ expected: \"u\"\nactual: nil\nstack traceback:\n\t/tmp/tmpb4r5ivlh.lua:14: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  -- your code here\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5235ci0e.lua:14:\
    \ expected: \"u\"\nactual: nil\nstack traceback:\n\t/tmp/tmp5235ci0e.lua:14: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    if word == nil or word == '' then return '' end\n\
    \    local vowels = { 'a', 'e', 'i', 'o', 'u' }\n    local vowelsCount = {}\n\
    \    for i = 1, #vowels do\n        vowelsCount[vowels[i]] = nil\n    end\n  \
    \  for i = #word, 2, -1 do\n        local letter = word[i]\n        if letter:lower()\
    \ ~= letter then\n            return ''\n        end\n        for j = #vowels,\
    \ 1, -1 do\n            if vowels[j]:lower():find(letter) ~= nil then\n      \
    \          local vowel = vowels[j]\n                if vowelsCount[vowel] == nil\
    \ then\n                    vowelsCount[vowel] = 0\n                end\n    \
    \            vowelsCount[vowel] = vowelsCount[vowel] + 1\n                if vowelsCount[vowel]\
    \ > 1 then\n                    return vowel\n                end\n          \
    \  end\n        end\n    end\n    return ''\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpf4p58c6l.lua:16:\
    \ attempt to index a nil value (local 'letter')\nstack traceback:\n\t/tmp/tmpf4p58c6l.lua:16:\
    \ in local 'candidate'\n\t/tmp/tmpf4p58c6l.lua:38: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  -- Your code here\n  -- return closest vowel string\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n\
    \    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp31ggybva.lua:15:\
    \ expected: \"u\"\nactual: nil\nstack traceback:\n\t/tmp/tmp31ggybva.lua:15: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    assert(type(\"word\") == string, \"Error. First\
    \ parameter is not string\")\n    assert(type(\"index\") == number, \"Error. Second\
    \ parameter is not number\")\n    local vowels = {'a','e','i','o','u'}\n    local\
    \ index = 0\n    if word == \"nil\" then return \"nil\" end\n    while true do\n\
    \        index = index + 1\n        if index > #word then break end\n        if\
    \ word:sub(1,index) ~= word:sub(index-1,index) then\n            if word:sub(index,index+1)\
    \ ~= word:sub(index,index+1) then\n                if word:sub((index-1),index+1)\
    \ ~= word:sub((index-1),index+1) then\n                    index = (index-1)\n\
    \                    end\n                end\n            end\n        end\n\
    \    end\n    if word:sub(index,index+1) ~= word:sub(index,index+1) then\n   \
    \     index = (index-1)\n        end\n    return word:sub(index+1,index+2)\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n\
    \    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpna2g0xsl.lua:29: <eof> expected near ''end''

    '
  stdout: ''
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    -- Your code here\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp18trz1yh.lua:14:\
    \ expected: \"u\"\nactual: nil\nstack traceback:\n\t/tmp/tmp18trz1yh.lua:14: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {\n        [\"a\"] = 1,\n      \
    \  [\"e\"] = 1,\n        [\"i\"] = 1,\n        [\"o\"] = 1,\n        [\"u\"] =\
    \ 1,\n        [\"A\"] = 1,\n        [\"E\"] = 1,\n        [\"I\"] = 1,\n     \
    \   [\"O\"] = 1,\n        [\"U\"] = 1,\n        [\"\xC5\"] = 1,\n        [\"\xC4\
    \"] = 1,\n        [\"\xD6\"] = 1,\n        [\"\xDC\"] = 1,\n        [\"\xDF\"\
    ] = 1,\n        [\"\xF6\"] = 1,\n        [\"\xFC\"] = 1,\n        [\"\xE5\"] =\
    \ 1,\n        [\"\xE4\"] = 1,\n        [\"\xF6\"] = 1,\n        [\"\xFC\"] = 1,\n\
    \    }\n    local index\n    for index = 1, #word - 1 do\n        local value\
    \ = word:sub(index + 2)\n        if vowels[value] ~= nil then\n            return\
    \ value\n        end\n    end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb6snc67u.lua:43:\
    \ expected: \"u\"\nactual: nil\nstack traceback:\n\t/tmp/tmpb6snc67u.lua:43: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  return ''\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp1d5lb0h8.lua:14:\
    \ expected: \"u\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmp1d5lb0h8.lua:14:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    if word == nil then\n        return nil\n    end\n\
    \    local vowels = {}\n    local consonants = string.gsub(word, \"[bcdfghjklmnpqrstvwxyz]+\"\
    , \"\")\n    local vowel_index = 1\n    for i = #consonants, 1, -1 do\n      \
    \  if string.sub(consonants, i, i) == \"a\" or string.sub(consonants, i, i) ==\
    \ \"e\" then\n            table.insert(vowels, i)\n        elseif string.sub(consonants,\
    \ i, i) == \"i\" then\n            vowels[vowel_index] = i\n        end\n    \
    \    vowel_index = vowel_index - 1\n    end\n    local vowel_start, vowel_end\n\
    \    for i=1, #vowels do\n        vowel_start = vowels[i-1]\n        vowel_end\
    \ = vowels[i]\n        if string.sub(word, vowel_end+1, vowel_end) == \".\" and\
    \ string.sub(word, vowel_end+1, vowel_end) == \".\" and string.sub(word, vowel_start-1,\
    \ vowel_end) == \".\" and string.sub(word, vowel_start-1, vowel_end) == \".\"\
    \ then\n            return string.sub(word, vowel_end+1, vowel_end)\n        end\n\
    \    end\n    return nil\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmptb0t0gcz.lua:36:\
    \ expected: \"u\"\nactual: nil\nstack traceback:\n\t/tmp/tmptb0t0gcz.lua:36: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = 'aeiouAEIOU'\n    local consonants\
    \ = 'bcdfghjklmnpqrstvwxyzBCDFGHJKLMNPQRSTVWXYZ'\n    local i = 1\n    local length\
    \ = #word\n    local vowel_index = 0\n    local consonant_index = 0\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpe5fvqjxe.lua:33: ''end'' expected (to close ''function'' at
    line 7) near <eof>

    '
  stdout: ''
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n   if word == nil or word == \"\" then\n      return\
    \ \"\"\n   end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp4y03xx_7.lua:30: ''end'' expected (to close ''function'' at
    line 7) near <eof>

    '
  stdout: ''
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n\tassert(type(word) == \"string\")\n\tlocal vowels\
    \ = {\"a\",\"e\",\"i\",\"o\",\"u\",\"A\",\"E\",\"I\",\"O\",\"U\"}\n\t\n\tfor i\
    \ = 1, #word do\n\t\tif word:sub(i,i) == vowels[#vowels] then\n\t\t\tassert(#vowels\
    \ >= 2)\n\t\t\tlocal start = i\n\t\t\tlocal end\n\t\t\tfor j = i+1, #word do\n\
    \t\t\t\tif word:sub(i,j) == vowels[#vowels] then\n\t\t\t\t\tassert(j > i+1)\n\t\
    \t\t\t\tend = j\n\t\t\t\t\tbreak\n\t\t\t\tend\n\t\t\tend\n\t\t\tif start ~= nil\
    \ and end ~= nil then\n\t\t\t\treturn word:sub(end+1, start)\n\t\t\tend\n\t\t\
    end\n\tend\n\treturn \"\"\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp1ngqv95q.lua:15: <name> expected near ''end''

    '
  stdout: ''
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    if word == nil then\n        return nil\n    end\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n\
    \    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp7mherx_e.lua:30: ''end'' expected (to close ''function'' at
    line 7) near <eof>

    '
  stdout: ''
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  -- your code goes here\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpinqvre4i.lua:14:\
    \ expected: \"u\"\nactual: nil\nstack traceback:\n\t/tmp/tmpinqvre4i.lua:14: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n   -- your code goes here\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpi2h82axt.lua:14:\
    \ expected: \"u\"\nactual: nil\nstack traceback:\n\t/tmp/tmpi2h82axt.lua:14: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n\treturn ''\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0h9qkwn3.lua:14:\
    \ expected: \"u\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmp0h9qkwn3.lua:14:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n   -- your code goes here\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpi2h82axt.lua:14:\
    \ expected: \"u\"\nactual: nil\nstack traceback:\n\t/tmp/tmpi2h82axt.lua:14: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n\t-- your code here\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp88myn4wo.lua:14:\
    \ expected: \"u\"\nactual: nil\nstack traceback:\n\t/tmp/tmp88myn4wo.lua:14: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n\t-- Return the closest vowel from the right\n\t--\
    \ side of the word.\n\t-- Example 1:\n\t-- Input: word = \"eating\"\n\t-- Output:\
    \ \"e\"\n\t-- Explanation: The closest vowel is \"e\" that stands between \"t\"\
    \ and \"i\".\n\t-- Example 2:\n\t-- Input: word = \"apple\"\n\t-- Output: \"\"\
    \n\t-- Explanation: There is no vowel met the above condition.\n\t-- Note:\n\t\
    -- The given word is a word containing English letters only.\n\t-- The length\
    \ of the word doesn't exceed 200.\n\t-- All words contains only lower case letters.\n\
    \t-- You may assume that the given word contains only lower case letters and spaces.\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n\
    \    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp0rfwyi96.lua:42: ''end'' expected (to close ''function'' at
    line 7) near <eof>

    '
  stdout: ''
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  return word:gsub(\"([bcdfghjklmnpqrstvwxyz])$\",\
    \ \n    function(x)\n      local w = x:lower()\n      return string.sub(w, 1,\
    \ 1)\n    end)\nend\nprint(get_closest_vowel(\"zomg\")) -- o\nprint(get_closest_vowel(\"\
    zomgs\")) -- o\nprint(get_closest_vowel(\"zomges\")) -- o\nprint(get_closest_vowel(\"\
    zomgfs\")) -- o\nprint(get_closest_vowel(\"zomgfe\")) -- o\nprint(get_closest_vowel(\"\
    zomgfes\")) -- o\nprint(get_closest_vowel(\"zomgfew\")) -- o\nprint(get_closest_vowel(\"\
    zomgfew\")) -- o\nprint(get_closest_vowel(\"zomgfews\")) -- o\nprint(get_closest_vowel(\"\
    zomgfewf\")) -- o\nprint(get_closest_vowel(\"zomgfewfew\")) -- o\nprint(get_closest_vowel(\"\
    zomgfewfews\")) -- o\nprint(get_closest_vowel(\"zomgfewfewf\")) -- o\nprint(get_closest_vowel(\"\
    zomgfewfewfew\")) -- o\nprint(get_closest_vowel(\"zomgfewfewfews\")) -- o\nprint(get_closest_vowel(\"\
    zomgfewfewfewf\")) -- o\nprint(get_closest_vowel(\"zomgfewfewfewfew\")) -- o\n\
    print(get_closest_vowel(\"zomgfewfewfews\")) -- o\nprint(get_closest_vowel(\"\
    zomgfewfewfewf\")) -- o\nprint(get_closest_vowel(\"zomgfewfewfewfew\")) -- o\n\
    print(get_closest_vowel(\"zomgfewfewfews\")) -- o\nprint(get_closest_vowel(\"\
    zomgfewfewfewf\")) -- o\nprint(get_closest_vowel(\"zomgfewfewfewfew\")) -- o\n\
    print(get_closest_vowel(\"zomgfewfewfews\")) -- o\nprint(get_closest_vowel(\"\
    zomgfewfewfewf\")) -- o\nprint(get_closest_vowel(\"zomgfewfewfewfew\")) -- o\n\
    print(get_closest_vowel(\"zomgfewfewfews\")) -- o\nprint(get_closest_vowel(\"\
    zomgfewfewfewf\")) -- o\nprint(get_closest_vowel(\"zomgfewfewfewfew\")) -- o\n\
    print(get_closest_vowel(\"zomgfewfewfews\")) -- o\nprint(get_closest_vowel\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n\
    \    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp1v7twt30.lua:45: '')'' expected (to close ''('' at line 44)
    near ''lu''

    '
  stdout: ''
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n\tassert(type(word) == 'string')\n\tassert(word ~=\
    \ '')\n\tlocal vowels = { 'a', 'e', 'i', 'o', 'u', 'y' }\n\tlocal vowels_count\
    \ = #vowels\n\tlocal last_consonant_idx = #word - 2 -- this will be used to store\
    \ the last consonant idx\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp35i5zx5j.lua:32: ''end'' expected (to close ''function'' at
    line 7) near <eof>

    '
  stdout: ''
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ length = #word\n    local vowel = ''\n    local mins = 1000000\n    local maxs\
    \ = -1000000\n    local i = 0\n    local j = 0\n    local z = 0\n    while i <\
    \ length and z < #vowels do\n        if word[i] == vowels[z] then\n          \
    \  if word[i] == word[j] then\n                if word[i] == 'a' or word[i] ==\
    \ 'e' or word[i] == 'i' or word[i] == 'o' or word[i] == 'u' then\n           \
    \         if word[i] == 'a' or word[i] == 'e' or word[i] == 'i' or word[i] ==\
    \ 'o' or word[i] == 'u' then\n                        mins = min(mins, i)\n  \
    \                      maxs = max(maxs, i)\n                        j = j + 1\n\
    \                        i = i + 1\n                    else\n               \
    \         mins = min(mins, i)\n                        maxs = max(maxs, i)\n \
    \                       j = j + 1\n                    end\n                end\n\
    \            end\n        end\n        z = z + 1\n    end\n    return word[mins]\
    \ and word[mins] or ''\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmphfz20vvv.lua:41:\
    \ expected: \"u\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmphfz20vvv.lua:41:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    --vowel_start is a boolean that checks if the start\
    \ of a vowel is found\n    --vowel_end is a boolean that checks if the end of\
    \ a vowel is found\n    --vowel_found is a boolean that checks if the vowel was\
    \ found\n    --vowel is the vowel that is closest to the given word\n    --vowel_index\
    \ is the index of the vowel closest to the given word\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmphkr41ci3.lua:32: ''end'' expected (to close ''function'' at
    line 7) near <eof>

    '
  stdout: ''
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n-- Your code here\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmprsjermcb.lua:14:\
    \ expected: \"u\"\nactual: nil\nstack traceback:\n\t/tmp/tmprsjermcb.lua:14: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  if word == nil then\n    return nil\n  end\n  local\
    \ vowels = {}\n  for i = 1, #word do\n    local ch = word:sub(i,i+1)\n    if ch\
    \ == \"a\" or ch == \"e\" or ch == \"i\" or ch == \"o\" or ch == \"u\" then\n\
    \      table.insert(vowels, ch)\n    end\n  end\n  table.sort(vowels, function(a,b)\
    \ return a:lower() < b:lower() end)\n  local closest_vowel = vowels[1]\n  return\
    \ closest_vowel\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'), 'u')\n\
    \    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpkef0xov5.lua:26:\
    \ expected: \"u\"\nactual: nil\nstack traceback:\n\t/tmp/tmpkef0xov5.lua:26: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n   -- your code here\n   return closest\nend\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n\
    \    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmppqtq0pym.lua:15:\
    \ expected: \"u\"\nactual: nil\nstack traceback:\n\t/tmp/tmppqtq0pym.lua:15: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6kwct7if.lua:13:\
    \ expected: \"u\"\nactual: nil\nstack traceback:\n\t/tmp/tmp6kwct7if.lua:13: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n\t-- write your code here\n\t-- return a string\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n\
    \    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpkiapm1ue.lua:15:\
    \ expected: \"u\"\nactual: nil\nstack traceback:\n\t/tmp/tmpkiapm1ue.lua:15: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    if word == nil then\n        return \"\"\n    end\n\
    \    local vowel = nil\n    for i = #word, 2, -1 do\n        local letter = word:sub(i,i)\n\
    \        local upperletter = letter:upper()\n        if upperletter == \"A\" or\
    \ upperletter == \"E\" or upperletter == \"I\" or upperletter == \"O\" or upperletter\
    \ == \"U\" then\n            return letter\n        end\n    end\n    return \"\
    \"\nend\nprint(get_closest_vowel(\"BANANA\"))\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "A\nF\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmplz2y0r_w.lua:28:\
    \ expected: \"\"\nactual: \"a\"\nstack traceback:\n\t/tmp/tmplz2y0r_w.lua:28:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\nend\n</cell>\n<text>\nThe function above is named get_closest_vowel.\
    \ Notice that we don't need to return anything from this function. Instead, we\
    \ can use it to find out closest vowel using vowels table. If you look at the\
    \ cell below, you can see that the function above is used as if it returns a value.\
    \ Note that this time, we must define a new local variable. Because, the vowels\
    \ table is defined in a scope outside of our function. We cannot access the vowels\
    \ table by calling get_closest_vowel.\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp58165nsu.lua:9: unexpected symbol near ''<''

    '
  stdout: ''
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    return \"\" --TODO\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpsny5bu_s.lua:14:\
    \ expected: \"u\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpsny5bu_s.lua:14:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    if word == nil then\n        return nil\n    end\n\
    \    -- Split each character of word\n    local vowels = \"aieou\"\n    local\
    \ letters = split(word, \"\")\n    local found = false\n    local i, j = #word,\
    \ 1\n    while true do\n        while i >= 0 and letters[i] == nil do\n      \
    \      i = i - 1\n        end\n        local index = i - 1\n        if index >=\
    \ 0 and letters[index] == nil then\n            i = i + 1\n        end\n     \
    \   local letter = letters[index]\n        local index = i - 1\n        if index\
    \ >= 0 and letters[index] == nil then\n            i = i + 1\n        end\n  \
    \      local next = letters[i]\n        if letter ~= nil and next ~= nil then\n\
    \            -- if letter is a vowel and next to a vowel then check both direction\n\
    \            found = found or (letter in vowels and next in vowels)\n        end\n\
    \        if i >= 0 then\n            i = i - 1\n        end\n        if i == 0\
    \ then\n            break\n        end\n    end\n    if found then\n        return\
    \ letter\n    end\n    return \"\"\nend\nprint(get_closest_vowel(\"dog\")) --\
    \ returns nil\nprint(get_closest_vowel(\"dogg\")) -- returns \"\"\nprint(get_closest_vowel(\"\
    e\")) -- returns \"e\"\nprint(get_closest_vowel(\"a\")) -- returns \"a\"\nprint(get_closest_vowel(\"\
    z\")) -- returns \"z\"\nprint(get_closest_vowel(\"za\")) -- returns \"\"\nprint(get_closest_vowel(\"\
    zee\")) -- returns \"e\"\nprint(get_closest_vowel(\"zzzzzz\")) -- returns \"zzz\"\
    \nprint(get_closest_vowel(\"zzzz\")) -- returns \"zzz\"\nprint(get_closest_vowel(\"\
    zzz\")) -- returns \"zzz\"\nprint(get_closest_vowel(\"zz\")) -- returns \"\"\n\
    print(get_closest_vowel(\"o\")) -- returns \"\"\nprint(get_closest_vowel(\"oi\"\
    )) -- returns \"\"\nprint(get_closest_vowel(\"oe\")) -- returns \"\"\nprint(get_closest_vowel(\"\
    oou\")) -- returns \"\"\nprint(get_closest_vowel(\"aoou\")) -- returns \"o\"\n\
    print(get_closest_vowel(\"ee\")) -- returns \"\"\nprint(get_closest_vowel(\"ei\"\
    )) -- returns \"\"\nprint(get_closest_vowel(\"eiuu\")) -- returns \"\"\nprint(get_closest_vowel(\"\
    eoouuu\")) -- returns \"o\"\nprint(get_closest_vowel(\"eoooouu\")) -- returns\
    \ \"o\"\nprint(get_closest_vowel(\"aouou\")\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpyysp5k7m.lua:32: '')'' expected near ''in''

    '
  stdout: ''
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  if word:len() < 3 then\n    return \"\"\n  elseif\
    \ word:sub(1, 3) == word:sub(1, 3):upper() then -- The first three letters are\
    \ capitals.\n    if word:sub(3, 4) == word:sub(3, 4):upper() then\n      return\
    \ word:sub(3, 3)\n    end\n  elseif word:sub(1, 4) == word:sub(1, 4):upper() then\
    \ -- The first four letters are capitals.\n    if word:sub(3, 5) == word:sub(3,\
    \ 5):upper() then\n      return word:sub(3, 4)\n    end\n  end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzzcwvhpo.lua:24:\
    \ expected: \"u\"\nactual: nil\nstack traceback:\n\t/tmp/tmpzzcwvhpo.lua:24: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n\t-- TODO: Write you code here\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpv2edozgk.lua:14:\
    \ expected: \"u\"\nactual: nil\nstack traceback:\n\t/tmp/tmpv2edozgk.lua:14: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    if word == nil then\n        return nil\n    end\n\
    \    local vowels = {\n        \"a\", \"e\", \"i\", \"o\", \"u\",\n    }\n   \
    \ local vowel_start = false\n    local vowel_end = false\n    local vowel_found\
    \ = false\n    local consonant_count = 1\n    local consonant_index = consonant_end\n\
    \    local consonant_start = consonant_end\n    while consonant_count > 0 do\n\
    \        if string.sub(word,consonant_index,consonant_end) == \"a\" then\n   \
    \         vowel_start = true\n            vowel_found = true\n        end\n  \
    \      if string.sub(word,consonant_index,consonant_end) == \"e\" then\n     \
    \       vowel_end = true\n            vowel_found = true\n        end\n      \
    \  if vowel_found == false then\n            consonant_start = consonant_index\n\
    \        end\n        consonant_index = consonant_index +1\n        consonant_count\
    \ = consonant_count + 1\n    end\n    if consonant_start > consonant_end then\n\
    \        return \"\"\n    elseif vowel_start == true then\n        return string.sub(word,consonant_end,consonant_index)\n\
    \    elseif vowel_end == true then\n        return string.sub(word,consonant_start,consonant_index)\n\
    \    else\n        return \"\"\n    end\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpjifuf8aw.lua:21:\
    \ bad argument #2 to 'sub' (number expected, got nil)\nstack traceback:\n\t/tmp/tmpjifuf8aw.lua:21:\
    \ in local 'candidate'\n\t/tmp/tmpjifuf8aw.lua:49: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  if word:find('[^aeiou]') then\n    return ''\n  end\n\
    \  local consonants = {}\n  for char in word:gmatch('%[bcdfghjklmnpqrstvwxyz]')\
    \ do\n    consonants[#consonants+1] = char\n  end\n  \n  local vowels = {}\n \
    \ for i=#consonants, 1, -1 do\n    if vowels[consonants[i]] then\n      vowels[consonants[i]]\
    \ = i\n    else\n      vowels[consonants[i]] = i-1\n    end\n  end\n  \n  local\
    \ distance = 9999999\n  local nearest_vowel = ''\n  for vowel, index in pairs(vowels)\
    \ do\n    local left = 0\n    local right = #word\n    local i\n    for i=#word,\
    \ 2, -1 do\n      local distance = index+1-i\n      if distance < 0 then\n   \
    \     distance = -distance\n      end\n      local left_distance = index-i\n \
    \     if left_distance < 0 then\n        left_distance = -left_distance\n    \
    \  end\n      if distance < left_distance then\n        left = i\n        right\
    \ = index\n      end\n    end\n    if nearest then\n      if nearest < index then\n\
    \        nearest_vowel = vowel\n      end\n    end\n  end\n  return nearest_vowel\n\
    end\nprint(get_closest_vowel('abcccddd'))\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "\nF\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp458ja639.lua:58:\
    \ expected: \"u\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmp458ja639.lua:58:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    if word == nil or word == \"\" then\n        return\
    \ \"\";\n    end\n    local vowels = { 'a', 'e', 'i', 'o', 'u', 'y' };\n    for\
    \ i = #word, 1, -1 do\n        local last_consonant = word[i];\n        for j\
    \ = #vowels, 1, -1 do\n            if last_consonant == vowels[j] then\n     \
    \           return word[i - 1];\n            end\n        end\n    end\n    return\
    \ \"\";\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpbamwbkr2.lua:26:\
    \ expected: \"u\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpbamwbkr2.lua:26:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    return \"\" --your implementation goes here\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n\
    \    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpvc6idmuh.lua:14:\
    \ expected: \"u\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpvc6idmuh.lua:14:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = \"aeiouAEIOU\"\n    local index\
    \ = 1\n    while true do\n        local idx = string.find(word, vowels, index,\
    \ true)\n        if idx == nil then\n            break\n        end\n        index\
    \ = idx + 1\n    end\n    \n    return word\nend\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpce7mlq2o.lua:24:\
    \ expected: \"u\"\nactual: \"yogurt\"\nstack traceback:\n\t/tmp/tmpce7mlq2o.lua:24:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    return \"hello\" --> \"\"\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp9ohodwky.lua:14:\
    \ expected: \"u\"\nactual: \"hello\"\nstack traceback:\n\t/tmp/tmp9ohodwky.lua:14:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    word = string.gsub(word, \"[a-z]\", \"\") -- Remove\
    \ all letters from word\n    local vowels_left = \"aeiou\"\n    local vowels_right\
    \ = \"AEIOU\"\n    local index\n    -- First character is always vowel\n    if\
    \ vowels_left == word:sub(1, 1) then\n        return word\n    end -- No vowel\
    \ on the left\n    -- First character is always vowel\n    if vowels_right ==\
    \ word:sub(1, 1) then\n        return word\n    end -- No vowel on the right\n\
    \    -- Find the index of the first vowel on the right\n    for index, letter\
    \ in pairs(word:sub(1, -1)) do\n        if vowels_right == letter then\n     \
    \       return word:sub(index + 2)\n        end\n    end\n    return \"\" -- No\
    \ vowel on the right found\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp6op3i24q.lua:21:\
    \ bad argument #1 to 'for iterator' (table expected, got string)\nstack traceback:\n\
    \t/tmp/tmp6op3i24q.lua:21: in local 'candidate'\n\t/tmp/tmp6op3i24q.lua:32: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    \nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmplh1b9_xg.lua:14:\
    \ expected: \"u\"\nactual: nil\nstack traceback:\n\t/tmp/tmplh1b9_xg.lua:14: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    \n    local vowels = 'aeiou'\n    local vowels_count\
    \ = #vowels\n    local vowel_index = #vowels\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpx0q59h64.lua:31: ''end'' expected (to close ''function'' at
    line 7) near <eof>

    '
  stdout: ''
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {\"a\", \"e\", \"i\", \"o\", \"\
    u\"}\n    local vowel_count = {}\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpsmlepmb4.lua:29: ''end'' expected (to close ''function'' at
    line 7) near <eof>

    '
  stdout: ''
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    -- your code goes here\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp55e15043.lua:14:\
    \ expected: \"u\"\nactual: nil\nstack traceback:\n\t/tmp/tmp55e15043.lua:14: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n-- your code here\nreturn end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp38qyezyd.lua:10: <eof> expected near ''end''

    '
  stdout: ''
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowel_left  = \"aeiou\"\n    local vowel_right\
    \ = \"AEIOU\"\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp3gvjfesr.lua:29: ''end'' expected (to close ''function'' at
    line 7) near <eof>

    '
  stdout: ''
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {\"a\", \"e\", \"i\", \"o\", \"\
    u\", \"y\"}\n    local vowel_left = false\n    local vowel_right = false\n   \
    \ local vowel_found = false\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpi3bsjhzi.lua:31: ''end'' expected (to close ''function'' at
    line 7) near <eof>

    '
  stdout: ''
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    for\
    \ i = #word, 1, -1 do\n        for j = #vowels, 1, -1 do\n            if word[i]\
    \ == vowels[j] then\n                return word[i]\n            end\n       \
    \ end\n    end\n    return \"\"\nend\nprint(get_closest_vowel(\"cake\")) --> a\n\
    print(get_closest_vowel(\"coke\")) --> e\nprint(get_closest_vowel(\"doke\")) -->\
    \ o\nprint(get_closest_vowel(\"kake\")) --> k\nprint(get_closest_vowel(\"kkee\"\
    )) --> k\nprint(get_closest_vowel(\"kkei\")) --> k\nprint(get_closest_vowel(\"\
    kki\")) --> k\nprint(get_closest_vowel(\"kk\")) --> k\nprint(get_closest_vowel(\"\
    eke\")) --> e\nprint(get_closest_vowel(\"ke\")) --> k\nprint(get_closest_vowel(\"\
    oke\")) --> o\nprint(get_closest_vowel(\"kee\")) --> k\nprint(get_closest_vowel(\"\
    kie\")) --> k\nprint(get_closest_vowel(\"ki\")) --> k\nprint(get_closest_vowel(\"\
    kii\")) --> k\nprint(get_closest_vowel(\"k\")) --> k\nprint(get_closest_vowel(\"\
    e\")) --> e\nprint(get_closest_vowel(\"ei\")) --> e\nprint(get_closest_vowel(\"\
    i\")) --> i\nprint(get_closest_vowel(\"o\")) --> o\nprint(get_closest_vowel(\"\
    oo\")) --> o\nprint(get_closest_vowel(\"ooo\")) --> o\nprint(get_closest_vowel(\"\
    u\")) --> u\nprint(get_closest_vowel(\"uu\")) --> u\nprint(get_closest_vowel(\"\
    uuu\")) --> u\nprint(get_closest_vowel(\"uuvu\")) --> u\nprint(get_closest_vowel(\"\
    uvu\")) --> u\nprint(get_closest_vowel(\"uuv\")) --> u\nprint(get_closest_vowel(\"\
    uuuuu\")) --> u\nprint(get_closest_vowel(\"x\")) --> x\nprint(get_closest_vowel(\"\
    xu\")) --> x\nprint(get_closest_vowel(\"xuu\")) --> x\nprint(get_closest_vowel(\"\
    xuuxu\")) --> x\nprint(get_closest_vowel(\"xxu\")) --> x\nprint(get_closest_vowel(\"\
    xuxxu\")) --> x\nprint(get_closest_vowel(\"xxxu\")) --> x\nprint(get_closest_vowel(\"\
    xuxxxu\")) --> x\nprint(get_closest_vowel(\"xxuxxxu\")) --> x\nprint(get_closest_\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n\
    \    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpnmtcn5f2.lua:57: '')'' expected (to close ''('' at line 56)
    near ''lu''

    '
  stdout: ''
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a','e','i','o','u','y'}\n    local\
    \ vowels_len = #vowels\n    local cons_len = #word - vowels_len + 2\n    local\
    \ cons_letters = {}\n    for i = 1, cons_len do\n        cons_letters[i] = word[i\
    \ + vowels_len + 1 .. word[i]:len() ]\n    end\n    local vowels_index = {}\n\
    \    for i = 1, vowels_len do\n        vowels_index[vowels[i]] = i\n    end\n\
    \    -- Find the vowel with the smallest distance\n    local min_dist_index\n\
    \    local min_dist = math.inf\n    for i = 1, cons_len do\n        local dist\
    \ = cons_letters[i] - cons_letters[i+vowels_len]\n        if dist < min_dist then\n\
    \            min_dist = dist\n            min_dist_index = i\n        end\n  \
    \  end\n    -- Return the vowel if found\n    if min_dist ~= math.inf then\n \
    \       return vowels[vowels_index[cons_letters[min_dist_index + vowels_len +\
    \ 1]]]\n    end\n    return ''\nend\nprint(get_closest_vowel(\"abracadabra\"))\
    \ --> a\nprint(get_closest_vowel(\"abracadaXabra\")) --> a\nprint(get_closest_vowel(\"\
    abracadaXabraX\")) --> a\nprint(get_closest_vowel(\"abracadaXabraY\")) --> \"\"\
    \nprint(get_closest_vowel(\"XabracadaXabraY\")) --> \"\"\nprint(get_closest_vowel(\"\
    XabracadaXabraYZ\")) --> \"\"\nprint(get_closest_vowel(\"abracadabraX\")) -->\
    \ \"\"\nprint(get_closest_vowel(\"abracadabraXy\")) --> \"\"\nprint(get_closest_vowel(\"\
    abracadabraY\")) --> \"\"\nprint(get_closest_vowel(\"abracadabraYZ\")) --> \"\"\
    \nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n\
    \    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: "lua: /tmp/tmp4gr5du9b.lua:13: attempt to index a nil value (field '?')\n\
    stack traceback:\n\t/tmp/tmp4gr5du9b.lua:13: in local 'get_closest_vowel'\n\t\
    /tmp/tmp4gr5du9b.lua:35: in main chunk\n\t[C]: in ?\n"
  stdout: ''
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    -- write your codes here\nend\nassert(get_closest_vowel(\"\
    apple\") == \"a\")\nassert(get_closest_vowel(\"aple\") == \"a\")\nassert(get_closest_vowel(\"\
    ablaze\") == \"l\")\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'), 'u')\n\
    \    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: "lua: /tmp/tmpibvodnoa.lua:10: assertion failed!\nstack traceback:\n\t[C]:\
    \ in function 'assert'\n\t/tmp/tmpibvodnoa.lua:10: in main chunk\n\t[C]: in ?\n"
  stdout: ''
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  -- your code here\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp5235ci0e.lua:14:\
    \ expected: \"u\"\nactual: nil\nstack traceback:\n\t/tmp/tmp5235ci0e.lua:14: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n   \n   -- return empty string if word is empty\n \
    \  if word == nil or #word == 0 then\n      return \"\"\n   end\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpoxqqp01i.lua:32: ''end'' expected (to close ''function'' at
    line 7) near <eof>

    '
  stdout: ''
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  -- Your code here\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpgd_j_675.lua:14:\
    \ expected: \"u\"\nactual: nil\nstack traceback:\n\t/tmp/tmpgd_j_675.lua:14: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  if string.len(word) <= 1 then\n      return \"\"\n\
    \  end\n  local vowel_candidates = {}\n  for i = #word, 2, -1 do\n      if string.sub(i,\
    \ #word-i) == string.sub(i, #word-i, \"[aeiouAEIOU]) then\n          vowel_candidates[#vowel_candidates+1]\
    \ = i\n      end\n  end\n  return vowel_candidates[#vowel_candidates]\nend\nlu\
    \ = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n\
    \    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp4jr8qngk.lua:13: unfinished string near ''"[aeiouAEIOU]) then''

    '
  stdout: ''
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  -- your code goes here\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpinqvre4i.lua:14:\
    \ expected: \"u\"\nactual: nil\nstack traceback:\n\t/tmp/tmpinqvre4i.lua:14: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823650
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    if #word == 0 then return '' end\n    if word[1]\
    \ == \"a\" or word[1] == \"e\" or word[1] == \"i\" or word[1] == \"o\" or word[1]\
    \ == \"u\" then\n        return word[1]\n    end\n    if word[#word] == word[1]\
    \ then return word[1] end\n    if word[#word] == word[#word-1] then return word[#word]\
    \ end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpgvkltqgn.lua:19:\
    \ expected: \"u\"\nactual: nil\nstack traceback:\n\t/tmp/tmpgvkltqgn.lua:19: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  local vowels = { 'a', 'e', 'i', 'o', 'u' }\n  \n\
    \  for i = 0, #word - 1 do\n    if word[i] == word[i + #word] then\n      if word[i]\
    \ == \"a\" or word[i] == \"e\" or word[i] == \"i\" or word[i] == \"o\" or word[i]\
    \ == \"u\" then\n        return word[i]\n      end\n    end\n  end\n  return \"\
    \"\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpo2u2xkdb.lua:23:\
    \ expected: \"u\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpo2u2xkdb.lua:23:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  -- Your code here\n  return \"\"\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpmc0a2mub.lua:15:\
    \ expected: \"u\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpmc0a2mub.lua:15:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    return ''\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzl7zx8kp.lua:14:\
    \ expected: \"u\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpzl7zx8kp.lua:14:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n   return word:gsub(\"(^|[^A-Za-z])([aeiou])([^A-Za-z]|$)\"\
    , function(_,x,y,z)\n      return x ~= nil and y ~= nil and z ~= nil and x ~=\
    \ y and x ~= z and y ~= z and z ~= nil and\n                  x:sub(1,2) ~= \"\
    aeiou\" and y:sub(1,2) ~= \"aeiou\" and\n                  z:sub(1,2) ~= \"aeiou\"\
    \ and x:sub(2,2) ~= \"aeiou\" and\n                  y:sub(2,2) ~= \"aeiou\" and\
    \ z:sub(2,2) ~= \"aeiou\" and\n                  x:sub(3,4) ~= \"aeiou\" and y:sub(3,4)\
    \ ~= \"aeiou\" and\n                  z:sub(3,4) ~= \"aeiou\" and x:sub(3,4) ~=\
    \ \"aeiou\" and\n                  y:sub(3,4) ~= \"aeiou\" and z:sub(3,4) ~= \"\
    aeiou\"\n   end)\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmppc7xyg81.lua:22:\
    \ expected: \"u\"\nactual: \"yogurt\"\nstack traceback:\n\t/tmp/tmppc7xyg81.lua:22:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = [\"a\",\"e\",\"i\",\"o\",\"u\"]\n\
    \    local vowels_count = 0\n    local result\n    for i = #word, -1 do\n    \
    \    if vowels[vowels_count] == word[i] then\n            vowels_count = vowels_count\
    \ + 1\n        end\n        if vowels_count > #vowels - 1 then\n            break\n\
    \        end\n    end\n    return word:sub(1,i-1)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp1kggplrh.lua:8: unexpected symbol near ''[''

    '
  stdout: ''
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    if word == nil then\n        return nil\n    end\n\
    \    local vowels = {\"a\", \"e\", \"i\", \"o\", \"u\", \"y\"}\n    local vowel_count\
    \ = {}\n    for i = #word, -1, -1 do\n        if vowels[i] == word[i] then\n \
    \           table.insert(vowel_count, i)\n        end\n    end\n    local closest_vowel_index\
    \ = nil\n    local min_distance = nil\n    for _, v in ipairs(vowels) do\n   \
    \     local distance_1 = abs(v - word[vowel_count[v] - 1])\n        local distance_2\
    \ = abs(v - word[vowel_count[v + 1] - 1])\n        if distance_1 < distance_2\
    \ then\n            closest_vowel_index = v\n            min_distance = distance_1\n\
    \        end\n    end\n    return word[closest_vowel_index]\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpv_93hdme.lua:21:\
    \ attempt to perform arithmetic on a nil value (field '?')\nstack traceback:\n\
    \t/tmp/tmpv_93hdme.lua:21: in local 'candidate'\n\t/tmp/tmpv_93hdme.lua:34: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    return nil;\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp9smmasoe.lua:14:\
    \ expected: \"u\"\nactual: nil\nstack traceback:\n\t/tmp/tmp9smmasoe.lua:14: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n   for _, c in pairs(word:gmatch(\"[^aeiou]\") .. word:gmatch(\"\
    [^AEIOU]\") .. word:gmatch(\"[^AEIOU]\") .. word:gmatch(\"[^aeiou]\") .. word:gmatch(\"\
    [^AEIOU]\") .. word:gmatch(\"[^aeiou]\"))\n      return word:sub(-word:len()-1,\"\
    %1\"):upper()\n   end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpbffe9583.lua:9: ''do'' expected near ''return''

    '
  stdout: ''
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {\"a\", \"e\", \"i\", \"o\", \"\
    u\", \"y\", \"A\", \"E\", \"I\", \"O\", \"U\", \"Y\"}\n    for i=1, #word do\n\
    \        if vowels:find(word:sub(i,i)) then\n            return word:sub(i,i)\n\
    \        end\n    end\n    return \"\"\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp9s1fsgts.lua:10:\
    \ attempt to call a nil value (method 'find')\nstack traceback:\n\t/tmp/tmp9s1fsgts.lua:10:\
    \ in local 'candidate'\n\t/tmp/tmp9s1fsgts.lua:20: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n\t-- write your code here\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpf5fy_4z8.lua:14:\
    \ expected: \"u\"\nactual: nil\nstack traceback:\n\t/tmp/tmpf5fy_4z8.lua:14: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    return -- Your code here\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpljlyjko0.lua:14:\
    \ expected: \"u\"\nactual: nil\nstack traceback:\n\t/tmp/tmpljlyjko0.lua:14: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n   -- code here\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpjzfcik7i.lua:14:\
    \ expected: \"u\"\nactual: nil\nstack traceback:\n\t/tmp/tmpjzfcik7i.lua:14: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n\t-- the input word\n\tlocal word\n\tword  = word.lower()\
    \ -- case sensitivity\n\t-- vowel check\n\tlocal vowels = 'aeiou'\n\tlocal vowel_index\n\
    \t\n\t-- looping vowel\n\tfor vowel_index=1, #vowels, 1 do\n\t\t-- get the vowel\n\
    \t\tlocal vowel_check = vowels[vowel_index]:lower()\n\t\t-- get the index\n\t\t\
    local vowel_index = word:find(vowel_check)\n\t\tif vowel_index > 0 then\n\t\t\t\
    -- get the index to the right of the vowel\n\t\t\tlocal index = vowel_index +\
    \ vowel_check:len() -- get the index to the right of the vowel\n\t\t\t-- return\
    \ the string\n\t\t\treturn word:sub(1, index) -- get the word\n\t\tend\n\tend\n\
    \t-- if the vowel doesn't exist return empty string\n\treturn ''\nend\nprint(get_closest_vowel(\"\
    awesome\"))\nprint(get_closest_vowel(\"Awesome\"))\nprint(get_closest_vowel(\"\
    Awesome!\")) -- empty string\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: "lua: /tmp/tmpr7c84_jx.lua:10: attempt to index a nil value (local 'word')\n\
    stack traceback:\n\t/tmp/tmpr7c84_jx.lua:10: in local 'get_closest_vowel'\n\t\
    /tmp/tmpr7c84_jx.lua:31: in main chunk\n\t[C]: in ?\n"
  stdout: ''
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n\tlocal vowels = { 'a', 'e', 'i', 'o', 'u' }\n\tfor\
    \ index, value in pairs(vowels) do\n\t\tif string.find(word:lower(), value) then\n\
    \t\t\t-- check if word has another vowel before vowel index\n\t\t\tif string.find(word,\
    \ vowels[index+1]) then\n\t\t\t\t-- return second vowel index\n\t\t\t\treturn\
    \ vowels[index+1]\n\t\t\tend\n\t\tend\n\tend\n\treturn ''\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmphvnd65bi.lua:12:\
    \ bad argument #2 to 'find' (string expected, got nil)\nstack traceback:\n\t/tmp/tmphvnd65bi.lua:12:\
    \ in local 'candidate'\n\t/tmp/tmphvnd65bi.lua:25: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a','e','i','o','u'}\n    for i=#word,1,-1\
    \ do\n        local v = word:sub(i,i)\n        if vowels[v:sub(1,1)] == 'a' then\
    \ return v\n            if vowels[v:sub(1,1)] == 'e' then return v\n         \
    \       if vowels[v:sub(1,1)] == 'i' then return v\n                    if vowels[v:sub(1,1)]\
    \ == 'o' then return v\n                        if vowels[v:sub(1,1)] == 'u' then\
    \ return v\n                            if vowels[v:sub(1,1)] == nil then return\
    \ v\n                                end\n                            end\n  \
    \                      end\n                    end\n                end\n   \
    \         end\n        end\n    end\n    return ''\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpw22bexiy.lua:12: ''end'' expected (to close ''if'' at line
    11) near ''if''

    '
  stdout: ''
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    -- Your code here\nend\nprint(get_closest_vowel(\"\
    code\")) --> e\nprint(get_closest_vowel(\"kiss\")) --> \nprint(get_closest_vowel(\"\
    dog\")) --> o\nprint(get_closest_vowel(\"abba\")) --> \nprint(get_closest_vowel(\"\
    zzzzz\")) --> \nprint(get_closest_vowel(\"cat\")) --> \nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "\n\n\n\n\n\nF\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpakio451_.lua:20:\
    \ expected: \"u\"\nactual: nil\nstack traceback:\n\t/tmp/tmpakio451_.lua:20: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels_pattern = \"[aeiouy]\"\n    -- get\
    \ the first consonant after the first vowel\n    local first_consonant_after_vowel\
    \ = string.sub(word, 1, string.find(word, vowels_pattern)-1)\n    -- get the first\
    \ consonant after the last vowel\n    local first_consonant_after_last_vowel =\
    \ string.sub(word, string.find(word, vowels_pattern)+1)\n    -- get the vowel\
    \ count from first consonant\n    local vowel_count_from_first_consonant = string.find(first_consonant_after_vowel,\
    \ vowels_pattern)\n    -- get the vowel count from last consonant\n    local vowel_count_from_last_consonant\
    \ = string.find(first_consonant_after_last_vowel, vowels_pattern)\n    -- get\
    \ the vowel count from word\n    local vowel_count_from_word = string.len(word)\n\
    \    -- return closest vowel\n    if (vowel_count_from_first_consonant ~= nil\
    \ and vowel_count_from_first_consonant > 0 and vowel_count_from_last_consonant\
    \ ~= nil and vowel_count_from_last_consonant > 0 and vowel_count_from_word ~=\
    \ nil and vowel_count_from_word > 0 and vowel_count_from_first_consonant > vowel_count_from_last_consonant)\
    \ then\n        -- find the closest vowel\n        if (vowel_count_from_last_consonant\
    \ - vowel_count_from_first_consonant) <= 2 then\n            return \"a\" -- return\
    \ the first vowel\n        else\n            return \"e\" -- return the second\
    \ vowel\n        end\n    else\n        return \"\" -- return an empty string\
    \ if no vowel found\n    end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp6hzefqlh.lua:35:\
    \ expected: \"u\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmp6hzefqlh.lua:35:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  -- Your code here\n  return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmplnkdffuo.lua:15:\
    \ expected: \"u\"\nactual: nil\nstack traceback:\n\t/tmp/tmplnkdffuo.lua:15: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n\tif word == nil then\n\t\treturn nil\n\tend\n\tlocal\
    \ vowels = { 'a', 'e', 'i', 'o', 'u' }\n\tlocal vowel_counter = {}\n\tfor i =\
    \ 1, #vowels do\n\t\tvowel_counter[vowels[i]] = 0\n\tend\n\tfor i = #word, 2,\
    \ -1 do\n\t\tfor i = 1, #vowels do\n\t\t\tif word:sub(i, i) == vowels[i] then\n\
    \t\t\t\tvowel_counter[vowels[i]]  = vowel_counter[vowels[i]] + 1\n\t\t\tend\n\t\
    \tend\n\tend\n\tfor i = #vowels, 1, -1 do\n\t\tif vowel_counter[vowels[i]] > 1\
    \ then\n\t\t\treturn vowels[i]\n\t\tend\n\tend\n\treturn ''\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpc9whqvhx.lua:34:\
    \ expected: \"u\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpc9whqvhx.lua:34:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n\t-- Write your code here\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpu2v_2ocu.lua:14:\
    \ expected: \"u\"\nactual: nil\nstack traceback:\n\t/tmp/tmpu2v_2ocu.lua:14: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n\tlocal vowels = {'a', 'e', 'i', 'o', 'u'}\n\tlocal\
    \ vowels_index = {}\n\tfor i,v in ipairs(vowels) do\n\t\ttable.insert(vowels_index,\
    \ v + string.len(word))\n\tend\n\tlocal results = {}\n\tlocal vowel_index = {}\n\
    \tfor i,v in ipairs(vowels) do\n\t\ttable.insert(vowel_index, v + string.len(word))\n\
    \tend\n\tfor i,v in ipairs(vowels) do\n\t\tresults[i] = 0\n\tend\n\tlocal current_vowel\
    \ = 1\n\tlocal current_index = 1\n\tlocal first_vowel_found = false\n\tlocal last_vowel_found\
    \ = false\n\tlocal i = #vowels - 1\n\tfor j,v in pairs(vowels_index) do\n\t\t\
    if i ~= j then\n\t\t\tlocal j_vowel = string.sub(word, j, j)\n\t\t\tif j_vowel\
    \ == v then\n\t\t\t\tresults[current_vowel] = current_index\n\t\t\t\tvowel_index[current_vowel]\
    \ = j\n\t\t\t\tlocal new_vowel_index = current_vowel\n\t\t\t\tcurrent_vowel =\
    \ current_vowel + 1\n\t\t\t\ti = i - 1\n\t\t\t\tfor k,v in pairs(vowels_index)\
    \ do\n\t\t\t\t\tif k ~= j then\n\t\t\t\t\t\tlocal k_vowel = string.sub(word, k,\
    \ k)\n\t\t\t\t\t\tif k_vowel == v then\n\t\t\t\t\t\t\tresults[new_vowel_index]\
    \ = current_index\n\t\t\t\t\t\t\tvowel_index[new_vowel_index] = k\n\t\t\t\t\t\t\
    \tnew_vowel_index = new_vowel_index + 1\n\t\t\t\t\t\tend\n\t\t\t\t\tend\n\t\t\t\
    \tend\n\t\t\t\tbreak\n\t\t\tend\n\t\tend\n\tend\n\tlocal result = \"\"\n\tfor\
    \ _,v in pairs(results) do\n\t\tif v > 1 then\n\t\t\tlocal current_index = results[v]\n\
    \t\t\tlocal current_vowel = vowel_index[v]\n\t\t\tlocal vowel_length = string.len(word)\
    \ - current_index\n\t\t\tif vowel_length >= 1 then\n\t\t\t\tlocal vowel_begin\
    \ = current_vowel - vowel_length + 1\n\t\t\t\tlocal vowel_end = current_vowel\
    \ + vowel_length - 1\n\t\t\t\tif vowel_begin >= 1 then\n\t\t\t\t\tlocal vowel_before_word\
    \ = string.sub(word, vowel_begin, current_vowel)\n\t\t\t\t\tif vowel_before_word\
    \ == v then\n\t\t\t\t\t\tresult = string.sub(word, current_vowel + 1, current_vowel)\n\
    \t\t\t\t\t\tif first_vowel_found == false then\n\t\t\t\t\t\t\tfirst_vowel_found\
    \ = true\n\t\t\t\t\t\tend\n\t\t\t\t\t\tif last_vowel_found == false then\n\t\t\
    \t\t\t\t\tlast_vowel_found = true\n\t\t\t\t\t\tend\n\t\t\t\t\tend\n\t\t\t\tend\n\
    \t\t\t\tif vowel_end < #vowels then\n\t\t\t\t\tlocal vowel_after_word = string.sub(word,\
    \ current_vowel + 1, current_vowel + vowel_length)\n\t\t\t\t\tif vowel_after_word\
    \ \nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n\
    \    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpughixqng.lua:73: ''then'' expected near ''lu''

    '
  stdout: ''
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {\"a\", \"e\", \"i\", \"o\", \"\
    u\", \"y\"}\n    if word:len() < 3 then return \"\"\n    end\n    local count\
    \ = 0\n    local index = word:len()-2\n    while index ~= -1 do\n        if word:sub(index,\
    \ index+1)~=nil then\n            count = count+1\n        end\n        index\
    \ = index-1\n    end\n    if count > 1 then\n        local vowel = word:sub(index,\
    \ index+1)\n        if vowel:sub(1, 1) == \"a\" or vowel:sub(1, 1) == \"e\" or\
    \ vowel:sub(1, 1) == \"i\" or vowel:sub(1, 1) == \"o\" or vowel:sub(1, 1) == \"\
    u\" then\n            return vowel\n        else\n            return \"\"\n  \
    \      end\n    end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpvw0pxqz3.lua:32:\
    \ expected: \"u\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpvw0pxqz3.lua:32:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  if word == nil or #word == 0 then\n    return nil\n\
    \  end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp7g24nieb.lua:30: ''end'' expected (to close ''function'' at
    line 7) near <eof>

    '
  stdout: ''
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    return \"\"\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp1m8jzevl.lua:14:\
    \ expected: \"u\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmp1m8jzevl.lua:14:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n\t-- your code here\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp88myn4wo.lua:14:\
    \ expected: \"u\"\nactual: nil\nstack traceback:\n\t/tmp/tmp88myn4wo.lua:14: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    -- Your code here\n    local vowels = \"\"\n  \
    \  local index = -1\n    for i = #word, 2, -1 do\n        if word:sub(i,i-1) ~=\
    \ \"aeiou\" then\n            index = i\n        end\n    end\n    if index ==\
    \ -1 then\n        return \"\"\n    end\n    return vowels\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp0cplayeh.lua:25:\
    \ expected: \"u\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmp0cplayeh.lua:25:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    return ''\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzl7zx8kp.lua:14:\
    \ expected: \"u\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpzl7zx8kp.lua:14:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n   \n   -- your code here\n   \nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp_ut0on2n.lua:16:\
    \ expected: \"u\"\nactual: nil\nstack traceback:\n\t/tmp/tmp_ut0on2n.lua:16: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    -- your code goes here\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp55e15043.lua:14:\
    \ expected: \"u\"\nactual: nil\nstack traceback:\n\t/tmp/tmp55e15043.lua:14: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    return \"\" --Your code here\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpkz1ma7j9.lua:14:\
    \ expected: \"u\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpkz1ma7j9.lua:14:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n   return \"\"\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpdf1wn93q.lua:14:\
    \ expected: \"u\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpdf1wn93q.lua:14:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {\"a\", \"e\", \"i\", \"o\", \"\
    u\"}\n    -- find the index with vowel in the middle\n    local i = #word/2\n\
    \    -- check if vowel in from the right\n    -- or in in the middle\n    -- or\
    \ in the beginning\n    local closest = \"\"\n    -- loop until we find the closest\
    \ vowel\n    while i ~= 1 do\n        -- check if the vowel is in the right side\
    \ or not\n        if word[i-1]:lower() in vowels then\n            closest = \"\
    \"\n            -- find the closest vowel to the right\n            i = i - 1\n\
    \        elseif word[i+1]:lower() in vowels then\n            closest = \"\"\n\
    \            i = i + 1\n        else\n            closest = word[i]\n        \
    \    i = i + 1\n        end\n    end\n    -- return the closest vowel\n    return\
    \ closest\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmp2jda5_sq.lua:18: ''then'' expected near ''in''

    '
  stdout: ''
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = { 'a', 'e', 'i', 'o', 'u', 'y' }\
    \ -- vowel letter in english\n    local consonants = { 'b', 'c', 'd', 'f', 'g',\
    \ 'h', 'j', 'k', 'l', 'm', 'n', 'p', 'q', 'r', 's', 't', 'v', 'w', 'x', 'z' }\
    \ -- consonant letter in english\n    local vowel_index = nil\n    local consonant_index\
    \ = nil\n    local closest_vowel = nil\n    \n    -- check starting letter\n \
    \   if word:len() > 1 and word:sub(1, 1):lower() == 'a' then\n        for i =\
    \ 1, #vowels do\n            if vowels[i] == word:sub(1, 1) then\n           \
    \     vowel_index = i\n                closest_vowel = vowels[i]\n           \
    \     break\n            end\n        end\n        -- check ending letter\n  \
    \      if word:len() > 1 and word:sub(word:len()-1, word:len()):lower() == 'z'\
    \ then\n            for i = #consonants, 1, -1 do\n                if consonants[i]\
    \ == word:sub(word:len()-1, word:len()) then\n                    consonant_index\
    \ = i\n                    closest_vowel = consonants[i]\n                   \
    \ break\n                end\n            end\n        end\n    end\n    -- check\
    \ letter that does not start or end with vowel\n    if vowel_index == nil then\n\
    \        for i = 1, #consonants do\n            if consonants[i] == word:sub(1,\
    \ 1) then\n                consonant_index = i\n                closest_vowel\
    \ = consonants[i]\n                break\n            end\n        end\n    end\n\
    \    -- check letter that does not start or end with vowel\n    if consonant_index\
    \ == nil then\n        for i = 1, #vowels do\n            if vowels[i] == word:sub(1,\
    \ 1) then\n                vowel_index = i\n                closest_vowel = vowels[i]\n\
    \                break\n            end\n        end\n    end\n    return closest_vowel\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n\
    \    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2aaalzl9.lua:60:\
    \ expected: \"u\"\nactual: \"y\"\nstack traceback:\n\t/tmp/tmp2aaalzl9.lua:60:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    if word ~= \"\" then return get_closest_vowel_helper(word)\
    \ end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpmi8fxxa1.lua:8:\
    \ attempt to call a nil value (global 'get_closest_vowel_helper')\nstack traceback:\n\
    \t/tmp/tmpmi8fxxa1.lua:8: in local 'candidate'\n\t/tmp/tmpmi8fxxa1.lua:14: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  -- your code here\n  return \nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmptcatrctf.lua:15:\
    \ expected: \"u\"\nactual: nil\nstack traceback:\n\t/tmp/tmptcatrctf.lua:15: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n   assert(type(word) == \"string\")\n   -- Write your\
    \ code here\n   return \"\"\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2vjsxn46.lua:16:\
    \ expected: \"u\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmp2vjsxn46.lua:16:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    return \"\"\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp1m8jzevl.lua:14:\
    \ expected: \"u\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmp1m8jzevl.lua:14:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    assert(type(word) == \"string\")\n    assert(word:match(\"\
    ^[a-z]+$\"))\n    assert(word:match(\"^[a-z]+[^a-z]$\"))\n    assert(word:match(\"\
    ^[a-z]+[^a-z][^a-z]$\"))\n    assert(word:match(\"^[a-z]+[^a-z][^a-z][^a-z]$\"\
    ))\n    \n    -- Write your code here\n    local function get_vowel(word)\n  \
    \      local vowels = {}\n        for i = 1, #word do\n            table.insert(vowels,\
    \ word[i])\n        end\n        return vowels\n    end\n    \n    local vowels\
    \ = get_vowel(word)\n    local vowel_found\n    local vowels_index = nil\n   \
    \ local vowels_length\n    local vowels_index_low\n    \n    for i = 1, #vowels\
    \ do\n        if vowels[i] ~= 'a' and vowels[i] ~= 'e' and vowels[i] ~= 'i'\n\
    \                and vowels[i] ~= 'o' and vowels[i] ~= 'u'\n                and\
    \ vowels[i] ~= 'y' then\n            if vowels_found == nil then\n           \
    \     vowels_index = i\n            end\n            if vowels_length ~= nil then\n\
    \                if vowels_index > vowels_index then\n                    vowels_index_low\
    \ = i - 1\n                end\n                if vowels_index < vowels_index_low\
    \ then\n                    vowels_index_low = i\n                end\n      \
    \          if vowels_index_low > vowels_index then\n                    vowels_index\
    \ = vowels_index_low\n                end\n            end\n            vowels_length\
    \ = i\n        end\n        vowels_found = true\n    end\n    if vowels_found\
    \ ~= nil then\n        return vowels[vowels_index]\n    else\n        return \"\
    \"\n    end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'), 'u')\n\
    \    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmprg_gihnl.lua:10:\
    \ assertion failed!\nstack traceback:\n\t/tmp/tmprg_gihnl.lua:10: in local 'candidate'\n\
    \t/tmp/tmprg_gihnl.lua:61: in function 'test_humaneval'\n\nRan 1 tests in 0.000\
    \ seconds, 0 successes, 1 error\n"
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n   assert(type(word) == string, \"The given word is\
    \ not a string\")\n   assert(word:len() > 0, \"The given word is empty\")\n  \
    \ assert(word:len() < 5, \"The given word is too long\")\n   assert(word:len()\
    \ == word:len():tostring(), \"The given word is not purely English\")\n   local\
    \ vowels = \"aeiouAEIOU\"\n   local vowelsLen = #vowels\n   for i = word:len()\
    \ - 1, 1, -1 do\n      if word:sub(i, i):find(vowels) >= 0 then\n         return\
    \ word:sub(i, i + 1)\n      end\n   end\n   return \"\"\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp_l08eojs.lua:8:\
    \ The given word is not a string\nstack traceback:\n\t/tmp/tmp_l08eojs.lua:8:\
    \ in local 'candidate'\n\t/tmp/tmp_l08eojs.lua:25: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n\t-- write your solution here\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpze9ja15h.lua:14:\
    \ expected: \"u\"\nactual: nil\nstack traceback:\n\t/tmp/tmpze9ja15h.lua:14: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u'}\n    local\
    \ consonant_strings = {'b', 'c', 'd', 'f', 'h', 'j', 'k', 'l', 'm', 'n', 'p',\
    \ 'q', 'r', 't', 'v', 'w', 'z'}\n    local vowel_strings = {'e', 'o', 'u'}\n \
    \   local letters = string.gsub(word, \"[^\"..string.char(#consonant_strings)\
    \ .. \"]\", \"\")\n    local vowel_index = letters ~= \"\" and #vowels or 0\n\
    \    local letter_length = len(letters)\n    if letter_length < 2 then\n     \
    \   return ''\n    end\n    local is_vowel = letters[vowel_index]\n    if is_vowel\
    \ then\n        local vowel_index = letters[vowel_index - 1]\n        if vowel_strings[vowel_index]\
    \ == \"e\" then\n            local vowel_index = letters[vowel_index + 1]\n  \
    \          if vowel_strings[vowel_index] == \"o\" then\n                local\
    \ vowel_index = letters[vowel_index + 2]\n                if vowel_strings[vowel_index]\
    \ == \"u\" then\n                    local letters = string.gsub(word, \"[^\"\
    ..string.char(#vowel_strings) .. \"]\", \"\")\n                    local vowel_index\
    \ = letters ~= \"\" and #vowels or 0\n                    if vowel_index ~= 0\
    \ then\n                        local vowel_index = letters[vowel_index - 1]\n\
    \                        return letters[vowel_index]\n                    end\n\
    \                end\n            end\n        end\n    end\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpg8begrww.lua:13:\
    \ attempt to call a nil value (global 'len')\nstack traceback:\n\t/tmp/tmpg8begrww.lua:13:\
    \ in local 'candidate'\n\t/tmp/tmpg8begrww.lua:40: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {'a', 'e', 'i', 'o', 'u', 'A', 'E',\
    \ 'I', 'O', 'U'}\n    local result = \"\"\n    local count = 1\n    for i = #word,\
    \ 1 do\n        if word[i] in vowels and word:sub(i,i) == word:sub((i+1),(i+1))\
    \ then\n            result = result .. word:sub(i,i)\n            count = count\
    \ + 1\n        end\n    end\n    if count > 2 then\n        result = result ..\
    \ word:sub((#word-1), #word)\n    end\n    return result\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpk43n8dda.lua:12: ''then'' expected near ''in''

    '
  stdout: ''
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    return \"\"\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp1m8jzevl.lua:14:\
    \ expected: \"u\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmp1m8jzevl.lua:14:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    return word:sub(1, word:len()-1)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp7heavqg1.lua:14:\
    \ expected: \"u\"\nactual: \"yogur\"\nstack traceback:\n\t/tmp/tmp7heavqg1.lua:14:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n   -- your code here\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpb4r5ivlh.lua:14:\
    \ expected: \"u\"\nactual: nil\nstack traceback:\n\t/tmp/tmpb4r5ivlh.lua:14: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n   -- your code goes here\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpi2h82axt.lua:14:\
    \ expected: \"u\"\nactual: nil\nstack traceback:\n\t/tmp/tmpi2h82axt.lua:14: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n\tlocal vowels = {\"a\", \"e\", \"i\", \"o\", \"u\"\
    , \"y\"}\n\tlocal consonants = {\"b\", \"c\", \"d\", \"f\", \"g\", \"h\", \"j\"\
    , \"k\", \"l\", \"m\", \"n\", \"p\", \"q\", \"r\", \"s\", \"t\", \"v\", \"w\"\
    , \"x\", \"z\"}\n\tlocal consonants_index = consonants:map(function(x)return x:byte();\
    \ end)\n\tlocal vowels_index = vowels:map(function(x)return x:byte(); end)\n\t\
    local consonant_idx = 1\n\tlocal vowel_idx = 1\n\tlocal idx = 1\n\tlocal vowel\
    \ = \"\"\n\tlocal consonant = \"\"\n\tlocal last_consonant = consonants[consonants_index:byte(idx)]\n\
    \twhile idx < word:len() do\n\t\tif word:byte(idx) == last_consonant then\n\t\t\
    \tconsonant_idx = idx\n\t\t\tidx = idx + 1\n\t\t\tlast_consonant = consonants[consonants_index:byte(idx)]\n\
    \t\t\tconsonant = consonants[consonants_index:byte(idx)]\n\t\telseif word:byte(idx)\
    \ == vowels_index:byte(vowel_idx) then\n\t\t\tvowel_idx = idx\n\t\t\tidx = idx\
    \ + 1\n\t\t\tvowel = vowels[vowels_index:byte(idx)]\n\t\tend\n\tend\n\t\n\tif\
    \ consonant_idx == nil then\n\t\treturn vowel\n\telseif vowel_idx == nil then\n\
    \t\treturn consonant\n\tend\n\t\n\tif consonant_idx > vowel_idx - 1 then\n\t\t\
    return get_closest_vowel(word:sub(consonant_idx - 1, word:len()))\n\tend\n\t\n\
    \tif vowel_idx > consonant_idx - 1 then\n\t\treturn get_closest_vowel(word:sub(word:len(),\
    \ vowel_idx - 1))\n\tend\n\t\n\tif vowel > consonant then\n\t\treturn vowel\n\t\
    else\n\t\treturn consonant\n\tend\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp9neunltj.lua:10:\
    \ attempt to call a nil value (method 'map')\nstack traceback:\n\t/tmp/tmp9neunltj.lua:10:\
    \ in local 'candidate'\n\t/tmp/tmp9neunltj.lua:55: in function 'test_humaneval'\n\
    \nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  if word == nil then\n    return nil\n  end\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n\
    \    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpi5f5_ikv.lua:30: ''end'' expected (to close ''function'' at
    line 7) near <eof>

    '
  stdout: ''
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    -- Your code goes here\n    if word == \"a\" or\
    \ word == \"e\" or word == \"i\" or word == \"o\" or word == \"u\" then\n    \
    \    return word\n    elseif word == \"ae\" then\n        return \"a\"\n    elseif\
    \ word == \"ei\" then\n        return \"e\"\n    elseif word == \"ai\" then\n\
    \        return \"a\"\n    elseif word == \"oe\" then\n        return \"o\"\n\
    \    elseif word == \"ou\" then\n        return \"o\"\n    else\n        return\
    \ \"\"\n    end\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal\
    \ candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'), 'u')\n\
    \    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmphy644lo2.lua:29:\
    \ expected: \"u\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmphy644lo2.lua:29:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n\tlocal vowel_start_pattern = \"[AEIOUaeiouy]\"\n\t\
    local vowel_end_pattern = \"[BEGIIb]\" \nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpr3r14_vq.lua:29: ''end'' expected (to close ''function'' at
    line 7) near <eof>

    '
  stdout: ''
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  -- Your code here\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpgd_j_675.lua:14:\
    \ expected: \"u\"\nactual: nil\nstack traceback:\n\t/tmp/tmpgd_j_675.lua:14: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    return string.format(\"%c\", word:sub(1,1))\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n\
    \    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmpiuga1yaf.lua:8:\
    \ bad argument #2 to 'format' (number expected, got string)\nstack traceback:\n\
    \t/tmp/tmpiuga1yaf.lua:8: in local 'candidate'\n\t/tmp/tmpiuga1yaf.lua:14: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  local vowel_left  = string.sub(word, 1, string.len(word)\
    \ - 2) -- left side of word\n  local vowel_right = string.sub(word, string.len(word)\
    \ - 1, string.len(word))  -- right side of word\n  local closest_vowel = \"\"\n\
    \  for i = string.len(word) - 2, -1, -1 do\n    local vowel = string.sub(word,\
    \ 1, i)\n    if vowel_left == vowel and vowel_right == vowel then\n      closest_vowel\
    \ = vowel\n      break\n    end\n  end\n  return closest_vowel\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpy0zw6jbb.lua:24:\
    \ expected: \"u\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpy0zw6jbb.lua:24:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = {\"a\", \"e\", \"i\", \"o\", \"\
    u\"}\n    local vowel_index = {}\n    for i = 1, #word do\n        if word:sub(i,\
    \ i) == word:sub(i+1, i) then\n            table.insert(vowel_index, i)\n    \
    \    end\n    end\n    for i = #vowels, 1, -1 do\n        if vowel_index[i] ==\
    \ #vowels then\n            return \"\"\n        end\n    end\n    return table.concat(vowel_index,\
    \ vowel_index[#vowels])\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpg70z_zuy.lua:26:\
    \ expected: \"u\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpg70z_zuy.lua:26:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n\tlocal vowels = {\"a\", \"e\", \"i\", \"o\", \"u\"\
    }\n\tfor i = #word, 2, -1 do\n\t\tfor i = 1, #vowels do\n\t\t\tif string.sub(word,\
    \ i, i + 1) ~= vowels[i] then\n\t\t\t\tbreak\n\t\t\tend\n\t\tend\n\t\tif i ==\
    \ #vowels then\n\t\t\treturn string.sub(word, i - 1, i)\n\t\tend\n\tend\n\treturn\
    \ \"\"\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpmnbzzx9w.lua:25:\
    \ expected: \"u\"\nactual: \"ur\"\nstack traceback:\n\t/tmp/tmpmnbzzx9w.lua:25:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n   -- write your code in PHP (pseudo-code) here\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n\
    \    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp7q5uf844.lua:14:\
    \ expected: \"u\"\nactual: nil\nstack traceback:\n\t/tmp/tmp7q5uf844.lua:14: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  -- code here\nend\nprint(get_closest_vowel(\"hello\"\
    ))\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n\
    \    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "\nF\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpq4aj3em2.lua:15:\
    \ expected: \"u\"\nactual: nil\nstack traceback:\n\t/tmp/tmpq4aj3em2.lua:15: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = \"aeiouAEIOU\"\n    if #word ==\
    \ 0 then return \"\" end\n    local vowel_index = 0\n    for i=#word, 1, -1 do\n\
    \        if vowel_index == 0 then -- found the first vowel, now loop from the\
    \ right side\n            vowel_index = #vowels\n        elseif word[i-1] == vowels[vowel_index]\
    \ then -- found a vowel from the right side\n            vowel_index = vowel_index\
    \ + 1\n        end\n    end\n    return word:sub(1,vowel_index-1)\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpt6lm4g8l.lua:24:\
    \ expected: \"u\"\nactual: \"yogurt\"\nstack traceback:\n\t/tmp/tmpt6lm4g8l.lua:24:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  return \"awo\" -- return empty string if you didn't\
    \ find any vowel met the above condition\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmprju82f4l.lua:14:\
    \ expected: \"u\"\nactual: \"awo\"\nstack traceback:\n\t/tmp/tmprju82f4l.lua:14:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = \"aeiouAEIOU\"\n    local vowel_index\
    \ = -1\n    local i = 1\n    while i < #word and vowels[i] ~= \"\" do\n      \
    \  if vowels[i] == word[i+1] then\n            vowel_index = i\n        end\n\
    \        i = i + 1\n    end\n    if vowel_index > -1 then\n        return word:sub(vowel_index+1,\
    \ #word)\n    end\n    return \"\"\nend\nassert(get_closest_vowel(\"apple\") ==\
    \ \"lleP\")\nassert(get_closest_vowel(\"Banana\") == \"naA\")\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: "lua: /tmp/tmpj89lhkeq.lua:22: assertion failed!\nstack traceback:\n\t[C]:\
    \ in function 'assert'\n\t/tmp/tmpj89lhkeq.lua:22: in main chunk\n\t[C]: in ?\n"
  stdout: ''
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    -- +++ You should not modify the code below this\
    \ line +++\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate\
    \ = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmprijzu0bj.lua:28: ''end'' expected (to close ''function'' at
    line 7) near <eof>

    '
  stdout: ''
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowel_found = false\n    local vowel_start\
    \ = nil\n    local vowel_end = nil\n    local vowel_mid = nil\n    local vowel_char\
    \ = nil\n    for i = #word, 2 do\n        local c = word[i]\n        if c == \"\
    a\" then\n            vowel_start = i\n            vowel_found = true\n      \
    \  end\n        if c == \"e\" then\n            vowel_end = i\n            vowel_found\
    \ = true\n        end\n        if c == \"i\" then\n            vowel_mid = i\n\
    \            vowel_found = true\n        end\n        if c == \"o\" then\n   \
    \         vowel_mid = i\n            vowel_found = true\n        end\n       \
    \ if c == \"u\" then\n            vowel_mid = i\n            vowel_found = true\n\
    \        end\n    end\n    if not vowel_found then\n        return \"\"\n    end\n\
    \    local vowel_length = vowel_end - vowel_start + 1\n    local vowel_char =\
    \ \"\"\n    if vowel_length == 1 then\n        if vowel_start <= vowel_mid then\n\
    \            vowel_char = word[vowel_start + 1]\n        end\n        if vowel_mid\
    \ <= vowel_end then\n            vowel_char = word[vowel_mid + 1]\n        end\n\
    \    else\n        if vowel_start < vowel_end then\n            local vowel_index\
    \ = nil\n            if vowel_start <= vowel_end then\n                for i =\
    \ vowel_start, vowel_end do\n                    local c = word[i]\n         \
    \           if c == \"a\" then\n                        vowel_index = i\n    \
    \                end\n                    if c == \"e\" then\n               \
    \         vowel_index = i\n                    end\n                    if c ==\
    \ \"i\" then\n                        vowel_index = i\n                    end\n\
    \                    if c == \"o\" then\n                        vowel_index =\
    \ i\n                    end\n                    if c == \"u\" then\n       \
    \                 vowel_index = i\n                    end\n                end\n\
    \            else\n                for i = vowel_start, vowel_end do\n       \
    \             local c = word[i]\n                    if c == \"a\" then\n    \
    \                    vowel_index = i\n                    end\n              \
    \      if c == \"e\" then\n                        vowel_index = i\n         \
    \           end\n                    if c == \"i\" then\n                    \
    \    vowel_index = i\n                    end\n                    if c == \"\
    o\" then\n                        vowel_index = i\n                    end\n \
    \                   if c == \"u\" then\n                        vowel_index =\
    \ i\n                    end\n                end\n            end\n         \
    \   vowel_char = word[vowel_index]\n        end\n    end\n    return vowel_char\n\
    end\nlu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n\
    \    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpbh98why3.lua:99:\
    \ expected: \"u\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpbh98why3.lua:99:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n\t-- Your code goes here\n\tlocal vowel_table = {\"\
    a\",\"e\",\"i\",\"o\",\"u\",\"A\",\"E\",\"I\",\"O\",\"U\"}\n\tlocal vowel = word\n\
    \tlocal vowel_index = 0\n\tlocal consonant_index = 1\n\tlocal consonant_count\
    \ = word:len()-1\n\t-- start loop from right side of the word\n\twhile consonant_count\
    \ > 0 do\n\t\tlocal consonant = word:sub(consonant_index, consonant_count)\n\t\
    \tconsonant_count = consonant_count - 1\n\t\tif vowel_table[vowel:lower()] ==\
    \ consonant.lower() then\n\t\t\tvowel_index = consonant_count\n\t\t\tconsonant_index\
    \ = consonant_count + 1\n\t\tend\n\tend\n\treturn vowel_table[word:sub(vowel_index,\
    \ vowel_index+1)]\nend\nlu = require('luaunit')\n\nfunction test_humaneval()\n\
    local candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "E\nTests with errors:\n------------------\n1) test_humaneval\n/tmp/tmp5ufnl6ty.lua:18:\
    \ bad argument #1 to 'lower' (string expected, got no value)\nstack traceback:\n\
    \t/tmp/tmp5ufnl6ty.lua:18: in local 'candidate'\n\t/tmp/tmp5ufnl6ty.lua:29: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 error\n"
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    return \nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp2g8nope3.lua:14:\
    \ expected: \"u\"\nactual: nil\nstack traceback:\n\t/tmp/tmp2g8nope3.lua:14: in\
    \ function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1 failure\n"
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = 'aeiouAEIOU'\n    -- Return an empty\
    \ string if we didn't find any vowels here.\n    if not word or not vowels then\n\
    \        return \"\"\n    end\n    \n    -- Find the last consonant (excluding\
    \ the first consonant).\n    -- Assume that the given word is all lowercase here.\n\
    \    local last_consonant_index = #word-1\n    \n    -- Iterate through all the\
    \ vowels in the given word.\n    for index, vowel in ipairs(vowels) do\n     \
    \   if string.sub(word, last_consonant_index, last_consonant_index+1) ~= vowel\
    \ then\n            last_consonant_index = index\n        end\n    end\n    \n\
    \    -- Find out the index of the first vowel met with the condition \n    --\
    \ that it's located between last_consonant_index and last_consonant_index + 2\n\
    \    -- from the right side of the word.\n    for index, vowel in ipairs(vowels)\
    \ do\n        if string.sub(word, last_consonant_index + 1, last_consonant_index\
    \ + 3) ~= vowel then\n            return vowel\n        end\n    end\n    \n \
    \   -- Couldn't find any vowel between the last consonant and last consonant +\
    \ 2\n    -- from the right side of the word. \n    return \"\"\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpzk5wlb11.lua:42:\
    \ expected: \"u\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmpzk5wlb11.lua:42:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    return \"\"\nend\nlu = require('luaunit')\n\nfunction\
    \ test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp1m8jzevl.lua:14:\
    \ expected: \"u\"\nactual: \"\"\nstack traceback:\n\t/tmp/tmp1m8jzevl.lua:14:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    local vowels = { 'a', 'e', 'i', 'o', 'u' }\n  \
    \  local consonants = 'bcdfghjklmnpqrstvwxyz'\n    local vowel_count = #vowels\n\
    \    local vowel_pos = 1\n    for consonant in consonants:gmatch(\"%c\"):reverse():gsub(\"\
    %c\",function(x)\n        if x == 'z' then\n            return x\n        elseif\
    \ x == 'c' then\n            return 'a'\n        end\n    end)\n    local consonant_pos\
    \ = #consonants\n    local consonant_limit = #consonants - 1\n    local vowel_limit\
    \ = #vowels - 1\n    \n    local vowel_dist = string.format('%d', consonant_pos\
    \ - vowel_pos)\n    local consonant_dist = string.format('%d', consonant_limit\
    \ - consonant_pos)\n    local vowel_dist_limit = string.format('%d', vowel_limit\
    \ - vowel_pos)\n    local vowel_dist = string.format('%d', vowel_dist - (vowel_dist\
    \ % vowel_dist_limit))\n    \n    local consonant_dist = consonant_dist - (consonant_dist\
    \ % consonant_limit)\n    \n    for i = 1, vowel_limit, 1 do\n        if vowel_dist\
    \ <= consonant_dist then\n            vowel_pos = i\n            vowel_dist =\
    \ string.format('%d', consonant_dist - string.format('%d', vowel_dist - string.format('%d',\
    \ vowel_pos)))\n            break\n        elseif consonant_dist <= vowel_dist\
    \ then\n            consonant_pos = i\n            consonant_dist = string.format('%d',\
    \ vowel_dist - string.format('%d', consonant_pos))\n            break\n      \
    \  else\n            vowel_pos = i\n            consonant_pos = i\n          \
    \  vowel_dist = string.format('%d', consonant_dist - string.format('%d', vowel_pos))\n\
    \            consonant_dist = string.format('%d', vowel_dist - string.format('%d',\
    \ consonant_pos))\n        end\n    end\n    \n    if consonant_dist <= vowel_dist\
    \ then\n        return string.gsub(consonants:sub(1,consonant_pos), function(x)\n\
    \            return vowels[(vowel_pos - consonant_pos):min(consonant_pos, vowel_pos)]\
    \ .. x\n        end)\n    elseif vowel_dist <= consonant_dist then\n        return\
    \ string.gsub(vowels:sub(1,vowel_pos), function(x)\n            return consonants[(vowel_pos\
    \ - consonant_pos):min(vowel_pos, consonant_pos)\nlu = require('luaunit')\n\n\
    function test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpcmxdjb0w.lua:19: ''do'' expected near ''local''

    '
  stdout: ''
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n    \n    -- Your code here\n    return word\nend\n\
    lu = require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n\
    \    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmp3mb7bq6h.lua:16:\
    \ expected: \"u\"\nactual: \"yogurt\"\nstack traceback:\n\t/tmp/tmp3mb7bq6h.lua:16:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n\t-- Your code here\n\treturn word\nend\nlu = require('luaunit')\n\
    \nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n    lu.assertEquals(candidate('yogurt'),\
    \ 'u')\n    lu.assertEquals(candidate('full'), 'u')\n    lu.assertEquals(candidate('easy'),\
    \ '')\n    lu.assertEquals(candidate('eAsy'), '')\n    lu.assertEquals(candidate('ali'),\
    \ '')\n    lu.assertEquals(candidate('bad'), 'a')\n    lu.assertEquals(candidate('most'),\
    \ 'o')\n    lu.assertEquals(candidate('ab'), '')\n    lu.assertEquals(candidate('ba'),\
    \ '')\n    lu.assertEquals(candidate('quick'), '')\n    lu.assertEquals(candidate('anime'),\
    \ 'i')\n    lu.assertEquals(candidate('Asia'), '')\n    lu.assertEquals(candidate('Above'),\
    \ 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: ''
  stdout: "F\nFailed tests:\n-------------\n1) test_humaneval\n/tmp/tmpd395hi22.lua:15:\
    \ expected: \"u\"\nactual: \"yogurt\"\nstack traceback:\n\t/tmp/tmpd395hi22.lua:15:\
    \ in function 'test_humaneval'\n\nRan 1 tests in 0.000 seconds, 0 successes, 1\
    \ failure\n"
  timestamp: 1659823755
- exit_code: 1
  program: "-- You are given a word. Your task is to find the closest vowel that stands\
    \ between \n-- two consonants from the right side of the word (case sensitive).\n\
    -- Vowels in the beginning and ending doesn't count. Return empty string if you\
    \ didn't\n-- find any vowel met the above condition. \n-- You may assume that\
    \ the given string contains English letter only.\n-- Example:\nlocal function\
    \ get_closest_vowel(word)\n  -- Your code here\n  local vowel = \"aeiouAEIOU\"\
    \n  local vowel_count = {}\n  for _, c in pairs(word) do\n      vowel_count[c]\
    \ = vowel_count[c] or 1\n  end\n  \n  local vowel_found = false\n  for _, v in\
    \ pairs(vowel) do\n    if vowel_count[v] > 0 then\n      vowel_found = true\n\
    \      break\n    end\n  end\n  \n  local word_len = #word\n  local last_consonants\
    \ = string.sub( word, 1, word_len )\n  local last_consonant_len = #last_consonants\n\
    \  local last_vowels = string.sub( word, 1, last_consonant_len )\n  local last_vowel_len\
    \ = #last_vowels\n  \n  if vowel_found and #last_vowels == 1 then\n    return\
    \ word\n  elseif not vowel_found and #last_consonants == 1 then\n    return word\n\
    \  else\n    local first_vowel = string.sub( word, 1, last_vowel_len )\n    local\
    \ first_vowel_len = #first_vowel\n    local first_consonant = string.sub( word,\
    \ last_vowel_len + 1, last_consonant_len )\n    local first_consonant_len = #first_consonant\n\
    \    \n    local vowel_distance = 1\n    while vowel_distance <= last_vowel_len\
    \ do\n      local next_vowel = string.sub( word, first_vowel_len + vowel_distance,\n\
    \      last_vowel_len + vowel_distance )\n      local next_vowel_len = #next_vowel\n\
    \      \n      if next_vowel == first_vowel then\n        local vowel_distance\
    \ = 1\n      elseif next_vowel ~= first_vowel then\n        local prev_vowel =\
    \ string.sub( word, first_vowel_len + 1,\n        first_vowel_len + vowel_distance\
    \ )\n        local prev_vowel_len = #prev_vowel\n        \n        if prev_vowel\
    \ == first_vowel then\n          -- If the next vowel doesn't match with the previous\
    \ \n          -- vowel, then\n          -- 1. Check if there are any consonants\
    \ between the\n          -- last vowel and the next consonant in the word. \n\
    \          -- If there are none in the word, then we\n          -- need to check\
    \ whether the previous vowel\n          -- and the next consonant are in the word.\
    \ \n          -- If not, we return an empty string. \n          -- 2. Check if\
    \ there are  vowels between the previous\n          -- consonant and the next\
    \ vowel in the word. \n          -- If there are none in the word, then we\n \
    \         -- need to check whether the previous consonant\n          --\nlu =\
    \ require('luaunit')\n\nfunction test_humaneval()\nlocal candidate = get_closest_vowel\n\
    \    lu.assertEquals(candidate('yogurt'), 'u')\n    lu.assertEquals(candidate('full'),\
    \ 'u')\n    lu.assertEquals(candidate('easy'), '')\n    lu.assertEquals(candidate('eAsy'),\
    \ '')\n    lu.assertEquals(candidate('ali'), '')\n    lu.assertEquals(candidate('bad'),\
    \ 'a')\n    lu.assertEquals(candidate('most'), 'o')\n    lu.assertEquals(candidate('ab'),\
    \ '')\n    lu.assertEquals(candidate('ba'), '')\n    lu.assertEquals(candidate('quick'),\
    \ '')\n    lu.assertEquals(candidate('anime'), 'i')\n    lu.assertEquals(candidate('Asia'),\
    \ '')\n    lu.assertEquals(candidate('Above'), 'o')\nend\n\nos.exit(lu.LuaUnit.run())"
  status: Exception
  stderr: 'lua: /tmp/tmpshjy0jmg.lua:85: ''end'' expected (to close ''if'' at line
    52) near <eof>

    '
  stdout: ''
  timestamp: 1659823755

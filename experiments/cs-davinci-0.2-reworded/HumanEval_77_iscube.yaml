name: HumanEval_77_iscube
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // Write a function that takes an integer a and returns true \n\
  \    // if this ingeger is a cube of some integer number.\n    // Note: you may\
  \ assume the input is always valid.\n    // Examples:\n    // >>> Iscube((1L))\n\
  \    // (true)\n    // >>> Iscube((2L))\n    // (false)\n    // >>> Iscube((-1L))\n\
  \    // (true)\n    // >>> Iscube((64L))\n    // (true)\n    // >>> Iscube((0L))\n\
  \    // (true)\n    // >>> Iscube((180L))\n    // (false)\n    public static bool\
  \ Iscube(long a) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(Iscube((1L))\
  \ == (true));\n    Debug.Assert(Iscube((2L)) == (false));\n    Debug.Assert(Iscube((-1L))\
  \ == (true));\n    Debug.Assert(Iscube((64L)) == (true));\n    Debug.Assert(Iscube((180L))\
  \ == (false));\n    Debug.Assert(Iscube((1000L)) == (true));\n    Debug.Assert(Iscube((0L))\
  \ == (true));\n    Debug.Assert(Iscube((1729L)) == (false));\n    }\n\n}\n"
completions: ["        // Your code here\n        return false;", "        // Your\
    \ code here\n        return false;", "        // your code here\n        return\
    \ false;", "        // Your code here\n        return false;", "        // >>>\
    \ Iscube((1L))\n        // (true)\n        if (a == 1) {\n            return true;\n\
    \        }\n        // >>> Iscube((2L))\n        // (false)\n        if (a ==\
    \ 2) {\n            return false;\n        }\n        // >>> Iscube((-1L))\n \
    \       // (true)\n        if (a == -1) {\n            return true;\n        }\n\
    \        // >>> Iscube((64L))\n        // (true)\n        if (a == 64) {\n   \
    \         return true;\n        }\n        // >>> Iscube((0L))\n        // (true)\n\
    \        if (a == 0) {\n            return true;\n        }\n        // >>> Iscube((180L))\n\
    \        // (false)\n        if (a == 180) {\n            return false;\n    \
    \    }\n        return false;", "        // Your code goes here.\n        return\
    \ false;", "        if (a < 0) {\n            a = -a;\n        }\n        if (a\
    \ == 0) {\n            return true;\n        }\n        long b = (long)Math.Pow(a,\
    \ 1.0 / 3);\n        return b * b * b == a;", '        return Math.Pow(Math.Round(Math.Pow(a,
    1.0 / 3.0)), 3) == a;', "        // Your code here\n        return false;", '        return
    Math.Pow(Math.Round(Math.Pow(a, 1.0 / 3.0)), 3) == a;', "        // Your code\
    \ here\n        return false;", "        // >>> Iscube((1L))\n        // (true)\n\
    \        // >>> Iscube((2L))\n        // (false)\n        // >>> Iscube((-1L))\n\
    \        // (true)\n        // >>> Iscube((64L))\n        // (true)\n        //\
    \ >>> Iscube((0L))\n        // (true)\n        // >>> Iscube((180L))\n       \
    \ // (false)\n        // >>> Iscube((-64L))\n        // (true)\n        // >>>\
    \ Iscube((-180L))\n        // (false)\n        // >>> Iscube((-2L))\n        //\
    \ (false)\n        // >>> Iscube((-3L))\n        // (false)\n        // >>> Iscube((-4L))\n\
    \        // (false)\n        // >>> Iscube((-5L))\n        // (false)\n      \
    \  // >>> Iscube((-6L))\n        // (false)\n        // >>> Iscube((-7L))\n  \
    \      // (false)\n        // >>> Iscube((-8L))\n        // (false)\n        //\
    \ >>> Iscube((-9L))\n        // (false)\n        // >>> Iscube((-10L))\n     \
    \   // (false)\n        // >>> Iscube((-11L))\n        // (false)\n        //\
    \ >>> Iscube((-12L))\n        // (false)\n        // >>> Iscube((-13L))\n    \
    \    // (false)\n        // >>> Iscube((-14L))\n        // (false)\n        //\
    \ >>> Iscube((-15L))\n        // (false)\n        // >>> Iscube((-16L))\n    \
    \    // (false)\n        // >>> Iscube((-17L))\n        // (false)\n        //\
    \ >>> Iscube((-18L))\n        // (false)\n        // >>> Iscube((-19L))\n    \
    \    // (false)\n        // >>> Iscube((-20L))\n        // (false)\n        //\
    \ >>> Iscube((-21L))\n        // (false)\n        // >>> Iscube((-22L))\n    \
    \    // (false)\n        // >>> Iscube((-23L))\n        // (false)\n        //\
    \ >>> Iscube((", "        // your code here\n        return false;", "       \
    \ // TODO: implement this function\n        return false;", "        // Your code\
    \ here\n        return false;", "        // Your code goes here.\n        return\
    \ false;", '        return (long)Math.Pow(Math.Round(Math.Pow(a, 1.0 / 3.0)),
    3) == a;', "        // Your code here\n        return false;", "        if (a\
    \ < 0) {\n            a = -a;\n        }\n        if (a == 0) {\n            return\
    \ true;\n        }\n        long i = 1;\n        while (i * i * i <= a) {\n  \
    \          if (i * i * i == a) {\n                return true;\n            }\n\
    \            i++;\n        }\n        return false;", "        // your code here\n\
    \        return false;"]
stop_tokens:
- "\n    }\n"

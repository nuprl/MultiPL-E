language: cs
name: HumanEval_12_longest
results:
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string max = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > max.Length)\
    \ {\n                max = s;\n            }\n        }\n        return max;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <97ea4b1a816c4ab5bf986cd527b53a5c>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <97ea4b1a816c4ab5bf986cd527b53a5c>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        string longest\
    \ = null;\n        foreach (string s in strings) {\n            if (longest ==\
    \ null || s.Length > longest.Length) {\n                longest = s;\n       \
    \     }\n        }\n        return longest;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Longest((new List<string>())).Equals(null));\n   \
    \ Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    y\", (string)\"z\"}))).Equals((\"x\")));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"yyy\", (string)\"zzzz\", (string)\"www\",\
    \ (string)\"kkkk\", (string)\"abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <37f1a375069546e786580db12a670db6>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <37f1a375069546e786580db12a670db6>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        string longest\
    \ = null;\n        foreach (string s in strings) {\n            if (longest ==\
    \ null || s.Length > longest.Length) {\n                longest = s;\n       \
    \     }\n        }\n        return longest;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Longest((new List<string>())).Equals(null));\n   \
    \ Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    y\", (string)\"z\"}))).Equals((\"x\")));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"yyy\", (string)\"zzzz\", (string)\"www\",\
    \ (string)\"kkkk\", (string)\"abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <37f1a375069546e786580db12a670db6>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <37f1a375069546e786580db12a670db6>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        // TODO:\
    \ Implement this function\n        if (strings.Count == 0) {\n            return\
    \ null;\n        }\n        string longest = strings[0];\n        foreach (string\
    \ s in strings) {\n            if (s.Length > longest.Length) {\n            \
    \    longest = s;\n            }\n        }\n        return longest;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(Longest((new List<string>())).Equals(null));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    y\", (string)\"z\"}))).Equals((\"x\")));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"yyy\", (string)\"zzzz\", (string)\"www\",\
    \ (string)\"kkkk\", (string)\"abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <19ed83b1ecd64a4b9dca09ab5cda1999>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <19ed83b1ecd64a4b9dca09ab5cda1999>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string result = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > result.Length)\
    \ {\n                result = s;\n            }\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <03dfbf5680eb4905ac49a3f951eebac4>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <03dfbf5680eb4905ac49a3f951eebac4>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        string longest\
    \ = null;\n        foreach (string s in strings) {\n            if (longest ==\
    \ null || s.Length > longest.Length) {\n                longest = s;\n       \
    \     }\n        }\n        return longest;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Longest((new List<string>())).Equals(null));\n   \
    \ Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    y\", (string)\"z\"}))).Equals((\"x\")));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"yyy\", (string)\"zzzz\", (string)\"www\",\
    \ (string)\"kkkk\", (string)\"abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <37f1a375069546e786580db12a670db6>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <37f1a375069546e786580db12a670db6>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        string longest\
    \ = null;\n        foreach (string s in strings) {\n            if (longest ==\
    \ null || s.Length > longest.Length) {\n                longest = s;\n       \
    \     }\n        }\n        return longest;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Longest((new List<string>())).Equals(null));\n   \
    \ Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    y\", (string)\"z\"}))).Equals((\"x\")));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"yyy\", (string)\"zzzz\", (string)\"www\",\
    \ (string)\"kkkk\", (string)\"abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <37f1a375069546e786580db12a670db6>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <37f1a375069546e786580db12a670db6>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        int max = 0;\n       \
    \ string maxString = null;\n        foreach (string s in strings) {\n        \
    \    if (s.Length > max) {\n                max = s.Length;\n                maxString\
    \ = s;\n            }\n        }\n        return maxString;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(Longest((new List<string>())).Equals(null));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    y\", (string)\"z\"}))).Equals((\"x\")));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"yyy\", (string)\"zzzz\", (string)\"www\",\
    \ (string)\"kkkk\", (string)\"abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <71af60cc3f96435e8b0d82b99874a2d9>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <71af60cc3f96435e8b0d82b99874a2d9>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string result = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > result.Length)\
    \ {\n                result = s;\n            }\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <03dfbf5680eb4905ac49a3f951eebac4>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <03dfbf5680eb4905ac49a3f951eebac4>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        for (int i = 1; i < strings.Count; i++) {\n            if (strings[i].Length\
    \ > longest.Length) {\n                longest = strings[i];\n            }\n\
    \        }\n        return longest;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Longest((new List<string>())).Equals(null));\n   \
    \ Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    y\", (string)\"z\"}))).Equals((\"x\")));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"yyy\", (string)\"zzzz\", (string)\"www\",\
    \ (string)\"kkkk\", (string)\"abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <0e3a5a7c90da4da4bc1632cc1ee54963>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <0e3a5a7c90da4da4bc1632cc1ee54963>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0)\n            return null;\n        string max = strings[0];\n        foreach\
    \ (string s in strings)\n            if (s.Length > max.Length)\n            \
    \    max = s;\n        return max;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Longest((new List<string>())).Equals(null));\n   \
    \ Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    y\", (string)\"z\"}))).Equals((\"x\")));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"yyy\", (string)\"zzzz\", (string)\"www\",\
    \ (string)\"kkkk\", (string)\"abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <05c0df9a712d4b8dbd3cd5eac1e422e1>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <05c0df9a712d4b8dbd3cd5eac1e422e1>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string result = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > result.Length)\
    \ {\n                result = s;\n            }\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <03dfbf5680eb4905ac49a3f951eebac4>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <03dfbf5680eb4905ac49a3f951eebac4>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        // TODO:\
    \ Implement me\n        return null;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Longest((new List<string>())).Equals(null));\n   \
    \ Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    y\", (string)\"z\"}))).Equals((\"x\")));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"yyy\", (string)\"zzzz\", (string)\"www\",\
    \ (string)\"kkkk\", (string)\"abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <f28d8d04d34343898da48739a01a74b7>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <f28d8d04d34343898da48739a01a74b7>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        var longest = strings[0];\n\
    \        foreach (var s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <0301d71948814ee093f1bef7bfe62063>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <0301d71948814ee093f1bef7bfe62063>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0)\n            return null;\n        string longest = strings[0];\n    \
    \    for (int i = 1; i < strings.Count; i++) {\n            if (strings[i].Length\
    \ > longest.Length)\n                longest = strings[i];\n        }\n      \
    \  return longest;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <46998193e63f4cefa66fc4e4f68cbffd>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <46998193e63f4cefa66fc4e4f68cbffd>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string result = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > result.Length)\
    \ {\n                result = s;\n            }\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <03dfbf5680eb4905ac49a3f951eebac4>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <03dfbf5680eb4905ac49a3f951eebac4>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0)\n            return null;\n        string longest = strings[0];\n    \
    \    foreach (string s in strings)\n            if (s.Length > longest.Length)\n\
    \                longest = s;\n        return longest;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Longest((new List<string>())).Equals(null));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    y\", (string)\"z\"}))).Equals((\"x\")));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"yyy\", (string)\"zzzz\", (string)\"www\",\
    \ (string)\"kkkk\", (string)\"abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <e3a4671c536240d5b0d43d0075a3a9b3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <e3a4671c536240d5b0d43d0075a3a9b3>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0)\n            return null;\n        string longest = strings[0];\n    \
    \    foreach (string s in strings)\n            if (s.Length > longest.Length)\n\
    \                longest = s;\n        return longest;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(Longest((new List<string>())).Equals(null));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    y\", (string)\"z\"}))).Equals((\"x\")));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"yyy\", (string)\"zzzz\", (string)\"www\",\
    \ (string)\"kkkk\", (string)\"abc\"}))).Equals((\"zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <e3a4671c536240d5b0d43d0075a3a9b3>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <e3a4671c536240d5b0d43d0075a3a9b3>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        int maxLength\
    \ = 0;\n        string maxString = null;\n        foreach (string s in strings)\
    \ {\n            if (s.Length > maxLength) {\n                maxLength = s.Length;\n\
    \                maxString = s;\n            }\n        }\n        return maxString;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <a92ce2f5f38e468aaa44761e23275491>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <a92ce2f5f38e468aaa44761e23275491>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Out of list of strings, return the longest one. Return\
    \ the first one in case of multiple\n    // strings of the same length. Return\
    \ null in case the input list is empty.\n    // >>> Longest((new List<string>()))\n\
    \    // null\n    // >>> Longest((new List<string>(new string[]{(string)\"a\"\
    , (string)\"b\", (string)\"c\"})))\n    // (\"a\")\n    // >>> Longest((new List<string>(new\
    \ string[]{(string)\"a\", (string)\"bb\", (string)\"ccc\"})))\n    // (\"ccc\"\
    )\n    public static string Longest(List<string> strings) {\n        if (strings.Count\
    \ == 0) {\n            return null;\n        }\n        string longest = strings[0];\n\
    \        foreach (string s in strings) {\n            if (s.Length > longest.Length)\
    \ {\n                longest = s;\n            }\n        }\n        return longest;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Longest((new\
    \ List<string>())).Equals(null));\n    Debug.Assert(Longest((new List<string>(new\
    \ string[]{(string)\"x\", (string)\"y\", (string)\"z\"}))).Equals((\"x\")));\n\
    \    Debug.Assert(Longest((new List<string>(new string[]{(string)\"x\", (string)\"\
    yyy\", (string)\"zzzz\", (string)\"www\", (string)\"kkkk\", (string)\"abc\"}))).Equals((\"\
    zzzz\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <7b35c4f581ab415fb6f424870e91d93e>:0\
    \ \n"
  stdout: ''
  timestamp: 1659803406

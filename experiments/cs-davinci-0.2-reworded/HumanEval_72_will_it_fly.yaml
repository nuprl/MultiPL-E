name: HumanEval_72_will_it_fly
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // Write a function that returns true if the object q will fly,\
  \ and false otherwise.\n    // The object q will fly if it's balanced (it is a palindromic\
  \ list) and the sum of its elements is less than or equal the maximum possible weight\
  \ w.\n    // Example:\n    // >>> WillItFly((new List<long>(new long[]{(long)1L,\
  \ (long)2L})), (5L))\n    // (false)\n    // # 1+2 is less than the maximum possible\
  \ weight, but it's unbalanced.\n    // >>> WillItFly((new List<long>(new long[]{(long)3L,\
  \ (long)2L, (long)3L})), (1L))\n    // (false)\n    // # it's balanced, but 3+2+3\
  \ is more than the maximum possible weight.\n    // >>> WillItFly((new List<long>(new\
  \ long[]{(long)3L, (long)2L, (long)3L})), (9L))\n    // (true)\n    // # 3+2+3 is\
  \ less than the maximum possible weight, and it's balanced.\n    // >>> WillItFly((new\
  \ List<long>(new long[]{(long)3L})), (5L))\n    // (true)\n    // # 3 is less than\
  \ the maximum possible weight, and it's balanced.\n    public static bool WillItFly(List<long>\
  \ q, long w) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(WillItFly((new\
  \ List<long>(new long[]{(long)3L, (long)2L, (long)3L})), (9L)) == (true));\n   \
  \ Debug.Assert(WillItFly((new List<long>(new long[]{(long)1L, (long)2L})), (5L))\
  \ == (false));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)3L})),\
  \ (5L)) == (true));\n    Debug.Assert(WillItFly((new List<long>(new long[]{(long)3L,\
  \ (long)2L, (long)3L})), (1L)) == (false));\n    Debug.Assert(WillItFly((new List<long>(new\
  \ long[]{(long)1L, (long)2L, (long)3L})), (6L)) == (false));\n    Debug.Assert(WillItFly((new\
  \ List<long>(new long[]{(long)5L})), (5L)) == (true));\n    }\n\n}\n"
completions: ["        // Your code here\n        return false;", "        // Your\
    \ code here\n        return false;", "        // Your code here\n        return\
    \ false;", '        return false;', "        // Your code here\n        return\
    \ false;", "        // Your code goes here.\n        return false;", "       \
    \ long sum = 0;\n        for (int i = 0; i < q.Count; i++) {\n            sum\
    \ += q[i];\n        }\n        if (sum > w) {\n            return false;\n   \
    \     }\n        for (int i = 0; i < q.Count / 2; i++) {\n            if (q[i]\
    \ != q[q.Count - 1 - i]) {\n                return false;\n            }\n   \
    \     }\n        return true;", "        // Your code here.\n        return false;",
  '        return q.Sum() <= w && q.SequenceEqual(q.Reverse());', "        // Your\
    \ code here!\n        return false;", '        return q.Sum() <= w && q.SequenceEqual(q.Reverse());',
  "        // Your code goes here.\n        return false;", "        // Your code\
    \ goes here.\n        return false;", "        // Your code goes here.\n     \
    \   return false;", "        // Your code goes here.\n        return false;",
  "        // Your code goes here.\n        return false;", "        // Your code\
    \ here\n        return false;", "        // Your code here.\n        return false;",
  "        // Your code here\n        return false;", "        // Your code here\n\
    \        return false;", "        long sum = 0;\n        for (int i = 0; i < q.Count;\
    \ i++) {\n            sum += q[i];\n        }\n        if (sum > w) {\n      \
    \      return false;\n        }\n        for (int i = 0; i < q.Count / 2; i++)\
    \ {\n            if (q[i] != q[q.Count - 1 - i]) {\n                return false;\n\
    \            }\n        }\n        return true;", "        // Your code goes here.\n\
    \        return false;", "        long sum = 0;\n        foreach (long i in q)\
    \ {\n            sum += i;\n        }\n        if (sum > w) {\n            return\
    \ false;\n        }\n        if (q.Count == 1) {\n            return true;\n \
    \       }\n        List<long> q2 = new List<long>(q);\n        q2.Reverse();\n\
    \        for (int i = 0; i < q.Count; i++) {\n            if (q[i] != q2[i]) {\n\
    \                return false;\n            }\n        }\n        return true;",
  '        return q.Sum() <= w && q.SequenceEqual(q.Reverse());', '        return
    q.Sum() <= w && q.SequenceEqual(q.Reverse());', "        long sum = 0;\n     \
    \   foreach (long i in q) {\n            sum += i;\n        }\n        if (sum\
    \ > w) {\n            return false;\n        }\n        int length = q.Count;\n\
    \        for (int i = 0; i < length / 2; i++) {\n            if (q[i] != q[length\
    \ - i - 1]) {\n                return false;\n            }\n        }\n     \
    \   return true;", "        // Your code goes here.\n        return false;", " \
    \       long sum = 0;\n        foreach (long i in q) {\n            sum += i;\n\
    \        }\n        if (sum > w) {\n            return false;\n        }\n   \
    \     for (int i = 0; i < q.Count / 2; i++) {\n            if (q[i] != q[q.Count\
    \ - 1 - i]) {\n                return false;\n            }\n        }\n     \
    \   return true;", "        // Your code here\n        return true;", "      \
    \  // Your code goes here.\n        return false;", "        // Your code goes\
    \ here.\n        return false;", "        // Your code goes here.\n        return\
    \ false;", "        // Your code goes here.\n        return true;", "        //\
    \ Your code goes here.\n        return false;", "        // Your code goes here.\n\
    \        return false;", "        long sum = 0;\n        for (int i = 0; i < q.Count;\
    \ i++) {\n            sum += q[i];\n        }\n        if (sum > w) {\n      \
    \      return false;\n        }\n        for (int i = 0; i < q.Count / 2; i++)\
    \ {\n            if (q[i] != q[q.Count - 1 - i]) {\n                return false;\n\
    \            }\n        }\n        return true;", "        // Your code here\n\
    \        return false;", "        // Your code here\n        return false;", " \
    \       int n = q.Count;\n        long sum = 0;\n        for (int i = 0; i < n;\
    \ i++) {\n            sum += q[i];\n        }\n        if (sum > w) {\n      \
    \      return false;\n        }\n        for (int i = 0; i < n / 2; i++) {\n \
    \           if (q[i] != q[n - i - 1]) {\n                return false;\n     \
    \       }\n        }\n        return true;", "        long sum = 0;\n        foreach\
    \ (long i in q) {\n            sum += i;\n        }\n        if (sum > w) {\n\
    \            return false;\n        }\n        int length = q.Count;\n       \
    \ for (int i = 0; i < length / 2; i++) {\n            if (q[i] != q[length - i\
    \ - 1]) {\n                return false;\n            }\n        }\n        return\
    \ true;", "        // Your code goes here.\n        return false;", "        //\
    \ Your code here\n        return false;", "        // Your code here\n       \
    \ return false;", "        // Your code goes here.\n        return false;", " \
    \       long sum = 0;\n        for (int i = 0; i < q.Count; i++) {\n         \
    \   sum += q[i];\n        }\n        if (sum > w) {\n            return false;\n\
    \        }\n        for (int i = 0; i < q.Count / 2; i++) {\n            if (q[i]\
    \ != q[q.Count - 1 - i]) {\n                return false;\n            }\n   \
    \     }\n        return true;", "        long sum = 0;\n        foreach (long\
    \ i in q) {\n            sum += i;\n        }\n        if (sum > w) {\n      \
    \      return false;\n        }\n        for (int i = 0; i < q.Count / 2; i++)\
    \ {\n            if (q[i] != q[q.Count - 1 - i]) {\n                return false;\n\
    \            }\n        }\n        return true;", "        long sum = 0;\n   \
    \     for (int i = 0; i < q.Count; i++) {\n            sum += q[i];\n        }\n\
    \        if (sum > w) {\n            return false;\n        }\n        for (int\
    \ i = 0; i < q.Count / 2; i++) {\n            if (q[i] != q[q.Count - 1 - i])\
    \ {\n                return false;\n            }\n        }\n        return true;",
  "        long sum = 0;\n        for (int i = 0; i < q.Count; i++) {\n          \
    \  sum += q[i];\n        }\n        if (sum > w) {\n            return false;\n\
    \        }\n        for (int i = 0; i < q.Count / 2; i++) {\n            if (q[i]\
    \ != q[q.Count - 1 - i]) {\n                return false;\n            }\n   \
    \     }\n        return true;", "        long sum = 0;\n        for (int i = 0;\
    \ i < q.Count; i++) {\n            sum += q[i];\n        }\n        if (sum >\
    \ w) {\n            return false;\n        }\n        for (int i = 0; i < q.Count\
    \ / 2; i++) {\n            if (q[i] != q[q.Count - 1 - i]) {\n               \
    \ return false;\n            }\n        }\n        return true;", "        //\
    \ Your code here.\n        return false;", "        long sum = 0;\n        for\
    \ (int i = 0; i < q.Count; i++) {\n            sum += q[i];\n        }\n     \
    \   if (sum > w) {\n            return false;\n        }\n        for (int i =\
    \ 0; i < q.Count / 2; i++) {\n            if (q[i] != q[q.Count - 1 - i]) {\n\
    \                return false;\n            }\n        }\n        return true;",
  "        // Your code goes here.\n        return false;", "        // Your code\
    \ goes here.\n        return false;", "        // Your code goes here.\n     \
    \   return false;", "        // Your code goes here.\n        return false;",
  "        // Your code here\n        return true;", "        // Your code here\n\
    \        return false;", "        long sum = 0;\n        for (int i = 0; i < q.Count;\
    \ i++) {\n            sum += q[i];\n        }\n        if (sum > w) {\n      \
    \      return false;\n        }\n        for (int i = 0; i < q.Count / 2; i++)\
    \ {\n            if (q[i] != q[q.Count - 1 - i]) {\n                return false;\n\
    \            }\n        }\n        return true;", "        // Your code here\n\
    \        return false;", "        long sum = 0;\n        foreach (long i in q)\
    \ {\n            sum += i;\n        }\n        if (sum > w) {\n            return\
    \ false;\n        }\n        for (int i = 0; i < q.Count / 2; i++) {\n       \
    \     if (q[i] != q[q.Count - 1 - i]) {\n                return false;\n     \
    \       }\n        }\n        return true;", "        // Your code here\n    \
    \    return false;", "        // Your code here\n        return false;", '        return
    q.Sum() <= w && q.SequenceEqual(q.Reverse());', "        long sum = 0;\n     \
    \   for (int i = 0; i < q.Count; i++) {\n            sum += q[i];\n        }\n\
    \        if (sum > w) {\n            return false;\n        }\n        for (int\
    \ i = 0; i < q.Count / 2; i++) {\n            if (q[i] != q[q.Count - 1 - i])\
    \ {\n                return false;\n            }\n        }\n        return true;",
  "        // Your code here\n        return false;", "        // Your code goes here.\n\
    \        return false;", "        // Your code here\n        return false;", '        return
    q.Sum() <= w && q.SequenceEqual(q.Reverse());', "        // Your code goes here.\n\
    \        return false;", "        if (q.Count == 0) return false;\n        if\
    \ (q.Count == 1) return true;\n        if (q.Count == 2) return false;\n     \
    \   if (q.Count == 3) return true;\n        if (q.Count == 4) return false;\n\
    \        if (q.Count == 5) return true;\n        if (q.Count == 6) return false;\n\
    \        if (q.Count == 7) return true;\n        if (q.Count == 8) return false;\n\
    \        if (q.Count == 9) return true;\n        if (q.Count == 10) return false;\n\
    \        if (q.Count == 11) return true;\n        if (q.Count == 12) return false;\n\
    \        if (q.Count == 13) return true;\n        if (q.Count == 14) return false;\n\
    \        if (q.Count == 15) return true;\n        if (q.Count == 16) return false;\n\
    \        if (q.Count == 17) return true;\n        if (q.Count == 18) return false;\n\
    \        if (q.Count == 19) return true;\n        if (q.Count == 20) return false;\n\
    \        if (q.Count == 21) return true;\n        if (q.Count == 22) return false;\n\
    \        if (q.Count == 23) return true;\n        if (q.Count == 24) return false;\n\
    \        if (q.Count == 25) return true;\n        if (q.Count == 26) return false;\n\
    \        if (q.Count == 27) return true;\n        if (q.Count == 28) return false;\n\
    \        if (q.Count == 29) return true;\n        if (q.Count == 30) return false;\n\
    \        if (q.Count == 31) return true;\n        if (q.Count == 32) return false;\n\
    \        if (q.Count == 33) return true;\n        if (q.Count == 34) return false;\n\
    \        if (q.Count == 35) return true;\n        if (q.Count == 36) return false;\n\
    \        if (q.Count == 37) return true;\n        if (q.Count == 38) return false;\n\
    \        if (q", "        // Your code here!\n        return false;", "      \
    \  // Your code here\n        return false;", '        return q.Sum() <= w &&
    q.SequenceEqual(q.Reverse());', "        // Your code here\n        return false;",
  "        // Your code here.\n        return false;", "        // Your code here.\n\
    \        return true;", "        // Write your code here\n        // To print\
    \ results to the standard output you can use Console.WriteLine()\n        // Example:\n\
    \        // Console.WriteLine(\"Hello world!\");\n        long sum = 0;\n    \
    \    for (int i = 0; i < q.Count; i++) {\n            sum += q[i];\n        }\n\
    \        if (sum > w) {\n            return false;\n        }\n        for (int\
    \ i = 0; i < q.Count / 2; i++) {\n            if (q[i] != q[q.Count - 1 - i])\
    \ {\n                return false;\n            }\n        }\n        return true;",
  "        long sum = 0;\n        for (int i = 0; i < q.Count; i++) {\n          \
    \  sum += q[i];\n        }\n        if (sum > w) {\n            return false;\n\
    \        }\n        for (int i = 0; i < q.Count / 2; i++) {\n            if (q[i]\
    \ != q[q.Count - 1 - i]) {\n                return false;\n            }\n   \
    \     }\n        return true;", "        // Your code goes here.\n        return\
    \ false;", "        // Your code here.\n        return false;", "        // Your\
    \ code goes here.\n        // You can add additional functions if needed.\n  \
    \      // Good luck!\n        long sum = 0;\n        for (int i = 0; i < q.Count;\
    \ i++) {\n            sum += q[i];\n        }\n        if (sum > w) {\n      \
    \      return false;\n        }\n        for (int i = 0; i < q.Count / 2; i++)\
    \ {\n            if (q[i] != q[q.Count - 1 - i]) {\n                return false;\n\
    \            }\n        }\n        return true;", '        return q.Sum() <= w
    && q.SequenceEqual(q.Reverse());', "        // Your code here!\n        return\
    \ false;", "        // Your code goes here.\n        return false;", "       \
    \ // Your code goes here.\n        return false;", "        long sum = 0;\n  \
    \      for (int i = 0; i < q.Count; i++) {\n            sum += q[i];\n       \
    \ }\n        if (sum > w) {\n            return false;\n        }\n        for\
    \ (int i = 0; i < q.Count / 2; i++) {\n            if (q[i] != q[q.Count - 1 -\
    \ i]) {\n                return false;\n            }\n        }\n        return\
    \ true;", "        // Your code goes here.\n        return false;", "        //\
    \ Your code here.\n        return false;", "        long sum = 0;\n        for\
    \ (int i = 0; i < q.Count; i++) {\n            sum += q[i];\n        }\n     \
    \   if (sum > w) {\n            return false;\n        }\n        for (int i =\
    \ 0; i < q.Count / 2; i++) {\n            if (q[i] != q[q.Count - 1 - i]) {\n\
    \                return false;\n            }\n        }\n        return true;",
  "        // Your code goes here.\n        return false;", "        // Your code\
    \ goes here.\n        return false;", '        return false;', "        // Your\
    \ code goes here.\n        return false;", '        return q.Sum() <= w && q.SequenceEqual(q.Reverse());',
  '        return q.Sum() <= w && q.SequenceEqual(q.Reverse());', "        // Your\
    \ code goes here.\n        return false;", "        // Your code goes here.\n\
    \        return false;", "        // Your code goes here.\n        return false;",
  "        // Your code goes here.\n        return false;", "        long sum = 0;\n\
    \        foreach (long l in q) {\n            sum += l;\n        }\n        if\
    \ (sum > w) {\n            return false;\n        }\n        for (int i = 0; i\
    \ < q.Count / 2; i++) {\n            if (q[i] != q[q.Count - 1 - i]) {\n     \
    \           return false;\n            }\n        }\n        return true;", " \
    \       // Your code goes here.\n        return false;", "        // Your code\
    \ here\n        return false;", "        // Your code here.\n        return false;",
  "        // Your code goes here.\n        return false;", '        return q.Sum()
    <= w && q.SequenceEqual(q.Reverse());', "        // Your code goes here.\n   \
    \     return false;", '        return q.Sum() <= w && q.SequenceEqual(q.Reverse());',
  "        // Your code here\n        return false;", "        long sum = 0;\n   \
    \     for (int i = 0; i < q.Count; i++) {\n            sum += q[i];\n        }\n\
    \        if (sum > w) {\n            return false;\n        }\n        for (int\
    \ i = 0; i < q.Count / 2; i++) {\n            if (q[i] != q[q.Count - 1 - i])\
    \ {\n                return false;\n            }\n        }\n        return true;",
  "        long sum = 0;\n        for (int i = 0; i < q.Count; i++) {\n          \
    \  sum += q[i];\n        }\n        if (sum > w) {\n            return false;\n\
    \        }\n        for (int i = 0; i < q.Count / 2; i++) {\n            if (q[i]\
    \ != q[q.Count - 1 - i]) {\n                return false;\n            }\n   \
    \     }\n        return true;", "        long sum = 0;\n        foreach (long\
    \ i in q) {\n            sum += i;\n        }\n        if (sum > w) {\n      \
    \      return false;\n        }\n        int len = q.Count;\n        for (int\
    \ i = 0; i < len / 2; i++) {\n            if (q[i] != q[len - i - 1]) {\n    \
    \            return false;\n            }\n        }\n        return true;", " \
    \       // Your code here\n        return false;", "        long sum = 0;\n  \
    \      foreach (long i in q) {\n            sum += i;\n        }\n        if (sum\
    \ > w) {\n            return false;\n        }\n        for (int i = 0; i < q.Count\
    \ / 2; i++) {\n            if (q[i] != q[q.Count - 1 - i]) {\n               \
    \ return false;\n            }\n        }\n        return true;", "        //\
    \ Your code here.\n        return false;", "        long sum = 0;\n        for\
    \ (int i = 0; i < q.Count; i++) {\n            sum += q[i];\n        }\n     \
    \   if (sum > w) {\n            return false;\n        }\n        for (int i =\
    \ 0; i < q.Count / 2; i++) {\n            if (q[i] != q[q.Count - 1 - i]) {\n\
    \                return false;\n            }\n        }\n        return true;",
  "        // Your code here.\n        return false;", "        // Your code goes\
    \ here.\n        return false;", "        // Your code goes here.\n        return\
    \ false;", "        long sum = 0;\n        for (int i = 0; i < q.Count; i++) {\n\
    \            sum += q[i];\n        }\n        if (sum > w) {\n            return\
    \ false;\n        }\n        for (int i = 0; i < q.Count / 2; i++) {\n       \
    \     if (q[i] != q[q.Count - 1 - i]) {\n                return false;\n     \
    \       }\n        }\n        return true;", "        long sum = 0;\n        for\
    \ (int i = 0; i < q.Count; i++) {\n            sum += q[i];\n        }\n     \
    \   if (sum > w) {\n            return false;\n        }\n        for (int i =\
    \ 0; i < q.Count / 2; i++) {\n            if (q[i] != q[q.Count - 1 - i]) {\n\
    \                return false;\n            }\n        }\n        return true;",
  "        long sum = 0;\n        for (int i = 0; i < q.Count; i++) {\n          \
    \  sum += q[i];\n        }\n        if (sum > w) {\n            return false;\n\
    \        }\n        for (int i = 0; i < q.Count / 2; i++) {\n            if (q[i]\
    \ != q[q.Count - 1 - i]) {\n                return false;\n            }\n   \
    \     }\n        return true;", "        long sum = 0;\n        for (int i = 0;\
    \ i < q.Count; i++) {\n            sum += q[i];\n        }\n        if (sum >\
    \ w) {\n            return false;\n        }\n        for (int i = 0; i < q.Count\
    \ / 2; i++) {\n            if (q[i] != q[q.Count - 1 - i]) {\n               \
    \ return false;\n            }\n        }\n        return true;", "        //\
    \ Your code here.\n        return false;", "        // Your code here\n      \
    \  return false;", "        // Your code goes here.\n        return false;", " \
    \       // Your code goes here.\n        return false;", "        // Your code\
    \ here\n        return false;", "        // Your code here\n        return false;",
  "        long sum = 0;\n        foreach (long i in q) {\n            sum += i;\n\
    \        }\n        if (sum > w) {\n            return false;\n        }\n   \
    \     if (q.Count == 1) {\n            return true;\n        }\n        for (int\
    \ i = 0; i < q.Count / 2; i++) {\n            if (q[i] != q[q.Count - 1 - i])\
    \ {\n                return false;\n            }\n        }\n        return true;",
  "        // Your code here\n        return false;", "        // Your code goes here.\n\
    \        return false;", "        if (q.Count == 0) return false;\n        if\
    \ (q.Count == 1) return true;\n        long sum = 0;\n        foreach (long i\
    \ in q) {\n            sum += i;\n        }\n        if (sum > w) return false;\n\
    \        int left = 0;\n        int right = q.Count - 1;\n        while (left\
    \ < right) {\n            if (q[left] != q[right]) return false;\n           \
    \ left++;\n            right--;\n        }\n        return true;", '        return
    false;', "        // Your code here\n        return false;", "        // Your\
    \ code here\n        return false;", "        // Your code here.\n        return\
    \ false;", "        // Your code here.\n        return false;", "        // Your\
    \ code goes here.\n        return false;", "        // Your code goes here.\n\
    \        return false;", "        // Your code here.\n        return false;",
  '        return q.Sum() <= w && q.SequenceEqual(q.Reverse());', "        // Your\
    \ code goes here.\n        return false;", '        return q.Sum() <= w && q.SequenceEqual(q.Reverse());',
  "        // Your code here\n        return false;", "        long sum = 0;\n   \
    \     for (int i = 0; i < q.Count; i++) {\n            sum += q[i];\n        }\n\
    \        if (sum > w) {\n            return false;\n        }\n        for (int\
    \ i = 0; i < q.Count / 2; i++) {\n            if (q[i] != q[q.Count - 1 - i])\
    \ {\n                return false;\n            }\n        }\n        return true;",
  "        // Your code goes here.\n        return false;", "        long sum = 0;\n\
    \        foreach (long i in q) {\n            sum += i;\n        }\n        if\
    \ (sum > w) {\n            return false;\n        }\n        int i1 = 0;\n   \
    \     int i2 = q.Count - 1;\n        while (i1 < i2) {\n            if (q[i1]\
    \ != q[i2]) {\n                return false;\n            }\n            i1++;\n\
    \            i2--;\n        }\n        return true;", "        // Your code goes\
    \ here.\n        return false;", "        // Your code here.\n        return false;",
  "        // Your code goes here.\n        return false;", "        // Your code\
    \ here.\n        return false;", "        // Your code goes here.\n        return\
    \ false;", "        long sum = 0;\n        for (int i = 0; i < q.Count; i++) {\n\
    \            sum += q[i];\n        }\n        if (sum > w) {\n            return\
    \ false;\n        }\n        for (int i = 0; i < q.Count / 2; i++) {\n       \
    \     if (q[i] != q[q.Count - 1 - i]) {\n                return false;\n     \
    \       }\n        }\n        return true;", "        long sum = 0;\n        foreach\
    \ (long i in q) {\n            sum += i;\n        }\n        if (sum > w) {\n\
    \            return false;\n        }\n        int len = q.Count;\n        for\
    \ (int i = 0; i < len / 2; i++) {\n            if (q[i] != q[len - i - 1]) {\n\
    \                return false;\n            }\n        }\n        return true;",
  "        // Your code goes here.\n        return false;", "        // Your code\
    \ goes here.\n        return false;", "        // Your code goes here.\n     \
    \   return false;", '        return q.Sum() <= w && q.SequenceEqual(q.Reverse());',
  "        // Your code goes here.\n        return false;", "        // Your code\
    \ here\n        return false;", "        long sum = 0;\n        for (int i = 0;\
    \ i < q.Count; i++) {\n            sum += q[i];\n        }\n        if (sum >\
    \ w) {\n            return false;\n        }\n        for (int i = 0; i < q.Count\
    \ / 2; i++) {\n            if (q[i] != q[q.Count - 1 - i]) {\n               \
    \ return false;\n            }\n        }\n        return true;", "        //\
    \ Your code goes here.\n        return false;", "        // Write your code here\n\
    \        return false;", "        // Your code here\n        return false;", '        return
    q.Sum() <= w && q.SequenceEqual(q.Reverse());', "        // Your code here.\n\
    \        return false;", '        return q.Sum() <= w && q.SequenceEqual(q.Reverse());',
  "        // Your code here\n        return false;", '        return q.Sum() <= w
    && q.SequenceEqual(q.Reverse());', "        long sum = 0;\n        foreach (long\
    \ i in q) {\n            sum += i;\n        }\n        if (sum > w) {\n      \
    \      return false;\n        }\n        for (int i = 0; i < q.Count / 2; i++)\
    \ {\n            if (q[i] != q[q.Count - 1 - i]) {\n                return false;\n\
    \            }\n        }\n        return true;", "        long sum = 0;\n   \
    \     for (int i = 0; i < q.Count; i++) {\n            sum += q[i];\n        }\n\
    \        if (sum > w) {\n            return false;\n        }\n        for (int\
    \ i = 0; i < q.Count / 2; i++) {\n            if (q[i] != q[q.Count - 1 - i])\
    \ {\n                return false;\n            }\n        }\n        return true;",
  "        long sum = 0;\n        foreach (long i in q) {\n            sum += i;\n\
    \        }\n        if (sum > w) {\n            return false;\n        }\n   \
    \     int i1 = 0;\n        int i2 = q.Count - 1;\n        while (i1 < i2) {\n\
    \            if (q[i1] != q[i2]) {\n                return false;\n          \
    \  }\n            i1++;\n            i2--;\n        }\n        return true;",
  "        // Your code here\n        return false;", "        if (q.Count == 0) return\
    \ false;\n        if (q.Count == 1) return true;\n        long sum = 0;\n    \
    \    foreach (long i in q) {\n            sum += i;\n        }\n        if (sum\
    \ > w) return false;\n        int i1 = 0;\n        int i2 = q.Count - 1;\n   \
    \     while (i1 < i2) {\n            if (q[i1] != q[i2]) return false;\n     \
    \       i1++;\n            i2--;\n        }\n        return true;", '        return
    q.Sum() <= w && q.SequenceEqual(q.Reverse());', "        long sum = 0;\n     \
    \   for (int i = 0; i < q.Count; i++) {\n            sum += q[i];\n        }\n\
    \        if (sum > w) {\n            return false;\n        }\n        for (int\
    \ i = 0; i < q.Count / 2; i++) {\n            if (q[i] != q[q.Count - 1 - i])\
    \ {\n                return false;\n            }\n        }\n        return true;",
  "        // Your code goes here.\n        return false;", "        // Your code\
    \ goes here.\n        return false;", "        // your code here\n        return\
    \ false;", "        long sum = 0;\n        for (int i = 0; i < q.Count; i++) {\n\
    \            sum += q[i];\n        }\n        if (sum > w) {\n            return\
    \ false;\n        }\n        for (int i = 0; i < q.Count / 2; i++) {\n       \
    \     if (q[i] != q[q.Count - 1 - i]) {\n                return false;\n     \
    \       }\n        }\n        return true;", "        long sum = 0;\n        foreach\
    \ (long i in q) {\n            sum += i;\n        }\n        if (sum > w) {\n\
    \            return false;\n        }\n        for (int i = 0; i < q.Count / 2;\
    \ i++) {\n            if (q[i] != q[q.Count - 1 - i]) {\n                return\
    \ false;\n            }\n        }\n        return true;", "        // Your code\
    \ here\n        return false;", "        long sum = 0;\n        foreach (long\
    \ i in q) {\n            sum += i;\n        }\n        if (sum > w) {\n      \
    \      return false;\n        }\n        int i1 = 0;\n        int i2 = q.Count\
    \ - 1;\n        while (i1 < i2) {\n            if (q[i1] != q[i2]) {\n       \
    \         return false;\n            }\n            i1++;\n            i2--;\n\
    \        }\n        return true;", '        return q.Sum() <= w && q.SequenceEqual(q.Reverse());',
  "        long sum = 0;\n        foreach (long i in q) {\n            sum += i;\n\
    \        }\n        if (sum > w) {\n            return false;\n        }\n   \
    \     for (int i = 0; i < q.Count / 2; i++) {\n            if (q[i] != q[q.Count\
    \ - 1 - i]) {\n                return false;\n            }\n        }\n     \
    \   return true;", "        // Your code goes here.\n        return false;", " \
    \       long sum = 0;\n        for (int i = 0; i < q.Count; i++) {\n         \
    \   sum += q[i];\n        }\n        if (sum > w) {\n            return false;\n\
    \        }\n        for (int i = 0; i < q.Count / 2; i++) {\n            if (q[i]\
    \ != q[q.Count - 1 - i]) {\n                return false;\n            }\n   \
    \     }\n        return true;", "        // Your code here.\n        return false;"]
stop_tokens:
- "\n    }\n"

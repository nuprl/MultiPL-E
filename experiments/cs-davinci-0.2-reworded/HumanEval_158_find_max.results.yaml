language: cs
name: HumanEval_158_find_max
results:
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        // Your code goes here.\n    \
    \    return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"\
    }))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7a0acf79d31d47de8e863f905ab512ee>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7a0acf79d31d47de8e863f905ab512ee>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        string max = words[0];\n     \
    \   int max_len = words[0].Length;\n        for (int i = 1; i < words.Count; i++)\
    \ {\n            if (words[i].Length > max_len) {\n                max = words[i];\n\
    \                max_len = words[i].Length;\n            }\n        }\n      \
    \  return max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"\
    }))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7c7b56aa30d24922b8e5b938a849e5f5>:0 \n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        string max = \"\";\n        int\
    \ maxUnique = 0;\n        foreach (string word in words) {\n            int unique\
    \ = 0;\n            foreach (char c in word) {\n                if (word.IndexOf(c)\
    \ == word.LastIndexOf(c)) {\n                    unique++;\n                }\n\
    \            }\n            if (unique > maxUnique) {\n                maxUnique\
    \ = unique;\n                max = word;\n            }\n        }\n        return\
    \ max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"\
    }))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2f607931a6134d2bb81952a204d87811>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2f607931a6134d2bb81952a204d87811>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        string max = \"\";\n        int\
    \ max_unique = 0;\n        foreach (string word in words) {\n            int unique\
    \ = 0;\n            foreach (char c in word) {\n                if (word.IndexOf(c)\
    \ == word.LastIndexOf(c)) {\n                    unique++;\n                }\n\
    \            }\n            if (unique > max_unique) {\n                max =\
    \ word;\n                max_unique = unique;\n            }\n        }\n    \
    \    return max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"\
    }))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <aa913bb1f10545aa9ded914297530fea>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <aa913bb1f10545aa9ded914297530fea>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        // Your code here\n        return\
    \ \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"\
    }))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5858beddf3a74782abd74cdab8211e69>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5858beddf3a74782abd74cdab8211e69>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        // TODO: Implement this function.\n\
    \        return \"\";\n    }\n    public static void Main(string[] args) {\n \
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"\
    }))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    aaaaaaa\", (string)\"bb\", (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\"\
    )));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\"\
    , (string)\"this\", (string)\"game\", (string)\"of\", (string)\"footbott\"}))).Equals((\"\
    footbott\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    we\", (string)\"are\", (string)\"gonna\", (string)\"rock\"}))).Equals((\"gonna\"\
    )));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"we\",\
    \ (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"\
    nation\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n\
    \    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"b\"}))).Equals((\"\
    b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\"\
    , (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <25c422cf164c4f5eae824fa225c3f6f2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <25c422cf164c4f5eae824fa225c3f6f2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        // Your code goes here\n     \
    \   return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"\
    }))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d8966cc7ea80489e8bb4f761ed9f4219>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d8966cc7ea80489e8bb4f761ed9f4219>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        string max = \"\";\n        int\
    \ max_count = 0;\n        foreach (string word in words) {\n            int count\
    \ = 0;\n            foreach (char c in word) {\n                if (word.IndexOf(c)\
    \ == word.LastIndexOf(c)) {\n                    count++;\n                }\n\
    \            }\n            if (count > max_count) {\n                max = word;\n\
    \                max_count = count;\n            }\n        }\n        return\
    \ max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"\
    }))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b38d762622ae4c62b8795fc4a439302e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b38d762622ae4c62b8795fc4a439302e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        // TODO: Implement this function\n\
    \        return \"\";\n    }\n    public static void Main(string[] args) {\n \
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"\
    }))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    aaaaaaa\", (string)\"bb\", (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\"\
    )));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\"\
    , (string)\"this\", (string)\"game\", (string)\"of\", (string)\"footbott\"}))).Equals((\"\
    footbott\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    we\", (string)\"are\", (string)\"gonna\", (string)\"rock\"}))).Equals((\"gonna\"\
    )));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"we\",\
    \ (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"\
    nation\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n\
    \    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"b\"}))).Equals((\"\
    b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\"\
    , (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <29883f5391e641b69239ae202ea30248>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <29883f5391e641b69239ae202ea30248>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        string max = \"\";\n        int\
    \ max_count = 0;\n        foreach (string word in words) {\n            int count\
    \ = 0;\n            foreach (char c in word) {\n                if (word.IndexOf(c)\
    \ == word.LastIndexOf(c)) {\n                    count++;\n                }\n\
    \            }\n            if (count > max_count) {\n                max = word;\n\
    \                max_count = count;\n            }\n        }\n        return\
    \ max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"\
    }))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b38d762622ae4c62b8795fc4a439302e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b38d762622ae4c62b8795fc4a439302e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        string max = \"\";\n        int\
    \ max_count = 0;\n        foreach (string word in words) {\n            int count\
    \ = 0;\n            foreach (char c in word) {\n                if (word.IndexOf(c)\
    \ == word.LastIndexOf(c)) {\n                    count++;\n                }\n\
    \            }\n            if (count > max_count) {\n                max = word;\n\
    \                max_count = count;\n            }\n        }\n        return\
    \ max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"\
    }))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b38d762622ae4c62b8795fc4a439302e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b38d762622ae4c62b8795fc4a439302e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        // your code here\n        string\
    \ max = \"\";\n        int max_count = 0;\n        foreach (string word in words)\
    \ {\n            int count = 0;\n            foreach (char c in word) {\n    \
    \            if (!word.Contains(c)) {\n                    count++;\n        \
    \        }\n            }\n            if (count > max_count) {\n            \
    \    max = word;\n                max_count = count;\n            }\n        }\n\
    \        return max;\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"\
    }))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    aaaaaaa\", (string)\"bb\", (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\"\
    )));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\"\
    , (string)\"this\", (string)\"game\", (string)\"of\", (string)\"footbott\"}))).Equals((\"\
    footbott\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    we\", (string)\"are\", (string)\"gonna\", (string)\"rock\"}))).Equals((\"gonna\"\
    )));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"we\",\
    \ (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"\
    nation\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n\
    \    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"b\"}))).Equals((\"\
    b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\"\
    , (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a084723f9f7f474f9f29ccbb8039256c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a084723f9f7f474f9f29ccbb8039256c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        string result = \"\";\n      \
    \  int max = 0;\n        foreach (string word in words) {\n            int count\
    \ = word.Distinct().Count();\n            if (count > max) {\n               \
    \ max = count;\n                result = word;\n            }\n        }\n   \
    \     return result;\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"\
    }))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    aaaaaaa\", (string)\"bb\", (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\"\
    )));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\"\
    , (string)\"this\", (string)\"game\", (string)\"of\", (string)\"footbott\"}))).Equals((\"\
    footbott\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    we\", (string)\"are\", (string)\"gonna\", (string)\"rock\"}))).Equals((\"gonna\"\
    )));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"we\",\
    \ (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"\
    nation\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n\
    \    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"b\"}))).Equals((\"\
    b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\"\
    , (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b63a09472ca04abbaf17cd6a8670967b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b63a09472ca04abbaf17cd6a8670967b>:0 \n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        string max = \"\";\n        int\
    \ max_count = 0;\n        foreach (string word in words) {\n            int count\
    \ = 0;\n            foreach (char c in word) {\n                if (word.IndexOf(c)\
    \ == word.LastIndexOf(c)) {\n                    count++;\n                }\n\
    \            }\n            if (count > max_count) {\n                max = word;\n\
    \                max_count = count;\n            }\n        }\n        return\
    \ max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"\
    }))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b38d762622ae4c62b8795fc4a439302e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b38d762622ae4c62b8795fc4a439302e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        string max = \"\";\n        int\
    \ max_count = 0;\n        foreach (string word in words) {\n            int count\
    \ = word.Distinct().Count();\n            if (count > max_count) {\n         \
    \       max = word;\n                max_count = count;\n            }\n     \
    \   }\n        return max;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\"\
    , (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"\
    }))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    aaaaaaa\", (string)\"bb\", (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\"\
    )));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\"\
    , (string)\"this\", (string)\"game\", (string)\"of\", (string)\"footbott\"}))).Equals((\"\
    footbott\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    we\", (string)\"are\", (string)\"gonna\", (string)\"rock\"}))).Equals((\"gonna\"\
    )));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"we\",\
    \ (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"\
    nation\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n\
    \    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"b\"}))).Equals((\"\
    b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\"\
    , (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <33590dfbea244d408d75a2edcb272d97>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <33590dfbea244d408d75a2edcb272d97>:0 \n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        string max = \"\";\n        int\
    \ max_unique = 0;\n        foreach (string word in words) {\n            int unique\
    \ = 0;\n            foreach (char c in word) {\n                if (word.IndexOf(c)\
    \ == word.LastIndexOf(c)) {\n                    unique++;\n                }\n\
    \            }\n            if (unique > max_unique) {\n                max =\
    \ word;\n                max_unique = unique;\n            }\n        }\n    \
    \    return max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"\
    }))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <aa913bb1f10545aa9ded914297530fea>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <aa913bb1f10545aa9ded914297530fea>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        string max = \"\";\n        int\
    \ max_count = 0;\n        foreach (string word in words) {\n            int count\
    \ = 0;\n            foreach (char c in word) {\n                if (word.IndexOf(c)\
    \ == word.LastIndexOf(c)) {\n                    count++;\n                }\n\
    \            }\n            if (count > max_count) {\n                max = word;\n\
    \                max_count = count;\n            }\n        }\n        return\
    \ max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"\
    }))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b38d762622ae4c62b8795fc4a439302e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b38d762622ae4c62b8795fc4a439302e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        // Your code goes here\n     \
    \   return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"\
    }))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d8966cc7ea80489e8bb4f761ed9f4219>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d8966cc7ea80489e8bb4f761ed9f4219>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        // Your code goes here.\n    \
    \    return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"\
    }))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7a0acf79d31d47de8e863f905ab512ee>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7a0acf79d31d47de8e863f905ab512ee>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        // Your code here\n        return\
    \ null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"\
    }))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x00029] in <d51d2c65dbe842abae804b7e421fcf17>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x00029] in <d51d2c65dbe842abae804b7e421fcf17>:0\
    \ \n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        string max = \"\";\n        int\
    \ max_count = 0;\n        foreach (string word in words) {\n            int count\
    \ = 0;\n            foreach (char c in word) {\n                if (word.IndexOf(c)\
    \ == word.LastIndexOf(c)) {\n                    count++;\n                }\n\
    \            }\n            if (count > max_count) {\n                max = word;\n\
    \                max_count = count;\n            }\n        }\n        return\
    \ max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"\
    }))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b38d762622ae4c62b8795fc4a439302e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b38d762622ae4c62b8795fc4a439302e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        string max = \"\";\n        int\
    \ max_count = 0;\n        foreach (string word in words) {\n            int count\
    \ = 0;\n            foreach (char c in word) {\n                if (word.IndexOf(c)\
    \ == word.LastIndexOf(c)) {\n                    count++;\n                }\n\
    \            }\n            if (count > max_count) {\n                max = word;\n\
    \                max_count = count;\n            }\n        }\n        return\
    \ max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"\
    }))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b38d762622ae4c62b8795fc4a439302e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b38d762622ae4c62b8795fc4a439302e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        return words.OrderBy(x => x.Distinct().Count()).Last();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"\
    }))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a77af88b1bdb4aca8a867c1465769158>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a77af88b1bdb4aca8a867c1465769158>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        // TODO: implement this function\n\
    \        return \"\";\n    }\n    public static void Main(string[] args) {\n \
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"\
    }))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    aaaaaaa\", (string)\"bb\", (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\"\
    )));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\"\
    , (string)\"this\", (string)\"game\", (string)\"of\", (string)\"footbott\"}))).Equals((\"\
    footbott\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    we\", (string)\"are\", (string)\"gonna\", (string)\"rock\"}))).Equals((\"gonna\"\
    )));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"we\",\
    \ (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"\
    nation\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n\
    \    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"b\"}))).Equals((\"\
    b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\"\
    , (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <76965491ed1c43fcaf15f77a4024e51e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <76965491ed1c43fcaf15f77a4024e51e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        string result = \"\";\n      \
    \  int max = 0;\n        foreach (string word in words) {\n            if (word.Distinct().Count()\
    \ > max) {\n                max = word.Distinct().Count();\n                result\
    \ = word;\n            }\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"of\", (string)\"string\"}))).Equals((\"\
    string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <dbb8790c33d04eba867222577aa85021>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <dbb8790c33d04eba867222577aa85021>:0 \n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        // TODO: Implement this function\n\
    \        return \"\";\n    }\n    public static void Main(string[] args) {\n \
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"\
    }))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    aaaaaaa\", (string)\"bb\", (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\"\
    )));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\"\
    , (string)\"this\", (string)\"game\", (string)\"of\", (string)\"footbott\"}))).Equals((\"\
    footbott\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    we\", (string)\"are\", (string)\"gonna\", (string)\"rock\"}))).Equals((\"gonna\"\
    )));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"we\",\
    \ (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"\
    nation\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n\
    \    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"b\"}))).Equals((\"\
    b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\"\
    , (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <29883f5391e641b69239ae202ea30248>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <29883f5391e641b69239ae202ea30248>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        int max = 0;\n        string maxWord\
    \ = \"\";\n        foreach (string word in words) {\n            int count = 0;\n\
    \            foreach (char c in word) {\n                if (word.IndexOf(c) ==\
    \ word.LastIndexOf(c)) {\n                    count++;\n                }\n  \
    \          }\n            if (count > max) {\n                max = count;\n \
    \               maxWord = word;\n            }\n        }\n        return maxWord;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"\
    }))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9179c4fb2e6547a294d3780a29b453f2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9179c4fb2e6547a294d3780a29b453f2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        string max = \"\";\n        int\
    \ max_count = 0;\n        foreach (string word in words) {\n            int count\
    \ = 0;\n            foreach (char c in word) {\n                if (word.IndexOf(c)\
    \ == word.LastIndexOf(c)) {\n                    count++;\n                }\n\
    \            }\n            if (count > max_count) {\n                max = word;\n\
    \                max_count = count;\n            }\n        }\n        return\
    \ max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"\
    }))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b38d762622ae4c62b8795fc4a439302e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b38d762622ae4c62b8795fc4a439302e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        // TODO: Implement this function\n\
    \        return null;\n    }\n    public static void Main(string[] args) {\n \
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"\
    }))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    aaaaaaa\", (string)\"bb\", (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\"\
    )));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\"\
    , (string)\"this\", (string)\"game\", (string)\"of\", (string)\"footbott\"}))).Equals((\"\
    footbott\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    we\", (string)\"are\", (string)\"gonna\", (string)\"rock\"}))).Equals((\"gonna\"\
    )));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"we\",\
    \ (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"\
    nation\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n\
    \    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"b\"}))).Equals((\"\
    b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\"\
    , (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x00029] in <e6f5e082b2e74c0a91ced62165981790>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x00029] in <e6f5e082b2e74c0a91ced62165981790>:0\
    \ \n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        // TODO: Implement this function\n\
    \        return \"\";\n    }\n    public static void Main(string[] args) {\n \
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"\
    }))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    aaaaaaa\", (string)\"bb\", (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\"\
    )));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\"\
    , (string)\"this\", (string)\"game\", (string)\"of\", (string)\"footbott\"}))).Equals((\"\
    footbott\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    we\", (string)\"are\", (string)\"gonna\", (string)\"rock\"}))).Equals((\"gonna\"\
    )));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"we\",\
    \ (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"\
    nation\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n\
    \    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"b\"}))).Equals((\"\
    b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\"\
    , (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <29883f5391e641b69239ae202ea30248>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <29883f5391e641b69239ae202ea30248>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        string max = \"\";\n        int\
    \ max_count = 0;\n        foreach (string word in words) {\n            int count\
    \ = 0;\n            foreach (char c in word) {\n                if (word.IndexOf(c)\
    \ == word.LastIndexOf(c)) {\n                    count++;\n                }\n\
    \            }\n            if (count > max_count) {\n                max = word;\n\
    \                max_count = count;\n            }\n        }\n        return\
    \ max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"\
    }))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b38d762622ae4c62b8795fc4a439302e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b38d762622ae4c62b8795fc4a439302e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        string max = \"\";\n        int\
    \ max_count = 0;\n        foreach (string word in words) {\n            int count\
    \ = 0;\n            foreach (char c in word) {\n                if (word.IndexOf(c)\
    \ == word.LastIndexOf(c)) {\n                    count++;\n                }\n\
    \            }\n            if (count > max_count) {\n                max = word;\n\
    \                max_count = count;\n            }\n        }\n        return\
    \ max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"\
    }))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b38d762622ae4c62b8795fc4a439302e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b38d762622ae4c62b8795fc4a439302e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        // TODO: Implement this function\n\
    \        return \"\";\n    }\n    public static void Main(string[] args) {\n \
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"\
    }))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    aaaaaaa\", (string)\"bb\", (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\"\
    )));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\"\
    , (string)\"this\", (string)\"game\", (string)\"of\", (string)\"footbott\"}))).Equals((\"\
    footbott\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    we\", (string)\"are\", (string)\"gonna\", (string)\"rock\"}))).Equals((\"gonna\"\
    )));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"we\",\
    \ (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"\
    nation\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n\
    \    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"b\"}))).Equals((\"\
    b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\"\
    , (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <29883f5391e641b69239ae202ea30248>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <29883f5391e641b69239ae202ea30248>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        string max = \"\";\n        int\
    \ max_count = 0;\n        foreach (string word in words) {\n            int count\
    \ = 0;\n            foreach (char c in word) {\n                if (word.IndexOf(c)\
    \ == word.LastIndexOf(c)) {\n                    count++;\n                }\n\
    \            }\n            if (count > max_count) {\n                max = word;\n\
    \                max_count = count;\n            }\n        }\n        return\
    \ max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"\
    }))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b38d762622ae4c62b8795fc4a439302e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b38d762622ae4c62b8795fc4a439302e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        // Your code here.\n        return\
    \ \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"\
    }))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f482ed4e1cb44f4cabbd630fe27922c6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f482ed4e1cb44f4cabbd630fe27922c6>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        string max = \"\";\n        int\
    \ max_unique = 0;\n        foreach (string word in words) {\n            int unique\
    \ = 0;\n            foreach (char c in word) {\n                if (word.IndexOf(c)\
    \ == word.LastIndexOf(c)) {\n                    unique++;\n                }\n\
    \            }\n            if (unique > max_unique) {\n                max =\
    \ word;\n                max_unique = unique;\n            }\n        }\n    \
    \    return max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"\
    }))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <aa913bb1f10545aa9ded914297530fea>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <aa913bb1f10545aa9ded914297530fea>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        // Your code goes here.\n    \
    \    return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"\
    }))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7a0acf79d31d47de8e863f905ab512ee>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7a0acf79d31d47de8e863f905ab512ee>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        // Your code here\n        return\
    \ \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"\
    }))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5858beddf3a74782abd74cdab8211e69>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5858beddf3a74782abd74cdab8211e69>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        // TODO: Implement this function\n\
    \        return \"\";\n    }\n    public static void Main(string[] args) {\n \
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"\
    }))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    aaaaaaa\", (string)\"bb\", (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\"\
    )));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\"\
    , (string)\"this\", (string)\"game\", (string)\"of\", (string)\"footbott\"}))).Equals((\"\
    footbott\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    we\", (string)\"are\", (string)\"gonna\", (string)\"rock\"}))).Equals((\"gonna\"\
    )));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"we\",\
    \ (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"\
    nation\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n\
    \    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"b\"}))).Equals((\"\
    b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\"\
    , (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <29883f5391e641b69239ae202ea30248>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <29883f5391e641b69239ae202ea30248>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        int max = 0;\n        string maxString\
    \ = \"\";\n        foreach (string word in words) {\n            int count = 0;\n\
    \            foreach (char c in word) {\n                if (word.IndexOf(c) ==\
    \ word.LastIndexOf(c)) {\n                    count++;\n                }\n  \
    \          }\n            if (count > max) {\n                max = count;\n \
    \               maxString = word;\n            }\n        }\n        return maxString;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"\
    }))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <77e537a895bb41edb8a93cb9701d4bcb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <77e537a895bb41edb8a93cb9701d4bcb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        // TODO: implement this function\n\
    \        return \"\";\n    }\n    public static void Main(string[] args) {\n \
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"\
    }))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    aaaaaaa\", (string)\"bb\", (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\"\
    )));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\"\
    , (string)\"this\", (string)\"game\", (string)\"of\", (string)\"footbott\"}))).Equals((\"\
    footbott\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    we\", (string)\"are\", (string)\"gonna\", (string)\"rock\"}))).Equals((\"gonna\"\
    )));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"we\",\
    \ (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"\
    nation\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n\
    \    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"b\"}))).Equals((\"\
    b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\"\
    , (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <76965491ed1c43fcaf15f77a4024e51e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <76965491ed1c43fcaf15f77a4024e51e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        string max = \"\";\n        int\
    \ max_count = 0;\n        foreach (string word in words) {\n            int count\
    \ = 0;\n            foreach (char c in word) {\n                if (word.IndexOf(c)\
    \ == word.LastIndexOf(c)) {\n                    count++;\n                }\n\
    \            }\n            if (count > max_count) {\n                max = word;\n\
    \                max_count = count;\n            }\n        }\n        return\
    \ max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"\
    }))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b38d762622ae4c62b8795fc4a439302e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b38d762622ae4c62b8795fc4a439302e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        // Your code goes here.\n    \
    \    return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"\
    }))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7a0acf79d31d47de8e863f905ab512ee>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7a0acf79d31d47de8e863f905ab512ee>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        string max = \"\";\n        int\
    \ max_count = 0;\n        foreach (string word in words) {\n            int count\
    \ = 0;\n            foreach (char c in word) {\n                if (word.IndexOf(c)\
    \ == word.LastIndexOf(c)) {\n                    count++;\n                }\n\
    \            }\n            if (count > max_count) {\n                max = word;\n\
    \                max_count = count;\n            }\n        }\n        return\
    \ max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"\
    }))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b38d762622ae4c62b8795fc4a439302e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b38d762622ae4c62b8795fc4a439302e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        int max = 0;\n        string maxWord\
    \ = \"\";\n        foreach (string word in words) {\n            int count = word.Distinct().Count();\n\
    \            if (count > max) {\n                max = count;\n              \
    \  maxWord = word;\n            }\n        }\n        return maxWord;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"of\", (string)\"string\"}))).Equals((\"\
    string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e4bd937c068244498a4d66d7d688bd42>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e4bd937c068244498a4d66d7d688bd42>:0 \n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        // Your code here\n        return\
    \ \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"\
    }))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5858beddf3a74782abd74cdab8211e69>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5858beddf3a74782abd74cdab8211e69>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        // Your code here\n        return\
    \ \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"\
    }))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5858beddf3a74782abd74cdab8211e69>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5858beddf3a74782abd74cdab8211e69>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        return words.OrderBy(x => x.Distinct().Count()).Last();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"\
    }))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a77af88b1bdb4aca8a867c1465769158>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a77af88b1bdb4aca8a867c1465769158>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        // TODO: Implement this function\n\
    \        return \"\";\n    }\n    public static void Main(string[] args) {\n \
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"\
    }))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    aaaaaaa\", (string)\"bb\", (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\"\
    )));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\"\
    , (string)\"this\", (string)\"game\", (string)\"of\", (string)\"footbott\"}))).Equals((\"\
    footbott\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    we\", (string)\"are\", (string)\"gonna\", (string)\"rock\"}))).Equals((\"gonna\"\
    )));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"we\",\
    \ (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"\
    nation\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n\
    \    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"b\"}))).Equals((\"\
    b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\"\
    , (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <29883f5391e641b69239ae202ea30248>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <29883f5391e641b69239ae202ea30248>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        // your code here\n        return\
    \ \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"\
    }))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9520a093a650469ea87ba767207e103e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9520a093a650469ea87ba767207e103e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        string max = \"\";\n        int\
    \ max_count = 0;\n        foreach (string word in words) {\n            int count\
    \ = 0;\n            foreach (char c in word) {\n                if (word.IndexOf(c)\
    \ == word.LastIndexOf(c)) {\n                    count++;\n                }\n\
    \            }\n            if (count > max_count) {\n                max = word;\n\
    \                max_count = count;\n            }\n        }\n        return\
    \ max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"\
    }))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b38d762622ae4c62b8795fc4a439302e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b38d762622ae4c62b8795fc4a439302e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        string max = words[0];\n     \
    \   for (int i = 1; i < words.Count; i++) {\n            if (words[i].Length >\
    \ max.Length) {\n                max = words[i];\n            } else if (words[i].Length\
    \ == max.Length) {\n                if (words[i].CompareTo(max) < 0) {\n     \
    \               max = words[i];\n                }\n            }\n        }\n\
    \        return max;\n    }\n    public static void Main(string[] args) {\n  \
    \  Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"\
    }))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    aaaaaaa\", (string)\"bb\", (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\"\
    )));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\"\
    , (string)\"this\", (string)\"game\", (string)\"of\", (string)\"footbott\"}))).Equals((\"\
    footbott\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    we\", (string)\"are\", (string)\"gonna\", (string)\"rock\"}))).Equals((\"gonna\"\
    )));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"we\",\
    \ (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"\
    nation\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n\
    \    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"b\"}))).Equals((\"\
    b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\"\
    , (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <35e6eac38ed446c9b516335d408d3e50>:0 \n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        // TODO: Implement this function\n\
    \        return \"\";\n    }\n    public static void Main(string[] args) {\n \
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"\
    }))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    aaaaaaa\", (string)\"bb\", (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\"\
    )));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\"\
    , (string)\"this\", (string)\"game\", (string)\"of\", (string)\"footbott\"}))).Equals((\"\
    footbott\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    we\", (string)\"are\", (string)\"gonna\", (string)\"rock\"}))).Equals((\"gonna\"\
    )));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"we\",\
    \ (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"\
    nation\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n\
    \    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"b\"}))).Equals((\"\
    b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\"\
    , (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <29883f5391e641b69239ae202ea30248>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <29883f5391e641b69239ae202ea30248>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        // Your code goes here\n     \
    \   return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"\
    }))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d8966cc7ea80489e8bb4f761ed9f4219>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d8966cc7ea80489e8bb4f761ed9f4219>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        string max = \"\";\n        int\
    \ max_count = 0;\n        foreach (string word in words) {\n            int count\
    \ = 0;\n            foreach (char c in word) {\n                if (word.IndexOf(c)\
    \ == word.LastIndexOf(c)) {\n                    count += 1;\n               \
    \ }\n            }\n            if (count > max_count) {\n                max\
    \ = word;\n                max_count = count;\n            }\n        }\n    \
    \    return max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"\
    }))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <230e76cd7b3a4c0981e94c63b6622f62>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <230e76cd7b3a4c0981e94c63b6622f62>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        string max = \"\";\n        int\
    \ max_count = 0;\n        foreach (string word in words) {\n            int count\
    \ = 0;\n            foreach (char c in word) {\n                if (word.IndexOf(c)\
    \ == word.LastIndexOf(c)) {\n                    count++;\n                }\n\
    \            }\n            if (count > max_count) {\n                max = word;\n\
    \                max_count = count;\n            }\n        }\n        return\
    \ max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"\
    }))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b38d762622ae4c62b8795fc4a439302e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b38d762622ae4c62b8795fc4a439302e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        string max = words[0];\n     \
    \   foreach (string word in words) {\n            if (word.Distinct().Count()\
    \ > max.Distinct().Count()) {\n                max = word;\n            }\n  \
    \      }\n        return max;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\"\
    , (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"\
    }))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    aaaaaaa\", (string)\"bb\", (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\"\
    )));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\"\
    , (string)\"this\", (string)\"game\", (string)\"of\", (string)\"footbott\"}))).Equals((\"\
    footbott\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    we\", (string)\"are\", (string)\"gonna\", (string)\"rock\"}))).Equals((\"gonna\"\
    )));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"we\",\
    \ (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"\
    nation\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n\
    \    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"b\"}))).Equals((\"\
    b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\"\
    , (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3900f05b675e4ba1b931a2f21d1dbf9e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3900f05b675e4ba1b931a2f21d1dbf9e>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        return words.OrderBy(x => x.Distinct().Count()).ThenBy(x\
    \ => x).Last();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"\
    }))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a5d13a0e13e4437c88fae615198825f2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a5d13a0e13e4437c88fae615198825f2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        // Your code here\n        return\
    \ \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"\
    }))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5858beddf3a74782abd74cdab8211e69>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5858beddf3a74782abd74cdab8211e69>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        string max = \"\";\n        int\
    \ max_count = 0;\n        foreach (string word in words) {\n            int count\
    \ = 0;\n            foreach (char c in word) {\n                if (word.IndexOf(c)\
    \ == word.LastIndexOf(c)) {\n                    count++;\n                }\n\
    \            }\n            if (count > max_count) {\n                max = word;\n\
    \                max_count = count;\n            }\n        }\n        return\
    \ max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"\
    }))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b38d762622ae4c62b8795fc4a439302e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b38d762622ae4c62b8795fc4a439302e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        string max = \"\";\n        int\
    \ max_count = 0;\n        foreach (string word in words) {\n            int count\
    \ = 0;\n            foreach (char c in word) {\n                if (word.IndexOf(c)\
    \ == word.LastIndexOf(c)) {\n                    count++;\n                }\n\
    \            }\n            if (count > max_count) {\n                max = word;\n\
    \                max_count = count;\n            }\n        }\n        return\
    \ max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"\
    }))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b38d762622ae4c62b8795fc4a439302e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b38d762622ae4c62b8795fc4a439302e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        // TODO: Implement this function\n\
    \        return \"\";\n    }\n    public static void Main(string[] args) {\n \
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"\
    }))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    aaaaaaa\", (string)\"bb\", (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\"\
    )));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\"\
    , (string)\"this\", (string)\"game\", (string)\"of\", (string)\"footbott\"}))).Equals((\"\
    footbott\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    we\", (string)\"are\", (string)\"gonna\", (string)\"rock\"}))).Equals((\"gonna\"\
    )));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"we\",\
    \ (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"\
    nation\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n\
    \    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"b\"}))).Equals((\"\
    b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\"\
    , (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <29883f5391e641b69239ae202ea30248>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <29883f5391e641b69239ae202ea30248>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        string max = words[0];\n     \
    \   int max_count = 0;\n        foreach (string word in words) {\n           \
    \ int count = 0;\n            foreach (char c in word) {\n                if (word.IndexOf(c)\
    \ == word.LastIndexOf(c)) {\n                    count++;\n                }\n\
    \            }\n            if (count > max_count) {\n                max = word;\n\
    \                max_count = count;\n            }\n        }\n        return\
    \ max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"\
    }))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <797b89bd33bf4b29b2975fcb310bf5dd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <797b89bd33bf4b29b2975fcb310bf5dd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        // Your code goes here\n     \
    \   return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"\
    }))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d8966cc7ea80489e8bb4f761ed9f4219>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d8966cc7ea80489e8bb4f761ed9f4219>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        // TODO: Implement this function\n\
    \        return \"\";\n    }\n    public static void Main(string[] args) {\n \
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"\
    }))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    aaaaaaa\", (string)\"bb\", (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\"\
    )));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\"\
    , (string)\"this\", (string)\"game\", (string)\"of\", (string)\"footbott\"}))).Equals((\"\
    footbott\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    we\", (string)\"are\", (string)\"gonna\", (string)\"rock\"}))).Equals((\"gonna\"\
    )));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"we\",\
    \ (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"\
    nation\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n\
    \    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"b\"}))).Equals((\"\
    b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\"\
    , (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <29883f5391e641b69239ae202ea30248>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <29883f5391e641b69239ae202ea30248>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        return words.OrderBy(x => x.Length).ThenBy(x\
    \ => x).Last();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"\
    }))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f0f7a28ebd11468a88de2c4840b586da>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f0f7a28ebd11468a88de2c4840b586da>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        string max = \"\";\n        foreach\
    \ (string word in words) {\n            if (word.Length > max.Length) {\n    \
    \            max = word;\n            }\n        }\n        return max;\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"of\", (string)\"string\"}))).Equals((\"\
    string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <32bd9c03e8524b6cb38f8dcab116bc94>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        int max = 0;\n        string max_word\
    \ = \"\";\n        foreach (string word in words) {\n            int count = 0;\n\
    \            foreach (char c in word) {\n                if (word.IndexOf(c) ==\
    \ word.LastIndexOf(c)) {\n                    count++;\n                }\n  \
    \          }\n            if (count > max) {\n                max = count;\n \
    \               max_word = word;\n            }\n        }\n        return max_word;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"\
    }))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f803f44997264779963144bef6501143>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f803f44997264779963144bef6501143>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        // Your code here\n        return\
    \ \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"\
    }))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5858beddf3a74782abd74cdab8211e69>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5858beddf3a74782abd74cdab8211e69>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        // TODO: Implement this function\n\
    \        return \"\";\n    }\n    public static void Main(string[] args) {\n \
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"\
    }))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    aaaaaaa\", (string)\"bb\", (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\"\
    )));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\"\
    , (string)\"this\", (string)\"game\", (string)\"of\", (string)\"footbott\"}))).Equals((\"\
    footbott\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    we\", (string)\"are\", (string)\"gonna\", (string)\"rock\"}))).Equals((\"gonna\"\
    )));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"we\",\
    \ (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"\
    nation\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n\
    \    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"b\"}))).Equals((\"\
    b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\"\
    , (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <29883f5391e641b69239ae202ea30248>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <29883f5391e641b69239ae202ea30248>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        string max = \"\";\n        int\
    \ max_count = 0;\n        foreach (string word in words) {\n            int count\
    \ = 0;\n            foreach (char c in word) {\n                if (word.IndexOf(c)\
    \ == word.LastIndexOf(c)) {\n                    count++;\n                }\n\
    \            }\n            if (count > max_count) {\n                max = word;\n\
    \                max_count = count;\n            }\n        }\n        return\
    \ max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"\
    }))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b38d762622ae4c62b8795fc4a439302e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b38d762622ae4c62b8795fc4a439302e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        // Your code here\n        return\
    \ \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"\
    }))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5858beddf3a74782abd74cdab8211e69>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5858beddf3a74782abd74cdab8211e69>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        // Your code here\n        return\
    \ \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"\
    }))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5858beddf3a74782abd74cdab8211e69>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5858beddf3a74782abd74cdab8211e69>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        string max = \"\";\n        int\
    \ max_count = 0;\n        foreach (string word in words) {\n            int count\
    \ = 0;\n            foreach (char c in word) {\n                if (word.IndexOf(c)\
    \ == word.LastIndexOf(c)) {\n                    count += 1;\n               \
    \ }\n            }\n            if (count > max_count) {\n                max\
    \ = word;\n                max_count = count;\n            }\n        }\n    \
    \    return max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"\
    }))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <230e76cd7b3a4c0981e94c63b6622f62>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <230e76cd7b3a4c0981e94c63b6622f62>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        // TODO: Implement this function\n\
    \        return \"\";\n    }\n    public static void Main(string[] args) {\n \
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"\
    }))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    aaaaaaa\", (string)\"bb\", (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\"\
    )));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\"\
    , (string)\"this\", (string)\"game\", (string)\"of\", (string)\"footbott\"}))).Equals((\"\
    footbott\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    we\", (string)\"are\", (string)\"gonna\", (string)\"rock\"}))).Equals((\"gonna\"\
    )));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"we\",\
    \ (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"\
    nation\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n\
    \    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"b\"}))).Equals((\"\
    b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\"\
    , (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <29883f5391e641b69239ae202ea30248>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <29883f5391e641b69239ae202ea30248>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        // TODO: Implement this function.\n\
    \        return \"\";\n    }\n    public static void Main(string[] args) {\n \
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"\
    }))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    aaaaaaa\", (string)\"bb\", (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\"\
    )));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\"\
    , (string)\"this\", (string)\"game\", (string)\"of\", (string)\"footbott\"}))).Equals((\"\
    footbott\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    we\", (string)\"are\", (string)\"gonna\", (string)\"rock\"}))).Equals((\"gonna\"\
    )));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"we\",\
    \ (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"\
    nation\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n\
    \    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"b\"}))).Equals((\"\
    b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\"\
    , (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <25c422cf164c4f5eae824fa225c3f6f2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <25c422cf164c4f5eae824fa225c3f6f2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        // Your code goes here\n     \
    \   return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"\
    }))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d8966cc7ea80489e8bb4f761ed9f4219>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d8966cc7ea80489e8bb4f761ed9f4219>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        return words.OrderBy(w => w.Distinct().Count()).ThenBy(w\
    \ => w).Last();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"\
    }))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2b1e6079ee134482943f585a93cdf811>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2b1e6079ee134482943f585a93cdf811>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        // Your code goes here\n     \
    \   return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"\
    }))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d8966cc7ea80489e8bb4f761ed9f4219>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d8966cc7ea80489e8bb4f761ed9f4219>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        // TODO: implement\n        return\
    \ \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"\
    }))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7516963944e148a0b800112fd184b2b1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7516963944e148a0b800112fd184b2b1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        // Your code goes here\n     \
    \   return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"\
    }))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d8966cc7ea80489e8bb4f761ed9f4219>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d8966cc7ea80489e8bb4f761ed9f4219>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        // TODO: Implement this function.\n\
    \        return \"\";\n    }\n    public static void Main(string[] args) {\n \
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"\
    }))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    aaaaaaa\", (string)\"bb\", (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\"\
    )));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\"\
    , (string)\"this\", (string)\"game\", (string)\"of\", (string)\"footbott\"}))).Equals((\"\
    footbott\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    we\", (string)\"are\", (string)\"gonna\", (string)\"rock\"}))).Equals((\"gonna\"\
    )));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"we\",\
    \ (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"\
    nation\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n\
    \    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"b\"}))).Equals((\"\
    b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\"\
    , (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <25c422cf164c4f5eae824fa225c3f6f2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <25c422cf164c4f5eae824fa225c3f6f2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        string max = \"\";\n        int\
    \ max_count = 0;\n        foreach (string word in words) {\n            int count\
    \ = 0;\n            foreach (char c in word) {\n                if (word.IndexOf(c)\
    \ == word.LastIndexOf(c)) {\n                    count++;\n                }\n\
    \            }\n            if (count > max_count) {\n                max = word;\n\
    \                max_count = count;\n            }\n        }\n        return\
    \ max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"\
    }))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b38d762622ae4c62b8795fc4a439302e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b38d762622ae4c62b8795fc4a439302e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        // Your code here\n        return\
    \ \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"\
    }))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5858beddf3a74782abd74cdab8211e69>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5858beddf3a74782abd74cdab8211e69>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        string max = \"\";\n        int\
    \ max_count = 0;\n        foreach (string word in words) {\n            int count\
    \ = 0;\n            foreach (char c in word) {\n                if (word.IndexOf(c)\
    \ == word.LastIndexOf(c)) {\n                    count++;\n                }\n\
    \            }\n            if (count > max_count) {\n                max = word;\n\
    \                max_count = count;\n            }\n        }\n        return\
    \ max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"\
    }))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b38d762622ae4c62b8795fc4a439302e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b38d762622ae4c62b8795fc4a439302e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        // TODO: Implement this function\n\
    \        return \"\";\n    }\n    public static void Main(string[] args) {\n \
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"\
    }))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    aaaaaaa\", (string)\"bb\", (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\"\
    )));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\"\
    , (string)\"this\", (string)\"game\", (string)\"of\", (string)\"footbott\"}))).Equals((\"\
    footbott\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    we\", (string)\"are\", (string)\"gonna\", (string)\"rock\"}))).Equals((\"gonna\"\
    )));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"we\",\
    \ (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"\
    nation\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n\
    \    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"b\"}))).Equals((\"\
    b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\"\
    , (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <29883f5391e641b69239ae202ea30248>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <29883f5391e641b69239ae202ea30248>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        // Your code goes here\n     \
    \   return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"\
    }))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d8966cc7ea80489e8bb4f761ed9f4219>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d8966cc7ea80489e8bb4f761ed9f4219>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        // Your code goes here.\n    \
    \    string max = \"\";\n        int max_count = 0;\n        foreach (string word\
    \ in words) {\n            int count = 0;\n            foreach (char c in word)\
    \ {\n                if (word.IndexOf(c) == word.LastIndexOf(c)) {\n         \
    \           count++;\n                }\n            }\n            if (count\
    \ > max_count) {\n                max = word;\n                max_count = count;\n\
    \            }\n        }\n        return max;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"\
    }))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    aaaaaaa\", (string)\"bb\", (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\"\
    )));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\"\
    , (string)\"this\", (string)\"game\", (string)\"of\", (string)\"footbott\"}))).Equals((\"\
    footbott\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    we\", (string)\"are\", (string)\"gonna\", (string)\"rock\"}))).Equals((\"gonna\"\
    )));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"we\",\
    \ (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"\
    nation\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n\
    \    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"b\"}))).Equals((\"\
    b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\"\
    , (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <85144560a5ee4ffda0fbb5dae1487db2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <85144560a5ee4ffda0fbb5dae1487db2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        // TODO: Implement this function\n\
    \        return \"\";\n    }\n    public static void Main(string[] args) {\n \
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"\
    }))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    aaaaaaa\", (string)\"bb\", (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\"\
    )));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\"\
    , (string)\"this\", (string)\"game\", (string)\"of\", (string)\"footbott\"}))).Equals((\"\
    footbott\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    we\", (string)\"are\", (string)\"gonna\", (string)\"rock\"}))).Equals((\"gonna\"\
    )));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"we\",\
    \ (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"\
    nation\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n\
    \    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"b\"}))).Equals((\"\
    b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\"\
    , (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <29883f5391e641b69239ae202ea30248>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <29883f5391e641b69239ae202ea30248>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        // TODO: implement\n        return\
    \ \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"\
    }))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7516963944e148a0b800112fd184b2b1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7516963944e148a0b800112fd184b2b1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        int max = 0;\n        string max_word\
    \ = \"\";\n        foreach (string word in words) {\n            int count = 0;\n\
    \            foreach (char c in word) {\n                if (word.IndexOf(c) ==\
    \ word.LastIndexOf(c)) {\n                    count++;\n                }\n  \
    \          }\n            if (count > max) {\n                max = count;\n \
    \               max_word = word;\n            }\n        }\n        return max_word;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"\
    }))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f803f44997264779963144bef6501143>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f803f44997264779963144bef6501143>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798277
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        return null;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"of\", (string)\"string\"}))).Equals((\"\
    string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x00029] in <33f48828a2b9423cbc05796472fec68b>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x00029] in <33f48828a2b9423cbc05796472fec68b>:0\
    \ \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        string max = words[0];\n     \
    \   foreach (string word in words) {\n            if (word.Distinct().Count()\
    \ > max.Distinct().Count()) {\n                max = word;\n            }\n  \
    \      }\n        return max;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\"\
    , (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"\
    }))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    aaaaaaa\", (string)\"bb\", (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\"\
    )));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\"\
    , (string)\"this\", (string)\"game\", (string)\"of\", (string)\"footbott\"}))).Equals((\"\
    footbott\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    we\", (string)\"are\", (string)\"gonna\", (string)\"rock\"}))).Equals((\"gonna\"\
    )));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"we\",\
    \ (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"\
    nation\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n\
    \    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"b\"}))).Equals((\"\
    b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\"\
    , (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3900f05b675e4ba1b931a2f21d1dbf9e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3900f05b675e4ba1b931a2f21d1dbf9e>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        // Your code goes here\n     \
    \   return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"\
    }))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d8966cc7ea80489e8bb4f761ed9f4219>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d8966cc7ea80489e8bb4f761ed9f4219>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        // TODO: Implement this function\n\
    \        return null;\n    }\n    public static void Main(string[] args) {\n \
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"\
    }))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    aaaaaaa\", (string)\"bb\", (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\"\
    )));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\"\
    , (string)\"this\", (string)\"game\", (string)\"of\", (string)\"footbott\"}))).Equals((\"\
    footbott\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    we\", (string)\"are\", (string)\"gonna\", (string)\"rock\"}))).Equals((\"gonna\"\
    )));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"we\",\
    \ (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"\
    nation\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n\
    \    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"b\"}))).Equals((\"\
    b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\"\
    , (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x00029] in <e6f5e082b2e74c0a91ced62165981790>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x00029] in <e6f5e082b2e74c0a91ced62165981790>:0\
    \ \n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        // Your code goes here\n     \
    \   return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"\
    }))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d8966cc7ea80489e8bb4f761ed9f4219>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d8966cc7ea80489e8bb4f761ed9f4219>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        return words.OrderBy(x => x.Distinct().Count()).ThenBy(x\
    \ => x).Last();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"\
    }))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a5d13a0e13e4437c88fae615198825f2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a5d13a0e13e4437c88fae615198825f2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        string max = words[0];\n     \
    \   foreach (string word in words) {\n            if (word.Distinct().Count()\
    \ > max.Distinct().Count()) {\n                max = word;\n            }\n  \
    \      }\n        return max;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\"\
    , (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"\
    }))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    aaaaaaa\", (string)\"bb\", (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\"\
    )));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\"\
    , (string)\"this\", (string)\"game\", (string)\"of\", (string)\"footbott\"}))).Equals((\"\
    footbott\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    we\", (string)\"are\", (string)\"gonna\", (string)\"rock\"}))).Equals((\"gonna\"\
    )));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"we\",\
    \ (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"\
    nation\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n\
    \    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"b\"}))).Equals((\"\
    b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\"\
    , (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3900f05b675e4ba1b931a2f21d1dbf9e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3900f05b675e4ba1b931a2f21d1dbf9e>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        // Your code goes here\n     \
    \   return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"\
    }))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d8966cc7ea80489e8bb4f761ed9f4219>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d8966cc7ea80489e8bb4f761ed9f4219>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        // Your code goes here\n     \
    \   return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"\
    }))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d8966cc7ea80489e8bb4f761ed9f4219>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d8966cc7ea80489e8bb4f761ed9f4219>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        // Your code goes here\n     \
    \   return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"\
    }))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x00029] in <ababcce9c7c7493983179782ee2b723a>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x00029] in <ababcce9c7c7493983179782ee2b723a>:0\
    \ \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        // Write your code here\n    \
    \    return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"\
    }))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <15de952b725f42b2a5dbbb8e1fb21c9b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <15de952b725f42b2a5dbbb8e1fb21c9b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        // TODO: Implement this function\n\
    \        return \"\";\n    }\n    public static void Main(string[] args) {\n \
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"\
    }))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    aaaaaaa\", (string)\"bb\", (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\"\
    )));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\"\
    , (string)\"this\", (string)\"game\", (string)\"of\", (string)\"footbott\"}))).Equals((\"\
    footbott\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    we\", (string)\"are\", (string)\"gonna\", (string)\"rock\"}))).Equals((\"gonna\"\
    )));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"we\",\
    \ (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"\
    nation\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n\
    \    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"b\"}))).Equals((\"\
    b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\"\
    , (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <29883f5391e641b69239ae202ea30248>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <29883f5391e641b69239ae202ea30248>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        var max = words.Max(x => x.Distinct().Count());\n\
    \        return words.First(x => x.Distinct().Count() == max);\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"of\", (string)\"string\"}))).Equals((\"\
    string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <82604a51a1b64eb4b0f98e58dbf80726>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <82604a51a1b64eb4b0f98e58dbf80726>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        // Your code goes here\n     \
    \   int max = 0;\n        string maxString = \"\";\n        foreach (string word\
    \ in words) {\n            int count = 0;\n            foreach (char c in word)\
    \ {\n                if (!word.Contains(c)) {\n                    count++;\n\
    \                }\n            }\n            if (count > max) {\n          \
    \      max = count;\n                maxString = word;\n            }\n      \
    \  }\n        return maxString;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\"\
    , (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"\
    }))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    aaaaaaa\", (string)\"bb\", (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\"\
    )));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\"\
    , (string)\"this\", (string)\"game\", (string)\"of\", (string)\"footbott\"}))).Equals((\"\
    footbott\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    we\", (string)\"are\", (string)\"gonna\", (string)\"rock\"}))).Equals((\"gonna\"\
    )));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"we\",\
    \ (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"\
    nation\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n\
    \    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"b\"}))).Equals((\"\
    b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\"\
    , (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1f514743a5fc4f0996e98855604699ea>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1f514743a5fc4f0996e98855604699ea>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        // Your code goes here\n     \
    \   return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"\
    }))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d8966cc7ea80489e8bb4f761ed9f4219>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d8966cc7ea80489e8bb4f761ed9f4219>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        // Your code goes here\n     \
    \   return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"\
    }))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d8966cc7ea80489e8bb4f761ed9f4219>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d8966cc7ea80489e8bb4f761ed9f4219>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        string max = \"\";\n        int\
    \ max_count = 0;\n        foreach (string word in words) {\n            int count\
    \ = 0;\n            foreach (char c in word) {\n                if (word.IndexOf(c)\
    \ == word.LastIndexOf(c)) {\n                    count++;\n                }\n\
    \            }\n            if (count > max_count) {\n                max = word;\n\
    \                max_count = count;\n            }\n        }\n        return\
    \ max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"\
    }))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b38d762622ae4c62b8795fc4a439302e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b38d762622ae4c62b8795fc4a439302e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        string max = \"\";\n        int\
    \ max_count = 0;\n        foreach (string word in words) {\n            int count\
    \ = 0;\n            foreach (char c in word) {\n                if (word.IndexOf(c)\
    \ == word.LastIndexOf(c)) {\n                    count++;\n                }\n\
    \            }\n            if (count > max_count) {\n                max = word;\n\
    \                max_count = count;\n            }\n        }\n        return\
    \ max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"\
    }))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b38d762622ae4c62b8795fc4a439302e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b38d762622ae4c62b8795fc4a439302e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        // TODO: Implement this function\n\
    \        return \"\";\n    }\n    public static void Main(string[] args) {\n \
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"\
    }))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    aaaaaaa\", (string)\"bb\", (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\"\
    )));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\"\
    , (string)\"this\", (string)\"game\", (string)\"of\", (string)\"footbott\"}))).Equals((\"\
    footbott\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    we\", (string)\"are\", (string)\"gonna\", (string)\"rock\"}))).Equals((\"gonna\"\
    )));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"we\",\
    \ (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"\
    nation\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n\
    \    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"b\"}))).Equals((\"\
    b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\"\
    , (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <29883f5391e641b69239ae202ea30248>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <29883f5391e641b69239ae202ea30248>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        string max = \"\";\n        int\
    \ max_count = 0;\n        foreach (string word in words) {\n            int count\
    \ = 0;\n            foreach (char c in word) {\n                if (word.IndexOf(c)\
    \ == word.LastIndexOf(c)) {\n                    count++;\n                }\n\
    \            }\n            if (count > max_count) {\n                max = word;\n\
    \                max_count = count;\n            }\n        }\n        return\
    \ max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"\
    }))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b38d762622ae4c62b8795fc4a439302e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b38d762622ae4c62b8795fc4a439302e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        // Your code here\n        return\
    \ \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"\
    }))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5858beddf3a74782abd74cdab8211e69>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5858beddf3a74782abd74cdab8211e69>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        // Your code goes here.\n    \
    \    return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"\
    }))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7a0acf79d31d47de8e863f905ab512ee>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7a0acf79d31d47de8e863f905ab512ee>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        string max = words[0];\n     \
    \   int maxUnique = 0;\n        foreach (string word in words) {\n           \
    \ int unique = 0;\n            foreach (char c in word) {\n                if\
    \ (word.IndexOf(c) == word.LastIndexOf(c)) {\n                    unique++;\n\
    \                }\n            }\n            if (unique > maxUnique) {\n   \
    \             maxUnique = unique;\n                max = word;\n            }\n\
    \        }\n        return max;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\"\
    , (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"\
    }))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    aaaaaaa\", (string)\"bb\", (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\"\
    )));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\"\
    , (string)\"this\", (string)\"game\", (string)\"of\", (string)\"footbott\"}))).Equals((\"\
    footbott\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    we\", (string)\"are\", (string)\"gonna\", (string)\"rock\"}))).Equals((\"gonna\"\
    )));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"we\",\
    \ (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"\
    nation\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n\
    \    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"b\"}))).Equals((\"\
    b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\"\
    , (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <004ed8ee89b744b48aea0f44c5aa02b3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <004ed8ee89b744b48aea0f44c5aa02b3>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        string max = words[0];\n     \
    \   int maxCount = 0;\n        foreach (string word in words) {\n            int\
    \ count = 0;\n            foreach (char c in word) {\n                if (word.IndexOf(c)\
    \ == word.LastIndexOf(c)) {\n                    count++;\n                }\n\
    \            }\n            if (count > maxCount) {\n                maxCount\
    \ = count;\n                max = word;\n            }\n        }\n        return\
    \ max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"\
    }))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ee35aeac057a423d99c79c77e4c35008>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ee35aeac057a423d99c79c77e4c35008>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        // Your code goes here\n     \
    \   return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"\
    }))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d8966cc7ea80489e8bb4f761ed9f4219>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d8966cc7ea80489e8bb4f761ed9f4219>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        // Your code here\n        return\
    \ \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"\
    }))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5858beddf3a74782abd74cdab8211e69>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5858beddf3a74782abd74cdab8211e69>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        // TODO: Implement this function\n\
    \        return \"\";\n    }\n    public static void Main(string[] args) {\n \
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"\
    }))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    aaaaaaa\", (string)\"bb\", (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\"\
    )));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\"\
    , (string)\"this\", (string)\"game\", (string)\"of\", (string)\"footbott\"}))).Equals((\"\
    footbott\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    we\", (string)\"are\", (string)\"gonna\", (string)\"rock\"}))).Equals((\"gonna\"\
    )));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"we\",\
    \ (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"\
    nation\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n\
    \    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"b\"}))).Equals((\"\
    b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\"\
    , (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <29883f5391e641b69239ae202ea30248>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <29883f5391e641b69239ae202ea30248>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        // Your code goes here\n     \
    \   return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"\
    }))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d8966cc7ea80489e8bb4f761ed9f4219>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d8966cc7ea80489e8bb4f761ed9f4219>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        // your code goes here\n     \
    \   return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"\
    }))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <13bb066c113147edbd932fdc40032592>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <13bb066c113147edbd932fdc40032592>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        // TODO: Implement this function.\n\
    \        return \"\";\n    }\n    public static void Main(string[] args) {\n \
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"\
    }))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    aaaaaaa\", (string)\"bb\", (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\"\
    )));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\"\
    , (string)\"this\", (string)\"game\", (string)\"of\", (string)\"footbott\"}))).Equals((\"\
    footbott\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    we\", (string)\"are\", (string)\"gonna\", (string)\"rock\"}))).Equals((\"gonna\"\
    )));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"we\",\
    \ (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"\
    nation\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n\
    \    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"b\"}))).Equals((\"\
    b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\"\
    , (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <25c422cf164c4f5eae824fa225c3f6f2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <25c422cf164c4f5eae824fa225c3f6f2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        // TODO: Implement this function\n\
    \        return \"\";\n    }\n    public static void Main(string[] args) {\n \
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"\
    }))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    aaaaaaa\", (string)\"bb\", (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\"\
    )));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\"\
    , (string)\"this\", (string)\"game\", (string)\"of\", (string)\"footbott\"}))).Equals((\"\
    footbott\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    we\", (string)\"are\", (string)\"gonna\", (string)\"rock\"}))).Equals((\"gonna\"\
    )));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"we\",\
    \ (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"\
    nation\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n\
    \    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"b\"}))).Equals((\"\
    b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\"\
    , (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <29883f5391e641b69239ae202ea30248>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <29883f5391e641b69239ae202ea30248>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        string max = words[0];\n     \
    \   int max_unique = 0;\n        foreach (string word in words) {\n          \
    \  int unique = 0;\n            foreach (char c in word) {\n                if\
    \ (word.IndexOf(c) == word.LastIndexOf(c)) {\n                    unique++;\n\
    \                }\n            }\n            if (unique > max_unique) {\n  \
    \              max = word;\n                max_unique = unique;\n           \
    \ }\n        }\n        return max;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"\
    }))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    aaaaaaa\", (string)\"bb\", (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\"\
    )));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\"\
    , (string)\"this\", (string)\"game\", (string)\"of\", (string)\"footbott\"}))).Equals((\"\
    footbott\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    we\", (string)\"are\", (string)\"gonna\", (string)\"rock\"}))).Equals((\"gonna\"\
    )));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"we\",\
    \ (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"\
    nation\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n\
    \    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"b\"}))).Equals((\"\
    b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\"\
    , (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <92f6a756e4464200a1b5e0b22c5c6ccb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <92f6a756e4464200a1b5e0b22c5c6ccb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        // TODO: Implement this function\n\
    \        return \"\";\n    }\n    public static void Main(string[] args) {\n \
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"\
    }))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    aaaaaaa\", (string)\"bb\", (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\"\
    )));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\"\
    , (string)\"this\", (string)\"game\", (string)\"of\", (string)\"footbott\"}))).Equals((\"\
    footbott\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    we\", (string)\"are\", (string)\"gonna\", (string)\"rock\"}))).Equals((\"gonna\"\
    )));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"we\",\
    \ (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"\
    nation\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n\
    \    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"b\"}))).Equals((\"\
    b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\"\
    , (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <29883f5391e641b69239ae202ea30248>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <29883f5391e641b69239ae202ea30248>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        // TODO: Implement this function\n\
    \        return \"\";\n    }\n    public static void Main(string[] args) {\n \
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"\
    }))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    aaaaaaa\", (string)\"bb\", (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\"\
    )));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\"\
    , (string)\"this\", (string)\"game\", (string)\"of\", (string)\"footbott\"}))).Equals((\"\
    footbott\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    we\", (string)\"are\", (string)\"gonna\", (string)\"rock\"}))).Equals((\"gonna\"\
    )));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"we\",\
    \ (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"\
    nation\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n\
    \    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"b\"}))).Equals((\"\
    b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\"\
    , (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <29883f5391e641b69239ae202ea30248>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <29883f5391e641b69239ae202ea30248>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        string max = \"\";\n        int\
    \ max_count = 0;\n        foreach (string word in words) {\n            int count\
    \ = 0;\n            foreach (char c in word) {\n                if (word.IndexOf(c)\
    \ == word.LastIndexOf(c)) {\n                    count++;\n                }\n\
    \            }\n            if (count > max_count) {\n                max = word;\n\
    \                max_count = count;\n            }\n        }\n        return\
    \ max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"\
    }))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b38d762622ae4c62b8795fc4a439302e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b38d762622ae4c62b8795fc4a439302e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        // TODO: Implement this function\n\
    \        return \"\";\n    }\n    public static void Main(string[] args) {\n \
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"\
    }))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    aaaaaaa\", (string)\"bb\", (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\"\
    )));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\"\
    , (string)\"this\", (string)\"game\", (string)\"of\", (string)\"footbott\"}))).Equals((\"\
    footbott\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    we\", (string)\"are\", (string)\"gonna\", (string)\"rock\"}))).Equals((\"gonna\"\
    )));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"we\",\
    \ (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"\
    nation\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n\
    \    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"b\"}))).Equals((\"\
    b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\"\
    , (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <29883f5391e641b69239ae202ea30248>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <29883f5391e641b69239ae202ea30248>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        string max = \"\";\n        int\
    \ max_len = 0;\n        foreach (string word in words) {\n            int len\
    \ = word.Distinct().Count();\n            if (len > max_len) {\n             \
    \   max = word;\n                max_len = len;\n            }\n        }\n  \
    \      return max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"\
    }))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <bb9fc497094f40cc8e1713740ecdc3de>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <bb9fc497094f40cc8e1713740ecdc3de>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        string max = \"\";\n        int\
    \ max_count = 0;\n        foreach (string word in words) {\n            int count\
    \ = 0;\n            foreach (char c in word) {\n                if (word.IndexOf(c)\
    \ == word.LastIndexOf(c)) {\n                    count++;\n                }\n\
    \            }\n            if (count > max_count) {\n                max = word;\n\
    \                max_count = count;\n            }\n        }\n        return\
    \ max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"\
    }))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b38d762622ae4c62b8795fc4a439302e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b38d762622ae4c62b8795fc4a439302e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        // TODO: Implement this function\n\
    \        return \"\";\n    }\n    public static void Main(string[] args) {\n \
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"\
    }))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    aaaaaaa\", (string)\"bb\", (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\"\
    )));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\"\
    , (string)\"this\", (string)\"game\", (string)\"of\", (string)\"footbott\"}))).Equals((\"\
    footbott\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    we\", (string)\"are\", (string)\"gonna\", (string)\"rock\"}))).Equals((\"gonna\"\
    )));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"we\",\
    \ (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"\
    nation\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n\
    \    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"b\"}))).Equals((\"\
    b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\"\
    , (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <29883f5391e641b69239ae202ea30248>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <29883f5391e641b69239ae202ea30248>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        string max = \"\";\n        int\
    \ max_count = 0;\n        foreach (string word in words) {\n            int count\
    \ = 0;\n            foreach (char c in word) {\n                if (word.IndexOf(c)\
    \ == word.LastIndexOf(c)) {\n                    count++;\n                }\n\
    \            }\n            if (count > max_count) {\n                max = word;\n\
    \                max_count = count;\n            }\n        }\n        return\
    \ max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"\
    }))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b38d762622ae4c62b8795fc4a439302e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b38d762622ae4c62b8795fc4a439302e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        // Your code goes here\n     \
    \   return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"\
    }))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d8966cc7ea80489e8bb4f761ed9f4219>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d8966cc7ea80489e8bb4f761ed9f4219>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        string max = \"\";\n        int\
    \ max_count = 0;\n        foreach (string word in words) {\n            int count\
    \ = 0;\n            foreach (char c in word) {\n                if (word.IndexOf(c)\
    \ == word.LastIndexOf(c)) {\n                    count++;\n                }\n\
    \            }\n            if (count > max_count) {\n                max = word;\n\
    \                max_count = count;\n            }\n        }\n        return\
    \ max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"\
    }))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b38d762622ae4c62b8795fc4a439302e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b38d762622ae4c62b8795fc4a439302e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        // Your code goes here\n     \
    \   return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"\
    }))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d8966cc7ea80489e8bb4f761ed9f4219>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d8966cc7ea80489e8bb4f761ed9f4219>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        // Write your code here\n    \
    \    return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"\
    }))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <15de952b725f42b2a5dbbb8e1fb21c9b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <15de952b725f42b2a5dbbb8e1fb21c9b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        // TODO: Implement this function\n\
    \        return \"\";\n    }\n    public static void Main(string[] args) {\n \
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"\
    }))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    aaaaaaa\", (string)\"bb\", (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\"\
    )));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\"\
    , (string)\"this\", (string)\"game\", (string)\"of\", (string)\"footbott\"}))).Equals((\"\
    footbott\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    we\", (string)\"are\", (string)\"gonna\", (string)\"rock\"}))).Equals((\"gonna\"\
    )));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"we\",\
    \ (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"\
    nation\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n\
    \    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"b\"}))).Equals((\"\
    b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\"\
    , (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <29883f5391e641b69239ae202ea30248>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <29883f5391e641b69239ae202ea30248>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        // TODO: Implement this function.\n\
    \        string max = \"\";\n        int max_count = 0;\n        foreach (string\
    \ word in words) {\n            int count = 0;\n            foreach (char c in\
    \ word) {\n                if (word.IndexOf(c) == word.LastIndexOf(c)) {\n   \
    \                 count++;\n                }\n            }\n            if (count\
    \ > max_count) {\n                max = word;\n                max_count = count;\n\
    \            }\n        }\n        return max;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"\
    }))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    aaaaaaa\", (string)\"bb\", (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\"\
    )));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\"\
    , (string)\"this\", (string)\"game\", (string)\"of\", (string)\"footbott\"}))).Equals((\"\
    footbott\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    we\", (string)\"are\", (string)\"gonna\", (string)\"rock\"}))).Equals((\"gonna\"\
    )));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"we\",\
    \ (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"\
    nation\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n\
    \    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"b\"}))).Equals((\"\
    b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\"\
    , (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2e2cd1f068da40b2be926ca8582a5a17>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2e2cd1f068da40b2be926ca8582a5a17>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        string max = \"\";\n        int\
    \ max_count = 0;\n        foreach (string word in words) {\n            int count\
    \ = 0;\n            foreach (char c in word) {\n                if (word.IndexOf(c)\
    \ == word.LastIndexOf(c)) {\n                    count++;\n                }\n\
    \            }\n            if (count > max_count) {\n                max = word;\n\
    \                max_count = count;\n            }\n        }\n        return\
    \ max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"\
    }))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b38d762622ae4c62b8795fc4a439302e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b38d762622ae4c62b8795fc4a439302e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        // TODO: Implement this function\n\
    \        return \"\";\n    }\n    public static void Main(string[] args) {\n \
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"\
    }))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    aaaaaaa\", (string)\"bb\", (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\"\
    )));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\"\
    , (string)\"this\", (string)\"game\", (string)\"of\", (string)\"footbott\"}))).Equals((\"\
    footbott\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    we\", (string)\"are\", (string)\"gonna\", (string)\"rock\"}))).Equals((\"gonna\"\
    )));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"we\",\
    \ (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"\
    nation\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n\
    \    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"b\"}))).Equals((\"\
    b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\"\
    , (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <29883f5391e641b69239ae202ea30248>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <29883f5391e641b69239ae202ea30248>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        // TODO: Implement this function.\n\
    \        string max = \"\";\n        int maxCount = 0;\n        for (int i = 0;\
    \ i < words.Count; i++) {\n            string word = words[i];\n            int\
    \ count = 0;\n            for (int j = 0; j < word.Length; j++) {\n          \
    \      char c = word[j];\n                if (word.IndexOf(c) == j) {\n      \
    \              count++;\n                }\n            }\n            if (count\
    \ > maxCount) {\n                maxCount = count;\n                max = word;\n\
    \            }\n        }\n        return max;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"\
    }))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    aaaaaaa\", (string)\"bb\", (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\"\
    )));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\"\
    , (string)\"this\", (string)\"game\", (string)\"of\", (string)\"footbott\"}))).Equals((\"\
    footbott\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    we\", (string)\"are\", (string)\"gonna\", (string)\"rock\"}))).Equals((\"gonna\"\
    )));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"we\",\
    \ (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"\
    nation\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n\
    \    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"b\"}))).Equals((\"\
    b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\"\
    , (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a8c7cc917c7748e286419eb7e03e6b85>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a8c7cc917c7748e286419eb7e03e6b85>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        string max = words[0];\n     \
    \   int max_count = max.Distinct().Count();\n        for (int i = 1; i < words.Count;\
    \ i++) {\n            int count = words[i].Distinct().Count();\n            if\
    \ (count > max_count) {\n                max = words[i];\n                max_count\
    \ = count;\n            }\n        }\n        return max;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"\
    }))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    aaaaaaa\", (string)\"bb\", (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\"\
    )));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\"\
    , (string)\"this\", (string)\"game\", (string)\"of\", (string)\"footbott\"}))).Equals((\"\
    footbott\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    we\", (string)\"are\", (string)\"gonna\", (string)\"rock\"}))).Equals((\"gonna\"\
    )));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"we\",\
    \ (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"\
    nation\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n\
    \    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"b\"}))).Equals((\"\
    b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\"\
    , (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3dfb4c81399047e4898c61eebd778c5a>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3dfb4c81399047e4898c61eebd778c5a>:0 \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        // TODO: implement\n        return\
    \ \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"\
    }))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7516963944e148a0b800112fd184b2b1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7516963944e148a0b800112fd184b2b1>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        int max = 0;\n        string maxWord\
    \ = \"\";\n        foreach (string word in words) {\n            int unique =\
    \ 0;\n            foreach (char c in word) {\n                if (word.IndexOf(c)\
    \ == word.LastIndexOf(c)) {\n                    unique++;\n                }\n\
    \            }\n            if (unique > max) {\n                max = unique;\n\
    \                maxWord = word;\n            }\n        }\n        return maxWord;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"\
    }))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a54786a5c27d44cf83b72ee2ca2e6231>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a54786a5c27d44cf83b72ee2ca2e6231>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798278
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        string max = \"\";\n        int\
    \ max_count = 0;\n        foreach (string word in words) {\n            int count\
    \ = 0;\n            foreach (char c in word) {\n                if (word.IndexOf(c)\
    \ == word.LastIndexOf(c)) {\n                    count++;\n                }\n\
    \            }\n            if (count > max_count) {\n                max = word;\n\
    \                max_count = count;\n            }\n        }\n        return\
    \ max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"\
    }))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b38d762622ae4c62b8795fc4a439302e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b38d762622ae4c62b8795fc4a439302e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        // Your code goes here\n     \
    \   return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"\
    }))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d8966cc7ea80489e8bb4f761ed9f4219>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d8966cc7ea80489e8bb4f761ed9f4219>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        // TODO: Implement this function\n\
    \        return null;\n    }\n    public static void Main(string[] args) {\n \
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"\
    }))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    aaaaaaa\", (string)\"bb\", (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\"\
    )));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\"\
    , (string)\"this\", (string)\"game\", (string)\"of\", (string)\"footbott\"}))).Equals((\"\
    footbott\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    we\", (string)\"are\", (string)\"gonna\", (string)\"rock\"}))).Equals((\"gonna\"\
    )));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"we\",\
    \ (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"\
    nation\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n\
    \    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"b\"}))).Equals((\"\
    b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\"\
    , (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x00029] in <e6f5e082b2e74c0a91ced62165981790>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x00029] in <e6f5e082b2e74c0a91ced62165981790>:0\
    \ \n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        // TODO: Implement this function.\n\
    \        return \"\";\n    }\n    public static void Main(string[] args) {\n \
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"\
    }))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    aaaaaaa\", (string)\"bb\", (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\"\
    )));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\"\
    , (string)\"this\", (string)\"game\", (string)\"of\", (string)\"footbott\"}))).Equals((\"\
    footbott\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    we\", (string)\"are\", (string)\"gonna\", (string)\"rock\"}))).Equals((\"gonna\"\
    )));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"we\",\
    \ (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"\
    nation\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n\
    \    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"b\"}))).Equals((\"\
    b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\"\
    , (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <25c422cf164c4f5eae824fa225c3f6f2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <25c422cf164c4f5eae824fa225c3f6f2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        int max = 0;\n        string maxWord\
    \ = \"\";\n        foreach (string word in words) {\n            int count = 0;\n\
    \            foreach (char c in word) {\n                if (word.IndexOf(c) ==\
    \ word.LastIndexOf(c)) {\n                    count++;\n                }\n  \
    \          }\n            if (count > max) {\n                max = count;\n \
    \               maxWord = word;\n            }\n        }\n        return maxWord;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"\
    }))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9179c4fb2e6547a294d3780a29b453f2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9179c4fb2e6547a294d3780a29b453f2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        int max = 0;\n        string maxWord\
    \ = \"\";\n        foreach (string word in words) {\n            int unique =\
    \ 0;\n            foreach (char c in word) {\n                if (word.IndexOf(c)\
    \ == word.LastIndexOf(c)) {\n                    unique++;\n                }\n\
    \            }\n            if (unique > max) {\n                max = unique;\n\
    \                maxWord = word;\n            }\n        }\n        return maxWord;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"\
    }))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a54786a5c27d44cf83b72ee2ca2e6231>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a54786a5c27d44cf83b72ee2ca2e6231>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798278
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        // Your code goes here.\n    \
    \    return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"\
    }))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7a0acf79d31d47de8e863f905ab512ee>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7a0acf79d31d47de8e863f905ab512ee>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        // TODO: Implement this function\n\
    \        return \"\";\n    }\n    public static void Main(string[] args) {\n \
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"\
    }))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    aaaaaaa\", (string)\"bb\", (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\"\
    )));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\"\
    , (string)\"this\", (string)\"game\", (string)\"of\", (string)\"footbott\"}))).Equals((\"\
    footbott\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    we\", (string)\"are\", (string)\"gonna\", (string)\"rock\"}))).Equals((\"gonna\"\
    )));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"we\",\
    \ (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"\
    nation\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n\
    \    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"b\"}))).Equals((\"\
    b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\"\
    , (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <29883f5391e641b69239ae202ea30248>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <29883f5391e641b69239ae202ea30248>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        // Your code goes here\n     \
    \   return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"\
    }))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d8966cc7ea80489e8bb4f761ed9f4219>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d8966cc7ea80489e8bb4f761ed9f4219>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        string max = words[0];\n     \
    \   int max_count = 0;\n        foreach (string word in words) {\n           \
    \ int count = 0;\n            foreach (char c in word) {\n                if (word.IndexOf(c)\
    \ == word.LastIndexOf(c)) {\n                    count++;\n                }\n\
    \            }\n            if (count > max_count) {\n                max = word;\n\
    \                max_count = count;\n            }\n        }\n        return\
    \ max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"\
    }))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <797b89bd33bf4b29b2975fcb310bf5dd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <797b89bd33bf4b29b2975fcb310bf5dd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        // Your code goes here.\n    \
    \    return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"\
    }))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7a0acf79d31d47de8e863f905ab512ee>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7a0acf79d31d47de8e863f905ab512ee>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        // Your code goes here.\n    \
    \    return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"\
    }))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7a0acf79d31d47de8e863f905ab512ee>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7a0acf79d31d47de8e863f905ab512ee>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        // TODO: Implement this function\n\
    \        return \"\";\n    }\n    public static void Main(string[] args) {\n \
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"\
    }))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    aaaaaaa\", (string)\"bb\", (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\"\
    )));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\"\
    , (string)\"this\", (string)\"game\", (string)\"of\", (string)\"footbott\"}))).Equals((\"\
    footbott\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    we\", (string)\"are\", (string)\"gonna\", (string)\"rock\"}))).Equals((\"gonna\"\
    )));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"we\",\
    \ (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"\
    nation\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n\
    \    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"b\"}))).Equals((\"\
    b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\"\
    , (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <29883f5391e641b69239ae202ea30248>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <29883f5391e641b69239ae202ea30248>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        string max = \"\";\n        int\
    \ max_count = 0;\n        foreach (string word in words) {\n            int count\
    \ = 0;\n            foreach (char c in word) {\n                if (word.IndexOf(c)\
    \ == word.LastIndexOf(c)) {\n                    count++;\n                }\n\
    \            }\n            if (count > max_count) {\n                max = word;\n\
    \                max_count = count;\n            }\n        }\n        return\
    \ max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"\
    }))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b38d762622ae4c62b8795fc4a439302e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b38d762622ae4c62b8795fc4a439302e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        string max = words[0];\n     \
    \   int max_count = 0;\n        for (int i = 0; i < words.Count; i++) {\n    \
    \        string word = words[i];\n            int count = 0;\n            for\
    \ (int j = 0; j < word.Length; j++) {\n                char c = word[j];\n   \
    \             if (word.IndexOf(c) == j) {\n                    count++;\n    \
    \            }\n            }\n            if (count > max_count) {\n        \
    \        max = word;\n                max_count = count;\n            }\n    \
    \    }\n        return max;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\"\
    , (string)\"of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"\
    }))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    aaaaaaa\", (string)\"bb\", (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\"\
    )));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\"\
    , (string)\"this\", (string)\"game\", (string)\"of\", (string)\"footbott\"}))).Equals((\"\
    footbott\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    we\", (string)\"are\", (string)\"gonna\", (string)\"rock\"}))).Equals((\"gonna\"\
    )));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"we\",\
    \ (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"\
    nation\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n\
    \    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"b\"}))).Equals((\"\
    b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\"\
    , (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cd5aecc3f1af481e9ee9ce3325b9f0b4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cd5aecc3f1af481e9ee9ce3325b9f0b4>:0 \n"
  stdout: ''
  timestamp: 1659798278
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        int max = 0;\n        string maxWord\
    \ = \"\";\n        foreach (string word in words) {\n            int count = 0;\n\
    \            foreach (char c in word) {\n                if (word.IndexOf(c) ==\
    \ word.LastIndexOf(c)) {\n                    count++;\n                }\n  \
    \          }\n            if (count > max) {\n                max = count;\n \
    \               maxWord = word;\n            }\n        }\n        return maxWord;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"\
    }))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9179c4fb2e6547a294d3780a29b453f2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9179c4fb2e6547a294d3780a29b453f2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        // TODO: Implement this function\n\
    \        return \"\";\n    }\n    public static void Main(string[] args) {\n \
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"\
    }))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    aaaaaaa\", (string)\"bb\", (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\"\
    )));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\"\
    , (string)\"this\", (string)\"game\", (string)\"of\", (string)\"footbott\"}))).Equals((\"\
    footbott\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    we\", (string)\"are\", (string)\"gonna\", (string)\"rock\"}))).Equals((\"gonna\"\
    )));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"we\",\
    \ (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"\
    nation\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n\
    \    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"b\"}))).Equals((\"\
    b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\"\
    , (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <29883f5391e641b69239ae202ea30248>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <29883f5391e641b69239ae202ea30248>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        // TODO: implement this function\n\
    \        return \"\";\n    }\n    public static void Main(string[] args) {\n \
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"\
    }))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    aaaaaaa\", (string)\"bb\", (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\"\
    )));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\"\
    , (string)\"this\", (string)\"game\", (string)\"of\", (string)\"footbott\"}))).Equals((\"\
    footbott\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    we\", (string)\"are\", (string)\"gonna\", (string)\"rock\"}))).Equals((\"gonna\"\
    )));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"we\",\
    \ (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"\
    nation\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n\
    \    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"b\"}))).Equals((\"\
    b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\"\
    , (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <76965491ed1c43fcaf15f77a4024e51e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <76965491ed1c43fcaf15f77a4024e51e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        // TODO: Implement this function.\n\
    \        return \"\";\n    }\n    public static void Main(string[] args) {\n \
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"\
    }))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    aaaaaaa\", (string)\"bb\", (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\"\
    )));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\"\
    , (string)\"this\", (string)\"game\", (string)\"of\", (string)\"footbott\"}))).Equals((\"\
    footbott\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    we\", (string)\"are\", (string)\"gonna\", (string)\"rock\"}))).Equals((\"gonna\"\
    )));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"we\",\
    \ (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"\
    nation\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n\
    \    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"b\"}))).Equals((\"\
    b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\"\
    , (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <25c422cf164c4f5eae824fa225c3f6f2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <25c422cf164c4f5eae824fa225c3f6f2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        string max = \"\";\n        int\
    \ max_count = 0;\n        foreach (string word in words) {\n            int count\
    \ = 0;\n            foreach (char c in word) {\n                if (word.IndexOf(c)\
    \ == word.LastIndexOf(c)) {\n                    count++;\n                }\n\
    \            }\n            if (count > max_count) {\n                max = word;\n\
    \                max_count = count;\n            }\n        }\n        return\
    \ max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"\
    }))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b38d762622ae4c62b8795fc4a439302e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b38d762622ae4c62b8795fc4a439302e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        // Your code here\n        return\
    \ \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"\
    }))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5858beddf3a74782abd74cdab8211e69>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5858beddf3a74782abd74cdab8211e69>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        // Your code goes here\n     \
    \   return null;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"\
    }))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x00029] in <ababcce9c7c7493983179782ee2b723a>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x00029] in <ababcce9c7c7493983179782ee2b723a>:0\
    \ \n"
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        // TODO: Implement this function\n\
    \        return \"\";\n    }\n    public static void Main(string[] args) {\n \
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"\
    }))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    aaaaaaa\", (string)\"bb\", (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\"\
    )));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\"\
    , (string)\"this\", (string)\"game\", (string)\"of\", (string)\"footbott\"}))).Equals((\"\
    footbott\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    we\", (string)\"are\", (string)\"gonna\", (string)\"rock\"}))).Equals((\"gonna\"\
    )));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"we\",\
    \ (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"\
    nation\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n\
    \    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"b\"}))).Equals((\"\
    b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\"\
    , (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <29883f5391e641b69239ae202ea30248>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <29883f5391e641b69239ae202ea30248>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        int max = 0;\n        string maxStr\
    \ = \"\";\n        foreach (string word in words) {\n            int count = word.Distinct().Count();\n\
    \            if (count > max) {\n                max = count;\n              \
    \  maxStr = word;\n            }\n        }\n        return maxStr;\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"of\", (string)\"string\"}))).Equals((\"\
    string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <146b80495dac480c937b361a2edd214b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <146b80495dac480c937b361a2edd214b>:0 \n"
  stdout: ''
  timestamp: 1659798278
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        // Your code here\n        return\
    \ \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"\
    }))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5858beddf3a74782abd74cdab8211e69>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5858beddf3a74782abd74cdab8211e69>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        int max = 0;\n        string maxWord\
    \ = \"\";\n        foreach (string word in words) {\n            if (word.Distinct().Count()\
    \ > max) {\n                max = word.Distinct().Count();\n                maxWord\
    \ = word;\n            }\n        }\n        return maxWord;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"of\", (string)\"string\"}))).Equals((\"\
    string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7b76462f7d90457cb0beecff7156a9f4>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7b76462f7d90457cb0beecff7156a9f4>:0 \n"
  stdout: ''
  timestamp: 1659798278
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        // TODO: Implement this function\n\
    \        return \"\";\n    }\n    public static void Main(string[] args) {\n \
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"\
    }))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    aaaaaaa\", (string)\"bb\", (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\"\
    )));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\"\
    , (string)\"this\", (string)\"game\", (string)\"of\", (string)\"footbott\"}))).Equals((\"\
    footbott\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    we\", (string)\"are\", (string)\"gonna\", (string)\"rock\"}))).Equals((\"gonna\"\
    )));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"we\",\
    \ (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"\
    nation\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n\
    \    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"b\"}))).Equals((\"\
    b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\"\
    , (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <29883f5391e641b69239ae202ea30248>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <29883f5391e641b69239ae202ea30248>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        // TODO: Implement this function\n\
    \        return null;\n    }\n    public static void Main(string[] args) {\n \
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"\
    }))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    aaaaaaa\", (string)\"bb\", (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\"\
    )));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\"\
    , (string)\"this\", (string)\"game\", (string)\"of\", (string)\"footbott\"}))).Equals((\"\
    footbott\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    we\", (string)\"are\", (string)\"gonna\", (string)\"rock\"}))).Equals((\"gonna\"\
    )));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"we\",\
    \ (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"\
    nation\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n\
    \    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"b\"}))).Equals((\"\
    b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\"\
    , (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x00029] in <e6f5e082b2e74c0a91ced62165981790>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x00029] in <e6f5e082b2e74c0a91ced62165981790>:0\
    \ \n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        // Your code goes here\n     \
    \   return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"\
    }))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d8966cc7ea80489e8bb4f761ed9f4219>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d8966cc7ea80489e8bb4f761ed9f4219>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        int max = 0;\n        string maxWord\
    \ = \"\";\n        foreach (string word in words) {\n            int unique =\
    \ 0;\n            foreach (char c in word) {\n                if (word.IndexOf(c)\
    \ == word.LastIndexOf(c)) {\n                    unique++;\n                }\n\
    \            }\n            if (unique > max) {\n                max = unique;\n\
    \                maxWord = word;\n            }\n        }\n        return maxWord;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"\
    }))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a54786a5c27d44cf83b72ee2ca2e6231>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a54786a5c27d44cf83b72ee2ca2e6231>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798278
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        string max = \"\";\n        int\
    \ max_unique = 0;\n        foreach (string word in words) {\n            int unique\
    \ = 0;\n            foreach (char c in word) {\n                if (word.IndexOf(c)\
    \ == word.LastIndexOf(c)) {\n                    unique++;\n                }\n\
    \            }\n            if (unique > max_unique) {\n                max =\
    \ word;\n                max_unique = unique;\n            }\n        }\n    \
    \    return max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"\
    }))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <aa913bb1f10545aa9ded914297530fea>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <aa913bb1f10545aa9ded914297530fea>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        string max = \"\";\n        int\
    \ max_count = 0;\n        foreach (string word in words) {\n            int count\
    \ = 0;\n            foreach (char c in word) {\n                if (word.IndexOf(c)\
    \ == word.LastIndexOf(c)) {\n                    count++;\n                }\n\
    \            }\n            if (count > max_count) {\n                max = word;\n\
    \                max_count = count;\n            }\n        }\n        return\
    \ max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"\
    }))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b38d762622ae4c62b8795fc4a439302e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b38d762622ae4c62b8795fc4a439302e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        return words.OrderBy(x => x.Distinct().Count()).ThenBy(x\
    \ => x).Last();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"\
    }))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a5d13a0e13e4437c88fae615198825f2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a5d13a0e13e4437c88fae615198825f2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        // Your code goes here\n     \
    \   return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"\
    }))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d8966cc7ea80489e8bb4f761ed9f4219>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d8966cc7ea80489e8bb4f761ed9f4219>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        // Your code goes here\n     \
    \   return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"\
    }))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d8966cc7ea80489e8bb4f761ed9f4219>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d8966cc7ea80489e8bb4f761ed9f4219>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        // your code here\n        return\
    \ \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"\
    }))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9520a093a650469ea87ba767207e103e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9520a093a650469ea87ba767207e103e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        // Your code goes here.\n    \
    \    return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"\
    }))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7a0acf79d31d47de8e863f905ab512ee>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7a0acf79d31d47de8e863f905ab512ee>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        string max = \"\";\n        int\
    \ maxCount = 0;\n        foreach (string word in words) {\n            int count\
    \ = 0;\n            foreach (char c in word) {\n                if (word.IndexOf(c)\
    \ == word.LastIndexOf(c)) {\n                    count++;\n                }\n\
    \            }\n            if (count > maxCount) {\n                maxCount\
    \ = count;\n                max = word;\n            }\n        }\n        return\
    \ max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"\
    }))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1d2bda14969149f4bc789c73a5234665>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <1d2bda14969149f4bc789c73a5234665>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798278
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        // your code here\n        return\
    \ \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"\
    }))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9520a093a650469ea87ba767207e103e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9520a093a650469ea87ba767207e103e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        // YOUR CODE HERE\n        return\
    \ \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"\
    }))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <315f5e8c0a764790a596af73689af921>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <315f5e8c0a764790a596af73689af921>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798278
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        int max = 0;\n        string result\
    \ = \"\";\n        foreach (string word in words) {\n            if (word.Distinct().Count()\
    \ > max) {\n                max = word.Distinct().Count();\n                result\
    \ = word;\n            }\n        }\n        return result;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"of\", (string)\"string\"}))).Equals((\"\
    string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3e99a2292f654661a2ef4987ea3b14e5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <3e99a2292f654661a2ef4987ea3b14e5>:0 \n"
  stdout: ''
  timestamp: 1659798278
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        int max = 0;\n        string maxWord\
    \ = \"\";\n        foreach (string word in words) {\n            int count = 0;\n\
    \            foreach (char c in word) {\n                if (word.IndexOf(c) ==\
    \ word.LastIndexOf(c)) {\n                    count++;\n                }\n  \
    \          }\n            if (count > max) {\n                max = count;\n \
    \               maxWord = word;\n            }\n        }\n        return maxWord;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"\
    }))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9179c4fb2e6547a294d3780a29b453f2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9179c4fb2e6547a294d3780a29b453f2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        // TODO: Implement this function\n\
    \        return null;\n    }\n    public static void Main(string[] args) {\n \
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"\
    }))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    aaaaaaa\", (string)\"bb\", (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\"\
    )));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\"\
    , (string)\"this\", (string)\"game\", (string)\"of\", (string)\"footbott\"}))).Equals((\"\
    footbott\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    we\", (string)\"are\", (string)\"gonna\", (string)\"rock\"}))).Equals((\"gonna\"\
    )));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"we\",\
    \ (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"\
    nation\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n\
    \    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"b\"}))).Equals((\"\
    b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\"\
    , (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x00029] in <e6f5e082b2e74c0a91ced62165981790>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x00029] in <e6f5e082b2e74c0a91ced62165981790>:0\
    \ \n"
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        // Your code goes here\n     \
    \   return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"\
    }))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d8966cc7ea80489e8bb4f761ed9f4219>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d8966cc7ea80489e8bb4f761ed9f4219>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        string max = words[0];\n     \
    \   int max_count = 0;\n        foreach (string word in words) {\n           \
    \ int count = 0;\n            foreach (char c in word) {\n                if (word.IndexOf(c)\
    \ == word.LastIndexOf(c)) {\n                    count++;\n                }\n\
    \            }\n            if (count > max_count) {\n                max = word;\n\
    \                max_count = count;\n            }\n        }\n        return\
    \ max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"\
    }))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <797b89bd33bf4b29b2975fcb310bf5dd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <797b89bd33bf4b29b2975fcb310bf5dd>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798277
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        // TODO: Implement this function\n\
    \        return \"\";\n    }\n    public static void Main(string[] args) {\n \
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"\
    }))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    aaaaaaa\", (string)\"bb\", (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\"\
    )));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\"\
    , (string)\"this\", (string)\"game\", (string)\"of\", (string)\"footbott\"}))).Equals((\"\
    footbott\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    we\", (string)\"are\", (string)\"gonna\", (string)\"rock\"}))).Equals((\"gonna\"\
    )));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"we\",\
    \ (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"\
    nation\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n\
    \    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"b\"}))).Equals((\"\
    b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\"\
    , (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <29883f5391e641b69239ae202ea30248>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <29883f5391e641b69239ae202ea30248>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        // TODO: Implement this function\n\
    \        return \"\";\n    }\n    public static void Main(string[] args) {\n \
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"\
    }))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    aaaaaaa\", (string)\"bb\", (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\"\
    )));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\"\
    , (string)\"this\", (string)\"game\", (string)\"of\", (string)\"footbott\"}))).Equals((\"\
    footbott\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    we\", (string)\"are\", (string)\"gonna\", (string)\"rock\"}))).Equals((\"gonna\"\
    )));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"we\",\
    \ (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"\
    nation\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n\
    \    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"b\"}))).Equals((\"\
    b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\"\
    , (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <29883f5391e641b69239ae202ea30248>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <29883f5391e641b69239ae202ea30248>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        int max = 0;\n        string maxWord\
    \ = \"\";\n        foreach (string word in words) {\n            int count = 0;\n\
    \            foreach (char c in word) {\n                if (word.IndexOf(c) ==\
    \ word.LastIndexOf(c)) {\n                    count++;\n                }\n  \
    \          }\n            if (count > max) {\n                max = count;\n \
    \               maxWord = word;\n            }\n        }\n        return maxWord;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"\
    }))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9179c4fb2e6547a294d3780a29b453f2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9179c4fb2e6547a294d3780a29b453f2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        string max = \"\";\n        int\
    \ max_count = 0;\n        foreach (string word in words) {\n            int count\
    \ = 0;\n            foreach (char c in word) {\n                if (word.IndexOf(c)\
    \ == word.LastIndexOf(c)) {\n                    count++;\n                }\n\
    \            }\n            if (count > max_count) {\n                max = word;\n\
    \                max_count = count;\n            }\n        }\n        return\
    \ max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"\
    }))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b38d762622ae4c62b8795fc4a439302e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b38d762622ae4c62b8795fc4a439302e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        // TODO: Implement this function.\n\
    \        return \"\";\n    }\n    public static void Main(string[] args) {\n \
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"\
    }))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    aaaaaaa\", (string)\"bb\", (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\"\
    )));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\"\
    , (string)\"this\", (string)\"game\", (string)\"of\", (string)\"footbott\"}))).Equals((\"\
    footbott\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    we\", (string)\"are\", (string)\"gonna\", (string)\"rock\"}))).Equals((\"gonna\"\
    )));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"we\",\
    \ (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"\
    nation\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n\
    \    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"b\"}))).Equals((\"\
    b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\"\
    , (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <25c422cf164c4f5eae824fa225c3f6f2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <25c422cf164c4f5eae824fa225c3f6f2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        // Write your code here.\n   \
    \     return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"\
    }))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fe5585883d484461af6e5ffd8df31a9f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <fe5585883d484461af6e5ffd8df31a9f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798278
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        string max = \"\";\n        int\
    \ max_count = 0;\n        foreach (string word in words) {\n            int count\
    \ = 0;\n            foreach (char c in word) {\n                if (word.IndexOf(c)\
    \ == word.LastIndexOf(c)) {\n                    count++;\n                }\n\
    \            }\n            if (count > max_count) {\n                max = word;\n\
    \                max_count = count;\n            }\n        }\n        return\
    \ max;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"\
    }))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b38d762622ae4c62b8795fc4a439302e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b38d762622ae4c62b8795fc4a439302e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        // TODO: Implement this function\n\
    \        return \"\";\n    }\n    public static void Main(string[] args) {\n \
    \   Debug.Assert(FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"}))).Equals((\"string\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"enam\", (string)\"game\"\
    }))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    aaaaaaa\", (string)\"bb\", (string)\"cc\"}))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"abc\", (string)\"cba\"}))).Equals((\"abc\"\
    )));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\"\
    , (string)\"this\", (string)\"game\", (string)\"of\", (string)\"footbott\"}))).Equals((\"\
    footbott\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    we\", (string)\"are\", (string)\"gonna\", (string)\"rock\"}))).Equals((\"gonna\"\
    )));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"we\",\
    \ (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"nation\"}))).Equals((\"\
    nation\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"this\")));\n\
    \    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"b\"}))).Equals((\"\
    b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"play\"\
    , (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <29883f5391e641b69239ae202ea30248>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <29883f5391e641b69239ae202ea30248>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        // Your code goes here.\n    \
    \    return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"\
    }))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7a0acf79d31d47de8e863f905ab512ee>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <7a0acf79d31d47de8e863f905ab512ee>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        int max = 0;\n        string maxWord\
    \ = \"\";\n        foreach (string word in words) {\n            int count = 0;\n\
    \            foreach (char c in word) {\n                if (word.IndexOf(c) ==\
    \ word.LastIndexOf(c)) {\n                    count++;\n                }\n  \
    \          }\n            if (count > max) {\n                max = count;\n \
    \               maxWord = word;\n            }\n        }\n        return maxWord;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"\
    }))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9179c4fb2e6547a294d3780a29b453f2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9179c4fb2e6547a294d3780a29b453f2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        // Your code goes here\n     \
    \   return \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"\
    }))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d8966cc7ea80489e8bb4f761ed9f4219>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <d8966cc7ea80489e8bb4f761ed9f4219>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Write a function that accepts a list of strings.\n   \
    \ // The list contains different words. Return the word with maximum number\n\
    \    // of unique characters. If multiple strings have maximum number of unique\n\
    \    // characters, return the one which comes first in lexicographical order.\n\
    \    // >>> FindMax((new List<string>(new string[]{(string)\"name\", (string)\"\
    of\", (string)\"string\"})))\n    // (\"string\")\n    // >>> FindMax((new List<string>(new\
    \ string[]{(string)\"name\", (string)\"enam\", (string)\"game\"})))\n    // (\"\
    enam\")\n    // >>> FindMax((new List<string>(new string[]{(string)\"aaaaaaa\"\
    , (string)\"bb\", (string)\"cc\"})))\n    // (\"aaaaaaa\")\n    public static\
    \ string FindMax(List<string> words) {\n        // Your code here\n        return\
    \ \"\";\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"name\", (string)\"of\", (string)\"string\"\
    }))).Equals((\"string\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    name\", (string)\"enam\", (string)\"game\"}))).Equals((\"enam\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"aaaaaaa\", (string)\"bb\", (string)\"cc\"\
    }))).Equals((\"aaaaaaa\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    abc\", (string)\"cba\"}))).Equals((\"abc\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"play\", (string)\"this\", (string)\"game\"\
    , (string)\"of\", (string)\"footbott\"}))).Equals((\"footbott\")));\n    Debug.Assert(FindMax((new\
    \ List<string>(new string[]{(string)\"we\", (string)\"are\", (string)\"gonna\"\
    , (string)\"rock\"}))).Equals((\"gonna\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"we\", (string)\"are\", (string)\"a\", (string)\"mad\", (string)\"\
    nation\"}))).Equals((\"nation\")));\n    Debug.Assert(FindMax((new List<string>(new\
    \ string[]{(string)\"this\", (string)\"is\", (string)\"a\", (string)\"prrk\"}))).Equals((\"\
    this\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    b\"}))).Equals((\"b\")));\n    Debug.Assert(FindMax((new List<string>(new string[]{(string)\"\
    play\", (string)\"play\", (string)\"play\"}))).Equals((\"play\")));\n    }\n\n\
    }\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5858beddf3a74782abd74cdab8211e69>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <5858beddf3a74782abd74cdab8211e69>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798276

name: HumanEval_51_remove_vowels
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // remove_vowels is a function that takes string and returns string\
  \ without vowels.\n    // >>> RemoveVowels((\"\"))\n    // (\"\")\n    // >>> RemoveVowels((\"\
  abcdef\"))\n    // (\"bcdf\")\n    // >>> RemoveVowels((\"aaaaa\"))\n    // (\"\"\
  )\n    // >>> RemoveVowels((\"aaBAA\"))\n    // (\"B\")\n    // >>> RemoveVowels((\"\
  zbcd\"))\n    // (\"zbcd\")\n    public static string RemoveVowels(string text)\
  \ {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(RemoveVowels((\"\
  \")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"abcdef\\nghijklm\")).Equals((\"\
  bcdf\\nghjklm\")));\n    Debug.Assert(RemoveVowels((\"fedcba\")).Equals((\"fdcb\"\
  )));\n    Debug.Assert(RemoveVowels((\"eeeee\")).Equals((\"\")));\n    Debug.Assert(RemoveVowels((\"\
  acBAA\")).Equals((\"cB\")));\n    Debug.Assert(RemoveVowels((\"EcBOO\")).Equals((\"\
  cB\")));\n    Debug.Assert(RemoveVowels((\"ybcd\")).Equals((\"ybcd\")));\n    }\n\
  \n}\n"
completions: ['        return text.Replace("a", "").Replace("e", "").Replace("i",
    "").Replace("o", "").Replace("u", "");', '        return new string(text.Where(c
    => "aeiouAEIOU".IndexOf(c) == -1).ToArray());', "        string vowels = \"aeiouAEIOU\"\
    ;\n        string result = \"\";\n        foreach (char c in text) {\n       \
    \     if (vowels.IndexOf(c) == -1) {\n                result += c;\n         \
    \   }\n        }\n        return result;", "        string vowels = \"aeiouAEIOU\"\
    ;\n        string result = \"\";\n        for (int i = 0; i < text.Length; i++)\
    \ {\n            if (vowels.IndexOf(text[i]) == -1) {\n                result\
    \ += text[i];\n            }\n        }\n        return result;", "        string\
    \ result = \"\";\n        foreach (char c in text) {\n            if (c != 'a'\
    \ && c != 'e' && c != 'i' && c != 'o' && c != 'u') {\n                result +=\
    \ c;\n            }\n        }\n        return result;", "        string vowels\
    \ = \"aeiou\";\n        string result = \"\";\n        foreach (char c in text)\
    \ {\n            if (vowels.IndexOf(c) == -1) {\n                result += c;\n\
    \            }\n        }\n        return result;", "        string vowels = \"\
    aeiouAEIOU\";\n        string result = \"\";\n        for (int i = 0; i < text.Length;\
    \ i++) {\n            if (vowels.IndexOf(text[i]) == -1) {\n                result\
    \ += text[i];\n            }\n        }\n        return result;", "        string\
    \ vowels = \"aeiouAEIOU\";\n        string result = \"\";\n        foreach (char\
    \ c in text) {\n            if (vowels.IndexOf(c) == -1) {\n                result\
    \ += c;\n            }\n        }\n        return result;", "        string vowels\
    \ = \"aeiouAEIOU\";\n        string result = \"\";\n        foreach (char c in\
    \ text) {\n            if (vowels.IndexOf(c) == -1) {\n                result\
    \ += c;\n            }\n        }\n        return result;", "        // TODO:\
    \ Implement this function.\n        return \"\";", '        return text.Replace("a",
    "").Replace("e", "").Replace("i", "").Replace("o", "").Replace("u", "");', " \
    \       string vowels = \"aeiouAEIOU\";\n        string result = \"\";\n     \
    \   foreach (char c in text) {\n            if (vowels.IndexOf(c) == -1) {\n \
    \               result += c;\n            }\n        }\n        return result;",
  '        return new string(text.Where(c => !"aeiou".Contains(c)).ToArray());', '        return
    new string(text.Where(c => !"aeiou".Contains(c)).ToArray());', '        return
    new string(text.Where(c => !"aeiou".Contains(c)).ToArray());', "        string\
    \ result = \"\";\n        foreach (char c in text) {\n            if (c != 'a'\
    \ && c != 'e' && c != 'i' && c != 'o' && c != 'u') {\n                result +=\
    \ c;\n            }\n        }\n        return result;", '        return new string(text.Where(c
    => !"aeiou".Contains(c)).ToArray());', '        return text.Replace("a", "").Replace("e",
    "").Replace("i", "").Replace("o", "").Replace("u", "");', "        string result\
    \ = \"\";\n        foreach (char c in text) {\n            if (c != 'a' && c !=\
    \ 'e' && c != 'i' && c != 'o' && c != 'u') {\n                result += c;\n \
    \           }\n        }\n        return result;", '        return new string(text.Where(c
    => !"aeiou".Contains(c)).ToArray());']
stop_tokens:
- "\n    }\n"

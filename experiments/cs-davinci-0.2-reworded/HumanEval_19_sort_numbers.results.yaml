language: cs
name: HumanEval_19_sort_numbers
results:
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        var nums = numbers.Split(' ');\n        var nums2 = new List<int>();\n\
    \        foreach (var num in nums) {\n            switch (num) {\n           \
    \     case \"zero\": nums2.Add(0); break;\n                case \"one\": nums2.Add(1);\
    \ break;\n                case \"two\": nums2.Add(2); break;\n               \
    \ case \"three\": nums2.Add(3); break;\n                case \"four\": nums2.Add(4);\
    \ break;\n                case \"five\": nums2.Add(5); break;\n              \
    \  case \"six\": nums2.Add(6); break;\n                case \"seven\": nums2.Add(7);\
    \ break;\n                case \"eight\": nums2.Add(8); break;\n             \
    \   case \"nine\": nums2.Add(9); break;\n            }\n        }\n        nums2.Sort();\n\
    \        var nums3 = new List<string>();\n        foreach (var num in nums2) {\n\
    \            switch (num) {\n                case 0: nums3.Add(\"zero\"); break;\n\
    \                case 1: nums3.Add(\"one\"); break;\n                case 2: nums3.Add(\"\
    two\"); break;\n                case 3: nums3.Add(\"three\"); break;\n       \
    \         case 4: nums3.Add(\"four\"); break;\n                case 5: nums3.Add(\"\
    five\"); break;\n                case 6: nums3.Add(\"six\"); break;\n        \
    \        case 7: nums3.Add(\"seven\"); break;\n                case 8: nums3.Add(\"\
    eight\"); break;\n                case 9: nums3.Add(\"nine\"); break;\n      \
    \      }\n        }\n        return string.Join(\" \", nums3);\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\
    \")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"\
    three five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"\
    five zero four seven nine eight\")).Equals((\"zero four five seven eight nine\"\
    )));\n    Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659798035
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        var nums = numbers.Split(' ');\n        var nums2 = new List<int>();\n\
    \        foreach (var num in nums) {\n            switch (num) {\n           \
    \     case \"zero\":\n                    nums2.Add(0);\n                    break;\n\
    \                case \"one\":\n                    nums2.Add(1);\n          \
    \          break;\n                case \"two\":\n                    nums2.Add(2);\n\
    \                    break;\n                case \"three\":\n               \
    \     nums2.Add(3);\n                    break;\n                case \"four\"\
    :\n                    nums2.Add(4);\n                    break;\n           \
    \     case \"five\":\n                    nums2.Add(5);\n                    break;\n\
    \                case \"six\":\n                    nums2.Add(6);\n          \
    \          break;\n                case \"seven\":\n                    nums2.Add(7);\n\
    \                    break;\n                case \"eight\":\n               \
    \     nums2.Add(8);\n                    break;\n                case \"nine\"\
    :\n                    nums2.Add(9);\n                    break;\n           \
    \ }\n        }\n        nums2.Sort();\n        var nums3 = new List<string>();\n\
    \        foreach (var num in nums2) {\n            switch (num) {\n          \
    \      case 0:\n                    nums3.Add(\"zero\");\n                   \
    \ break;\n                case 1:\n                    nums3.Add(\"one\");\n \
    \                   break;\n                case 2:\n                    nums3.Add(\"\
    two\");\n                    break;\n                case 3:\n               \
    \     nums3.Add(\"three\");\n                    break;\n                case\
    \ 4:\n                    nums3.Add(\"four\");\n                    break;\n \
    \               case 5:\n                    nums3.Add(\"five\");\n          \
    \          break;\n                case 6:\n                    nums3.Add(\"six\"\
    );\n                    break;\n                case 7:\n                    nums3.Add(\"\
    seven\");\n                    break;\n                case 8:\n             \
    \       nums3.Add(\"eight\");\n                    break;\n                case\
    \ 9:\n                    nums3.Add(\"nine\");\n                    break;\n \
    \           }\n        }\n        return string.Join(\" \", nums3);\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\
    \")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\"\
    )));\n    Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five\
    \ nine\")));\n    Debug.Assert(SortNumbers((\"five zero four seven nine eight\"\
    )).Equals((\"zero four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"\
    six five four three two one zero\")).Equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659798035
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        // Your code goes here\n        return \"\";\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\"\
    )));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"\
    three five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"\
    five zero four seven nine eight\")).Equals((\"zero four five seven eight nine\"\
    )));\n    Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2e593562849b4f7f9c991456219b3cbb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2e593562849b4f7f9c991456219b3cbb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798035
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        int[] nums = new int[numbers.Split(' ').Length];\n        for (int\
    \ i = 0; i < nums.Length; i++) {\n            switch (numbers.Split(' ')[i]) {\n\
    \                case \"zero\":\n                    nums[i] = 0;\n          \
    \          break;\n                case \"one\":\n                    nums[i]\
    \ = 1;\n                    break;\n                case \"two\":\n          \
    \          nums[i] = 2;\n                    break;\n                case \"three\"\
    :\n                    nums[i] = 3;\n                    break;\n            \
    \    case \"four\":\n                    nums[i] = 4;\n                    break;\n\
    \                case \"five\":\n                    nums[i] = 5;\n          \
    \          break;\n                case \"six\":\n                    nums[i]\
    \ = 6;\n                    break;\n                case \"seven\":\n        \
    \            nums[i] = 7;\n                    break;\n                case \"\
    eight\":\n                    nums[i] = 8;\n                    break;\n     \
    \           case \"nine\":\n                    nums[i] = 9;\n               \
    \     break;\n            }\n        }\n        Array.Sort(nums);\n        string\
    \ result = \"\";\n        for (int i = 0; i < nums.Length; i++) {\n          \
    \  switch (nums[i]) {\n                case 0:\n                    result +=\
    \ \"zero \";\n                    break;\n                case 1:\n          \
    \          result += \"one \";\n                    break;\n                case\
    \ 2:\n                    result += \"two \";\n                    break;\n  \
    \              case 3:\n                    result += \"three \";\n          \
    \          break;\n                case 4:\n                    result += \"four\
    \ \";\n                    break;\n                case 5:\n                 \
    \   result += \"five \";\n                    break;\n                case 6:\n\
    \                    result += \"six \";\n                    break;\n       \
    \         case 7:\n                    result += \"seven \";\n               \
    \     break;\n                case 8:\n                    result += \"eight \"\
    ;\n                    break;\n                case 9:\n                    result\
    \ += \"nine \";\n                    break;\n            }\n        }\n      \
    \  return result.Trim();\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"\
    three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three five nine\"\
    )).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five zero\
    \ four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n\
    \    Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9485052c76884aa49b58beea5a4b5c4f>:0 \n"
  stdout: ''
  timestamp: 1659798035
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        string[] nums = numbers.Split(' ');\n        int[] nums2 = new int[nums.Length];\n\
    \        for (int i = 0; i < nums.Length; i++) {\n            switch (nums[i])\
    \ {\n                case \"zero\":\n                    nums2[i] = 0;\n     \
    \               break;\n                case \"one\":\n                    nums2[i]\
    \ = 1;\n                    break;\n                case \"two\":\n          \
    \          nums2[i] = 2;\n                    break;\n                case \"\
    three\":\n                    nums2[i] = 3;\n                    break;\n    \
    \            case \"four\":\n                    nums2[i] = 4;\n             \
    \       break;\n                case \"five\":\n                    nums2[i] =\
    \ 5;\n                    break;\n                case \"six\":\n            \
    \        nums2[i] = 6;\n                    break;\n                case \"seven\"\
    :\n                    nums2[i] = 7;\n                    break;\n           \
    \     case \"eight\":\n                    nums2[i] = 8;\n                   \
    \ break;\n                case \"nine\":\n                    nums2[i] = 9;\n\
    \                    break;\n            }\n        }\n        Array.Sort(nums2);\n\
    \        for (int i = 0; i < nums.Length; i++) {\n            switch (nums2[i])\
    \ {\n                case 0:\n                    nums[i] = \"zero\";\n      \
    \              break;\n                case 1:\n                    nums[i] =\
    \ \"one\";\n                    break;\n                case 2:\n            \
    \        nums[i] = \"two\";\n                    break;\n                case\
    \ 3:\n                    nums[i] = \"three\";\n                    break;\n \
    \               case 4:\n                    nums[i] = \"four\";\n           \
    \         break;\n                case 5:\n                    nums[i] = \"five\"\
    ;\n                    break;\n                case 6:\n                    nums[i]\
    \ = \"six\";\n                    break;\n                case 7:\n          \
    \          nums[i] = \"seven\";\n                    break;\n                case\
    \ 8:\n                    nums[i] = \"eight\";\n                    break;\n \
    \               case 9:\n                    nums[i] = \"nine\";\n           \
    \        \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\
    \")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\"\
    )));\n    Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five\
    \ nine\")));\n    Debug.Assert(SortNumbers((\"five zero four seven nine eight\"\
    )).Equals((\"zero four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"\
    six five four three two one zero\")).Equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp8jpzi307.cs(85,5): error CS0106: The modifier ''public'' is not valid
    for this item

    /tmp/tmp8jpzi307.cs(93,2): error CS1513: } expected

    '
  timestamp: 1659798034
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        string[] nums = numbers.Split(' ');\n        int[] numsInt = new\
    \ int[nums.Length];\n        for (int i = 0; i < nums.Length; i++) {\n       \
    \     switch (nums[i]) {\n                case \"zero\":\n                   \
    \ numsInt[i] = 0;\n                    break;\n                case \"one\":\n\
    \                    numsInt[i] = 1;\n                    break;\n           \
    \     case \"two\":\n                    numsInt[i] = 2;\n                   \
    \ break;\n                case \"three\":\n                    numsInt[i] = 3;\n\
    \                    break;\n                case \"four\":\n                \
    \    numsInt[i] = 4;\n                    break;\n                case \"five\"\
    :\n                    numsInt[i] = 5;\n                    break;\n         \
    \       case \"six\":\n                    numsInt[i] = 6;\n                 \
    \   break;\n                case \"seven\":\n                    numsInt[i] =\
    \ 7;\n                    break;\n                case \"eight\":\n          \
    \          numsInt[i] = 8;\n                    break;\n                case \"\
    nine\":\n                    numsInt[i] = 9;\n                    break;\n   \
    \         }\n        }\n        Array.Sort(numsInt);\n        string[] numsStr\
    \ = new string[nums.Length];\n        for (int i = 0; i < nums.Length; i++) {\n\
    \            switch (numsInt[i]) {\n                case 0:\n                \
    \    numsStr[i] = \"zero\";\n                    break;\n                case\
    \ 1:\n                    numsStr[i] = \"one\";\n                    break;\n\
    \                case 2:\n                    numsStr[i] = \"two\";\n        \
    \            break;\n                case 3:\n                    numsStr[i] =\
    \ \"three\";\n                    break;\n                case 4:\n          \
    \          numsStr[i] = \"four\";\n                    break;\n              \
    \  case 5:\n                    numsStr[i] = \"five\";\n                    break;\n\
    \                case 6:\n                    numsStr[i] = \"six\";\n        \
    \            break;\n                case 7:\n                    numsStr[i] =\
    \ \"seven\";\n                    break;\n                case 8:\n          \
    \          numsStr[i] =\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"\
    three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three five nine\"\
    )).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five zero\
    \ four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n\
    \    Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp_ruqmnkb.cs(80,33): error CS1525: Invalid expression term ''}''

    /tmp/tmp_ruqmnkb.cs(80,33): error CS1002: ; expected

    /tmp/tmp_ruqmnkb.cs(82,5): error CS0106: The modifier ''public'' is not valid
    for this item

    /tmp/tmp_ruqmnkb.cs(90,2): error CS1513: } expected

    '
  timestamp: 1659798034
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        var nums = numbers.Split(' ');\n        Array.Sort(nums);\n     \
    \   return string.Join(\" \", nums);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"\
    three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three five nine\"\
    )).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five zero\
    \ four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n\
    \    Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a52eb78c127b4f7b966d1276966c9022>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a52eb78c127b4f7b966d1276966c9022>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798035
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        var nums = numbers.Split(' ');\n        Array.Sort(nums);\n     \
    \   return string.Join(\" \", nums);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"\
    three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three five nine\"\
    )).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five zero\
    \ four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n\
    \    Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a52eb78c127b4f7b966d1276966c9022>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a52eb78c127b4f7b966d1276966c9022>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798035
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        var nums = numbers.Split(' ').Select(s => (int)Enum.Parse(typeof(Numbers),\
    \ s)).OrderBy(n => n).Select(n => (Numbers)n).Select(n => n.ToString());\n   \
    \     return string.Join(\" \", nums);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"\
    three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three five nine\"\
    )).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five zero\
    \ four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n\
    \    Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpw4vc32ce.cs(15,74): error CS0246: The type or namespace name ''Numbers''
    could not be found (are you missing a using directive or an assembly reference?)

    /tmp/tmpw4vc32ce.cs(15,117): error CS0246: The type or namespace name ''Numbers''
    could not be found (are you missing a using directive or an assembly reference?)

    '
  timestamp: 1659798034
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        string[] nums = numbers.Split(' ');\n        int[] numsInt = new\
    \ int[nums.Length];\n        for (int i = 0; i < nums.Length; i++) {\n       \
    \     switch (nums[i]) {\n                case \"zero\":\n                   \
    \ numsInt[i] = 0;\n                    break;\n                case \"one\":\n\
    \                    numsInt[i] = 1;\n                    break;\n           \
    \     case \"two\":\n                    numsInt[i] = 2;\n                   \
    \ break;\n                case \"three\":\n                    numsInt[i] = 3;\n\
    \                    break;\n                case \"four\":\n                \
    \    numsInt[i] = 4;\n                    break;\n                case \"five\"\
    :\n                    numsInt[i] = 5;\n                    break;\n         \
    \       case \"six\":\n                    numsInt[i] = 6;\n                 \
    \   break;\n                case \"seven\":\n                    numsInt[i] =\
    \ 7;\n                    break;\n                case \"eight\":\n          \
    \          numsInt[i] = 8;\n                    break;\n                case \"\
    nine\":\n                    numsInt[i] = 9;\n                    break;\n   \
    \         }\n        }\n        Array.Sort(numsInt);\n        for (int i = 0;\
    \ i < nums.Length; i++) {\n            switch (numsInt[i]) {\n               \
    \ case 0:\n                    nums[i] = \"zero\";\n                    break;\n\
    \                case 1:\n                    nums[i] = \"one\";\n           \
    \         break;\n                case 2:\n                    nums[i] = \"two\"\
    ;\n                    break;\n                case 3:\n                    nums[i]\
    \ = \"three\";\n                    break;\n                case 4:\n        \
    \            nums[i] = \"four\";\n                    break;\n               \
    \ case 5:\n                    nums[i] = \"five\";\n                    break;\n\
    \                case 6:\n                    nums[i] = \"six\";\n           \
    \         break;\n                case 7:\n                    nums[i] = \"seven\"\
    ;\n                    break;\n                case 8:\n                    nums[i]\
    \ = \"eight\";\n                    break;\n                case 9:\n        \
    \            nums[i] = \"nine\";\n                   \n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\"\
    )));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"\
    three five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"\
    five zero four seven nine eight\")).Equals((\"zero four five seven eight nine\"\
    )));\n    Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmplano5_jc.cs(85,5): error CS0106: The modifier ''public'' is not valid
    for this item

    /tmp/tmplano5_jc.cs(93,2): error CS1513: } expected

    '
  timestamp: 1659798034
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        // TODO: Implement this function\n        return \"\";\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\
    \")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\"\
    )));\n    Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five\
    \ nine\")));\n    Debug.Assert(SortNumbers((\"five zero four seven nine eight\"\
    )).Equals((\"zero four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"\
    six five four three two one zero\")).Equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <959a76934a79427383ca9be1749b050c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <959a76934a79427383ca9be1749b050c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798035
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        // TODO: Implement this function\n        return \"\";\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\
    \")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\"\
    )));\n    Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five\
    \ nine\")));\n    Debug.Assert(SortNumbers((\"five zero four seven nine eight\"\
    )).Equals((\"zero four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"\
    six five four three two one zero\")).Equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <959a76934a79427383ca9be1749b050c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <959a76934a79427383ca9be1749b050c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798035
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        // Your code goes here\n        return \"\";\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\"\
    )));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"\
    three five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"\
    five zero four seven nine eight\")).Equals((\"zero four five seven eight nine\"\
    )));\n    Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2e593562849b4f7f9c991456219b3cbb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2e593562849b4f7f9c991456219b3cbb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798035
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        var nums = numbers.Split(' ').Select(x => int.Parse(x)).OrderBy(x\
    \ => x).Select(x => x.ToString()).ToArray();\n        return string.Join(\" \"\
    , nums);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\
    \")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\"\
    )));\n    Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five\
    \ nine\")));\n    Debug.Assert(SortNumbers((\"five zero four seven nine eight\"\
    )).Equals((\"zero four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"\
    six five four three two one zero\")).Equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in\
    \ a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean\
    \ overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int32.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem+<>c.<SortNumbers>b__0_0 (System.String x) [0x00000] in <dc44429ce7df4cf69f56b1678990ebd2>:0\
    \ \n  at System.Linq.Enumerable+SelectArrayIterator`2[TSource,TResult].ToArray\
    \ () [0x00012] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Buffer`1[TElement]..ctor\
    \ (System.Collections.Generic.IEnumerable`1[T] source) [0x0000a] in <e540098dd111461e919c5863f6975c29>:0\
    \ \n  at System.Linq.OrderedEnumerable`1+<GetEnumerator>d__3[TElement].MoveNext\
    \ () [0x0001e] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable+SelectIPartitionIterator`2[TSource,TResult].PreallocatingToArray\
    \ (System.Int32 count) [0x00035] in <e540098dd111461e919c5863f6975c29>:0 \n  at\
    \ System.Linq.Enumerable+SelectIPartitionIterator`2[TSource,TResult].ToArray ()\
    \ [0x00023] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable.ToArray[TSource]\
    \ (System.Collections.Generic.IEnumerable`1[T] source) [0x0001f] in <e540098dd111461e919c5863f6975c29>:0\
    \ \n  at Problem.SortNumbers (System.String numbers) [0x00076] in <dc44429ce7df4cf69f56b1678990ebd2>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00001] in <dc44429ce7df4cf69f56b1678990ebd2>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.FormatException: Input string was\
    \ not in a correct format.\n  at System.Number.ThrowOverflowOrFormatException\
    \ (System.Boolean overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberS"
  stdout: ''
  timestamp: 1659798034
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        // Your code goes here\n        return \"\";\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\"\
    )));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"\
    three five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"\
    five zero four seven nine eight\")).Equals((\"zero four five seven eight nine\"\
    )));\n    Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2e593562849b4f7f9c991456219b3cbb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2e593562849b4f7f9c991456219b3cbb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798035
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        // TODO: Implement this function\n        return \"\";\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\
    \")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\"\
    )));\n    Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five\
    \ nine\")));\n    Debug.Assert(SortNumbers((\"five zero four seven nine eight\"\
    )).Equals((\"zero four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"\
    six five four three two one zero\")).Equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <959a76934a79427383ca9be1749b050c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <959a76934a79427383ca9be1749b050c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798035
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        string[] nums = numbers.Split(' ');\n        int[] nums2 = new int[nums.Length];\n\
    \        for (int i = 0; i < nums.Length; i++) {\n            nums2[i] = int.Parse(nums[i]);\n\
    \        }\n        Array.Sort(nums2);\n        string result = \"\";\n      \
    \  for (int i = 0; i < nums2.Length; i++) {\n            result += nums2[i] +\
    \ \" \";\n        }\n        return result.Trim();\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n\
    \    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"\
    three five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"\
    five zero four seven nine eight\")).Equals((\"zero four five seven eight nine\"\
    )));\n    Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in\
    \ a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean\
    \ overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int32.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.SortNumbers (System.String numbers) [0x00019] in <c86b946bc2584c1f9ef33507aee3cd4a>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00001] in <c86b946bc2584c1f9ef33507aee3cd4a>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.FormatException: Input string was\
    \ not in a correct format.\n  at System.Number.ThrowOverflowOrFormatException\
    \ (System.Boolean overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int32.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.SortNumbers (System.String numbers) [0x00019] in <c86b946bc2584c1f9ef33507aee3cd4a>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00001] in <c86b946bc2584c1f9ef33507aee3cd4a>:0\
    \ \n"
  stdout: ''
  timestamp: 1659798035
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        var nums = numbers.Split(' ');\n        Array.Sort(nums);\n     \
    \   return string.Join(\" \", nums);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"\
    three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three five nine\"\
    )).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five zero\
    \ four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n\
    \    Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a52eb78c127b4f7b966d1276966c9022>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a52eb78c127b4f7b966d1276966c9022>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798035
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        var nums = numbers.Split(' ').Select(x => x.ToLower()).Select(x =>\
    \ {\n            switch (x) {\n                case \"zero\": return 0;\n    \
    \            case \"one\": return 1;\n                case \"two\": return 2;\n\
    \                case \"three\": return 3;\n                case \"four\": return\
    \ 4;\n                case \"five\": return 5;\n                case \"six\":\
    \ return 6;\n                case \"seven\": return 7;\n                case \"\
    eight\": return 8;\n                case \"nine\": return 9;\n               \
    \ default: throw new ArgumentException(\"Invalid number\");\n            }\n \
    \       }).ToArray();\n        Array.Sort(nums);\n        return string.Join(\"\
    \ \", nums.Select(x => {\n            switch (x) {\n                case 0: return\
    \ \"zero\";\n                case 1: return \"one\";\n                case 2:\
    \ return \"two\";\n                case 3: return \"three\";\n               \
    \ case 4: return \"four\";\n                case 5: return \"five\";\n       \
    \         case 6: return \"six\";\n                case 7: return \"seven\";\n\
    \                case 8: return \"eight\";\n                case 9: return \"\
    nine\";\n                default: throw new ArgumentException(\"Invalid number\"\
    );\n            }\n        }));\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"\
    three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three five nine\"\
    )).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five zero\
    \ four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n\
    \    Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.ArgumentException: Invalid number\n  at\
    \ Problem+<>c.<SortNumbers>b__0_1 (System.String x) [0x0017d] in <84a93c7d4108413faf07070cc6a536ce>:0\
    \ \n  at System.Linq.Utilities+<>c__DisplayClass2_0`3[TSource,TMiddle,TResult].<CombineSelectors>b__0\
    \ (TSource x) [0x00012] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable+SelectArrayIterator`2[TSource,TResult].ToArray\
    \ () [0x00012] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable.ToArray[TSource]\
    \ (System.Collections.Generic.IEnumerable`1[T] source) [0x0001f] in <e540098dd111461e919c5863f6975c29>:0\
    \ \n  at Problem.SortNumbers (System.String numbers) [0x00052] in <84a93c7d4108413faf07070cc6a536ce>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00001] in <84a93c7d4108413faf07070cc6a536ce>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.ArgumentException: Invalid number\n\
    \  at Problem+<>c.<SortNumbers>b__0_1 (System.String x) [0x0017d] in <84a93c7d4108413faf07070cc6a536ce>:0\
    \ \n  at System.Linq.Utilities+<>c__DisplayClass2_0`3[TSource,TMiddle,TResult].<CombineSelectors>b__0\
    \ (TSource x) [0x00012] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable+SelectArrayIterator`2[TSource,TResult].ToArray\
    \ () [0x00012] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable.ToArray[TSource]\
    \ (System.Collections.Generic.IEnumerable`1[T] source) [0x0001f] in <e540098dd111461e919c5863f6975c29>:0\
    \ \n  at Problem.SortNumbers (System.String numbers) [0x00052] in <84a93c7d4108413faf07070cc6a536ce>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00001] in <84a93c7d4108413faf07070cc6a536ce>:0\
    \ \n"
  stdout: ''
  timestamp: 1659798035
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        var nums = numbers.Split(' ');\n        var nums2 = nums.Select(x\
    \ => int.Parse(x)).ToArray();\n        Array.Sort(nums2);\n        return string.Join(\"\
    \ \", nums2);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\
    \")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\"\
    )));\n    Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five\
    \ nine\")));\n    Debug.Assert(SortNumbers((\"five zero four seven nine eight\"\
    )).Equals((\"zero four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"\
    six five four three two one zero\")).Equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in\
    \ a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean\
    \ overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int32.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem+<>c.<SortNumbers>b__0_0 (System.String x) [0x00000] in <47d5267524014de5940c4552c95c2cea>:0\
    \ \n  at System.Linq.Enumerable+SelectArrayIterator`2[TSource,TResult].ToArray\
    \ () [0x00012] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable.ToArray[TSource]\
    \ (System.Collections.Generic.IEnumerable`1[T] source) [0x0001f] in <e540098dd111461e919c5863f6975c29>:0\
    \ \n  at Problem.SortNumbers (System.String numbers) [0x00030] in <47d5267524014de5940c4552c95c2cea>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00001] in <47d5267524014de5940c4552c95c2cea>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.FormatException: Input string was\
    \ not in a correct format.\n  at System.Number.ThrowOverflowOrFormatException\
    \ (System.Boolean overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int32.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem+<>c.<SortNumbers>b__0_0 (System.String x) [0x00000] in <47d5267524014de5940c4552c95c2cea>:0\
    \ \n  at System.Linq.Enumerable+SelectArrayIterator`2[TSource,TResult].ToArray\
    \ () [0x00012] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable.ToArray[TSource]\
    \ (System.Collections.Generic.IEnumerable`1[T] source) [0x0001f] in <e540098dd111461e919c5863f6"
  stdout: ''
  timestamp: 1659798035
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        // Your code goes here\n        return \"\";\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\"\
    )));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"\
    three five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"\
    five zero four seven nine eight\")).Equals((\"zero four five seven eight nine\"\
    )));\n    Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2e593562849b4f7f9c991456219b3cbb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2e593562849b4f7f9c991456219b3cbb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798035
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        string[] nums = numbers.Split(' ');\n        Array.Sort(nums);\n\
    \        return string.Join(\" \", nums);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"\
    three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three five nine\"\
    )).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five zero\
    \ four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n\
    \    Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <92912d111b404a80ab493e004c0355c2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <92912d111b404a80ab493e004c0355c2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798035
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        // Your code goes here\n        return \"\";\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\"\
    )));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"\
    three five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"\
    five zero four seven nine eight\")).Equals((\"zero four five seven eight nine\"\
    )));\n    Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2e593562849b4f7f9c991456219b3cbb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2e593562849b4f7f9c991456219b3cbb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798035
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        var nums = numbers.Split(' ').Select(n => int.Parse(n)).OrderBy(n\
    \ => n).Select(n => n.ToString()).ToArray();\n        return string.Join(\" \"\
    , nums);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\
    \")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\"\
    )));\n    Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five\
    \ nine\")));\n    Debug.Assert(SortNumbers((\"five zero four seven nine eight\"\
    )).Equals((\"zero four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"\
    six five four three two one zero\")).Equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in\
    \ a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean\
    \ overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int32.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem+<>c.<SortNumbers>b__0_0 (System.String n) [0x00000] in <2c2552eba93a49a5b2047b5a0c6fe486>:0\
    \ \n  at System.Linq.Enumerable+SelectArrayIterator`2[TSource,TResult].ToArray\
    \ () [0x00012] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Buffer`1[TElement]..ctor\
    \ (System.Collections.Generic.IEnumerable`1[T] source) [0x0000a] in <e540098dd111461e919c5863f6975c29>:0\
    \ \n  at System.Linq.OrderedEnumerable`1+<GetEnumerator>d__3[TElement].MoveNext\
    \ () [0x0001e] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable+SelectIPartitionIterator`2[TSource,TResult].PreallocatingToArray\
    \ (System.Int32 count) [0x00035] in <e540098dd111461e919c5863f6975c29>:0 \n  at\
    \ System.Linq.Enumerable+SelectIPartitionIterator`2[TSource,TResult].ToArray ()\
    \ [0x00023] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable.ToArray[TSource]\
    \ (System.Collections.Generic.IEnumerable`1[T] source) [0x0001f] in <e540098dd111461e919c5863f6975c29>:0\
    \ \n  at Problem.SortNumbers (System.String numbers) [0x00076] in <2c2552eba93a49a5b2047b5a0c6fe486>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00001] in <2c2552eba93a49a5b2047b5a0c6fe486>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.FormatException: Input string was\
    \ not in a correct format.\n  at System.Number.ThrowOverflowOrFormatException\
    \ (System.Boolean overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberS"
  stdout: ''
  timestamp: 1659798035
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        // Your code goes here\n        return \"\";\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\"\
    )));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"\
    three five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"\
    five zero four seven nine eight\")).Equals((\"zero four five seven eight nine\"\
    )));\n    Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2e593562849b4f7f9c991456219b3cbb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2e593562849b4f7f9c991456219b3cbb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798035
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        var nums = numbers.Split(' ').Select(x => int.Parse(x)).OrderBy(x\
    \ => x).Select(x => x.ToString()).ToArray();\n        return string.Join(\" \"\
    , nums);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\
    \")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\"\
    )));\n    Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five\
    \ nine\")));\n    Debug.Assert(SortNumbers((\"five zero four seven nine eight\"\
    )).Equals((\"zero four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"\
    six five four three two one zero\")).Equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in\
    \ a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean\
    \ overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int32.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem+<>c.<SortNumbers>b__0_0 (System.String x) [0x00000] in <dc44429ce7df4cf69f56b1678990ebd2>:0\
    \ \n  at System.Linq.Enumerable+SelectArrayIterator`2[TSource,TResult].ToArray\
    \ () [0x00012] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Buffer`1[TElement]..ctor\
    \ (System.Collections.Generic.IEnumerable`1[T] source) [0x0000a] in <e540098dd111461e919c5863f6975c29>:0\
    \ \n  at System.Linq.OrderedEnumerable`1+<GetEnumerator>d__3[TElement].MoveNext\
    \ () [0x0001e] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable+SelectIPartitionIterator`2[TSource,TResult].PreallocatingToArray\
    \ (System.Int32 count) [0x00035] in <e540098dd111461e919c5863f6975c29>:0 \n  at\
    \ System.Linq.Enumerable+SelectIPartitionIterator`2[TSource,TResult].ToArray ()\
    \ [0x00023] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable.ToArray[TSource]\
    \ (System.Collections.Generic.IEnumerable`1[T] source) [0x0001f] in <e540098dd111461e919c5863f6975c29>:0\
    \ \n  at Problem.SortNumbers (System.String numbers) [0x00076] in <dc44429ce7df4cf69f56b1678990ebd2>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00001] in <dc44429ce7df4cf69f56b1678990ebd2>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.FormatException: Input string was\
    \ not in a correct format.\n  at System.Number.ThrowOverflowOrFormatException\
    \ (System.Boolean overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberS"
  stdout: ''
  timestamp: 1659798034
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        var nums = numbers.Split(' ').Select(x => x.ToLower()).ToArray();\n\
    \        var numMap = new Dictionary<string, int>() {\n            {\"zero\",\
    \ 0},\n            {\"one\", 1},\n            {\"two\", 2},\n            {\"three\"\
    , 3},\n            {\"four\", 4},\n            {\"five\", 5},\n            {\"\
    six\", 6},\n            {\"seven\", 7},\n            {\"eight\", 8},\n       \
    \     {\"nine\", 9}\n        };\n        var sorted = nums.Select(x => numMap[x]).OrderBy(x\
    \ => x).Select(x => numMap.First(y => y.Value == x).Key).ToArray();\n        return\
    \ string.Join(\" \", sorted);\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"\
    three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three five nine\"\
    )).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five zero\
    \ four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n\
    \    Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.Collections.Generic.KeyNotFoundException:\
    \ The given key '' was not present in the dictionary.\n  at System.Collections.Generic.Dictionary`2[TKey,TValue].get_Item\
    \ (TKey key) [0x0001e] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem+<>c__DisplayClass0_0.<SortNumbers>b__1\
    \ (System.String x) [0x00000] in <35a03b41158348a1883ef16b0641ef83>:0 \n  at System.Linq.Enumerable+SelectArrayIterator`2[TSource,TResult].ToArray\
    \ () [0x00012] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Buffer`1[TElement]..ctor\
    \ (System.Collections.Generic.IEnumerable`1[T] source) [0x0000a] in <e540098dd111461e919c5863f6975c29>:0\
    \ \n  at System.Linq.OrderedEnumerable`1+<GetEnumerator>d__3[TElement].MoveNext\
    \ () [0x0001e] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable+SelectIPartitionIterator`2[TSource,TResult].PreallocatingToArray\
    \ (System.Int32 count) [0x00035] in <e540098dd111461e919c5863f6975c29>:0 \n  at\
    \ System.Linq.Enumerable+SelectIPartitionIterator`2[TSource,TResult].ToArray ()\
    \ [0x00023] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable.ToArray[TSource]\
    \ (System.Collections.Generic.IEnumerable`1[T] source) [0x0001f] in <e540098dd111461e919c5863f6975c29>:0\
    \ \n  at Problem.SortNumbers (System.String numbers) [0x0010f] in <35a03b41158348a1883ef16b0641ef83>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00001] in <35a03b41158348a1883ef16b0641ef83>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.Collections.Generic.KeyNotFoundException:\
    \ The given key '' was not present in the dictionary.\n  at System.Collections.Generic.Dictionary`2[TKey,TValue].get_Item\
    \ (TKey key) [0x0001e] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem+<>c__DisplayClass0_0.<SortNumbers>b__1\
    \ (System.String x) [0x00000] in <35a03b41158348a1883ef16b0641ef83>:0 \n  at System.Linq.Enumerable+SelectArrayIterator`2[TSource,TResult].ToArray\
    \ () [0x00012] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Buffer`1[TElement]..ctor\
    \ (System.Collections.Generic.IEnumerable`1[T] source) [0x0000a] in <e54009"
  stdout: ''
  timestamp: 1659798035
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        string[] nums = numbers.Split(' ');\n        int[] nums2 = new int[nums.Length];\n\
    \        for (int i = 0; i < nums.Length; i++) {\n            switch (nums[i])\
    \ {\n                case \"zero\":\n                    nums2[i] = 0;\n     \
    \               break;\n                case \"one\":\n                    nums2[i]\
    \ = 1;\n                    break;\n                case \"two\":\n          \
    \          nums2[i] = 2;\n                    break;\n                case \"\
    three\":\n                    nums2[i] = 3;\n                    break;\n    \
    \            case \"four\":\n                    nums2[i] = 4;\n             \
    \       break;\n                case \"five\":\n                    nums2[i] =\
    \ 5;\n                    break;\n                case \"six\":\n            \
    \        nums2[i] = 6;\n                    break;\n                case \"seven\"\
    :\n                    nums2[i] = 7;\n                    break;\n           \
    \     case \"eight\":\n                    nums2[i] = 8;\n                   \
    \ break;\n                case \"nine\":\n                    nums2[i] = 9;\n\
    \                    break;\n            }\n        }\n        Array.Sort(nums2);\n\
    \        string ret = \"\";\n        for (int i = 0; i < nums2.Length; i++) {\n\
    \            switch (nums2[i]) {\n                case 0:\n                  \
    \  ret += \"zero \";\n                    break;\n                case 1:\n  \
    \                  ret += \"one \";\n                    break;\n            \
    \    case 2:\n                    ret += \"two \";\n                    break;\n\
    \                case 3:\n                    ret += \"three \";\n           \
    \         break;\n                case 4:\n                    ret += \"four \"\
    ;\n                    break;\n                case 5:\n                    ret\
    \ += \"five \";\n                    break;\n                case 6:\n       \
    \             ret += \"six \";\n                    break;\n                case\
    \ 7:\n                    ret += \"seven \";\n                    break;\n   \
    \             case 8:\n                    ret += \"eight \";\n              \
    \      break;\n                case 9:\n                    ret += \"nine \";\n\
    \                    break;\n            }\n        }\n        return ret.Trim();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\
    \")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\"\
    )));\n    Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five\
    \ nine\")));\n    Debug.Assert(SortNumbers((\"five zero four seven nine eight\"\
    )).Equals((\"zero four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"\
    six five four three two one zero\")).Equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c07ba9c7637f42d8a0248cf79b6edb9a>:0 \n"
  stdout: ''
  timestamp: 1659798035
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        // TODO: Implement this function\n        return \"\";\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\
    \")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\"\
    )));\n    Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five\
    \ nine\")));\n    Debug.Assert(SortNumbers((\"five zero four seven nine eight\"\
    )).Equals((\"zero four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"\
    six five four three two one zero\")).Equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <959a76934a79427383ca9be1749b050c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <959a76934a79427383ca9be1749b050c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798035
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        var nums = numbers.Split(' ').Select(x => int.Parse(x)).OrderBy(x\
    \ => x).Select(x => x.ToString()).ToArray();\n        return string.Join(\" \"\
    , nums);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\
    \")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\"\
    )));\n    Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five\
    \ nine\")));\n    Debug.Assert(SortNumbers((\"five zero four seven nine eight\"\
    )).Equals((\"zero four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"\
    six five four three two one zero\")).Equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in\
    \ a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean\
    \ overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int32.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem+<>c.<SortNumbers>b__0_0 (System.String x) [0x00000] in <dc44429ce7df4cf69f56b1678990ebd2>:0\
    \ \n  at System.Linq.Enumerable+SelectArrayIterator`2[TSource,TResult].ToArray\
    \ () [0x00012] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Buffer`1[TElement]..ctor\
    \ (System.Collections.Generic.IEnumerable`1[T] source) [0x0000a] in <e540098dd111461e919c5863f6975c29>:0\
    \ \n  at System.Linq.OrderedEnumerable`1+<GetEnumerator>d__3[TElement].MoveNext\
    \ () [0x0001e] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable+SelectIPartitionIterator`2[TSource,TResult].PreallocatingToArray\
    \ (System.Int32 count) [0x00035] in <e540098dd111461e919c5863f6975c29>:0 \n  at\
    \ System.Linq.Enumerable+SelectIPartitionIterator`2[TSource,TResult].ToArray ()\
    \ [0x00023] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable.ToArray[TSource]\
    \ (System.Collections.Generic.IEnumerable`1[T] source) [0x0001f] in <e540098dd111461e919c5863f6975c29>:0\
    \ \n  at Problem.SortNumbers (System.String numbers) [0x00076] in <dc44429ce7df4cf69f56b1678990ebd2>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00001] in <dc44429ce7df4cf69f56b1678990ebd2>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.FormatException: Input string was\
    \ not in a correct format.\n  at System.Number.ThrowOverflowOrFormatException\
    \ (System.Boolean overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberS"
  stdout: ''
  timestamp: 1659798034
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        var nums = numbers.Split(' ');\n        var nums_int = new int[nums.Length];\n\
    \        for (int i = 0; i < nums.Length; i++) {\n            switch (nums[i])\
    \ {\n                case \"zero\":\n                    nums_int[i] = 0;\n  \
    \                  break;\n                case \"one\":\n                   \
    \ nums_int[i] = 1;\n                    break;\n                case \"two\":\n\
    \                    nums_int[i] = 2;\n                    break;\n          \
    \      case \"three\":\n                    nums_int[i] = 3;\n               \
    \     break;\n                case \"four\":\n                    nums_int[i]\
    \ = 4;\n                    break;\n                case \"five\":\n         \
    \           nums_int[i] = 5;\n                    break;\n                case\
    \ \"six\":\n                    nums_int[i] = 6;\n                    break;\n\
    \                case \"seven\":\n                    nums_int[i] = 7;\n     \
    \               break;\n                case \"eight\":\n                    nums_int[i]\
    \ = 8;\n                    break;\n                case \"nine\":\n         \
    \           nums_int[i] = 9;\n                    break;\n            }\n    \
    \    }\n        Array.Sort(nums_int);\n        var result = new StringBuilder();\n\
    \        for (int i = 0; i < nums_int.Length; i++) {\n            switch (nums_int[i])\
    \ {\n                case 0:\n                    result.Append(\"zero\");\n \
    \                   break;\n                case 1:\n                    result.Append(\"\
    one\");\n                    break;\n                case 2:\n               \
    \     result.Append(\"two\");\n                    break;\n                case\
    \ 3:\n                    result.Append(\"three\");\n                    break;\n\
    \                case 4:\n                    result.Append(\"four\");\n     \
    \               break;\n                case 5:\n                    result.Append(\"\
    five\");\n                    break;\n                case 6:\n              \
    \      result.Append(\"six\");\n                    break;\n                case\
    \ 7:\n                    result.Append(\"seven\");\n                    break;\n\
    \                case 8:\n                    result.Append(\"eight\");\n    \
    \                break;\n                case 9:\n                    result.Append(\"\
    nine\");\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\
    \")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\"\
    )));\n    Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five\
    \ nine\")));\n    Debug.Assert(SortNumbers((\"five zero four seven nine eight\"\
    )).Equals((\"zero four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"\
    six five four three two one zero\")).Equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp343_m5bh.cs(85,5): error CS0106: The modifier ''public'' is not valid
    for this item

    /tmp/tmp343_m5bh.cs(93,2): error CS1513: } expected

    '
  timestamp: 1659798034
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        // TODO: implement this method\n        // throw new NotImplementedException();\n\
    \        string[] nums = numbers.Split(' ');\n        int[] numsInt = new int[nums.Length];\n\
    \        for (int i = 0; i < nums.Length; i++) {\n            numsInt[i] = Convert.ToInt32(nums[i]);\n\
    \        }\n        Array.Sort(numsInt);\n        string result = \"\";\n    \
    \    for (int i = 0; i < numsInt.Length; i++) {\n            result += numsInt[i]\
    \ + \" \";\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"\
    three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three five nine\"\
    )).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five zero\
    \ four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n\
    \    Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in\
    \ a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean\
    \ overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int32.Parse (System.String s, System.IFormatProvider provider)\
    \ [0x00017] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at System.Convert.ToInt32\
    \ (System.String value) [0x0000b] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n \
    \ at Problem.SortNumbers (System.String numbers) [0x00019] in <8e77dbd58fac46d59d92c15b4558f4fd>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00001] in <8e77dbd58fac46d59d92c15b4558f4fd>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.FormatException: Input string was\
    \ not in a correct format.\n  at System.Number.ThrowOverflowOrFormatException\
    \ (System.Boolean overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int32.Parse (System.String s, System.IFormatProvider provider)\
    \ [0x00017] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at System.Convert.ToInt32\
    \ (System.String value) [0x0000b] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n \
    \ at Problem.SortNumbers (System.String numbers) [0x00019] in <8e77dbd58fac46d59d92c15b4558f4fd>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00001] in <8e77dbd58fac46d59d92c15b4558f4fd>:0\
    \ \n"
  stdout: ''
  timestamp: 1659798034
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        string[] nums = numbers.Split(' ');\n        int[] nums2 = new int[nums.Length];\n\
    \        for (int i = 0; i < nums.Length; i++) {\n            nums2[i] = Convert.ToInt32(nums[i]);\n\
    \        }\n        Array.Sort(nums2);\n        string result = \"\";\n      \
    \  for (int i = 0; i < nums2.Length; i++) {\n            result += nums2[i] +\
    \ \" \";\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"\
    three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three five nine\"\
    )).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five zero\
    \ four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n\
    \    Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in\
    \ a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean\
    \ overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int32.Parse (System.String s, System.IFormatProvider provider)\
    \ [0x00017] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at System.Convert.ToInt32\
    \ (System.String value) [0x0000b] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n \
    \ at Problem.SortNumbers (System.String numbers) [0x00019] in <3fb222c27cb94d7bad4dec30d5d576e6>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00001] in <3fb222c27cb94d7bad4dec30d5d576e6>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.FormatException: Input string was\
    \ not in a correct format.\n  at System.Number.ThrowOverflowOrFormatException\
    \ (System.Boolean overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int32.Parse (System.String s, System.IFormatProvider provider)\
    \ [0x00017] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at System.Convert.ToInt32\
    \ (System.String value) [0x0000b] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n \
    \ at Problem.SortNumbers (System.String numbers) [0x00019] in <3fb222c27cb94d7bad4dec30d5d576e6>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00001] in <3fb222c27cb94d7bad4dec30d5d576e6>:0\
    \ \n"
  stdout: ''
  timestamp: 1659798035
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        string[] nums = numbers.Split(' ');\n        int[] numsInt = new\
    \ int[nums.Length];\n        for (int i = 0; i < nums.Length; i++) {\n       \
    \     switch (nums[i]) {\n                case \"zero\":\n                   \
    \ numsInt[i] = 0;\n                    break;\n                case \"one\":\n\
    \                    numsInt[i] = 1;\n                    break;\n           \
    \     case \"two\":\n                    numsInt[i] = 2;\n                   \
    \ break;\n                case \"three\":\n                    numsInt[i] = 3;\n\
    \                    break;\n                case \"four\":\n                \
    \    numsInt[i] = 4;\n                    break;\n                case \"five\"\
    :\n                    numsInt[i] = 5;\n                    break;\n         \
    \       case \"six\":\n                    numsInt[i] = 6;\n                 \
    \   break;\n                case \"seven\":\n                    numsInt[i] =\
    \ 7;\n                    break;\n                case \"eight\":\n          \
    \          numsInt[i] = 8;\n                    break;\n                case \"\
    nine\":\n                    numsInt[i] = 9;\n                    break;\n   \
    \         }\n        }\n        Array.Sort(numsInt);\n        string result =\
    \ \"\";\n        for (int i = 0; i < numsInt.Length; i++) {\n            switch\
    \ (numsInt[i]) {\n                case 0:\n                    result += \"zero\
    \ \";\n                    break;\n                case 1:\n                 \
    \   result += \"one \";\n                    break;\n                case 2:\n\
    \                    result += \"two \";\n                    break;\n       \
    \         case 3:\n                    result += \"three \";\n               \
    \     break;\n                case 4:\n                    result += \"four \"\
    ;\n                    break;\n                case 5:\n                    result\
    \ += \"five \";\n                    break;\n                case 6:\n       \
    \             result += \"six \";\n                    break;\n              \
    \  case 7:\n                    result += \"seven \";\n                    break;\n\
    \                case 8:\n                    result += \"eight \";\n        \
    \            break;\n                case 9:\n                    result += \"\
    nine \";\n                    break;\n            }\n        }\n        return\
    \ result.Trim();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\
    \")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\"\
    )));\n    Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five\
    \ nine\")));\n    Debug.Assert(SortNumbers((\"five zero four seven nine eight\"\
    )).Equals((\"zero four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"\
    six five four three two one zero\")).Equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ea47b1a39139465b9f54fcc1cf074b49>:0 \n"
  stdout: ''
  timestamp: 1659798035
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        var nums = numbers.Split(' ');\n        Array.Sort(nums);\n     \
    \   return string.Join(\" \", nums);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"\
    three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three five nine\"\
    )).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five zero\
    \ four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n\
    \    Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a52eb78c127b4f7b966d1276966c9022>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a52eb78c127b4f7b966d1276966c9022>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798035
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        var nums = numbers.Split(' ').Select(x => int.Parse(x)).OrderBy(x\
    \ => x).Select(x => x.ToString()).ToArray();\n        return string.Join(\" \"\
    , nums);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\
    \")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\"\
    )));\n    Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five\
    \ nine\")));\n    Debug.Assert(SortNumbers((\"five zero four seven nine eight\"\
    )).Equals((\"zero four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"\
    six five four three two one zero\")).Equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in\
    \ a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean\
    \ overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int32.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem+<>c.<SortNumbers>b__0_0 (System.String x) [0x00000] in <dc44429ce7df4cf69f56b1678990ebd2>:0\
    \ \n  at System.Linq.Enumerable+SelectArrayIterator`2[TSource,TResult].ToArray\
    \ () [0x00012] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Buffer`1[TElement]..ctor\
    \ (System.Collections.Generic.IEnumerable`1[T] source) [0x0000a] in <e540098dd111461e919c5863f6975c29>:0\
    \ \n  at System.Linq.OrderedEnumerable`1+<GetEnumerator>d__3[TElement].MoveNext\
    \ () [0x0001e] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable+SelectIPartitionIterator`2[TSource,TResult].PreallocatingToArray\
    \ (System.Int32 count) [0x00035] in <e540098dd111461e919c5863f6975c29>:0 \n  at\
    \ System.Linq.Enumerable+SelectIPartitionIterator`2[TSource,TResult].ToArray ()\
    \ [0x00023] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable.ToArray[TSource]\
    \ (System.Collections.Generic.IEnumerable`1[T] source) [0x0001f] in <e540098dd111461e919c5863f6975c29>:0\
    \ \n  at Problem.SortNumbers (System.String numbers) [0x00076] in <dc44429ce7df4cf69f56b1678990ebd2>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00001] in <dc44429ce7df4cf69f56b1678990ebd2>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.FormatException: Input string was\
    \ not in a correct format.\n  at System.Number.ThrowOverflowOrFormatException\
    \ (System.Boolean overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberS"
  stdout: ''
  timestamp: 1659798034
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        // Your code goes here\n        return \"\";\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\"\
    )));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"\
    three five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"\
    five zero four seven nine eight\")).Equals((\"zero four five seven eight nine\"\
    )));\n    Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2e593562849b4f7f9c991456219b3cbb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2e593562849b4f7f9c991456219b3cbb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798035
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        // TODO: Implement this function\n        return \"\";\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\
    \")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\"\
    )));\n    Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five\
    \ nine\")));\n    Debug.Assert(SortNumbers((\"five zero four seven nine eight\"\
    )).Equals((\"zero four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"\
    six five four three two one zero\")).Equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <959a76934a79427383ca9be1749b050c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <959a76934a79427383ca9be1749b050c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798035
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        // TODO: Implement this function\n        return \"\";\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\
    \")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\"\
    )));\n    Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five\
    \ nine\")));\n    Debug.Assert(SortNumbers((\"five zero four seven nine eight\"\
    )).Equals((\"zero four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"\
    six five four three two one zero\")).Equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <959a76934a79427383ca9be1749b050c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <959a76934a79427383ca9be1749b050c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798035
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        var nums = numbers.Split(' ');\n        var nums2 = nums.Select(x\
    \ => int.Parse(x)).ToArray();\n        Array.Sort(nums2);\n        return string.Join(\"\
    \ \", nums2);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\
    \")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\"\
    )));\n    Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five\
    \ nine\")));\n    Debug.Assert(SortNumbers((\"five zero four seven nine eight\"\
    )).Equals((\"zero four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"\
    six five four three two one zero\")).Equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in\
    \ a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean\
    \ overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int32.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem+<>c.<SortNumbers>b__0_0 (System.String x) [0x00000] in <47d5267524014de5940c4552c95c2cea>:0\
    \ \n  at System.Linq.Enumerable+SelectArrayIterator`2[TSource,TResult].ToArray\
    \ () [0x00012] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable.ToArray[TSource]\
    \ (System.Collections.Generic.IEnumerable`1[T] source) [0x0001f] in <e540098dd111461e919c5863f6975c29>:0\
    \ \n  at Problem.SortNumbers (System.String numbers) [0x00030] in <47d5267524014de5940c4552c95c2cea>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00001] in <47d5267524014de5940c4552c95c2cea>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.FormatException: Input string was\
    \ not in a correct format.\n  at System.Number.ThrowOverflowOrFormatException\
    \ (System.Boolean overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int32.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem+<>c.<SortNumbers>b__0_0 (System.String x) [0x00000] in <47d5267524014de5940c4552c95c2cea>:0\
    \ \n  at System.Linq.Enumerable+SelectArrayIterator`2[TSource,TResult].ToArray\
    \ () [0x00012] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable.ToArray[TSource]\
    \ (System.Collections.Generic.IEnumerable`1[T] source) [0x0001f] in <e540098dd111461e919c5863f6"
  stdout: ''
  timestamp: 1659798035
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        // TODO: Implement this function\n        return \"\";\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\
    \")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\"\
    )));\n    Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five\
    \ nine\")));\n    Debug.Assert(SortNumbers((\"five zero four seven nine eight\"\
    )).Equals((\"zero four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"\
    six five four three two one zero\")).Equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <959a76934a79427383ca9be1749b050c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <959a76934a79427383ca9be1749b050c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798035
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        // Your code goes here\n        return \"\";\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\"\
    )));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"\
    three five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"\
    five zero four seven nine eight\")).Equals((\"zero four five seven eight nine\"\
    )));\n    Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2e593562849b4f7f9c991456219b3cbb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2e593562849b4f7f9c991456219b3cbb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798035
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        var nums = numbers.Split(' ').Select(x => (int)Enum.Parse(typeof(Numbers),\
    \ x)).OrderBy(x => x).Select(x => (Numbers)x).Select(x => x.ToString());\n   \
    \     return string.Join(\" \", nums);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"\
    three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three five nine\"\
    )).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five zero\
    \ four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n\
    \    Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpfq2qs9az.cs(15,74): error CS0246: The type or namespace name ''Numbers''
    could not be found (are you missing a using directive or an assembly reference?)

    /tmp/tmpfq2qs9az.cs(15,117): error CS0246: The type or namespace name ''Numbers''
    could not be found (are you missing a using directive or an assembly reference?)

    '
  timestamp: 1659798034
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        // TODO: Implement this function\n        return \"\";\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\
    \")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\"\
    )));\n    Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five\
    \ nine\")));\n    Debug.Assert(SortNumbers((\"five zero four seven nine eight\"\
    )).Equals((\"zero four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"\
    six five four three two one zero\")).Equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <959a76934a79427383ca9be1749b050c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <959a76934a79427383ca9be1749b050c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798035
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        var nums = numbers.Split(' ');\n        var nums2 = new int[nums.Length];\n\
    \        for (int i = 0; i < nums.Length; i++) {\n            nums2[i] = int.Parse(nums[i]);\n\
    \        }\n        Array.Sort(nums2);\n        var sb = new StringBuilder();\n\
    \        for (int i = 0; i < nums2.Length; i++) {\n            sb.Append(nums2[i]);\n\
    \            if (i < nums2.Length - 1) {\n                sb.Append(' ');\n  \
    \          }\n        }\n        return sb.ToString();\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\"\
    )));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"\
    three five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"\
    five zero four seven nine eight\")).Equals((\"zero four five seven eight nine\"\
    )));\n    Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in\
    \ a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean\
    \ overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int32.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.SortNumbers (System.String numbers) [0x00019] in <0c2b00b9810f492986cff3f5bf8a8e32>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00001] in <0c2b00b9810f492986cff3f5bf8a8e32>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.FormatException: Input string was\
    \ not in a correct format.\n  at System.Number.ThrowOverflowOrFormatException\
    \ (System.Boolean overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int32.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.SortNumbers (System.String numbers) [0x00019] in <0c2b00b9810f492986cff3f5bf8a8e32>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00001] in <0c2b00b9810f492986cff3f5bf8a8e32>:0\
    \ \n"
  stdout: ''
  timestamp: 1659798035
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        // Your code goes here\n        return \"\";\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\"\
    )));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"\
    three five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"\
    five zero four seven nine eight\")).Equals((\"zero four five seven eight nine\"\
    )));\n    Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2e593562849b4f7f9c991456219b3cbb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2e593562849b4f7f9c991456219b3cbb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798035
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        // Your code goes here\n        return \"\";\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\"\
    )));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"\
    three five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"\
    five zero four seven nine eight\")).Equals((\"zero four five seven eight nine\"\
    )));\n    Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2e593562849b4f7f9c991456219b3cbb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2e593562849b4f7f9c991456219b3cbb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798035
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        string[] nums = numbers.Split(' ');\n        int[] nums2 = new int[nums.Length];\n\
    \        for (int i = 0; i < nums.Length; i++) {\n            switch (nums[i])\
    \ {\n                case \"zero\":\n                    nums2[i] = 0;\n     \
    \               break;\n                case \"one\":\n                    nums2[i]\
    \ = 1;\n                    break;\n                case \"two\":\n          \
    \          nums2[i] = 2;\n                    break;\n                case \"\
    three\":\n                    nums2[i] = 3;\n                    break;\n    \
    \            case \"four\":\n                    nums2[i] = 4;\n             \
    \       break;\n                case \"five\":\n                    nums2[i] =\
    \ 5;\n                    break;\n                case \"six\":\n            \
    \        nums2[i] = 6;\n                    break;\n                case \"seven\"\
    :\n                    nums2[i] = 7;\n                    break;\n           \
    \     case \"eight\":\n                    nums2[i] = 8;\n                   \
    \ break;\n                case \"nine\":\n                    nums2[i] = 9;\n\
    \                    break;\n            }\n        }\n        Array.Sort(nums2);\n\
    \        for (int i = 0; i < nums.Length; i++) {\n            switch (nums2[i])\
    \ {\n                case 0:\n                    nums[i] = \"zero\";\n      \
    \              break;\n                case 1:\n                    nums[i] =\
    \ \"one\";\n                    break;\n                case 2:\n            \
    \        nums[i] = \"two\";\n                    break;\n                case\
    \ 3:\n                    nums[i] = \"three\";\n                    break;\n \
    \               case 4:\n                    nums[i] = \"four\";\n           \
    \         break;\n                case 5:\n                    nums[i] = \"five\"\
    ;\n                    break;\n                case 6:\n                    nums[i]\
    \ = \"six\";\n                    break;\n                case 7:\n          \
    \          nums[i] = \"seven\";\n                    break;\n                case\
    \ 8:\n                    nums[i] = \"eight\";\n                    break;\n \
    \               case 9:\n                    nums[i] = \"nine\";\n           \
    \        \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\
    \")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\"\
    )));\n    Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five\
    \ nine\")));\n    Debug.Assert(SortNumbers((\"five zero four seven nine eight\"\
    )).Equals((\"zero four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"\
    six five four three two one zero\")).Equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp8jpzi307.cs(85,5): error CS0106: The modifier ''public'' is not valid
    for this item

    /tmp/tmp8jpzi307.cs(93,2): error CS1513: } expected

    '
  timestamp: 1659798034
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        // Your code goes here\n        return \"\";\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\"\
    )));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"\
    three five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"\
    five zero four seven nine eight\")).Equals((\"zero four five seven eight nine\"\
    )));\n    Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2e593562849b4f7f9c991456219b3cbb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2e593562849b4f7f9c991456219b3cbb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798035
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        // TODO: Implement this function\n        return \"\";\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\
    \")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\"\
    )));\n    Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five\
    \ nine\")));\n    Debug.Assert(SortNumbers((\"five zero four seven nine eight\"\
    )).Equals((\"zero four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"\
    six five four three two one zero\")).Equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <959a76934a79427383ca9be1749b050c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <959a76934a79427383ca9be1749b050c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798035
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        // Your code goes here\n        return \"\";\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\"\
    )));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"\
    three five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"\
    five zero four seven nine eight\")).Equals((\"zero four five seven eight nine\"\
    )));\n    Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2e593562849b4f7f9c991456219b3cbb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2e593562849b4f7f9c991456219b3cbb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798035
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        string[] nums = numbers.Split(' ');\n        int[] nums2 = new int[nums.Length];\n\
    \        for (int i = 0; i < nums.Length; i++) {\n            nums2[i] = int.Parse(nums[i]);\n\
    \        }\n        Array.Sort(nums2);\n        string result = \"\";\n      \
    \  for (int i = 0; i < nums2.Length; i++) {\n            result += nums2[i].ToString()\
    \ + \" \";\n        }\n        return result.Trim();\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\"\
    )));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"\
    three five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"\
    five zero four seven nine eight\")).Equals((\"zero four five seven eight nine\"\
    )));\n    Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in\
    \ a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean\
    \ overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int32.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.SortNumbers (System.String numbers) [0x00019] in <4e1e978a51854655af718d5cb459e94c>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00001] in <4e1e978a51854655af718d5cb459e94c>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.FormatException: Input string was\
    \ not in a correct format.\n  at System.Number.ThrowOverflowOrFormatException\
    \ (System.Boolean overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int32.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.SortNumbers (System.String numbers) [0x00019] in <4e1e978a51854655af718d5cb459e94c>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00001] in <4e1e978a51854655af718d5cb459e94c>:0\
    \ \n"
  stdout: ''
  timestamp: 1659798035
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        // TODO: Implement this function\n        return \"\";\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\
    \")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\"\
    )));\n    Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five\
    \ nine\")));\n    Debug.Assert(SortNumbers((\"five zero four seven nine eight\"\
    )).Equals((\"zero four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"\
    six five four three two one zero\")).Equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <959a76934a79427383ca9be1749b050c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <959a76934a79427383ca9be1749b050c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798035
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        // TODO: Implement this function\n        return \"\";\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\
    \")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\"\
    )));\n    Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five\
    \ nine\")));\n    Debug.Assert(SortNumbers((\"five zero four seven nine eight\"\
    )).Equals((\"zero four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"\
    six five four three two one zero\")).Equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <959a76934a79427383ca9be1749b050c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <959a76934a79427383ca9be1749b050c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798035
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        // TODO: Implement this function\n        return \"\";\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\
    \")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\"\
    )));\n    Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five\
    \ nine\")));\n    Debug.Assert(SortNumbers((\"five zero four seven nine eight\"\
    )).Equals((\"zero four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"\
    six five four three two one zero\")).Equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <959a76934a79427383ca9be1749b050c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <959a76934a79427383ca9be1749b050c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798035
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        // TODO: Implement me\n        return \"\";\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\"\
    )));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"\
    three five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"\
    five zero four seven nine eight\")).Equals((\"zero four five seven eight nine\"\
    )));\n    Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <90b234f22cdb440fa1cf7d6dad6223b7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <90b234f22cdb440fa1cf7d6dad6223b7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798035
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        // Your code goes here\n        return \"\";\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\"\
    )));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"\
    three five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"\
    five zero four seven nine eight\")).Equals((\"zero four five seven eight nine\"\
    )));\n    Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2e593562849b4f7f9c991456219b3cbb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2e593562849b4f7f9c991456219b3cbb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798035
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        var nums = numbers.Split(' ').Select(x => Int32.Parse(x)).OrderBy(x\
    \ => x).Select(x => x.ToString()).ToArray();\n        return String.Join(\" \"\
    , nums);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\
    \")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\"\
    )));\n    Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five\
    \ nine\")));\n    Debug.Assert(SortNumbers((\"five zero four seven nine eight\"\
    )).Equals((\"zero four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"\
    six five four three two one zero\")).Equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in\
    \ a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean\
    \ overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int32.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem+<>c.<SortNumbers>b__0_0 (System.String x) [0x00000] in <69d63f9c6a4f4d08b576679162e505ae>:0\
    \ \n  at System.Linq.Enumerable+SelectArrayIterator`2[TSource,TResult].ToArray\
    \ () [0x00012] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Buffer`1[TElement]..ctor\
    \ (System.Collections.Generic.IEnumerable`1[T] source) [0x0000a] in <e540098dd111461e919c5863f6975c29>:0\
    \ \n  at System.Linq.OrderedEnumerable`1+<GetEnumerator>d__3[TElement].MoveNext\
    \ () [0x0001e] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable+SelectIPartitionIterator`2[TSource,TResult].PreallocatingToArray\
    \ (System.Int32 count) [0x00035] in <e540098dd111461e919c5863f6975c29>:0 \n  at\
    \ System.Linq.Enumerable+SelectIPartitionIterator`2[TSource,TResult].ToArray ()\
    \ [0x00023] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable.ToArray[TSource]\
    \ (System.Collections.Generic.IEnumerable`1[T] source) [0x0001f] in <e540098dd111461e919c5863f6975c29>:0\
    \ \n  at Problem.SortNumbers (System.String numbers) [0x00076] in <69d63f9c6a4f4d08b576679162e505ae>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00001] in <69d63f9c6a4f4d08b576679162e505ae>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.FormatException: Input string was\
    \ not in a correct format.\n  at System.Number.ThrowOverflowOrFormatException\
    \ (System.Boolean overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberS"
  stdout: ''
  timestamp: 1659798035
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        string[] nums = numbers.Split(' ');\n        int[] nums_int = new\
    \ int[nums.Length];\n        for (int i = 0; i < nums.Length; i++) {\n       \
    \     nums_int[i] = int.Parse(nums[i]);\n        }\n        Array.Sort(nums_int);\n\
    \        string output = \"\";\n        for (int i = 0; i < nums_int.Length; i++)\
    \ {\n            output += nums_int[i].ToString() + \" \";\n        }\n      \
    \  return output.Trim();\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"\
    three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three five nine\"\
    )).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five zero\
    \ four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n\
    \    Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in\
    \ a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean\
    \ overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int32.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.SortNumbers (System.String numbers) [0x00019] in <0a4787f3c5bb44cb96c9006f2f791be1>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00001] in <0a4787f3c5bb44cb96c9006f2f791be1>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.FormatException: Input string was\
    \ not in a correct format.\n  at System.Number.ThrowOverflowOrFormatException\
    \ (System.Boolean overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int32.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.SortNumbers (System.String numbers) [0x00019] in <0a4787f3c5bb44cb96c9006f2f791be1>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00001] in <0a4787f3c5bb44cb96c9006f2f791be1>:0\
    \ \n"
  stdout: ''
  timestamp: 1659798035
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        // Your code here\n        return \"\";\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\"\
    )));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"\
    three five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"\
    five zero four seven nine eight\")).Equals((\"zero four five seven eight nine\"\
    )));\n    Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c4d01d339bae46f0bfdfdd487747b40d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c4d01d339bae46f0bfdfdd487747b40d>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798035
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        string[] nums = numbers.Split(' ');\n        int[] nums2 = new int[nums.Length];\n\
    \        for (int i = 0; i < nums.Length; i++) {\n            nums2[i] = numToInt(nums[i]);\n\
    \        }\n        Array.Sort(nums2);\n        for (int i = 0; i < nums.Length;\
    \ i++) {\n            nums[i] = intToNum(nums2[i]);\n        }\n        return\
    \ string.Join(\" \", nums);\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"\
    three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three five nine\"\
    )).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five zero\
    \ four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n\
    \    Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp4g8kyr68.cs(18,24): error CS0103: The name ''numToInt'' does not exist
    in the current context

    /tmp/tmp4g8kyr68.cs(22,23): error CS0103: The name ''intToNum'' does not exist
    in the current context

    '
  timestamp: 1659798035
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        // Your code goes here\n        return \"\";\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\"\
    )));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"\
    three five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"\
    five zero four seven nine eight\")).Equals((\"zero four five seven eight nine\"\
    )));\n    Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2e593562849b4f7f9c991456219b3cbb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2e593562849b4f7f9c991456219b3cbb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798035
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        // TODO: Implement this function\n        return \"\";\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\
    \")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\"\
    )));\n    Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five\
    \ nine\")));\n    Debug.Assert(SortNumbers((\"five zero four seven nine eight\"\
    )).Equals((\"zero four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"\
    six five four three two one zero\")).Equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <959a76934a79427383ca9be1749b050c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <959a76934a79427383ca9be1749b050c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798035
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        // TODO: Implement this function\n        return \"\";\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\
    \")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\"\
    )));\n    Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five\
    \ nine\")));\n    Debug.Assert(SortNumbers((\"five zero four seven nine eight\"\
    )).Equals((\"zero four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"\
    six five four three two one zero\")).Equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <959a76934a79427383ca9be1749b050c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <959a76934a79427383ca9be1749b050c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798035
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        string[] nums = numbers.Split(' ');\n        int[] nums2 = new int[nums.Length];\n\
    \        for (int i = 0; i < nums.Length; i++) {\n            switch (nums[i])\
    \ {\n                case \"zero\":\n                    nums2[i] = 0;\n     \
    \               break;\n                case \"one\":\n                    nums2[i]\
    \ = 1;\n                    break;\n                case \"two\":\n          \
    \          nums2[i] = 2;\n                    break;\n                case \"\
    three\":\n                    nums2[i] = 3;\n                    break;\n    \
    \            case \"four\":\n                    nums2[i] = 4;\n             \
    \       break;\n                case \"five\":\n                    nums2[i] =\
    \ 5;\n                    break;\n                case \"six\":\n            \
    \        nums2[i] = 6;\n                    break;\n                case \"seven\"\
    :\n                    nums2[i] = 7;\n                    break;\n           \
    \     case \"eight\":\n                    nums2[i] = 8;\n                   \
    \ break;\n                case \"nine\":\n                    nums2[i] = 9;\n\
    \                    break;\n            }\n        }\n        Array.Sort(nums2);\n\
    \        string ret = \"\";\n        for (int i = 0; i < nums2.Length; i++) {\n\
    \            switch (nums2[i]) {\n                case 0:\n                  \
    \  ret += \"zero \";\n                    break;\n                case 1:\n  \
    \                  ret += \"one \";\n                    break;\n            \
    \    case 2:\n                    ret += \"two \";\n                    break;\n\
    \                case 3:\n                    ret += \"three \";\n           \
    \         break;\n                case 4:\n                    ret += \"four \"\
    ;\n                    break;\n                case 5:\n                    ret\
    \ += \"five \";\n                    break;\n                case 6:\n       \
    \             ret += \"six \";\n                    break;\n                case\
    \ 7:\n                    ret += \"seven \";\n                    break;\n   \
    \             case 8:\n                    ret += \"eight \";\n              \
    \      break;\n                case 9:\n                    ret += \"nine \";\n\
    \                    break;\n            }\n        }\n        return ret.Trim();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\
    \")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\"\
    )));\n    Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five\
    \ nine\")));\n    Debug.Assert(SortNumbers((\"five zero four seven nine eight\"\
    )).Equals((\"zero four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"\
    six five four three two one zero\")).Equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c07ba9c7637f42d8a0248cf79b6edb9a>:0 \n"
  stdout: ''
  timestamp: 1659798035
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        // TODO: Implement this function\n        return \"\";\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\
    \")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\"\
    )));\n    Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five\
    \ nine\")));\n    Debug.Assert(SortNumbers((\"five zero four seven nine eight\"\
    )).Equals((\"zero four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"\
    six five four three two one zero\")).Equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <959a76934a79427383ca9be1749b050c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <959a76934a79427383ca9be1749b050c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798035
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        return \"\";\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"\
    three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three five nine\"\
    )).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five zero\
    \ four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n\
    \    Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <897dae32f9854a2fbdf4e7bc72939644>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <897dae32f9854a2fbdf4e7bc72939644>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798035
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        var nums = numbers.Split(' ').Select(s => int.Parse(s)).OrderBy(i\
    \ => i).Select(i => i.ToString()).ToArray();\n        return string.Join(\" \"\
    , nums);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\
    \")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\"\
    )));\n    Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five\
    \ nine\")));\n    Debug.Assert(SortNumbers((\"five zero four seven nine eight\"\
    )).Equals((\"zero four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"\
    six five four three two one zero\")).Equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in\
    \ a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean\
    \ overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int32.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem+<>c.<SortNumbers>b__0_0 (System.String s) [0x00000] in <7306233ee02b45dab9d3a78f2d06779a>:0\
    \ \n  at System.Linq.Enumerable+SelectArrayIterator`2[TSource,TResult].ToArray\
    \ () [0x00012] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Buffer`1[TElement]..ctor\
    \ (System.Collections.Generic.IEnumerable`1[T] source) [0x0000a] in <e540098dd111461e919c5863f6975c29>:0\
    \ \n  at System.Linq.OrderedEnumerable`1+<GetEnumerator>d__3[TElement].MoveNext\
    \ () [0x0001e] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable+SelectIPartitionIterator`2[TSource,TResult].PreallocatingToArray\
    \ (System.Int32 count) [0x00035] in <e540098dd111461e919c5863f6975c29>:0 \n  at\
    \ System.Linq.Enumerable+SelectIPartitionIterator`2[TSource,TResult].ToArray ()\
    \ [0x00023] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable.ToArray[TSource]\
    \ (System.Collections.Generic.IEnumerable`1[T] source) [0x0001f] in <e540098dd111461e919c5863f6975c29>:0\
    \ \n  at Problem.SortNumbers (System.String numbers) [0x00076] in <7306233ee02b45dab9d3a78f2d06779a>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00001] in <7306233ee02b45dab9d3a78f2d06779a>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.FormatException: Input string was\
    \ not in a correct format.\n  at System.Number.ThrowOverflowOrFormatException\
    \ (System.Boolean overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberS"
  stdout: ''
  timestamp: 1659798035
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        var nums = numbers.Split(' ').Select(x => Int32.Parse(x)).OrderBy(x\
    \ => x).Select(x => x.ToString()).ToArray();\n        return String.Join(\" \"\
    , nums);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\
    \")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\"\
    )));\n    Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five\
    \ nine\")));\n    Debug.Assert(SortNumbers((\"five zero four seven nine eight\"\
    )).Equals((\"zero four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"\
    six five four three two one zero\")).Equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in\
    \ a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean\
    \ overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int32.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem+<>c.<SortNumbers>b__0_0 (System.String x) [0x00000] in <69d63f9c6a4f4d08b576679162e505ae>:0\
    \ \n  at System.Linq.Enumerable+SelectArrayIterator`2[TSource,TResult].ToArray\
    \ () [0x00012] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Buffer`1[TElement]..ctor\
    \ (System.Collections.Generic.IEnumerable`1[T] source) [0x0000a] in <e540098dd111461e919c5863f6975c29>:0\
    \ \n  at System.Linq.OrderedEnumerable`1+<GetEnumerator>d__3[TElement].MoveNext\
    \ () [0x0001e] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable+SelectIPartitionIterator`2[TSource,TResult].PreallocatingToArray\
    \ (System.Int32 count) [0x00035] in <e540098dd111461e919c5863f6975c29>:0 \n  at\
    \ System.Linq.Enumerable+SelectIPartitionIterator`2[TSource,TResult].ToArray ()\
    \ [0x00023] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable.ToArray[TSource]\
    \ (System.Collections.Generic.IEnumerable`1[T] source) [0x0001f] in <e540098dd111461e919c5863f6975c29>:0\
    \ \n  at Problem.SortNumbers (System.String numbers) [0x00076] in <69d63f9c6a4f4d08b576679162e505ae>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00001] in <69d63f9c6a4f4d08b576679162e505ae>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.FormatException: Input string was\
    \ not in a correct format.\n  at System.Number.ThrowOverflowOrFormatException\
    \ (System.Boolean overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberS"
  stdout: ''
  timestamp: 1659798035
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        var nums = numbers.Split(' ').Select(x => int.Parse(x)).OrderBy(x\
    \ => x).Select(x => x.ToString()).ToArray();\n        return string.Join(\" \"\
    , nums);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\
    \")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\"\
    )));\n    Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five\
    \ nine\")));\n    Debug.Assert(SortNumbers((\"five zero four seven nine eight\"\
    )).Equals((\"zero four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"\
    six five four three two one zero\")).Equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in\
    \ a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean\
    \ overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int32.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem+<>c.<SortNumbers>b__0_0 (System.String x) [0x00000] in <dc44429ce7df4cf69f56b1678990ebd2>:0\
    \ \n  at System.Linq.Enumerable+SelectArrayIterator`2[TSource,TResult].ToArray\
    \ () [0x00012] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Buffer`1[TElement]..ctor\
    \ (System.Collections.Generic.IEnumerable`1[T] source) [0x0000a] in <e540098dd111461e919c5863f6975c29>:0\
    \ \n  at System.Linq.OrderedEnumerable`1+<GetEnumerator>d__3[TElement].MoveNext\
    \ () [0x0001e] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable+SelectIPartitionIterator`2[TSource,TResult].PreallocatingToArray\
    \ (System.Int32 count) [0x00035] in <e540098dd111461e919c5863f6975c29>:0 \n  at\
    \ System.Linq.Enumerable+SelectIPartitionIterator`2[TSource,TResult].ToArray ()\
    \ [0x00023] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable.ToArray[TSource]\
    \ (System.Collections.Generic.IEnumerable`1[T] source) [0x0001f] in <e540098dd111461e919c5863f6975c29>:0\
    \ \n  at Problem.SortNumbers (System.String numbers) [0x00076] in <dc44429ce7df4cf69f56b1678990ebd2>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00001] in <dc44429ce7df4cf69f56b1678990ebd2>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.FormatException: Input string was\
    \ not in a correct format.\n  at System.Number.ThrowOverflowOrFormatException\
    \ (System.Boolean overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberS"
  stdout: ''
  timestamp: 1659798034
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        var nums = numbers.Split(' ').Select(x => x.ToLower()).ToArray();\n\
    \        var nums2 = new List<string>();\n        for (int i = 0; i < 10; i++)\
    \ {\n            nums2.AddRange(nums.Where(x => x == i.ToString()));\n       \
    \ }\n        return string.Join(\" \", nums2);\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n\
    \    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"\
    three five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"\
    five zero four seven nine eight\")).Equals((\"zero four five seven eight nine\"\
    )));\n    Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ce8008ff8e7f4cd49fb2ff534fcf5d7f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ce8008ff8e7f4cd49fb2ff534fcf5d7f>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798035
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        string[] nums = numbers.Split(' ');\n        int[] numsint = new\
    \ int[nums.Length];\n        for (int i = 0; i < nums.Length; i++) {\n       \
    \     switch (nums[i]) {\n                case \"zero\":\n                   \
    \ numsint[i] = 0;\n                    break;\n                case \"one\":\n\
    \                    numsint[i] = 1;\n                    break;\n           \
    \     case \"two\":\n                    numsint[i] = 2;\n                   \
    \ break;\n                case \"three\":\n                    numsint[i] = 3;\n\
    \                    break;\n                case \"four\":\n                \
    \    numsint[i] = 4;\n                    break;\n                case \"five\"\
    :\n                    numsint[i] = 5;\n                    break;\n         \
    \       case \"six\":\n                    numsint[i] = 6;\n                 \
    \   break;\n                case \"seven\":\n                    numsint[i] =\
    \ 7;\n                    break;\n                case \"eight\":\n          \
    \          numsint[i] = 8;\n                    break;\n                case \"\
    nine\":\n                    numsint[i] = 9;\n                    break;\n   \
    \         }\n        }\n        Array.Sort(numsint);\n        string[] numsstr\
    \ = new string[nums.Length];\n        for (int i = 0; i < nums.Length; i++) {\n\
    \            switch (numsint[i]) {\n                case 0:\n                \
    \    numsstr[i] = \"zero\";\n                    break;\n                case\
    \ 1:\n                    numsstr[i] = \"one\";\n                    break;\n\
    \                case 2:\n                    numsstr[i] = \"two\";\n        \
    \            break;\n                case 3:\n                    numsstr[i] =\
    \ \"three\";\n                    break;\n                case 4:\n          \
    \          numsstr[i] = \"four\";\n                    break;\n              \
    \  case 5:\n                    numsstr[i] = \"five\";\n                    break;\n\
    \                case 6:\n                    numsstr[i] = \"six\";\n        \
    \            break;\n                case 7:\n                    numsstr[i] =\
    \ \"seven\";\n                    break;\n                case 8:\n          \
    \          numsstr[i] =\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"\
    three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three five nine\"\
    )).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five zero\
    \ four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n\
    \    Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpiceq59l0.cs(80,33): error CS1525: Invalid expression term ''}''

    /tmp/tmpiceq59l0.cs(80,33): error CS1002: ; expected

    /tmp/tmpiceq59l0.cs(82,5): error CS0106: The modifier ''public'' is not valid
    for this item

    /tmp/tmpiceq59l0.cs(90,2): error CS1513: } expected

    '
  timestamp: 1659798035
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        // TODO: Implement this function\n        return null;\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\
    \")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\"\
    )));\n    Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five\
    \ nine\")));\n    Debug.Assert(SortNumbers((\"five zero four seven nine eight\"\
    )).Equals((\"zero four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"\
    six five four three two one zero\")).Equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference\
    \ not set to an instance of an object\n  at Problem.Main (System.String[] args)\
    \ [0x0000b] in <11e9f55b17c44449b9e89518b1774db0>:0 \n[ERROR] FATAL UNHANDLED\
    \ EXCEPTION: System.NullReferenceException: Object reference not set to an instance\
    \ of an object\n  at Problem.Main (System.String[] args) [0x0000b] in <11e9f55b17c44449b9e89518b1774db0>:0\
    \ \n"
  stdout: ''
  timestamp: 1659798035
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        var nums = numbers.Split(' ').Select(x => int.Parse(x)).OrderBy(x\
    \ => x).Select(x => x.ToString()).ToArray();\n        return string.Join(\" \"\
    , nums);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\
    \")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\"\
    )));\n    Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five\
    \ nine\")));\n    Debug.Assert(SortNumbers((\"five zero four seven nine eight\"\
    )).Equals((\"zero four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"\
    six five four three two one zero\")).Equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in\
    \ a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean\
    \ overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int32.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem+<>c.<SortNumbers>b__0_0 (System.String x) [0x00000] in <dc44429ce7df4cf69f56b1678990ebd2>:0\
    \ \n  at System.Linq.Enumerable+SelectArrayIterator`2[TSource,TResult].ToArray\
    \ () [0x00012] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Buffer`1[TElement]..ctor\
    \ (System.Collections.Generic.IEnumerable`1[T] source) [0x0000a] in <e540098dd111461e919c5863f6975c29>:0\
    \ \n  at System.Linq.OrderedEnumerable`1+<GetEnumerator>d__3[TElement].MoveNext\
    \ () [0x0001e] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable+SelectIPartitionIterator`2[TSource,TResult].PreallocatingToArray\
    \ (System.Int32 count) [0x00035] in <e540098dd111461e919c5863f6975c29>:0 \n  at\
    \ System.Linq.Enumerable+SelectIPartitionIterator`2[TSource,TResult].ToArray ()\
    \ [0x00023] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable.ToArray[TSource]\
    \ (System.Collections.Generic.IEnumerable`1[T] source) [0x0001f] in <e540098dd111461e919c5863f6975c29>:0\
    \ \n  at Problem.SortNumbers (System.String numbers) [0x00076] in <dc44429ce7df4cf69f56b1678990ebd2>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00001] in <dc44429ce7df4cf69f56b1678990ebd2>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.FormatException: Input string was\
    \ not in a correct format.\n  at System.Number.ThrowOverflowOrFormatException\
    \ (System.Boolean overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberS"
  stdout: ''
  timestamp: 1659798034
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        // Your code goes here\n        return \"\";\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\"\
    )));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"\
    three five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"\
    five zero four seven nine eight\")).Equals((\"zero four five seven eight nine\"\
    )));\n    Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2e593562849b4f7f9c991456219b3cbb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2e593562849b4f7f9c991456219b3cbb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798035
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        string[] nums = numbers.Split(' ');\n        int[] nums2 = new int[nums.Length];\n\
    \        for (int i = 0; i < nums.Length; i++) {\n            switch (nums[i])\
    \ {\n                case \"zero\":\n                    nums2[i] = 0;\n     \
    \               break;\n                case \"one\":\n                    nums2[i]\
    \ = 1;\n                    break;\n                case \"two\":\n          \
    \          nums2[i] = 2;\n                    break;\n                case \"\
    three\":\n                    nums2[i] = 3;\n                    break;\n    \
    \            case \"four\":\n                    nums2[i] = 4;\n             \
    \       break;\n                case \"five\":\n                    nums2[i] =\
    \ 5;\n                    break;\n                case \"six\":\n            \
    \        nums2[i] = 6;\n                    break;\n                case \"seven\"\
    :\n                    nums2[i] = 7;\n                    break;\n           \
    \     case \"eight\":\n                    nums2[i] = 8;\n                   \
    \ break;\n                case \"nine\":\n                    nums2[i] = 9;\n\
    \                    break;\n            }\n        }\n        Array.Sort(nums2);\n\
    \        string[] nums3 = new string[nums.Length];\n        for (int i = 0; i\
    \ < nums.Length; i++) {\n            switch (nums2[i]) {\n                case\
    \ 0:\n                    nums3[i] = \"zero\";\n                    break;\n \
    \               case 1:\n                    nums3[i] = \"one\";\n           \
    \         break;\n                case 2:\n                    nums3[i] = \"two\"\
    ;\n                    break;\n                case 3:\n                    nums3[i]\
    \ = \"three\";\n                    break;\n                case 4:\n        \
    \            nums3[i] = \"four\";\n                    break;\n              \
    \  case 5:\n                    nums3[i] = \"five\";\n                    break;\n\
    \                case 6:\n                    nums3[i] = \"six\";\n          \
    \          break;\n                case 7:\n                    nums3[i] = \"\
    seven\";\n                    break;\n                case 8:\n              \
    \      nums3[i] =\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\
    \")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\"\
    )));\n    Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five\
    \ nine\")));\n    Debug.Assert(SortNumbers((\"five zero four seven nine eight\"\
    )).Equals((\"zero four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"\
    six five four three two one zero\")).Equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpwi1ha3o3.cs(80,31): error CS1525: Invalid expression term ''}''

    /tmp/tmpwi1ha3o3.cs(80,31): error CS1002: ; expected

    /tmp/tmpwi1ha3o3.cs(82,5): error CS0106: The modifier ''public'' is not valid
    for this item

    /tmp/tmpwi1ha3o3.cs(90,2): error CS1513: } expected

    '
  timestamp: 1659798035
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        // TODO: Implement this function\n        return \"\";\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\
    \")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\"\
    )));\n    Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five\
    \ nine\")));\n    Debug.Assert(SortNumbers((\"five zero four seven nine eight\"\
    )).Equals((\"zero four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"\
    six five four three two one zero\")).Equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <959a76934a79427383ca9be1749b050c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <959a76934a79427383ca9be1749b050c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798035
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        string[] nums = numbers.Split(' ');\n        int[] num = new int[nums.Length];\n\
    \        for (int i = 0; i < nums.Length; i++) {\n            switch (nums[i])\
    \ {\n                case \"zero\":\n                    num[i] = 0;\n       \
    \             break;\n                case \"one\":\n                    num[i]\
    \ = 1;\n                    break;\n                case \"two\":\n          \
    \          num[i] = 2;\n                    break;\n                case \"three\"\
    :\n                    num[i] = 3;\n                    break;\n             \
    \   case \"four\":\n                    num[i] = 4;\n                    break;\n\
    \                case \"five\":\n                    num[i] = 5;\n           \
    \         break;\n                case \"six\":\n                    num[i] =\
    \ 6;\n                    break;\n                case \"seven\":\n          \
    \          num[i] = 7;\n                    break;\n                case \"eight\"\
    :\n                    num[i] = 8;\n                    break;\n             \
    \   case \"nine\":\n                    num[i] = 9;\n                    break;\n\
    \            }\n        }\n        Array.Sort(num);\n        for (int i = 0; i\
    \ < nums.Length; i++) {\n            switch (num[i]) {\n                case 0:\n\
    \                    nums[i] = \"zero\";\n                    break;\n       \
    \         case 1:\n                    nums[i] = \"one\";\n                  \
    \  break;\n                case 2:\n                    nums[i] = \"two\";\n \
    \                   break;\n                case 3:\n                    nums[i]\
    \ = \"three\";\n                    break;\n                case 4:\n        \
    \            nums[i] = \"four\";\n                    break;\n               \
    \ case 5:\n                    nums[i] = \"five\";\n                    break;\n\
    \                case 6:\n                    nums[i] = \"six\";\n           \
    \         break;\n                case 7:\n                    nums[i] = \"seven\"\
    ;\n                    break;\n                case 8:\n                    nums[i]\
    \ = \"eight\";\n                    break;\n                case 9:\n        \
    \            nums[i] = \"nine\";\n                    break;\n            }\n\
    \        }\n        return string.Join(\" \", nums);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\"\
    )));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"\
    three five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"\
    five zero four seven nine eight\")).Equals((\"zero four five seven eight nine\"\
    )));\n    Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ded86cc1b1e54e0593ef38b50ceff092>:0 \n"
  stdout: ''
  timestamp: 1659798035
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        var nums = numbers.Split(' ').Select(x => int.Parse(x)).OrderBy(x\
    \ => x).Select(x => x.ToString()).ToArray();\n        return string.Join(\" \"\
    , nums);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\
    \")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\"\
    )));\n    Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five\
    \ nine\")));\n    Debug.Assert(SortNumbers((\"five zero four seven nine eight\"\
    )).Equals((\"zero four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"\
    six five four three two one zero\")).Equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in\
    \ a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean\
    \ overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int32.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem+<>c.<SortNumbers>b__0_0 (System.String x) [0x00000] in <dc44429ce7df4cf69f56b1678990ebd2>:0\
    \ \n  at System.Linq.Enumerable+SelectArrayIterator`2[TSource,TResult].ToArray\
    \ () [0x00012] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Buffer`1[TElement]..ctor\
    \ (System.Collections.Generic.IEnumerable`1[T] source) [0x0000a] in <e540098dd111461e919c5863f6975c29>:0\
    \ \n  at System.Linq.OrderedEnumerable`1+<GetEnumerator>d__3[TElement].MoveNext\
    \ () [0x0001e] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable+SelectIPartitionIterator`2[TSource,TResult].PreallocatingToArray\
    \ (System.Int32 count) [0x00035] in <e540098dd111461e919c5863f6975c29>:0 \n  at\
    \ System.Linq.Enumerable+SelectIPartitionIterator`2[TSource,TResult].ToArray ()\
    \ [0x00023] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable.ToArray[TSource]\
    \ (System.Collections.Generic.IEnumerable`1[T] source) [0x0001f] in <e540098dd111461e919c5863f6975c29>:0\
    \ \n  at Problem.SortNumbers (System.String numbers) [0x00076] in <dc44429ce7df4cf69f56b1678990ebd2>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00001] in <dc44429ce7df4cf69f56b1678990ebd2>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.FormatException: Input string was\
    \ not in a correct format.\n  at System.Number.ThrowOverflowOrFormatException\
    \ (System.Boolean overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberS"
  stdout: ''
  timestamp: 1659798034
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        // TODO: Implement this function\n        return \"\";\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\
    \")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\"\
    )));\n    Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five\
    \ nine\")));\n    Debug.Assert(SortNumbers((\"five zero four seven nine eight\"\
    )).Equals((\"zero four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"\
    six five four three two one zero\")).Equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <959a76934a79427383ca9be1749b050c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <959a76934a79427383ca9be1749b050c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798035
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        // TODO: Implement this function\n        return \"\";\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\
    \")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\"\
    )));\n    Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five\
    \ nine\")));\n    Debug.Assert(SortNumbers((\"five zero four seven nine eight\"\
    )).Equals((\"zero four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"\
    six five four three two one zero\")).Equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <959a76934a79427383ca9be1749b050c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <959a76934a79427383ca9be1749b050c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798035
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        // Your code goes here\n        return \"\";\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\"\
    )));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"\
    three five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"\
    five zero four seven nine eight\")).Equals((\"zero four five seven eight nine\"\
    )));\n    Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2e593562849b4f7f9c991456219b3cbb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2e593562849b4f7f9c991456219b3cbb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798035
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        // Your code goes here\n        return \"\";\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\"\
    )));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"\
    three five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"\
    five zero four seven nine eight\")).Equals((\"zero four five seven eight nine\"\
    )));\n    Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2e593562849b4f7f9c991456219b3cbb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2e593562849b4f7f9c991456219b3cbb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798035
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        var nums = numbers.Split(' ').Select(x => int.Parse(x)).OrderBy(x\
    \ => x).Select(x => x.ToString()).ToArray();\n        return string.Join(\" \"\
    , nums);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\
    \")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\"\
    )));\n    Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five\
    \ nine\")));\n    Debug.Assert(SortNumbers((\"five zero four seven nine eight\"\
    )).Equals((\"zero four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"\
    six five four three two one zero\")).Equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in\
    \ a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean\
    \ overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int32.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem+<>c.<SortNumbers>b__0_0 (System.String x) [0x00000] in <dc44429ce7df4cf69f56b1678990ebd2>:0\
    \ \n  at System.Linq.Enumerable+SelectArrayIterator`2[TSource,TResult].ToArray\
    \ () [0x00012] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Buffer`1[TElement]..ctor\
    \ (System.Collections.Generic.IEnumerable`1[T] source) [0x0000a] in <e540098dd111461e919c5863f6975c29>:0\
    \ \n  at System.Linq.OrderedEnumerable`1+<GetEnumerator>d__3[TElement].MoveNext\
    \ () [0x0001e] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable+SelectIPartitionIterator`2[TSource,TResult].PreallocatingToArray\
    \ (System.Int32 count) [0x00035] in <e540098dd111461e919c5863f6975c29>:0 \n  at\
    \ System.Linq.Enumerable+SelectIPartitionIterator`2[TSource,TResult].ToArray ()\
    \ [0x00023] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable.ToArray[TSource]\
    \ (System.Collections.Generic.IEnumerable`1[T] source) [0x0001f] in <e540098dd111461e919c5863f6975c29>:0\
    \ \n  at Problem.SortNumbers (System.String numbers) [0x00076] in <dc44429ce7df4cf69f56b1678990ebd2>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00001] in <dc44429ce7df4cf69f56b1678990ebd2>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.FormatException: Input string was\
    \ not in a correct format.\n  at System.Number.ThrowOverflowOrFormatException\
    \ (System.Boolean overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberS"
  stdout: ''
  timestamp: 1659798034
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        string[] nums = numbers.Split(' ');\n        int[] nums2 = new int[nums.Length];\n\
    \        for (int i = 0; i < nums.Length; i++) {\n            switch (nums[i])\
    \ {\n                case \"zero\":\n                    nums2[i] = 0;\n     \
    \               break;\n                case \"one\":\n                    nums2[i]\
    \ = 1;\n                    break;\n                case \"two\":\n          \
    \          nums2[i] = 2;\n                    break;\n                case \"\
    three\":\n                    nums2[i] = 3;\n                    break;\n    \
    \            case \"four\":\n                    nums2[i] = 4;\n             \
    \       break;\n                case \"five\":\n                    nums2[i] =\
    \ 5;\n                    break;\n                case \"six\":\n            \
    \        nums2[i] = 6;\n                    break;\n                case \"seven\"\
    :\n                    nums2[i] = 7;\n                    break;\n           \
    \     case \"eight\":\n                    nums2[i] = 8;\n                   \
    \ break;\n                case \"nine\":\n                    nums2[i] = 9;\n\
    \                    break;\n            }\n        }\n        Array.Sort(nums2);\n\
    \        string[] nums3 = new string[nums.Length];\n        for (int i = 0; i\
    \ < nums.Length; i++) {\n            switch (nums2[i]) {\n                case\
    \ 0:\n                    nums3[i] = \"zero\";\n                    break;\n \
    \               case 1:\n                    nums3[i] = \"one\";\n           \
    \         break;\n                case 2:\n                    nums3[i] = \"two\"\
    ;\n                    break;\n                case 3:\n                    nums3[i]\
    \ = \"three\";\n                    break;\n                case 4:\n        \
    \            nums3[i] = \"four\";\n                    break;\n              \
    \  case 5:\n                    nums3[i] = \"five\";\n                    break;\n\
    \                case 6:\n                    nums3[i] = \"six\";\n          \
    \          break;\n                case 7:\n                    nums3[i] = \"\
    seven\";\n                    break;\n                case 8:\n              \
    \      nums3[i] =\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\
    \")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\"\
    )));\n    Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five\
    \ nine\")));\n    Debug.Assert(SortNumbers((\"five zero four seven nine eight\"\
    )).Equals((\"zero four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"\
    six five four three two one zero\")).Equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpwi1ha3o3.cs(80,31): error CS1525: Invalid expression term ''}''

    /tmp/tmpwi1ha3o3.cs(80,31): error CS1002: ; expected

    /tmp/tmpwi1ha3o3.cs(82,5): error CS0106: The modifier ''public'' is not valid
    for this item

    /tmp/tmpwi1ha3o3.cs(90,2): error CS1513: } expected

    '
  timestamp: 1659798035
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        // TODO: Implement this function\n        return \"\";\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\
    \")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\"\
    )));\n    Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five\
    \ nine\")));\n    Debug.Assert(SortNumbers((\"five zero four seven nine eight\"\
    )).Equals((\"zero four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"\
    six five four three two one zero\")).Equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <959a76934a79427383ca9be1749b050c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <959a76934a79427383ca9be1749b050c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798035
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        var nums = numbers.Split(' ').Select(s => int.Parse(s)).OrderBy(i\
    \ => i).Select(i => i.ToString()).ToArray();\n        return string.Join(\" \"\
    , nums);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\
    \")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\"\
    )));\n    Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five\
    \ nine\")));\n    Debug.Assert(SortNumbers((\"five zero four seven nine eight\"\
    )).Equals((\"zero four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"\
    six five four three two one zero\")).Equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in\
    \ a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean\
    \ overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int32.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem+<>c.<SortNumbers>b__0_0 (System.String s) [0x00000] in <7306233ee02b45dab9d3a78f2d06779a>:0\
    \ \n  at System.Linq.Enumerable+SelectArrayIterator`2[TSource,TResult].ToArray\
    \ () [0x00012] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Buffer`1[TElement]..ctor\
    \ (System.Collections.Generic.IEnumerable`1[T] source) [0x0000a] in <e540098dd111461e919c5863f6975c29>:0\
    \ \n  at System.Linq.OrderedEnumerable`1+<GetEnumerator>d__3[TElement].MoveNext\
    \ () [0x0001e] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable+SelectIPartitionIterator`2[TSource,TResult].PreallocatingToArray\
    \ (System.Int32 count) [0x00035] in <e540098dd111461e919c5863f6975c29>:0 \n  at\
    \ System.Linq.Enumerable+SelectIPartitionIterator`2[TSource,TResult].ToArray ()\
    \ [0x00023] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable.ToArray[TSource]\
    \ (System.Collections.Generic.IEnumerable`1[T] source) [0x0001f] in <e540098dd111461e919c5863f6975c29>:0\
    \ \n  at Problem.SortNumbers (System.String numbers) [0x00076] in <7306233ee02b45dab9d3a78f2d06779a>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00001] in <7306233ee02b45dab9d3a78f2d06779a>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.FormatException: Input string was\
    \ not in a correct format.\n  at System.Number.ThrowOverflowOrFormatException\
    \ (System.Boolean overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberS"
  stdout: ''
  timestamp: 1659798035
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        var nums = numbers.Split(' ');\n        Array.Sort(nums);\n     \
    \   return string.Join(\" \", nums);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"\
    three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three five nine\"\
    )).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five zero\
    \ four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n\
    \    Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a52eb78c127b4f7b966d1276966c9022>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a52eb78c127b4f7b966d1276966c9022>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798035
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        // Your code goes here\n        return \"\";\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\"\
    )));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"\
    three five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"\
    five zero four seven nine eight\")).Equals((\"zero four five seven eight nine\"\
    )));\n    Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2e593562849b4f7f9c991456219b3cbb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2e593562849b4f7f9c991456219b3cbb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798035
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        string[] nums = numbers.Split(' ');\n        int[] numsInt = new\
    \ int[nums.Length];\n        for (int i = 0; i < nums.Length; i++) {\n       \
    \     switch (nums[i]) {\n                case \"zero\":\n                   \
    \ numsInt[i] = 0;\n                    break;\n                case \"one\":\n\
    \                    numsInt[i] = 1;\n                    break;\n           \
    \     case \"two\":\n                    numsInt[i] = 2;\n                   \
    \ break;\n                case \"three\":\n                    numsInt[i] = 3;\n\
    \                    break;\n                case \"four\":\n                \
    \    numsInt[i] = 4;\n                    break;\n                case \"five\"\
    :\n                    numsInt[i] = 5;\n                    break;\n         \
    \       case \"six\":\n                    numsInt[i] = 6;\n                 \
    \   break;\n                case \"seven\":\n                    numsInt[i] =\
    \ 7;\n                    break;\n                case \"eight\":\n          \
    \          numsInt[i] = 8;\n                    break;\n                case \"\
    nine\":\n                    numsInt[i] = 9;\n                    break;\n   \
    \         }\n        }\n        Array.Sort(numsInt);\n        string result =\
    \ \"\";\n        for (int i = 0; i < numsInt.Length; i++) {\n            switch\
    \ (numsInt[i]) {\n                case 0:\n                    result += \"zero\
    \ \";\n                    break;\n                case 1:\n                 \
    \   result += \"one \";\n                    break;\n                case 2:\n\
    \                    result += \"two \";\n                    break;\n       \
    \         case 3:\n                    result += \"three \";\n               \
    \     break;\n                case 4:\n                    result += \"four \"\
    ;\n                    break;\n                case 5:\n                    result\
    \ += \"five \";\n                    break;\n                case 6:\n       \
    \             result += \"six \";\n                    break;\n              \
    \  case 7:\n                    result += \"seven \";\n                    break;\n\
    \                case 8:\n                    result += \"eight \";\n        \
    \            break;\n                case 9:\n                    result += \"\
    nine \";\n                    break;\n            }\n        }\n        return\
    \ result.Trim();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\
    \")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\"\
    )));\n    Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five\
    \ nine\")));\n    Debug.Assert(SortNumbers((\"five zero four seven nine eight\"\
    )).Equals((\"zero four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"\
    six five four three two one zero\")).Equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ea47b1a39139465b9f54fcc1cf074b49>:0 \n"
  stdout: ''
  timestamp: 1659798035
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        string[] nums = numbers.Split(' ');\n        int[] nums_int = new\
    \ int[nums.Length];\n        for (int i = 0; i < nums.Length; i++) {\n       \
    \     switch (nums[i]) {\n                case \"zero\":\n                   \
    \ nums_int[i] = 0;\n                    break;\n                case \"one\":\n\
    \                    nums_int[i] = 1;\n                    break;\n          \
    \      case \"two\":\n                    nums_int[i] = 2;\n                 \
    \   break;\n                case \"three\":\n                    nums_int[i] =\
    \ 3;\n                    break;\n                case \"four\":\n           \
    \         nums_int[i] = 4;\n                    break;\n                case \"\
    five\":\n                    nums_int[i] = 5;\n                    break;\n  \
    \              case \"six\":\n                    nums_int[i] = 6;\n         \
    \           break;\n                case \"seven\":\n                    nums_int[i]\
    \ = 7;\n                    break;\n                case \"eight\":\n        \
    \            nums_int[i] = 8;\n                    break;\n                case\
    \ \"nine\":\n                    nums_int[i] = 9;\n                    break;\n\
    \            }\n        }\n        Array.Sort(nums_int);\n        string ret =\
    \ \"\";\n        for (int i = 0; i < nums_int.Length; i++) {\n            switch\
    \ (nums_int[i]) {\n                case 0:\n                    ret += \"zero\
    \ \";\n                    break;\n                case 1:\n                 \
    \   ret += \"one \";\n                    break;\n                case 2:\n  \
    \                  ret += \"two \";\n                    break;\n            \
    \    case 3:\n                    ret += \"three \";\n                    break;\n\
    \                case 4:\n                    ret += \"four \";\n            \
    \        break;\n                case 5:\n                    ret += \"five \"\
    ;\n                    break;\n                case 6:\n                    ret\
    \ += \"six \";\n                    break;\n                case 7:\n        \
    \            ret += \"seven \";\n                    break;\n                case\
    \ 8:\n                    ret += \"eight \";\n                    break;\n   \
    \             case 9:\n                    ret += \"nine \";\n               \
    \     break;\n            }\n        }\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"\
    three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three five nine\"\
    )).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five zero\
    \ four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n\
    \    Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpq8gc61dh.cs(14,26): error CS0161: ''Problem.SortNumbers(string)'': not
    all code paths return a value

    '
  timestamp: 1659798035
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        // TODO: Implement this function\n        return \"\";\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\
    \")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\"\
    )));\n    Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five\
    \ nine\")));\n    Debug.Assert(SortNumbers((\"five zero four seven nine eight\"\
    )).Equals((\"zero four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"\
    six five four three two one zero\")).Equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <959a76934a79427383ca9be1749b050c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <959a76934a79427383ca9be1749b050c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798035
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        string[] nums = numbers.Split(' ');\n        int[] numsInt = new\
    \ int[nums.Length];\n        for (int i = 0; i < nums.Length; i++) {\n       \
    \     switch (nums[i]) {\n                case \"zero\":\n                   \
    \ numsInt[i] = 0;\n                    break;\n                case \"one\":\n\
    \                    numsInt[i] = 1;\n                    break;\n           \
    \     case \"two\":\n                    numsInt[i] = 2;\n                   \
    \ break;\n                case \"three\":\n                    numsInt[i] = 3;\n\
    \                    break;\n                case \"four\":\n                \
    \    numsInt[i] = 4;\n                    break;\n                case \"five\"\
    :\n                    numsInt[i] = 5;\n                    break;\n         \
    \       case \"six\":\n                    numsInt[i] = 6;\n                 \
    \   break;\n                case \"seven\":\n                    numsInt[i] =\
    \ 7;\n                    break;\n                case \"eight\":\n          \
    \          numsInt[i] = 8;\n                    break;\n                case \"\
    nine\":\n                    numsInt[i] = 9;\n                    break;\n   \
    \         }\n        }\n        Array.Sort(numsInt);\n        string result =\
    \ \"\";\n        for (int i = 0; i < numsInt.Length; i++) {\n            switch\
    \ (numsInt[i]) {\n                case 0:\n                    result += \"zero\
    \ \";\n                    break;\n                case 1:\n                 \
    \   result += \"one \";\n                    break;\n                case 2:\n\
    \                    result += \"two \";\n                    break;\n       \
    \         case 3:\n                    result += \"three \";\n               \
    \     break;\n                case 4:\n                    result += \"four \"\
    ;\n                    break;\n                case 5:\n                    result\
    \ += \"five \";\n                    break;\n                case 6:\n       \
    \             result += \"six \";\n                    break;\n              \
    \  case 7:\n                    result += \"seven \";\n                    break;\n\
    \                case 8:\n                    result += \"eight \";\n        \
    \            break;\n                case 9:\n                    result += \"\
    nine \";\n                    break;\n            }\n        }\n        return\
    \ result.Trim();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\
    \")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\"\
    )));\n    Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five\
    \ nine\")));\n    Debug.Assert(SortNumbers((\"five zero four seven nine eight\"\
    )).Equals((\"zero four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"\
    six five four three two one zero\")).Equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ea47b1a39139465b9f54fcc1cf074b49>:0 \n"
  stdout: ''
  timestamp: 1659798035
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        var nums = numbers.Split(' ');\n        Array.Sort(nums);\n     \
    \   return string.Join(\" \", nums);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"\
    three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three five nine\"\
    )).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five zero\
    \ four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n\
    \    Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a52eb78c127b4f7b966d1276966c9022>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a52eb78c127b4f7b966d1276966c9022>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798035
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        // TODO: Implement this function\n        return \"\";\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\
    \")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\"\
    )));\n    Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five\
    \ nine\")));\n    Debug.Assert(SortNumbers((\"five zero four seven nine eight\"\
    )).Equals((\"zero four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"\
    six five four three two one zero\")).Equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <959a76934a79427383ca9be1749b050c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <959a76934a79427383ca9be1749b050c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798035
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        string[] nums = numbers.Split(' ');\n        int[] numsInt = new\
    \ int[nums.Length];\n        for (int i = 0; i < nums.Length; i++) {\n       \
    \     switch (nums[i]) {\n                case \"zero\":\n                   \
    \ numsInt[i] = 0;\n                    break;\n                case \"one\":\n\
    \                    numsInt[i] = 1;\n                    break;\n           \
    \     case \"two\":\n                    numsInt[i] = 2;\n                   \
    \ break;\n                case \"three\":\n                    numsInt[i] = 3;\n\
    \                    break;\n                case \"four\":\n                \
    \    numsInt[i] = 4;\n                    break;\n                case \"five\"\
    :\n                    numsInt[i] = 5;\n                    break;\n         \
    \       case \"six\":\n                    numsInt[i] = 6;\n                 \
    \   break;\n                case \"seven\":\n                    numsInt[i] =\
    \ 7;\n                    break;\n                case \"eight\":\n          \
    \          numsInt[i] = 8;\n                    break;\n                case \"\
    nine\":\n                    numsInt[i] = 9;\n                    break;\n   \
    \         }\n        }\n        Array.Sort(numsInt);\n        for (int i = 0;\
    \ i < nums.Length; i++) {\n            switch (numsInt[i]) {\n               \
    \ case 0:\n                    nums[i] = \"zero\";\n                    break;\n\
    \                case 1:\n                    nums[i] = \"one\";\n           \
    \         break;\n                case 2:\n                    nums[i] = \"two\"\
    ;\n                    break;\n                case 3:\n                    nums[i]\
    \ = \"three\";\n                    break;\n                case 4:\n        \
    \            nums[i] = \"four\";\n                    break;\n               \
    \ case 5:\n                    nums[i] = \"five\";\n                    break;\n\
    \                case 6:\n                    nums[i] = \"six\";\n           \
    \         break;\n                case 7:\n                    nums[i] = \"seven\"\
    ;\n                    break;\n                case 8:\n                    nums[i]\
    \ = \"eight\";\n                    break;\n                case 9:\n        \
    \            nums[i] = \"nine\";\n                   \n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\"\
    )));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"\
    three five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"\
    five zero four seven nine eight\")).Equals((\"zero four five seven eight nine\"\
    )));\n    Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmplano5_jc.cs(85,5): error CS0106: The modifier ''public'' is not valid
    for this item

    /tmp/tmplano5_jc.cs(93,2): error CS1513: } expected

    '
  timestamp: 1659798034
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        var nums = numbers.Split(' ').Select(x => int.Parse(x)).OrderBy(x\
    \ => x).Select(x => x.ToString()).ToArray();\n        return string.Join(\" \"\
    , nums);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\
    \")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\"\
    )));\n    Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five\
    \ nine\")));\n    Debug.Assert(SortNumbers((\"five zero four seven nine eight\"\
    )).Equals((\"zero four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"\
    six five four three two one zero\")).Equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in\
    \ a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean\
    \ overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int32.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem+<>c.<SortNumbers>b__0_0 (System.String x) [0x00000] in <dc44429ce7df4cf69f56b1678990ebd2>:0\
    \ \n  at System.Linq.Enumerable+SelectArrayIterator`2[TSource,TResult].ToArray\
    \ () [0x00012] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Buffer`1[TElement]..ctor\
    \ (System.Collections.Generic.IEnumerable`1[T] source) [0x0000a] in <e540098dd111461e919c5863f6975c29>:0\
    \ \n  at System.Linq.OrderedEnumerable`1+<GetEnumerator>d__3[TElement].MoveNext\
    \ () [0x0001e] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable+SelectIPartitionIterator`2[TSource,TResult].PreallocatingToArray\
    \ (System.Int32 count) [0x00035] in <e540098dd111461e919c5863f6975c29>:0 \n  at\
    \ System.Linq.Enumerable+SelectIPartitionIterator`2[TSource,TResult].ToArray ()\
    \ [0x00023] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable.ToArray[TSource]\
    \ (System.Collections.Generic.IEnumerable`1[T] source) [0x0001f] in <e540098dd111461e919c5863f6975c29>:0\
    \ \n  at Problem.SortNumbers (System.String numbers) [0x00076] in <dc44429ce7df4cf69f56b1678990ebd2>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00001] in <dc44429ce7df4cf69f56b1678990ebd2>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.FormatException: Input string was\
    \ not in a correct format.\n  at System.Number.ThrowOverflowOrFormatException\
    \ (System.Boolean overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberS"
  stdout: ''
  timestamp: 1659798034
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        // TODO: Implement this function\n        return \"\";\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\
    \")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\"\
    )));\n    Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five\
    \ nine\")));\n    Debug.Assert(SortNumbers((\"five zero four seven nine eight\"\
    )).Equals((\"zero four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"\
    six five four three two one zero\")).Equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <959a76934a79427383ca9be1749b050c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <959a76934a79427383ca9be1749b050c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798035
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        var nums = numbers.Split(' ').Select(x => x.ToLower()).ToArray();\n\
    \        var numMap = new Dictionary<string, int>() {\n            {\"zero\",\
    \ 0},\n            {\"one\", 1},\n            {\"two\", 2},\n            {\"three\"\
    , 3},\n            {\"four\", 4},\n            {\"five\", 5},\n            {\"\
    six\", 6},\n            {\"seven\", 7},\n            {\"eight\", 8},\n       \
    \     {\"nine\", 9}\n        };\n        var numsInt = new int[nums.Length];\n\
    \        for (int i = 0; i < nums.Length; i++) {\n            numsInt[i] = numMap[nums[i]];\n\
    \        }\n        Array.Sort(numsInt);\n        var numsStr = new string[nums.Length];\n\
    \        for (int i = 0; i < nums.Length; i++) {\n            numsStr[i] = numMap.First(x\
    \ => x.Value == numsInt[i]).Key;\n        }\n        return string.Join(\" \"\
    , numsStr);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\
    \")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\"\
    )));\n    Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five\
    \ nine\")));\n    Debug.Assert(SortNumbers((\"five zero four seven nine eight\"\
    )).Equals((\"zero four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"\
    six five four three two one zero\")).Equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.Collections.Generic.KeyNotFoundException:\
    \ The given key '' was not present in the dictionary.\n  at System.Collections.Generic.Dictionary`2[TKey,TValue].get_Item\
    \ (TKey key) [0x0001e] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.SortNumbers\
    \ (System.String numbers) [0x000d7] in <38e7739ec14f48d3845034d12f8055fe>:0 \n\
    \  at Problem.Main (System.String[] args) [0x00001] in <38e7739ec14f48d3845034d12f8055fe>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.Collections.Generic.KeyNotFoundException:\
    \ The given key '' was not present in the dictionary.\n  at System.Collections.Generic.Dictionary`2[TKey,TValue].get_Item\
    \ (TKey key) [0x0001e] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.SortNumbers\
    \ (System.String numbers) [0x000d7] in <38e7739ec14f48d3845034d12f8055fe>:0 \n\
    \  at Problem.Main (System.String[] args) [0x00001] in <38e7739ec14f48d3845034d12f8055fe>:0\
    \ \n"
  stdout: ''
  timestamp: 1659798035
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        var nums = numbers.Split(' ').Select(x => int.Parse(x)).OrderBy(x\
    \ => x).Select(x => x.ToString()).ToArray();\n        return string.Join(\" \"\
    , nums);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\
    \")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\"\
    )));\n    Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five\
    \ nine\")));\n    Debug.Assert(SortNumbers((\"five zero four seven nine eight\"\
    )).Equals((\"zero four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"\
    six five four three two one zero\")).Equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in\
    \ a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean\
    \ overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int32.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem+<>c.<SortNumbers>b__0_0 (System.String x) [0x00000] in <dc44429ce7df4cf69f56b1678990ebd2>:0\
    \ \n  at System.Linq.Enumerable+SelectArrayIterator`2[TSource,TResult].ToArray\
    \ () [0x00012] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Buffer`1[TElement]..ctor\
    \ (System.Collections.Generic.IEnumerable`1[T] source) [0x0000a] in <e540098dd111461e919c5863f6975c29>:0\
    \ \n  at System.Linq.OrderedEnumerable`1+<GetEnumerator>d__3[TElement].MoveNext\
    \ () [0x0001e] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable+SelectIPartitionIterator`2[TSource,TResult].PreallocatingToArray\
    \ (System.Int32 count) [0x00035] in <e540098dd111461e919c5863f6975c29>:0 \n  at\
    \ System.Linq.Enumerable+SelectIPartitionIterator`2[TSource,TResult].ToArray ()\
    \ [0x00023] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable.ToArray[TSource]\
    \ (System.Collections.Generic.IEnumerable`1[T] source) [0x0001f] in <e540098dd111461e919c5863f6975c29>:0\
    \ \n  at Problem.SortNumbers (System.String numbers) [0x00076] in <dc44429ce7df4cf69f56b1678990ebd2>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00001] in <dc44429ce7df4cf69f56b1678990ebd2>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.FormatException: Input string was\
    \ not in a correct format.\n  at System.Number.ThrowOverflowOrFormatException\
    \ (System.Boolean overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberS"
  stdout: ''
  timestamp: 1659798034
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        // TODO: Implement this function\n        return \"\";\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\
    \")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\"\
    )));\n    Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five\
    \ nine\")));\n    Debug.Assert(SortNumbers((\"five zero four seven nine eight\"\
    )).Equals((\"zero four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"\
    six five four three two one zero\")).Equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <959a76934a79427383ca9be1749b050c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <959a76934a79427383ca9be1749b050c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798035
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        // Your code goes here\n        return \"\";\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\"\
    )));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"\
    three five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"\
    five zero four seven nine eight\")).Equals((\"zero four five seven eight nine\"\
    )));\n    Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2e593562849b4f7f9c991456219b3cbb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2e593562849b4f7f9c991456219b3cbb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798035
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        string[] nums = numbers.Split(' ');\n        int[] nums2 = new int[nums.Length];\n\
    \        for (int i = 0; i < nums.Length; i++) {\n            nums2[i] = Convert.ToInt32(nums[i]);\n\
    \        }\n        Array.Sort(nums2);\n        string result = \"\";\n      \
    \  for (int i = 0; i < nums2.Length; i++) {\n            result += nums2[i].ToString()\
    \ + \" \";\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"\
    three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three five nine\"\
    )).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five zero\
    \ four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n\
    \    Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in\
    \ a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean\
    \ overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int32.Parse (System.String s, System.IFormatProvider provider)\
    \ [0x00017] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at System.Convert.ToInt32\
    \ (System.String value) [0x0000b] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n \
    \ at Problem.SortNumbers (System.String numbers) [0x00019] in <8f43759fdf294003a5467eca0277dbd1>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00001] in <8f43759fdf294003a5467eca0277dbd1>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.FormatException: Input string was\
    \ not in a correct format.\n  at System.Number.ThrowOverflowOrFormatException\
    \ (System.Boolean overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int32.Parse (System.String s, System.IFormatProvider provider)\
    \ [0x00017] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at System.Convert.ToInt32\
    \ (System.String value) [0x0000b] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n \
    \ at Problem.SortNumbers (System.String numbers) [0x00019] in <8f43759fdf294003a5467eca0277dbd1>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00001] in <8f43759fdf294003a5467eca0277dbd1>:0\
    \ \n"
  stdout: ''
  timestamp: 1659798035
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        string[] nums = numbers.Split(' ');\n        int[] nums2 = new int[nums.Length];\n\
    \        for (int i = 0; i < nums.Length; i++) {\n            nums2[i] = Convert.ToInt32(nums[i]);\n\
    \        }\n        Array.Sort(nums2);\n        string result = \"\";\n      \
    \  for (int i = 0; i < nums2.Length; i++) {\n            result += nums2[i] +\
    \ \" \";\n        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"\
    three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three five nine\"\
    )).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five zero\
    \ four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n\
    \    Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in\
    \ a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean\
    \ overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int32.Parse (System.String s, System.IFormatProvider provider)\
    \ [0x00017] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at System.Convert.ToInt32\
    \ (System.String value) [0x0000b] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n \
    \ at Problem.SortNumbers (System.String numbers) [0x00019] in <3fb222c27cb94d7bad4dec30d5d576e6>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00001] in <3fb222c27cb94d7bad4dec30d5d576e6>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.FormatException: Input string was\
    \ not in a correct format.\n  at System.Number.ThrowOverflowOrFormatException\
    \ (System.Boolean overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int32.Parse (System.String s, System.IFormatProvider provider)\
    \ [0x00017] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at System.Convert.ToInt32\
    \ (System.String value) [0x0000b] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n \
    \ at Problem.SortNumbers (System.String numbers) [0x00019] in <3fb222c27cb94d7bad4dec30d5d576e6>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00001] in <3fb222c27cb94d7bad4dec30d5d576e6>:0\
    \ \n"
  stdout: ''
  timestamp: 1659798035
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        // TODO: Implement this function\n        //throw new NotImplementedException();\n\
    \        string[] nums = numbers.Split(' ');\n        int[] nums2 = new int[nums.Length];\n\
    \        for (int i = 0; i < nums.Length; i++)\n        {\n            nums2[i]\
    \ = Convert.ToInt32(nums[i]);\n        }\n        Array.Sort(nums2);\n       \
    \ string result = \"\";\n        for (int i = 0; i < nums2.Length; i++)\n    \
    \    {\n            result += nums2[i] + \" \";\n        }\n        return result;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\
    \")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\"\
    )));\n    Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five\
    \ nine\")));\n    Debug.Assert(SortNumbers((\"five zero four seven nine eight\"\
    )).Equals((\"zero four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"\
    six five four three two one zero\")).Equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in\
    \ a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean\
    \ overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int32.Parse (System.String s, System.IFormatProvider provider)\
    \ [0x00017] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at System.Convert.ToInt32\
    \ (System.String value) [0x0000b] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n \
    \ at Problem.SortNumbers (System.String numbers) [0x00019] in <3438bc735d4347d495854c0d04d34364>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00001] in <3438bc735d4347d495854c0d04d34364>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.FormatException: Input string was\
    \ not in a correct format.\n  at System.Number.ThrowOverflowOrFormatException\
    \ (System.Boolean overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int32.Parse (System.String s, System.IFormatProvider provider)\
    \ [0x00017] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at System.Convert.ToInt32\
    \ (System.String value) [0x0000b] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n \
    \ at Problem.SortNumbers (System.String numbers) [0x00019] in <3438bc735d4347d495854c0d04d34364>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00001] in <3438bc735d4347d495854c0d04d34364>:0\
    \ \n"
  stdout: ''
  timestamp: 1659798035
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        // TODO: Implement this function\n        return \"\";\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\
    \")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\"\
    )));\n    Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five\
    \ nine\")));\n    Debug.Assert(SortNumbers((\"five zero four seven nine eight\"\
    )).Equals((\"zero four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"\
    six five four three two one zero\")).Equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <959a76934a79427383ca9be1749b050c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <959a76934a79427383ca9be1749b050c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798035
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        var nums = numbers.Split(' ').Select(x => int.Parse(x)).OrderBy(x\
    \ => x).Select(x => x.ToString()).ToArray();\n        return string.Join(\" \"\
    , nums);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\
    \")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\"\
    )));\n    Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five\
    \ nine\")));\n    Debug.Assert(SortNumbers((\"five zero four seven nine eight\"\
    )).Equals((\"zero four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"\
    six five four three two one zero\")).Equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in\
    \ a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean\
    \ overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int32.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem+<>c.<SortNumbers>b__0_0 (System.String x) [0x00000] in <dc44429ce7df4cf69f56b1678990ebd2>:0\
    \ \n  at System.Linq.Enumerable+SelectArrayIterator`2[TSource,TResult].ToArray\
    \ () [0x00012] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Buffer`1[TElement]..ctor\
    \ (System.Collections.Generic.IEnumerable`1[T] source) [0x0000a] in <e540098dd111461e919c5863f6975c29>:0\
    \ \n  at System.Linq.OrderedEnumerable`1+<GetEnumerator>d__3[TElement].MoveNext\
    \ () [0x0001e] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable+SelectIPartitionIterator`2[TSource,TResult].PreallocatingToArray\
    \ (System.Int32 count) [0x00035] in <e540098dd111461e919c5863f6975c29>:0 \n  at\
    \ System.Linq.Enumerable+SelectIPartitionIterator`2[TSource,TResult].ToArray ()\
    \ [0x00023] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable.ToArray[TSource]\
    \ (System.Collections.Generic.IEnumerable`1[T] source) [0x0001f] in <e540098dd111461e919c5863f6975c29>:0\
    \ \n  at Problem.SortNumbers (System.String numbers) [0x00076] in <dc44429ce7df4cf69f56b1678990ebd2>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00001] in <dc44429ce7df4cf69f56b1678990ebd2>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.FormatException: Input string was\
    \ not in a correct format.\n  at System.Number.ThrowOverflowOrFormatException\
    \ (System.Boolean overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberS"
  stdout: ''
  timestamp: 1659798034
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        var nums = numbers.Split(' ').Select(x => int.Parse(x)).OrderBy(x\
    \ => x).Select(x => x.ToString()).ToArray();\n        return string.Join(\" \"\
    , nums);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\
    \")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\"\
    )));\n    Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five\
    \ nine\")));\n    Debug.Assert(SortNumbers((\"five zero four seven nine eight\"\
    )).Equals((\"zero four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"\
    six five four three two one zero\")).Equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in\
    \ a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean\
    \ overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int32.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem+<>c.<SortNumbers>b__0_0 (System.String x) [0x00000] in <dc44429ce7df4cf69f56b1678990ebd2>:0\
    \ \n  at System.Linq.Enumerable+SelectArrayIterator`2[TSource,TResult].ToArray\
    \ () [0x00012] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Buffer`1[TElement]..ctor\
    \ (System.Collections.Generic.IEnumerable`1[T] source) [0x0000a] in <e540098dd111461e919c5863f6975c29>:0\
    \ \n  at System.Linq.OrderedEnumerable`1+<GetEnumerator>d__3[TElement].MoveNext\
    \ () [0x0001e] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable+SelectIPartitionIterator`2[TSource,TResult].PreallocatingToArray\
    \ (System.Int32 count) [0x00035] in <e540098dd111461e919c5863f6975c29>:0 \n  at\
    \ System.Linq.Enumerable+SelectIPartitionIterator`2[TSource,TResult].ToArray ()\
    \ [0x00023] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable.ToArray[TSource]\
    \ (System.Collections.Generic.IEnumerable`1[T] source) [0x0001f] in <e540098dd111461e919c5863f6975c29>:0\
    \ \n  at Problem.SortNumbers (System.String numbers) [0x00076] in <dc44429ce7df4cf69f56b1678990ebd2>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00001] in <dc44429ce7df4cf69f56b1678990ebd2>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.FormatException: Input string was\
    \ not in a correct format.\n  at System.Number.ThrowOverflowOrFormatException\
    \ (System.Boolean overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberS"
  stdout: ''
  timestamp: 1659798034
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        var nums = numbers.Split(' ');\n        Array.Sort(nums);\n     \
    \   return string.Join(\" \", nums);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"\
    three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three five nine\"\
    )).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five zero\
    \ four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n\
    \    Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a52eb78c127b4f7b966d1276966c9022>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a52eb78c127b4f7b966d1276966c9022>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798035
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        string[] nums = numbers.Split(' ');\n        int[] nums2 = new int[nums.Length];\n\
    \        for (int i = 0; i < nums.Length; i++) {\n            switch (nums[i])\
    \ {\n                case \"zero\":\n                    nums2[i] = 0;\n     \
    \               break;\n                case \"one\":\n                    nums2[i]\
    \ = 1;\n                    break;\n                case \"two\":\n          \
    \          nums2[i] = 2;\n                    break;\n                case \"\
    three\":\n                    nums2[i] = 3;\n                    break;\n    \
    \            case \"four\":\n                    nums2[i] = 4;\n             \
    \       break;\n                case \"five\":\n                    nums2[i] =\
    \ 5;\n                    break;\n                case \"six\":\n            \
    \        nums2[i] = 6;\n                    break;\n                case \"seven\"\
    :\n                    nums2[i] = 7;\n                    break;\n           \
    \     case \"eight\":\n                    nums2[i] = 8;\n                   \
    \ break;\n                case \"nine\":\n                    nums2[i] = 9;\n\
    \                    break;\n            }\n        }\n        Array.Sort(nums2);\n\
    \        string ret = \"\";\n        for (int i = 0; i < nums2.Length; i++) {\n\
    \            switch (nums2[i]) {\n                case 0:\n                  \
    \  ret += \"zero \";\n                    break;\n                case 1:\n  \
    \                  ret += \"one \";\n                    break;\n            \
    \    case 2:\n                    ret += \"two \";\n                    break;\n\
    \                case 3:\n                    ret += \"three \";\n           \
    \         break;\n                case 4:\n                    ret += \"four \"\
    ;\n                    break;\n                case 5:\n                    ret\
    \ += \"five \";\n                    break;\n                case 6:\n       \
    \             ret += \"six \";\n                    break;\n                case\
    \ 7:\n                    ret += \"seven \";\n                    break;\n   \
    \             case 8:\n                    ret += \"eight \";\n              \
    \      break;\n                case 9:\n                    ret += \"nine \";\n\
    \                    break;\n            }\n        }\n        return ret.Trim();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\
    \")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\"\
    )));\n    Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five\
    \ nine\")));\n    Debug.Assert(SortNumbers((\"five zero four seven nine eight\"\
    )).Equals((\"zero four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"\
    six five four three two one zero\")).Equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c07ba9c7637f42d8a0248cf79b6edb9a>:0 \n"
  stdout: ''
  timestamp: 1659798035
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        // Your code goes here\n        return \"\";\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\"\
    )));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"\
    three five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"\
    five zero four seven nine eight\")).Equals((\"zero four five seven eight nine\"\
    )));\n    Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2e593562849b4f7f9c991456219b3cbb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2e593562849b4f7f9c991456219b3cbb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798035
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        // Your code goes here\n        return \"\";\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\"\
    )));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"\
    three five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"\
    five zero four seven nine eight\")).Equals((\"zero four five seven eight nine\"\
    )));\n    Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2e593562849b4f7f9c991456219b3cbb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2e593562849b4f7f9c991456219b3cbb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798035
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        var nums = new List<int>();\n        var numeral = new Dictionary<string,\
    \ int>() {\n            {\"zero\", 0},\n            {\"one\", 1},\n          \
    \  {\"two\", 2},\n            {\"three\", 3},\n            {\"four\", 4},\n  \
    \          {\"five\", 5},\n            {\"six\", 6},\n            {\"seven\",\
    \ 7},\n            {\"eight\", 8},\n            {\"nine\", 9}\n        };\n  \
    \      foreach (var num in numbers.Split(' ')) {\n            nums.Add(numeral[num]);\n\
    \        }\n        nums.Sort();\n        var result = new List<string>();\n \
    \       foreach (var num in nums) {\n            result.Add(numeral.First(x =>\
    \ x.Value == num).Key);\n        }\n        return string.Join(\" \", result);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\
    \")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\"\
    )));\n    Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five\
    \ nine\")));\n    Debug.Assert(SortNumbers((\"five zero four seven nine eight\"\
    )).Equals((\"zero four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"\
    six five four three two one zero\")).Equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.Collections.Generic.KeyNotFoundException:\
    \ The given key '' was not present in the dictionary.\n  at System.Collections.Generic.Dictionary`2[TKey,TValue].get_Item\
    \ (TKey key) [0x0001e] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.SortNumbers\
    \ (System.String numbers) [0x000a7] in <9d66d1d4a80b417391cff61bee408419>:0 \n\
    \  at Problem.Main (System.String[] args) [0x00001] in <9d66d1d4a80b417391cff61bee408419>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.Collections.Generic.KeyNotFoundException:\
    \ The given key '' was not present in the dictionary.\n  at System.Collections.Generic.Dictionary`2[TKey,TValue].get_Item\
    \ (TKey key) [0x0001e] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.SortNumbers\
    \ (System.String numbers) [0x000a7] in <9d66d1d4a80b417391cff61bee408419>:0 \n\
    \  at Problem.Main (System.String[] args) [0x00001] in <9d66d1d4a80b417391cff61bee408419>:0\
    \ \n"
  stdout: ''
  timestamp: 1659798035
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        // TODO: Implement me!\n        return \"\";\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\"\
    )));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"\
    three five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"\
    five zero four seven nine eight\")).Equals((\"zero four five seven eight nine\"\
    )));\n    Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <afaea167e0b84525bc6fc0925d962330>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <afaea167e0b84525bc6fc0925d962330>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798035
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        string[] nums = numbers.Split(' ');\n        int[] num = new int[nums.Length];\n\
    \        for (int i = 0; i < nums.Length; i++) {\n            switch (nums[i])\
    \ {\n                case \"zero\":\n                    num[i] = 0;\n       \
    \             break;\n                case \"one\":\n                    num[i]\
    \ = 1;\n                    break;\n                case \"two\":\n          \
    \          num[i] = 2;\n                    break;\n                case \"three\"\
    :\n                    num[i] = 3;\n                    break;\n             \
    \   case \"four\":\n                    num[i] = 4;\n                    break;\n\
    \                case \"five\":\n                    num[i] = 5;\n           \
    \         break;\n                case \"six\":\n                    num[i] =\
    \ 6;\n                    break;\n                case \"seven\":\n          \
    \          num[i] = 7;\n                    break;\n                case \"eight\"\
    :\n                    num[i] = 8;\n                    break;\n             \
    \   case \"nine\":\n                    num[i] = 9;\n                    break;\n\
    \            }\n        }\n        Array.Sort(num);\n        string[] nums2 =\
    \ new string[nums.Length];\n        for (int i = 0; i < nums.Length; i++) {\n\
    \            switch (num[i]) {\n                case 0:\n                    nums2[i]\
    \ = \"zero\";\n                    break;\n                case 1:\n         \
    \           nums2[i] = \"one\";\n                    break;\n                case\
    \ 2:\n                    nums2[i] = \"two\";\n                    break;\n  \
    \              case 3:\n                    nums2[i] = \"three\";\n          \
    \          break;\n                case 4:\n                    nums2[i] = \"\
    four\";\n                    break;\n                case 5:\n               \
    \     nums2[i] = \"five\";\n                    break;\n                case 6:\n\
    \                    nums2[i] = \"six\";\n                    break;\n       \
    \         case 7:\n                    nums2[i] = \"seven\";\n               \
    \     break;\n                case 8:\n                    nums2[i] = \"eight\"\
    ;\n                    break;\n                case 9:\n                    nums2[i]\
    \ = \"nine\";\n                   \n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"\
    three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three five nine\"\
    )).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five zero\
    \ four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n\
    \    Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp32r8rwak.cs(86,5): error CS0106: The modifier ''public'' is not valid
    for this item

    /tmp/tmp32r8rwak.cs(94,2): error CS1513: } expected

    '
  timestamp: 1659798035
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        var nums = numbers.Split(' ');\n        var nums2 = nums.Select(x\
    \ => int.Parse(x)).ToArray();\n        Array.Sort(nums2);\n        return string.Join(\"\
    \ \", nums2);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\
    \")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\"\
    )));\n    Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five\
    \ nine\")));\n    Debug.Assert(SortNumbers((\"five zero four seven nine eight\"\
    )).Equals((\"zero four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"\
    six five four three two one zero\")).Equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in\
    \ a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean\
    \ overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int32.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem+<>c.<SortNumbers>b__0_0 (System.String x) [0x00000] in <47d5267524014de5940c4552c95c2cea>:0\
    \ \n  at System.Linq.Enumerable+SelectArrayIterator`2[TSource,TResult].ToArray\
    \ () [0x00012] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable.ToArray[TSource]\
    \ (System.Collections.Generic.IEnumerable`1[T] source) [0x0001f] in <e540098dd111461e919c5863f6975c29>:0\
    \ \n  at Problem.SortNumbers (System.String numbers) [0x00030] in <47d5267524014de5940c4552c95c2cea>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00001] in <47d5267524014de5940c4552c95c2cea>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.FormatException: Input string was\
    \ not in a correct format.\n  at System.Number.ThrowOverflowOrFormatException\
    \ (System.Boolean overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int32.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem+<>c.<SortNumbers>b__0_0 (System.String x) [0x00000] in <47d5267524014de5940c4552c95c2cea>:0\
    \ \n  at System.Linq.Enumerable+SelectArrayIterator`2[TSource,TResult].ToArray\
    \ () [0x00012] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable.ToArray[TSource]\
    \ (System.Collections.Generic.IEnumerable`1[T] source) [0x0001f] in <e540098dd111461e919c5863f6"
  stdout: ''
  timestamp: 1659798035
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        var nums = new List<int>();\n        foreach (var num in numbers.Split('\
    \ ')) {\n            switch (num) {\n                case \"zero\":\n        \
    \            nums.Add(0);\n                    break;\n                case \"\
    one\":\n                    nums.Add(1);\n                    break;\n       \
    \         case \"two\":\n                    nums.Add(2);\n                  \
    \  break;\n                case \"three\":\n                    nums.Add(3);\n\
    \                    break;\n                case \"four\":\n                \
    \    nums.Add(4);\n                    break;\n                case \"five\":\n\
    \                    nums.Add(5);\n                    break;\n              \
    \  case \"six\":\n                    nums.Add(6);\n                    break;\n\
    \                case \"seven\":\n                    nums.Add(7);\n         \
    \           break;\n                case \"eight\":\n                    nums.Add(8);\n\
    \                    break;\n                case \"nine\":\n                \
    \    nums.Add(9);\n                    break;\n            }\n        }\n    \
    \    nums.Sort();\n        var result = new StringBuilder();\n        foreach\
    \ (var num in nums) {\n            switch (num) {\n                case 0:\n \
    \                   result.Append(\"zero \");\n                    break;\n  \
    \              case 1:\n                    result.Append(\"one \");\n       \
    \             break;\n                case 2:\n                    result.Append(\"\
    two \");\n                    break;\n                case 3:\n              \
    \      result.Append(\"three \");\n                    break;\n              \
    \  case 4:\n                    result.Append(\"four \");\n                  \
    \  break;\n                case 5:\n                    result.Append(\"five \"\
    );\n                    break;\n                case 6:\n                    result.Append(\"\
    six \");\n                    break;\n                case 7:\n              \
    \      result.Append(\"seven \");\n                    break;\n              \
    \  case 8:\n                    result.Append(\"eight \");\n                 \
    \   break;\n                case 9:\n                    result.Append(\"nine\
    \ \");\n                    break;\n            }\n        }\n        return result.ToString().Trim();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\
    \")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\"\
    )));\n    Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five\
    \ nine\")));\n    Debug.Assert(SortNumbers((\"five zero four seven nine eight\"\
    )).Equals((\"zero four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"\
    six five four three two one zero\")).Equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659798036
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        // TODO: Implement this function\n        return \"\";\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\
    \")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\"\
    )));\n    Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five\
    \ nine\")));\n    Debug.Assert(SortNumbers((\"five zero four seven nine eight\"\
    )).Equals((\"zero four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"\
    six five four three two one zero\")).Equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <959a76934a79427383ca9be1749b050c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <959a76934a79427383ca9be1749b050c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798035
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        var nums = numbers.Split(' ');\n        Array.Sort(nums);\n     \
    \   return string.Join(\" \", nums);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"\
    three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three five nine\"\
    )).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five zero\
    \ four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n\
    \    Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a52eb78c127b4f7b966d1276966c9022>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a52eb78c127b4f7b966d1276966c9022>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798035
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        string[] nums = numbers.Split(' ');\n        int[] nums2 = new int[nums.Length];\n\
    \        for (int i = 0; i < nums.Length; i++) {\n            switch (nums[i])\
    \ {\n                case \"zero\":\n                    nums2[i] = 0;\n     \
    \               break;\n                case \"one\":\n                    nums2[i]\
    \ = 1;\n                    break;\n                case \"two\":\n          \
    \          nums2[i] = 2;\n                    break;\n                case \"\
    three\":\n                    nums2[i] = 3;\n                    break;\n    \
    \            case \"four\":\n                    nums2[i] = 4;\n             \
    \       break;\n                case \"five\":\n                    nums2[i] =\
    \ 5;\n                    break;\n                case \"six\":\n            \
    \        nums2[i] = 6;\n                    break;\n                case \"seven\"\
    :\n                    nums2[i] = 7;\n                    break;\n           \
    \     case \"eight\":\n                    nums2[i] = 8;\n                   \
    \ break;\n                case \"nine\":\n                    nums2[i] = 9;\n\
    \                    break;\n            }\n        }\n        Array.Sort(nums2);\n\
    \        string ret = \"\";\n        for (int i = 0; i < nums2.Length; i++) {\n\
    \            switch (nums2[i]) {\n                case 0:\n                  \
    \  ret += \"zero \";\n                    break;\n                case 1:\n  \
    \                  ret += \"one \";\n                    break;\n            \
    \    case 2:\n                    ret += \"two \";\n                    break;\n\
    \                case 3:\n                    ret += \"three \";\n           \
    \         break;\n                case 4:\n                    ret += \"four \"\
    ;\n                    break;\n                case 5:\n                    ret\
    \ += \"five \";\n                    break;\n                case 6:\n       \
    \             ret += \"six \";\n                    break;\n                case\
    \ 7:\n                    ret += \"seven \";\n                    break;\n   \
    \             case 8:\n                    ret += \"eight \";\n              \
    \      break;\n                case 9:\n                    ret += \"nine \";\n\
    \                    break;\n            }\n        }\n        return ret.Trim();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\
    \")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\"\
    )));\n    Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five\
    \ nine\")));\n    Debug.Assert(SortNumbers((\"five zero four seven nine eight\"\
    )).Equals((\"zero four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"\
    six five four three two one zero\")).Equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c07ba9c7637f42d8a0248cf79b6edb9a>:0 \n"
  stdout: ''
  timestamp: 1659798035
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        var nums = numbers.Split(' ').Select(s => int.Parse(s)).OrderBy(i\
    \ => i).Select(i => i.ToString()).ToArray();\n        return string.Join(\" \"\
    , nums);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\
    \")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\"\
    )));\n    Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five\
    \ nine\")));\n    Debug.Assert(SortNumbers((\"five zero four seven nine eight\"\
    )).Equals((\"zero four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"\
    six five four three two one zero\")).Equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in\
    \ a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean\
    \ overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int32.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem+<>c.<SortNumbers>b__0_0 (System.String s) [0x00000] in <7306233ee02b45dab9d3a78f2d06779a>:0\
    \ \n  at System.Linq.Enumerable+SelectArrayIterator`2[TSource,TResult].ToArray\
    \ () [0x00012] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Buffer`1[TElement]..ctor\
    \ (System.Collections.Generic.IEnumerable`1[T] source) [0x0000a] in <e540098dd111461e919c5863f6975c29>:0\
    \ \n  at System.Linq.OrderedEnumerable`1+<GetEnumerator>d__3[TElement].MoveNext\
    \ () [0x0001e] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable+SelectIPartitionIterator`2[TSource,TResult].PreallocatingToArray\
    \ (System.Int32 count) [0x00035] in <e540098dd111461e919c5863f6975c29>:0 \n  at\
    \ System.Linq.Enumerable+SelectIPartitionIterator`2[TSource,TResult].ToArray ()\
    \ [0x00023] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable.ToArray[TSource]\
    \ (System.Collections.Generic.IEnumerable`1[T] source) [0x0001f] in <e540098dd111461e919c5863f6975c29>:0\
    \ \n  at Problem.SortNumbers (System.String numbers) [0x00076] in <7306233ee02b45dab9d3a78f2d06779a>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00001] in <7306233ee02b45dab9d3a78f2d06779a>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.FormatException: Input string was\
    \ not in a correct format.\n  at System.Number.ThrowOverflowOrFormatException\
    \ (System.Boolean overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberS"
  stdout: ''
  timestamp: 1659798035
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        string[] nums = numbers.Split(' ');\n        int[] numsInt = new\
    \ int[nums.Length];\n        for (int i = 0; i < nums.Length; i++) {\n       \
    \     numsInt[i] = int.Parse(nums[i]);\n        }\n        Array.Sort(numsInt);\n\
    \        string result = \"\";\n        for (int i = 0; i < numsInt.Length; i++)\
    \ {\n            result += numsInt[i].ToString() + \" \";\n        }\n       \
    \ return result.Trim();\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"\
    three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three five nine\"\
    )).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five zero\
    \ four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n\
    \    Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in\
    \ a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean\
    \ overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int32.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.SortNumbers (System.String numbers) [0x00019] in <ad2c0a22337a42ccb55d660ba0591be7>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00001] in <ad2c0a22337a42ccb55d660ba0591be7>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.FormatException: Input string was\
    \ not in a correct format.\n  at System.Number.ThrowOverflowOrFormatException\
    \ (System.Boolean overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int32.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.SortNumbers (System.String numbers) [0x00019] in <ad2c0a22337a42ccb55d660ba0591be7>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00001] in <ad2c0a22337a42ccb55d660ba0591be7>:0\
    \ \n"
  stdout: ''
  timestamp: 1659798036
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        var nums = numbers.Split(' ').Select(s => int.Parse(s)).OrderBy(i\
    \ => i).Select(i => i.ToString()).ToArray();\n        return string.Join(\" \"\
    , nums);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\
    \")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\"\
    )));\n    Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five\
    \ nine\")));\n    Debug.Assert(SortNumbers((\"five zero four seven nine eight\"\
    )).Equals((\"zero four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"\
    six five four three two one zero\")).Equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in\
    \ a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean\
    \ overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int32.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem+<>c.<SortNumbers>b__0_0 (System.String s) [0x00000] in <7306233ee02b45dab9d3a78f2d06779a>:0\
    \ \n  at System.Linq.Enumerable+SelectArrayIterator`2[TSource,TResult].ToArray\
    \ () [0x00012] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Buffer`1[TElement]..ctor\
    \ (System.Collections.Generic.IEnumerable`1[T] source) [0x0000a] in <e540098dd111461e919c5863f6975c29>:0\
    \ \n  at System.Linq.OrderedEnumerable`1+<GetEnumerator>d__3[TElement].MoveNext\
    \ () [0x0001e] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable+SelectIPartitionIterator`2[TSource,TResult].PreallocatingToArray\
    \ (System.Int32 count) [0x00035] in <e540098dd111461e919c5863f6975c29>:0 \n  at\
    \ System.Linq.Enumerable+SelectIPartitionIterator`2[TSource,TResult].ToArray ()\
    \ [0x00023] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable.ToArray[TSource]\
    \ (System.Collections.Generic.IEnumerable`1[T] source) [0x0001f] in <e540098dd111461e919c5863f6975c29>:0\
    \ \n  at Problem.SortNumbers (System.String numbers) [0x00076] in <7306233ee02b45dab9d3a78f2d06779a>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00001] in <7306233ee02b45dab9d3a78f2d06779a>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.FormatException: Input string was\
    \ not in a correct format.\n  at System.Number.ThrowOverflowOrFormatException\
    \ (System.Boolean overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberS"
  stdout: ''
  timestamp: 1659798035
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        var nums = numbers.Split(' ').Select(n => int.Parse(n)).OrderBy(n\
    \ => n).Select(n => n.ToString()).ToArray();\n        return string.Join(\" \"\
    , nums);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\
    \")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\"\
    )));\n    Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five\
    \ nine\")));\n    Debug.Assert(SortNumbers((\"five zero four seven nine eight\"\
    )).Equals((\"zero four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"\
    six five four three two one zero\")).Equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in\
    \ a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean\
    \ overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int32.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem+<>c.<SortNumbers>b__0_0 (System.String n) [0x00000] in <2c2552eba93a49a5b2047b5a0c6fe486>:0\
    \ \n  at System.Linq.Enumerable+SelectArrayIterator`2[TSource,TResult].ToArray\
    \ () [0x00012] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Buffer`1[TElement]..ctor\
    \ (System.Collections.Generic.IEnumerable`1[T] source) [0x0000a] in <e540098dd111461e919c5863f6975c29>:0\
    \ \n  at System.Linq.OrderedEnumerable`1+<GetEnumerator>d__3[TElement].MoveNext\
    \ () [0x0001e] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable+SelectIPartitionIterator`2[TSource,TResult].PreallocatingToArray\
    \ (System.Int32 count) [0x00035] in <e540098dd111461e919c5863f6975c29>:0 \n  at\
    \ System.Linq.Enumerable+SelectIPartitionIterator`2[TSource,TResult].ToArray ()\
    \ [0x00023] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable.ToArray[TSource]\
    \ (System.Collections.Generic.IEnumerable`1[T] source) [0x0001f] in <e540098dd111461e919c5863f6975c29>:0\
    \ \n  at Problem.SortNumbers (System.String numbers) [0x00076] in <2c2552eba93a49a5b2047b5a0c6fe486>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00001] in <2c2552eba93a49a5b2047b5a0c6fe486>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.FormatException: Input string was\
    \ not in a correct format.\n  at System.Number.ThrowOverflowOrFormatException\
    \ (System.Boolean overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberS"
  stdout: ''
  timestamp: 1659798035
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        string[] nums = numbers.Split(' ');\n        int[] nums2 = new int[nums.Length];\n\
    \        for (int i = 0; i < nums.Length; i++) {\n            switch (nums[i])\
    \ {\n                case \"zero\":\n                    nums2[i] = 0;\n     \
    \               break;\n                case \"one\":\n                    nums2[i]\
    \ = 1;\n                    break;\n                case \"two\":\n          \
    \          nums2[i] = 2;\n                    break;\n                case \"\
    three\":\n                    nums2[i] = 3;\n                    break;\n    \
    \            case \"four\":\n                    nums2[i] = 4;\n             \
    \       break;\n                case \"five\":\n                    nums2[i] =\
    \ 5;\n                    break;\n                case \"six\":\n            \
    \        nums2[i] = 6;\n                    break;\n                case \"seven\"\
    :\n                    nums2[i] = 7;\n                    break;\n           \
    \     case \"eight\":\n                    nums2[i] = 8;\n                   \
    \ break;\n                case \"nine\":\n                    nums2[i] = 9;\n\
    \                    break;\n            }\n        }\n        Array.Sort(nums2);\n\
    \        for (int i = 0; i < nums.Length; i++) {\n            switch (nums2[i])\
    \ {\n                case 0:\n                    nums[i] = \"zero\";\n      \
    \              break;\n                case 1:\n                    nums[i] =\
    \ \"one\";\n                    break;\n                case 2:\n            \
    \        nums[i] = \"two\";\n                    break;\n                case\
    \ 3:\n                    nums[i] = \"three\";\n                    break;\n \
    \               case 4:\n                    nums[i] = \"four\";\n           \
    \         break;\n                case 5:\n                    nums[i] = \"five\"\
    ;\n                    break;\n                case 6:\n                    nums[i]\
    \ = \"six\";\n                    break;\n                case 7:\n          \
    \          nums[i] = \"seven\";\n                    break;\n                case\
    \ 8:\n                    nums[i] = \"eight\";\n                    break;\n \
    \               case 9:\n                    nums[i] = \"nine\";\n           \
    \        \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\
    \")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\"\
    )));\n    Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five\
    \ nine\")));\n    Debug.Assert(SortNumbers((\"five zero four seven nine eight\"\
    )).Equals((\"zero four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"\
    six five four three two one zero\")).Equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp8jpzi307.cs(85,5): error CS0106: The modifier ''public'' is not valid
    for this item

    /tmp/tmp8jpzi307.cs(93,2): error CS1513: } expected

    '
  timestamp: 1659798034
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        var nums = numbers.Split(' ');\n        var nums2 = nums.Select(x\
    \ => Convert.ToInt32(x)).ToArray();\n        Array.Sort(nums2);\n        return\
    \ string.Join(\" \", nums2);\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"\
    three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three five nine\"\
    )).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five zero\
    \ four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n\
    \    Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in\
    \ a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean\
    \ overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int32.Parse (System.String s, System.IFormatProvider provider)\
    \ [0x00017] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at System.Convert.ToInt32\
    \ (System.String value) [0x0000b] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n \
    \ at Problem+<>c.<SortNumbers>b__0_0 (System.String x) [0x00000] in <2cc98f1d467841a1a9e9ecda68375894>:0\
    \ \n  at System.Linq.Enumerable+SelectArrayIterator`2[TSource,TResult].ToArray\
    \ () [0x00012] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable.ToArray[TSource]\
    \ (System.Collections.Generic.IEnumerable`1[T] source) [0x0001f] in <e540098dd111461e919c5863f6975c29>:0\
    \ \n  at Problem.SortNumbers (System.String numbers) [0x00030] in <2cc98f1d467841a1a9e9ecda68375894>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00001] in <2cc98f1d467841a1a9e9ecda68375894>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.FormatException: Input string was\
    \ not in a correct format.\n  at System.Number.ThrowOverflowOrFormatException\
    \ (System.Boolean overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int32.Parse (System.String s, System.IFormatProvider provider)\
    \ [0x00017] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at System.Convert.ToInt32\
    \ (System.String value) [0x0000b] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n \
    \ at Problem+<>c.<SortNumbers>b__0_0 (System.String x) [0x00000] in <2cc98f1d467841a1a9e9ecda68375894>:0 "
  stdout: ''
  timestamp: 1659798036
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        var nums = numbers.Split(' ').Select(x => int.Parse(x)).OrderBy(x\
    \ => x).Select(x => x.ToString()).ToArray();\n        return string.Join(\" \"\
    , nums);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\
    \")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\"\
    )));\n    Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five\
    \ nine\")));\n    Debug.Assert(SortNumbers((\"five zero four seven nine eight\"\
    )).Equals((\"zero four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"\
    six five four three two one zero\")).Equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in\
    \ a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean\
    \ overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int32.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem+<>c.<SortNumbers>b__0_0 (System.String x) [0x00000] in <dc44429ce7df4cf69f56b1678990ebd2>:0\
    \ \n  at System.Linq.Enumerable+SelectArrayIterator`2[TSource,TResult].ToArray\
    \ () [0x00012] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Buffer`1[TElement]..ctor\
    \ (System.Collections.Generic.IEnumerable`1[T] source) [0x0000a] in <e540098dd111461e919c5863f6975c29>:0\
    \ \n  at System.Linq.OrderedEnumerable`1+<GetEnumerator>d__3[TElement].MoveNext\
    \ () [0x0001e] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable+SelectIPartitionIterator`2[TSource,TResult].PreallocatingToArray\
    \ (System.Int32 count) [0x00035] in <e540098dd111461e919c5863f6975c29>:0 \n  at\
    \ System.Linq.Enumerable+SelectIPartitionIterator`2[TSource,TResult].ToArray ()\
    \ [0x00023] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable.ToArray[TSource]\
    \ (System.Collections.Generic.IEnumerable`1[T] source) [0x0001f] in <e540098dd111461e919c5863f6975c29>:0\
    \ \n  at Problem.SortNumbers (System.String numbers) [0x00076] in <dc44429ce7df4cf69f56b1678990ebd2>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00001] in <dc44429ce7df4cf69f56b1678990ebd2>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.FormatException: Input string was\
    \ not in a correct format.\n  at System.Number.ThrowOverflowOrFormatException\
    \ (System.Boolean overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberS"
  stdout: ''
  timestamp: 1659798034
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        string[] nums = numbers.Split(' ');\n        int[] nums_int = new\
    \ int[nums.Length];\n        for (int i = 0; i < nums.Length; i++) {\n       \
    \     switch (nums[i]) {\n                case \"zero\":\n                   \
    \ nums_int[i] = 0;\n                    break;\n                case \"one\":\n\
    \                    nums_int[i] = 1;\n                    break;\n          \
    \      case \"two\":\n                    nums_int[i] = 2;\n                 \
    \   break;\n                case \"three\":\n                    nums_int[i] =\
    \ 3;\n                    break;\n                case \"four\":\n           \
    \         nums_int[i] = 4;\n                    break;\n                case \"\
    five\":\n                    nums_int[i] = 5;\n                    break;\n  \
    \              case \"six\":\n                    nums_int[i] = 6;\n         \
    \           break;\n                case \"seven\":\n                    nums_int[i]\
    \ = 7;\n                    break;\n                case \"eight\":\n        \
    \            nums_int[i] = 8;\n                    break;\n                case\
    \ \"nine\":\n                    nums_int[i] = 9;\n                    break;\n\
    \            }\n        }\n        Array.Sort(nums_int);\n        string[] nums_str\
    \ = new string[nums.Length];\n        for (int i = 0; i < nums.Length; i++) {\n\
    \            switch (nums_int[i]) {\n                case 0:\n               \
    \     nums_str[i] = \"zero\";\n                    break;\n                case\
    \ 1:\n                    nums_str[i] = \"one\";\n                    break;\n\
    \                case 2:\n                    nums_str[i] = \"two\";\n       \
    \             break;\n                case 3:\n                    nums_str[i]\
    \ = \"three\";\n                    break;\n                case 4:\n        \
    \            nums_str[i] = \"four\";\n                    break;\n           \
    \     case 5:\n                    nums_str[i] = \"five\";\n                 \
    \   break;\n                case 6:\n                    nums_str[i] = \"six\"\
    ;\n                    break;\n                case 7:\n                    nums_str[i]\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\
    \")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\"\
    )));\n    Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five\
    \ nine\")));\n    Debug.Assert(SortNumbers((\"five zero four seven nine eight\"\
    )).Equals((\"zero four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"\
    six five four three two one zero\")).Equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpscptwhyh.cs(77,32): error CS1002: ; expected

    /tmp/tmpscptwhyh.cs(79,5): error CS0106: The modifier ''public'' is not valid
    for this item

    /tmp/tmpscptwhyh.cs(87,2): error CS1513: } expected

    '
  timestamp: 1659798035
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        // Your code goes here\n        return \"\";\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\"\
    )));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"\
    three five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"\
    five zero four seven nine eight\")).Equals((\"zero four five seven eight nine\"\
    )));\n    Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2e593562849b4f7f9c991456219b3cbb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2e593562849b4f7f9c991456219b3cbb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798035
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        var nums = numbers.Split(' ').Select(s => int.Parse(s)).OrderBy(i\
    \ => i).Select(i => i.ToString()).ToArray();\n        return string.Join(\" \"\
    , nums);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\
    \")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\"\
    )));\n    Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five\
    \ nine\")));\n    Debug.Assert(SortNumbers((\"five zero four seven nine eight\"\
    )).Equals((\"zero four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"\
    six five four three two one zero\")).Equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in\
    \ a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean\
    \ overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int32.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem+<>c.<SortNumbers>b__0_0 (System.String s) [0x00000] in <7306233ee02b45dab9d3a78f2d06779a>:0\
    \ \n  at System.Linq.Enumerable+SelectArrayIterator`2[TSource,TResult].ToArray\
    \ () [0x00012] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Buffer`1[TElement]..ctor\
    \ (System.Collections.Generic.IEnumerable`1[T] source) [0x0000a] in <e540098dd111461e919c5863f6975c29>:0\
    \ \n  at System.Linq.OrderedEnumerable`1+<GetEnumerator>d__3[TElement].MoveNext\
    \ () [0x0001e] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable+SelectIPartitionIterator`2[TSource,TResult].PreallocatingToArray\
    \ (System.Int32 count) [0x00035] in <e540098dd111461e919c5863f6975c29>:0 \n  at\
    \ System.Linq.Enumerable+SelectIPartitionIterator`2[TSource,TResult].ToArray ()\
    \ [0x00023] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable.ToArray[TSource]\
    \ (System.Collections.Generic.IEnumerable`1[T] source) [0x0001f] in <e540098dd111461e919c5863f6975c29>:0\
    \ \n  at Problem.SortNumbers (System.String numbers) [0x00076] in <7306233ee02b45dab9d3a78f2d06779a>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00001] in <7306233ee02b45dab9d3a78f2d06779a>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.FormatException: Input string was\
    \ not in a correct format.\n  at System.Number.ThrowOverflowOrFormatException\
    \ (System.Boolean overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberS"
  stdout: ''
  timestamp: 1659798035
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        var nums = new List<int>();\n        var numeralMap = new Dictionary<string,\
    \ int>();\n        numeralMap[\"zero\"] = 0;\n        numeralMap[\"one\"] = 1;\n\
    \        numeralMap[\"two\"] = 2;\n        numeralMap[\"three\"] = 3;\n      \
    \  numeralMap[\"four\"] = 4;\n        numeralMap[\"five\"] = 5;\n        numeralMap[\"\
    six\"] = 6;\n        numeralMap[\"seven\"] = 7;\n        numeralMap[\"eight\"\
    ] = 8;\n        numeralMap[\"nine\"] = 9;\n        var numeralMapReverse = new\
    \ Dictionary<int, string>();\n        numeralMapReverse[0] = \"zero\";\n     \
    \   numeralMapReverse[1] = \"one\";\n        numeralMapReverse[2] = \"two\";\n\
    \        numeralMapReverse[3] = \"three\";\n        numeralMapReverse[4] = \"\
    four\";\n        numeralMapReverse[5] = \"five\";\n        numeralMapReverse[6]\
    \ = \"six\";\n        numeralMapReverse[7] = \"seven\";\n        numeralMapReverse[8]\
    \ = \"eight\";\n        numeralMapReverse[9] = \"nine\";\n        var numeralList\
    \ = numbers.Split(' ');\n        foreach (var numeral in numeralList) {\n    \
    \        nums.Add(numeralMap[numeral]);\n        }\n        nums.Sort();\n   \
    \     var result = new List<string>();\n        foreach (var num in nums) {\n\
    \            result.Add(numeralMapReverse[num]);\n        }\n        return string.Join(\"\
    \ \", result);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\
    \")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\"\
    )));\n    Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five\
    \ nine\")));\n    Debug.Assert(SortNumbers((\"five zero four seven nine eight\"\
    )).Equals((\"zero four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"\
    six five four three two one zero\")).Equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.Collections.Generic.KeyNotFoundException:\
    \ The given key '' was not present in the dictionary.\n  at System.Collections.Generic.Dictionary`2[TKey,TValue].get_Item\
    \ (TKey key) [0x0001e] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.SortNumbers\
    \ (System.String numbers) [0x00134] in <d61edc6fb17b47379649f1337b009993>:0 \n\
    \  at Problem.Main (System.String[] args) [0x00001] in <d61edc6fb17b47379649f1337b009993>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.Collections.Generic.KeyNotFoundException:\
    \ The given key '' was not present in the dictionary.\n  at System.Collections.Generic.Dictionary`2[TKey,TValue].get_Item\
    \ (TKey key) [0x0001e] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.SortNumbers\
    \ (System.String numbers) [0x00134] in <d61edc6fb17b47379649f1337b009993>:0 \n\
    \  at Problem.Main (System.String[] args) [0x00001] in <d61edc6fb17b47379649f1337b009993>:0\
    \ \n"
  stdout: ''
  timestamp: 1659798036
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        var nums = numbers.Split(' ');\n        Array.Sort(nums);\n     \
    \   return string.Join(\" \", nums);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"\
    three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three five nine\"\
    )).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five zero\
    \ four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n\
    \    Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a52eb78c127b4f7b966d1276966c9022>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a52eb78c127b4f7b966d1276966c9022>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798035
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        var nums = numbers.Split(' ');\n        var nums2 = nums.Select(x\
    \ => int.Parse(x)).ToArray();\n        Array.Sort(nums2);\n        return string.Join(\"\
    \ \", nums2);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\
    \")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\"\
    )));\n    Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five\
    \ nine\")));\n    Debug.Assert(SortNumbers((\"five zero four seven nine eight\"\
    )).Equals((\"zero four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"\
    six five four three two one zero\")).Equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in\
    \ a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean\
    \ overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int32.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem+<>c.<SortNumbers>b__0_0 (System.String x) [0x00000] in <47d5267524014de5940c4552c95c2cea>:0\
    \ \n  at System.Linq.Enumerable+SelectArrayIterator`2[TSource,TResult].ToArray\
    \ () [0x00012] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable.ToArray[TSource]\
    \ (System.Collections.Generic.IEnumerable`1[T] source) [0x0001f] in <e540098dd111461e919c5863f6975c29>:0\
    \ \n  at Problem.SortNumbers (System.String numbers) [0x00030] in <47d5267524014de5940c4552c95c2cea>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00001] in <47d5267524014de5940c4552c95c2cea>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.FormatException: Input string was\
    \ not in a correct format.\n  at System.Number.ThrowOverflowOrFormatException\
    \ (System.Boolean overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int32.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem+<>c.<SortNumbers>b__0_0 (System.String x) [0x00000] in <47d5267524014de5940c4552c95c2cea>:0\
    \ \n  at System.Linq.Enumerable+SelectArrayIterator`2[TSource,TResult].ToArray\
    \ () [0x00012] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable.ToArray[TSource]\
    \ (System.Collections.Generic.IEnumerable`1[T] source) [0x0001f] in <e540098dd111461e919c5863f6"
  stdout: ''
  timestamp: 1659798035
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        var nums = numbers.Split(' ').Select(s => int.Parse(s)).OrderBy(i\
    \ => i).Select(i => i.ToString()).ToArray();\n        return string.Join(\" \"\
    , nums);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\
    \")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\"\
    )));\n    Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five\
    \ nine\")));\n    Debug.Assert(SortNumbers((\"five zero four seven nine eight\"\
    )).Equals((\"zero four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"\
    six five four three two one zero\")).Equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in\
    \ a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean\
    \ overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int32.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem+<>c.<SortNumbers>b__0_0 (System.String s) [0x00000] in <7306233ee02b45dab9d3a78f2d06779a>:0\
    \ \n  at System.Linq.Enumerable+SelectArrayIterator`2[TSource,TResult].ToArray\
    \ () [0x00012] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Buffer`1[TElement]..ctor\
    \ (System.Collections.Generic.IEnumerable`1[T] source) [0x0000a] in <e540098dd111461e919c5863f6975c29>:0\
    \ \n  at System.Linq.OrderedEnumerable`1+<GetEnumerator>d__3[TElement].MoveNext\
    \ () [0x0001e] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable+SelectIPartitionIterator`2[TSource,TResult].PreallocatingToArray\
    \ (System.Int32 count) [0x00035] in <e540098dd111461e919c5863f6975c29>:0 \n  at\
    \ System.Linq.Enumerable+SelectIPartitionIterator`2[TSource,TResult].ToArray ()\
    \ [0x00023] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable.ToArray[TSource]\
    \ (System.Collections.Generic.IEnumerable`1[T] source) [0x0001f] in <e540098dd111461e919c5863f6975c29>:0\
    \ \n  at Problem.SortNumbers (System.String numbers) [0x00076] in <7306233ee02b45dab9d3a78f2d06779a>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00001] in <7306233ee02b45dab9d3a78f2d06779a>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.FormatException: Input string was\
    \ not in a correct format.\n  at System.Number.ThrowOverflowOrFormatException\
    \ (System.Boolean overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberS"
  stdout: ''
  timestamp: 1659798035
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        // TODO: Implement this method\n        // This method is supposed\
    \ to sort the numbers in the string\n        // from smallest to largest and return\
    \ the new string\n        // You can write additional methods to help you out\n\
    \        // You can also write additional classes\n        // You can also use\
    \ LINQ\n        // You can also use built-in .NET methods\n        // However,\
    \ you are not allowed to use any ready-made sorting algorithm\n        // This\
    \ is supposed to be your own implementation of a sorting algorithm\n        //\
    \ You can use the Main method to test your code\n        // You can use the TestSortNumbers\
    \ method to test your code\n        // You can use the TestSortNumbersAdvanced\
    \ method to test your code\n        // You can use the TestSortNumbersExtreme\
    \ method to test your code\n        // You can use the TestSortNumbersExtreme2\
    \ method to test your code\n        // You can use the TestSortNumbersExtreme3\
    \ method to test your code\n        // You can use the TestSortNumbersExtreme4\
    \ method to test your code\n        // You can use the TestSortNumbersExtreme5\
    \ method to test your code\n        // You can use the TestSortNumbersExtreme6\
    \ method to test your code\n        // You can use the TestSortNumbersExtreme7\
    \ method to test your code\n        // You can use the TestSortNumbersExtreme8\
    \ method to test your code\n        // You can use the TestSortNumbersExtreme9\
    \ method to test your code\n        // You can use the TestSortNumbersExtreme10\
    \ method to test your code\n        // You can use the TestSortNumbersExtreme11\
    \ method to test your code\n        // You can use the TestSortNumbersExtreme12\
    \ method to test your code\n        // You can use the TestSortNumbersExtreme13\
    \ method to test your code\n        // You can use the TestSortNumbersExtreme14\
    \ method to test your code\n        // You can use the TestSortNumbersExtreme15\
    \ method to test your code\n        // You can use the TestSortNumbersExtreme16\
    \ method to test your code\n        // You can use the TestSortNumbersExtreme17\
    \ method to test your code\n        // You can use the TestSortNumbersExtreme18\
    \ method to test your code\n        // You can use the TestSortNumbersExtreme19\
    \ method to test your code\n        // You can use the TestSortNumbersExtreme20\
    \ method to test your code\n        // You can use the TestSortNumbersExtreme21\
    \ method to test your code\n       \n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"\
    three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three five nine\"\
    )).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five zero\
    \ four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n\
    \    Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmppzhtnxu3.cs(14,26): error CS0161: ''Problem.SortNumbers(string)'': not
    all code paths return a value

    '
  timestamp: 1659798035
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        string[] nums = numbers.Split(' ');\n        int[] numsInt = new\
    \ int[nums.Length];\n        for (int i = 0; i < nums.Length; i++) {\n       \
    \     switch (nums[i]) {\n                case \"zero\":\n                   \
    \ numsInt[i] = 0;\n                    break;\n                case \"one\":\n\
    \                    numsInt[i] = 1;\n                    break;\n           \
    \     case \"two\":\n                    numsInt[i] = 2;\n                   \
    \ break;\n                case \"three\":\n                    numsInt[i] = 3;\n\
    \                    break;\n                case \"four\":\n                \
    \    numsInt[i] = 4;\n                    break;\n                case \"five\"\
    :\n                    numsInt[i] = 5;\n                    break;\n         \
    \       case \"six\":\n                    numsInt[i] = 6;\n                 \
    \   break;\n                case \"seven\":\n                    numsInt[i] =\
    \ 7;\n                    break;\n                case \"eight\":\n          \
    \          numsInt[i] = 8;\n                    break;\n                case \"\
    nine\":\n                    numsInt[i] = 9;\n                    break;\n   \
    \         }\n        }\n        Array.Sort(numsInt);\n        string[] numsStr\
    \ = new string[nums.Length];\n        for (int i = 0; i < nums.Length; i++) {\n\
    \            switch (numsInt[i]) {\n                case 0:\n                \
    \    numsStr[i] = \"zero\";\n                    break;\n                case\
    \ 1:\n                    numsStr[i] = \"one\";\n                    break;\n\
    \                case 2:\n                    numsStr[i] = \"two\";\n        \
    \            break;\n                case 3:\n                    numsStr[i] =\
    \ \"three\";\n                    break;\n                case 4:\n          \
    \          numsStr[i] = \"four\";\n                    break;\n              \
    \  case 5:\n                    numsStr[i] = \"five\";\n                    break;\n\
    \                case 6:\n                    numsStr[i] = \"six\";\n        \
    \            break;\n                case 7:\n                    numsStr[i] =\
    \ \"seven\";\n                    break;\n                case 8:\n          \
    \          numsStr[i] =\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"\
    three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three five nine\"\
    )).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five zero\
    \ four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n\
    \    Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp_ruqmnkb.cs(80,33): error CS1525: Invalid expression term ''}''

    /tmp/tmp_ruqmnkb.cs(80,33): error CS1002: ; expected

    /tmp/tmp_ruqmnkb.cs(82,5): error CS0106: The modifier ''public'' is not valid
    for this item

    /tmp/tmp_ruqmnkb.cs(90,2): error CS1513: } expected

    '
  timestamp: 1659798034
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        var nums = numbers.Split(' ');\n        var nums2 = new List<int>();\n\
    \        foreach (var num in nums) {\n            switch (num) {\n           \
    \     case \"zero\": nums2.Add(0); break;\n                case \"one\": nums2.Add(1);\
    \ break;\n                case \"two\": nums2.Add(2); break;\n               \
    \ case \"three\": nums2.Add(3); break;\n                case \"four\": nums2.Add(4);\
    \ break;\n                case \"five\": nums2.Add(5); break;\n              \
    \  case \"six\": nums2.Add(6); break;\n                case \"seven\": nums2.Add(7);\
    \ break;\n                case \"eight\": nums2.Add(8); break;\n             \
    \   case \"nine\": nums2.Add(9); break;\n            }\n        }\n        nums2.Sort();\n\
    \        var nums3 = new List<string>();\n        foreach (var num in nums2) {\n\
    \            switch (num) {\n                case 0: nums3.Add(\"zero\"); break;\n\
    \                case 1: nums3.Add(\"one\"); break;\n                case 2: nums3.Add(\"\
    two\"); break;\n                case 3: nums3.Add(\"three\"); break;\n       \
    \         case 4: nums3.Add(\"four\"); break;\n                case 5: nums3.Add(\"\
    five\"); break;\n                case 6: nums3.Add(\"six\"); break;\n        \
    \        case 7: nums3.Add(\"seven\"); break;\n                case 8: nums3.Add(\"\
    eight\"); break;\n                case 9: nums3.Add(\"nine\"); break;\n      \
    \      }\n        }\n        return string.Join(\" \", nums3);\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\
    \")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"\
    three five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"\
    five zero four seven nine eight\")).Equals((\"zero four five seven eight nine\"\
    )));\n    Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659798035
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        string[] nums = numbers.Split(' ');\n        int[] numsInt = new\
    \ int[nums.Length];\n        for (int i = 0; i < nums.Length; i++) {\n       \
    \     numsInt[i] = int.Parse(nums[i]);\n        }\n        Array.Sort(numsInt);\n\
    \        string result = \"\";\n        for (int i = 0; i < numsInt.Length; i++)\
    \ {\n            result += numsInt[i].ToString() + \" \";\n        }\n       \
    \ return result.Trim();\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"\
    three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three five nine\"\
    )).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five zero\
    \ four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n\
    \    Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in\
    \ a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean\
    \ overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int32.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.SortNumbers (System.String numbers) [0x00019] in <ad2c0a22337a42ccb55d660ba0591be7>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00001] in <ad2c0a22337a42ccb55d660ba0591be7>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.FormatException: Input string was\
    \ not in a correct format.\n  at System.Number.ThrowOverflowOrFormatException\
    \ (System.Boolean overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int32.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.SortNumbers (System.String numbers) [0x00019] in <ad2c0a22337a42ccb55d660ba0591be7>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00001] in <ad2c0a22337a42ccb55d660ba0591be7>:0\
    \ \n"
  stdout: ''
  timestamp: 1659798036
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        var nums = numbers.Split(' ');\n        var nums2 = new List<int>();\n\
    \        foreach (var num in nums) {\n            switch (num) {\n           \
    \     case \"zero\": nums2.Add(0); break;\n                case \"one\": nums2.Add(1);\
    \ break;\n                case \"two\": nums2.Add(2); break;\n               \
    \ case \"three\": nums2.Add(3); break;\n                case \"four\": nums2.Add(4);\
    \ break;\n                case \"five\": nums2.Add(5); break;\n              \
    \  case \"six\": nums2.Add(6); break;\n                case \"seven\": nums2.Add(7);\
    \ break;\n                case \"eight\": nums2.Add(8); break;\n             \
    \   case \"nine\": nums2.Add(9); break;\n            }\n        }\n        nums2.Sort();\n\
    \        var nums3 = new List<string>();\n        foreach (var num in nums2) {\n\
    \            switch (num) {\n                case 0: nums3.Add(\"zero\"); break;\n\
    \                case 1: nums3.Add(\"one\"); break;\n                case 2: nums3.Add(\"\
    two\"); break;\n                case 3: nums3.Add(\"three\"); break;\n       \
    \         case 4: nums3.Add(\"four\"); break;\n                case 5: nums3.Add(\"\
    five\"); break;\n                case 6: nums3.Add(\"six\"); break;\n        \
    \        case 7: nums3.Add(\"seven\"); break;\n                case 8: nums3.Add(\"\
    eight\"); break;\n                case 9: nums3.Add(\"nine\"); break;\n      \
    \      }\n        }\n        return string.Join(\" \", nums3);\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\
    \")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"\
    three five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"\
    five zero four seven nine eight\")).Equals((\"zero four five seven eight nine\"\
    )));\n    Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659798035
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        // TODO: Implement this function\n        return \"\";\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\
    \")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\"\
    )));\n    Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five\
    \ nine\")));\n    Debug.Assert(SortNumbers((\"five zero four seven nine eight\"\
    )).Equals((\"zero four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"\
    six five four three two one zero\")).Equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <959a76934a79427383ca9be1749b050c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <959a76934a79427383ca9be1749b050c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798035
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        string[] nums = numbers.Split(' ');\n        int[] nums2 = new int[nums.Length];\n\
    \        for (int i = 0; i < nums.Length; i++) {\n            switch (nums[i])\
    \ {\n                case \"zero\":\n                    nums2[i] = 0;\n     \
    \               break;\n                case \"one\":\n                    nums2[i]\
    \ = 1;\n                    break;\n                case \"two\":\n          \
    \          nums2[i] = 2;\n                    break;\n                case \"\
    three\":\n                    nums2[i] = 3;\n                    break;\n    \
    \            case \"four\":\n                    nums2[i] = 4;\n             \
    \       break;\n                case \"five\":\n                    nums2[i] =\
    \ 5;\n                    break;\n                case \"six\":\n            \
    \        nums2[i] = 6;\n                    break;\n                case \"seven\"\
    :\n                    nums2[i] = 7;\n                    break;\n           \
    \     case \"eight\":\n                    nums2[i] = 8;\n                   \
    \ break;\n                case \"nine\":\n                    nums2[i] = 9;\n\
    \                    break;\n            }\n        }\n        Array.Sort(nums2);\n\
    \        string[] nums3 = new string[nums.Length];\n        for (int i = 0; i\
    \ < nums.Length; i++) {\n            switch (nums2[i]) {\n                case\
    \ 0:\n                    nums3[i] = \"zero\";\n                    break;\n \
    \               case 1:\n                    nums3[i] = \"one\";\n           \
    \         break;\n                case 2:\n                    nums3[i] = \"two\"\
    ;\n                    break;\n                case 3:\n                    nums3[i]\
    \ = \"three\";\n                    break;\n                case 4:\n        \
    \            nums3[i] = \"four\";\n                    break;\n              \
    \  case 5:\n                    nums3[i] = \"five\";\n                    break;\n\
    \                case 6:\n                    nums3[i] = \"six\";\n          \
    \          break;\n                case 7:\n                    nums3[i] = \"\
    seven\";\n                    break;\n                case 8:\n              \
    \      nums3[i] =\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\
    \")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\"\
    )));\n    Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five\
    \ nine\")));\n    Debug.Assert(SortNumbers((\"five zero four seven nine eight\"\
    )).Equals((\"zero four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"\
    six five four three two one zero\")).Equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpwi1ha3o3.cs(80,31): error CS1525: Invalid expression term ''}''

    /tmp/tmpwi1ha3o3.cs(80,31): error CS1002: ; expected

    /tmp/tmpwi1ha3o3.cs(82,5): error CS0106: The modifier ''public'' is not valid
    for this item

    /tmp/tmpwi1ha3o3.cs(90,2): error CS1513: } expected

    '
  timestamp: 1659798035
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        // TODO: Implement this function\n        return \"\";\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\
    \")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\"\
    )));\n    Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five\
    \ nine\")));\n    Debug.Assert(SortNumbers((\"five zero four seven nine eight\"\
    )).Equals((\"zero four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"\
    six five four three two one zero\")).Equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <959a76934a79427383ca9be1749b050c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <959a76934a79427383ca9be1749b050c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798035
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        var nums = numbers.Split(' ').Select(x => x.ToLower()).ToArray();\n\
    \        var nums2 = new int[nums.Length];\n        for (int i = 0; i < nums.Length;\
    \ i++) {\n            switch (nums[i]) {\n                case \"zero\": nums2[i]\
    \ = 0; break;\n                case \"one\": nums2[i] = 1; break;\n          \
    \      case \"two\": nums2[i] = 2; break;\n                case \"three\": nums2[i]\
    \ = 3; break;\n                case \"four\": nums2[i] = 4; break;\n         \
    \       case \"five\": nums2[i] = 5; break;\n                case \"six\": nums2[i]\
    \ = 6; break;\n                case \"seven\": nums2[i] = 7; break;\n        \
    \        case \"eight\": nums2[i] = 8; break;\n                case \"nine\":\
    \ nums2[i] = 9; break;\n            }\n        }\n        Array.Sort(nums2);\n\
    \        var nums3 = new string[nums2.Length];\n        for (int i = 0; i < nums2.Length;\
    \ i++) {\n            switch (nums2[i]) {\n                case 0: nums3[i] =\
    \ \"zero\"; break;\n                case 1: nums3[i] = \"one\"; break;\n     \
    \           case 2: nums3[i] = \"two\"; break;\n                case 3: nums3[i]\
    \ = \"three\"; break;\n                case 4: nums3[i] = \"four\"; break;\n \
    \               case 5: nums3[i] = \"five\"; break;\n                case 6: nums3[i]\
    \ = \"six\"; break;\n                case 7: nums3[i] = \"seven\"; break;\n  \
    \              case 8: nums3[i] = \"eight\"; break;\n                case 9: nums3[i]\
    \ = \"nine\"; break;\n            }\n        }\n        return string.Join(\"\
    \ \", nums3);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\
    \")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\"\
    )));\n    Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five\
    \ nine\")));\n    Debug.Assert(SortNumbers((\"five zero four seven nine eight\"\
    )).Equals((\"zero four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"\
    six five four three two one zero\")).Equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <52ffed2e92c64f2bb681e6bac7b4b598>:0 \n"
  stdout: ''
  timestamp: 1659798036
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        // Your code goes here\n        return \"\";\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\"\
    )));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"\
    three five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"\
    five zero four seven nine eight\")).Equals((\"zero four five seven eight nine\"\
    )));\n    Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2e593562849b4f7f9c991456219b3cbb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2e593562849b4f7f9c991456219b3cbb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798035
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        var nums = numbers.Split(' ').Select(x => x.ToLower()).ToArray();\n\
    \        var nums2 = new string[nums.Length];\n        var nums3 = new int[nums.Length];\n\
    \        var nums4 = new int[nums.Length];\n        for (int i = 0; i < nums.Length;\
    \ i++) {\n            switch (nums[i]) {\n                case \"zero\":\n   \
    \                 nums2[i] = \"zero\";\n                    nums3[i] = 0;\n  \
    \                  break;\n                case \"one\":\n                   \
    \ nums2[i] = \"one\";\n                    nums3[i] = 1;\n                   \
    \ break;\n                case \"two\":\n                    nums2[i] = \"two\"\
    ;\n                    nums3[i] = 2;\n                    break;\n           \
    \     case \"three\":\n                    nums2[i] = \"three\";\n           \
    \         nums3[i] = 3;\n                    break;\n                case \"four\"\
    :\n                    nums2[i] = \"four\";\n                    nums3[i] = 4;\n\
    \                    break;\n                case \"five\":\n                \
    \    nums2[i] = \"five\";\n                    nums3[i] = 5;\n               \
    \     break;\n                case \"six\":\n                    nums2[i] = \"\
    six\";\n                    nums3[i] = 6;\n                    break;\n      \
    \          case \"seven\":\n                    nums2[i] = \"seven\";\n      \
    \              nums3[i] = 7;\n                    break;\n                case\
    \ \"eight\":\n                    nums2[i] = \"eight\";\n                    nums3[i]\
    \ = 8;\n                    break;\n                case \"nine\":\n         \
    \           nums2[i] = \"nine\";\n                    nums3[i] = 9;\n        \
    \            break;\n            }\n        }\n        Array.Sort(nums3, nums4);\n\
    \        var sb = new StringBuilder();\n        for (int i = 0; i < nums.Length;\
    \ i++) {\n            sb.Append(nums2[Array.IndexOf(nums3, nums4[i])]);\n    \
    \        if (i !=\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\
    \")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\"\
    )));\n    Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five\
    \ nine\")));\n    Debug.Assert(SortNumbers((\"five zero four seven nine eight\"\
    )).Equals((\"zero four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"\
    six five four three two one zero\")).Equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpc5i85kqg.cs(67,21): error CS1525: Invalid expression term ''}''

    /tmp/tmpc5i85kqg.cs(67,21): error CS1026: ) expected

    /tmp/tmpc5i85kqg.cs(67,21): error CS1002: ; expected

    /tmp/tmpc5i85kqg.cs(69,5): error CS0106: The modifier ''public'' is not valid
    for this item

    /tmp/tmpc5i85kqg.cs(77,2): error CS1513: } expected

    '
  timestamp: 1659798035
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        // TODO: Implement this function\n        return \"\";\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\
    \")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\"\
    )));\n    Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five\
    \ nine\")));\n    Debug.Assert(SortNumbers((\"five zero four seven nine eight\"\
    )).Equals((\"zero four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"\
    six five four three two one zero\")).Equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <959a76934a79427383ca9be1749b050c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <959a76934a79427383ca9be1749b050c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798035
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        // Your code goes here\n        return \"\";\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\"\
    )));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"\
    three five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"\
    five zero four seven nine eight\")).Equals((\"zero four five seven eight nine\"\
    )));\n    Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2e593562849b4f7f9c991456219b3cbb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2e593562849b4f7f9c991456219b3cbb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798035
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        // TODO: Implement this function\n        return \"\";\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\
    \")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\"\
    )));\n    Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five\
    \ nine\")));\n    Debug.Assert(SortNumbers((\"five zero four seven nine eight\"\
    )).Equals((\"zero four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"\
    six five four three two one zero\")).Equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <959a76934a79427383ca9be1749b050c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <959a76934a79427383ca9be1749b050c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798035
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        // TODO: Implement this function\n        return \"\";\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\
    \")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\"\
    )));\n    Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five\
    \ nine\")));\n    Debug.Assert(SortNumbers((\"five zero four seven nine eight\"\
    )).Equals((\"zero four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"\
    six five four three two one zero\")).Equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <959a76934a79427383ca9be1749b050c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <959a76934a79427383ca9be1749b050c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798035
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        string[] nums = numbers.Split(' ');\n        Array.Sort(nums);\n\
    \        return string.Join(\" \", nums);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"\
    three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three five nine\"\
    )).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five zero\
    \ four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n\
    \    Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <92912d111b404a80ab493e004c0355c2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <92912d111b404a80ab493e004c0355c2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798035
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        // Your code goes here\n        return \"\";\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\"\
    )));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"\
    three five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"\
    five zero four seven nine eight\")).Equals((\"zero four five seven eight nine\"\
    )));\n    Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2e593562849b4f7f9c991456219b3cbb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2e593562849b4f7f9c991456219b3cbb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798035
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        // TODO: Implement me\n        return \"\";\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\"\
    )));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"\
    three five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"\
    five zero four seven nine eight\")).Equals((\"zero four five seven eight nine\"\
    )));\n    Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <90b234f22cdb440fa1cf7d6dad6223b7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <90b234f22cdb440fa1cf7d6dad6223b7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798035
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        var nums = numbers.Split(' ');\n        var numsInt = new int[nums.Length];\n\
    \        for (int i = 0; i < nums.Length; i++) {\n            numsInt[i] = Convert.ToInt32(nums[i]);\n\
    \        }\n        Array.Sort(numsInt);\n        var result = \"\";\n       \
    \ for (int i = 0; i < numsInt.Length; i++) {\n            result += numsInt[i].ToString()\
    \ + \" \";\n        }\n        return result.Trim();\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\"\
    )));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"\
    three five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"\
    five zero four seven nine eight\")).Equals((\"zero four five seven eight nine\"\
    )));\n    Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in\
    \ a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean\
    \ overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int32.Parse (System.String s, System.IFormatProvider provider)\
    \ [0x00017] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at System.Convert.ToInt32\
    \ (System.String value) [0x0000b] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n \
    \ at Problem.SortNumbers (System.String numbers) [0x00019] in <e89f747363d44ca9adb925cf124284d0>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00001] in <e89f747363d44ca9adb925cf124284d0>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.FormatException: Input string was\
    \ not in a correct format.\n  at System.Number.ThrowOverflowOrFormatException\
    \ (System.Boolean overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int32.Parse (System.String s, System.IFormatProvider provider)\
    \ [0x00017] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at System.Convert.ToInt32\
    \ (System.String value) [0x0000b] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n \
    \ at Problem.SortNumbers (System.String numbers) [0x00019] in <e89f747363d44ca9adb925cf124284d0>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00001] in <e89f747363d44ca9adb925cf124284d0>:0\
    \ \n"
  stdout: ''
  timestamp: 1659798036
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        string[] nums = numbers.Split(' ');\n        int[] numsInt = new\
    \ int[nums.Length];\n        for (int i = 0; i < nums.Length; i++) {\n       \
    \     switch (nums[i]) {\n                case \"zero\":\n                   \
    \ numsInt[i] = 0;\n                    break;\n                case \"one\":\n\
    \                    numsInt[i] = 1;\n                    break;\n           \
    \     case \"two\":\n                    numsInt[i] = 2;\n                   \
    \ break;\n                case \"three\":\n                    numsInt[i] = 3;\n\
    \                    break;\n                case \"four\":\n                \
    \    numsInt[i] = 4;\n                    break;\n                case \"five\"\
    :\n                    numsInt[i] = 5;\n                    break;\n         \
    \       case \"six\":\n                    numsInt[i] = 6;\n                 \
    \   break;\n                case \"seven\":\n                    numsInt[i] =\
    \ 7;\n                    break;\n                case \"eight\":\n          \
    \          numsInt[i] = 8;\n                    break;\n                case \"\
    nine\":\n                    numsInt[i] = 9;\n                    break;\n   \
    \         }\n        }\n        Array.Sort(numsInt);\n        string[] numsStr\
    \ = new string[nums.Length];\n        for (int i = 0; i < nums.Length; i++) {\n\
    \            switch (numsInt[i]) {\n                case 0:\n                \
    \    numsStr[i] = \"zero\";\n                    break;\n                case\
    \ 1:\n                    numsStr[i] = \"one\";\n                    break;\n\
    \                case 2:\n                    numsStr[i] = \"two\";\n        \
    \            break;\n                case 3:\n                    numsStr[i] =\
    \ \"three\";\n                    break;\n                case 4:\n          \
    \          numsStr[i] = \"four\";\n                    break;\n              \
    \  case 5:\n                    numsStr[i] = \"five\";\n                    break;\n\
    \                case 6:\n                    numsStr[i] = \"six\";\n        \
    \            break;\n                case 7:\n                    numsStr[i] =\
    \ \"seven\";\n                    break;\n                case 8:\n          \
    \          numsStr[i] =\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"\
    three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three five nine\"\
    )).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five zero\
    \ four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n\
    \    Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp_ruqmnkb.cs(80,33): error CS1525: Invalid expression term ''}''

    /tmp/tmp_ruqmnkb.cs(80,33): error CS1002: ; expected

    /tmp/tmp_ruqmnkb.cs(82,5): error CS0106: The modifier ''public'' is not valid
    for this item

    /tmp/tmp_ruqmnkb.cs(90,2): error CS1513: } expected

    '
  timestamp: 1659798034
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        string[] nums = numbers.Split(' ');\n        Array.Sort(nums);\n\
    \        return string.Join(\" \", nums);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"\
    three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three five nine\"\
    )).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five zero\
    \ four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n\
    \    Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <92912d111b404a80ab493e004c0355c2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <92912d111b404a80ab493e004c0355c2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798035
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        var nums = numbers.Split(' ').Select(s => (int)Enum.Parse(typeof(Numbers),\
    \ s)).OrderBy(i => i).Select(i => Enum.GetName(typeof(Numbers), i));\n       \
    \ return string.Join(\" \", nums);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"\
    three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three five nine\"\
    )).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five zero\
    \ four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n\
    \    Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpx7_xud_7.cs(15,74): error CS0246: The type or namespace name ''Numbers''
    could not be found (are you missing a using directive or an assembly reference?)

    /tmp/tmpx7_xud_7.cs(15,136): error CS0246: The type or namespace name ''Numbers''
    could not be found (are you missing a using directive or an assembly reference?)

    '
  timestamp: 1659798036
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        // TODO: Implement this function\n        return \"\";\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\
    \")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\"\
    )));\n    Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five\
    \ nine\")));\n    Debug.Assert(SortNumbers((\"five zero four seven nine eight\"\
    )).Equals((\"zero four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"\
    six five four three two one zero\")).Equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <959a76934a79427383ca9be1749b050c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <959a76934a79427383ca9be1749b050c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798035
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        var nums = numbers.Split(' ');\n        var nums2 = new List<int>();\n\
    \        foreach (var num in nums) {\n            switch (num) {\n           \
    \     case \"zero\":\n                    nums2.Add(0);\n                    break;\n\
    \                case \"one\":\n                    nums2.Add(1);\n          \
    \          break;\n                case \"two\":\n                    nums2.Add(2);\n\
    \                    break;\n                case \"three\":\n               \
    \     nums2.Add(3);\n                    break;\n                case \"four\"\
    :\n                    nums2.Add(4);\n                    break;\n           \
    \     case \"five\":\n                    nums2.Add(5);\n                    break;\n\
    \                case \"six\":\n                    nums2.Add(6);\n          \
    \          break;\n                case \"seven\":\n                    nums2.Add(7);\n\
    \                    break;\n                case \"eight\":\n               \
    \     nums2.Add(8);\n                    break;\n                case \"nine\"\
    :\n                    nums2.Add(9);\n                    break;\n           \
    \ }\n        }\n        nums2.Sort();\n        var nums3 = new List<string>();\n\
    \        foreach (var num in nums2) {\n            switch (num) {\n          \
    \      case 0:\n                    nums3.Add(\"zero\");\n                   \
    \ break;\n                case 1:\n                    nums3.Add(\"one\");\n \
    \                   break;\n                case 2:\n                    nums3.Add(\"\
    two\");\n                    break;\n                case 3:\n               \
    \     nums3.Add(\"three\");\n                    break;\n                case\
    \ 4:\n                    nums3.Add(\"four\");\n                    break;\n \
    \               case 5:\n                    nums3.Add(\"five\");\n          \
    \          break;\n                case 6:\n                    nums3.Add(\"six\"\
    );\n                    break;\n                case 7:\n                    nums3.Add(\"\
    seven\");\n                    break;\n                case 8:\n             \
    \       nums3.Add(\"eight\");\n                    break;\n                case\
    \ 9:\n                    nums3.Add(\"nine\");\n                    break;\n \
    \           }\n        }\n        return string.Join(\" \", nums3);\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\
    \")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\"\
    )));\n    Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five\
    \ nine\")));\n    Debug.Assert(SortNumbers((\"five zero four seven nine eight\"\
    )).Equals((\"zero four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"\
    six five four three two one zero\")).Equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659798035
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        // Your code goes here\n        string[] nums = numbers.Split(' ');\n\
    \        int[] numsint = new int[nums.Length];\n        for (int i = 0; i < nums.Length;\
    \ i++) {\n            switch (nums[i]) {\n                case \"zero\":\n   \
    \                 numsint[i] = 0;\n                    break;\n              \
    \  case \"one\":\n                    numsint[i] = 1;\n                    break;\n\
    \                case \"two\":\n                    numsint[i] = 2;\n        \
    \            break;\n                case \"three\":\n                    numsint[i]\
    \ = 3;\n                    break;\n                case \"four\":\n         \
    \           numsint[i] = 4;\n                    break;\n                case\
    \ \"five\":\n                    numsint[i] = 5;\n                    break;\n\
    \                case \"six\":\n                    numsint[i] = 6;\n        \
    \            break;\n                case \"seven\":\n                    numsint[i]\
    \ = 7;\n                    break;\n                case \"eight\":\n        \
    \            numsint[i] = 8;\n                    break;\n                case\
    \ \"nine\":\n                    numsint[i] = 9;\n                    break;\n\
    \            }\n        }\n        Array.Sort(numsint);\n        string result\
    \ = \"\";\n        for (int i = 0; i < numsint.Length; i++) {\n            switch\
    \ (numsint[i]) {\n                case 0:\n                    result += \"zero\
    \ \";\n                    break;\n                case 1:\n                 \
    \   result += \"one \";\n                    break;\n                case 2:\n\
    \                    result += \"two \";\n                    break;\n       \
    \         case 3:\n                    result += \"three \";\n               \
    \     break;\n                case 4:\n                    result += \"four \"\
    ;\n                    break;\n                case 5:\n                    result\
    \ += \"five \";\n                    break;\n                case 6:\n       \
    \             result += \"six \";\n                    break;\n              \
    \  case 7:\n                    result += \"seven \";\n                    break;\n\
    \                case 8:\n                    result += \"eight \";\n        \
    \            break;\n                case 9:\n                    result += \"\
    nine \";\n                    break;\n            }\n        }\n        return\
    \ result.Trim\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\
    \")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\"\
    )));\n    Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five\
    \ nine\")));\n    Debug.Assert(SortNumbers((\"five zero four seven nine eight\"\
    )).Equals((\"zero four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"\
    six five four three two one zero\")).Equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp4kkv0a6a.cs(88,27): error CS1002: ; expected

    '
  timestamp: 1659798035
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        string[] nums = numbers.Split(' ');\n        int[] numsInt = new\
    \ int[nums.Length];\n        for (int i = 0; i < nums.Length; i++) {\n       \
    \     switch (nums[i]) {\n                case \"zero\":\n                   \
    \ numsInt[i] = 0;\n                    break;\n                case \"one\":\n\
    \                    numsInt[i] = 1;\n                    break;\n           \
    \     case \"two\":\n                    numsInt[i] = 2;\n                   \
    \ break;\n                case \"three\":\n                    numsInt[i] = 3;\n\
    \                    break;\n                case \"four\":\n                \
    \    numsInt[i] = 4;\n                    break;\n                case \"five\"\
    :\n                    numsInt[i] = 5;\n                    break;\n         \
    \       case \"six\":\n                    numsInt[i] = 6;\n                 \
    \   break;\n                case \"seven\":\n                    numsInt[i] =\
    \ 7;\n                    break;\n                case \"eight\":\n          \
    \          numsInt[i] = 8;\n                    break;\n                case \"\
    nine\":\n                    numsInt[i] = 9;\n                    break;\n   \
    \         }\n        }\n        Array.Sort(numsInt);\n        string result =\
    \ \"\";\n        for (int i = 0; i < numsInt.Length; i++) {\n            switch\
    \ (numsInt[i]) {\n                case 0:\n                    result += \"zero\
    \ \";\n                    break;\n                case 1:\n                 \
    \   result += \"one \";\n                    break;\n                case 2:\n\
    \                    result += \"two \";\n                    break;\n       \
    \         case 3:\n                    result += \"three \";\n               \
    \     break;\n                case 4:\n                    result += \"four \"\
    ;\n                    break;\n                case 5:\n                    result\
    \ += \"five \";\n                    break;\n                case 6:\n       \
    \             result += \"six \";\n                    break;\n              \
    \  case 7:\n                    result += \"seven \";\n                    break;\n\
    \                case 8:\n                    result += \"eight \";\n        \
    \            break;\n                case 9:\n                    result += \"\
    nine \";\n                    break;\n            }\n        }\n        return\
    \ result.Trim();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\
    \")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\"\
    )));\n    Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five\
    \ nine\")));\n    Debug.Assert(SortNumbers((\"five zero four seven nine eight\"\
    )).Equals((\"zero four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"\
    six five four three two one zero\")).Equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <ea47b1a39139465b9f54fcc1cf074b49>:0 \n"
  stdout: ''
  timestamp: 1659798035
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        // Your code goes here\n        return \"\";\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\"\
    )));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"\
    three five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"\
    five zero four seven nine eight\")).Equals((\"zero four five seven eight nine\"\
    )));\n    Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2e593562849b4f7f9c991456219b3cbb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2e593562849b4f7f9c991456219b3cbb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798035
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        var numbersArray = numbers.Split(' ');\n        var numbersInt =\
    \ new int[numbersArray.Length];\n        for (int i = 0; i < numbersArray.Length;\
    \ i++) {\n            switch (numbersArray[i]) {\n                case \"zero\"\
    :\n                    numbersInt[i] = 0;\n                    break;\n      \
    \          case \"one\":\n                    numbersInt[i] = 1;\n           \
    \         break;\n                case \"two\":\n                    numbersInt[i]\
    \ = 2;\n                    break;\n                case \"three\":\n        \
    \            numbersInt[i] = 3;\n                    break;\n                case\
    \ \"four\":\n                    numbersInt[i] = 4;\n                    break;\n\
    \                case \"five\":\n                    numbersInt[i] = 5;\n    \
    \                break;\n                case \"six\":\n                    numbersInt[i]\
    \ = 6;\n                    break;\n                case \"seven\":\n        \
    \            numbersInt[i] = 7;\n                    break;\n                case\
    \ \"eight\":\n                    numbersInt[i] = 8;\n                    break;\n\
    \                case \"nine\":\n                    numbersInt[i] = 9;\n    \
    \                break;\n            }\n        }\n        Array.Sort(numbersInt);\n\
    \        var result = \"\";\n        for (int i = 0; i < numbersInt.Length; i++)\
    \ {\n            switch (numbersInt[i]) {\n                case 0:\n         \
    \           result += \"zero \";\n                    break;\n               \
    \ case 1:\n                    result += \"one \";\n                    break;\n\
    \                case 2:\n                    result += \"two \";\n          \
    \          break;\n                case 3:\n                    result += \"three\
    \ \";\n                    break;\n                case 4:\n                 \
    \   result += \"four \";\n                    break;\n                case 5:\n\
    \                    result += \"five \";\n                    break;\n      \
    \          case 6:\n                    result += \"six \";\n                \
    \    break;\n                case 7:\n                    result += \"seven \"\
    ;\n                    break;\n                case 8:\n                    result\
    \ += \"eight \";\n                    break;\n                case 9:\n      \
    \              result += \"nine \";\n                    break;\n            }\n\
    \        }\n        return result.Trim();\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"\
    three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three five nine\"\
    )).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five zero\
    \ four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n\
    \    Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <33b95125f24c4d59a8cf3938325b2e3b>:0 \n"
  stdout: ''
  timestamp: 1659798036
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        string[] nums = numbers.Split(' ');\n        int[] numsInt = new\
    \ int[nums.Length];\n        for (int i = 0; i < nums.Length; i++) {\n       \
    \     switch (nums[i]) {\n                case \"zero\":\n                   \
    \ numsInt[i] = 0;\n                    break;\n                case \"one\":\n\
    \                    numsInt[i] = 1;\n                    break;\n           \
    \     case \"two\":\n                    numsInt[i] = 2;\n                   \
    \ break;\n                case \"three\":\n                    numsInt[i] = 3;\n\
    \                    break;\n                case \"four\":\n                \
    \    numsInt[i] = 4;\n                    break;\n                case \"five\"\
    :\n                    numsInt[i] = 5;\n                    break;\n         \
    \       case \"six\":\n                    numsInt[i] = 6;\n                 \
    \   break;\n                case \"seven\":\n                    numsInt[i] =\
    \ 7;\n                    break;\n                case \"eight\":\n          \
    \          numsInt[i] = 8;\n                    break;\n                case \"\
    nine\":\n                    numsInt[i] = 9;\n                    break;\n   \
    \         }\n        }\n        Array.Sort(numsInt);\n        string[] numsString\
    \ = new string[nums.Length];\n        for (int i = 0; i < nums.Length; i++) {\n\
    \            switch (numsInt[i]) {\n                case 0:\n                \
    \    numsString[i] = \"zero\";\n                    break;\n                case\
    \ 1:\n                    numsString[i] = \"one\";\n                    break;\n\
    \                case 2:\n                    numsString[i] = \"two\";\n     \
    \               break;\n                case 3:\n                    numsString[i]\
    \ = \"three\";\n                    break;\n                case 4:\n        \
    \            numsString[i] = \"four\";\n                    break;\n         \
    \       case 5:\n                    numsString[i] = \"five\";\n             \
    \       break;\n                case 6:\n                    numsString[i] = \"\
    six\";\n                    break;\n                case 7:\n                \
    \    numsString[i] = \"seven\";\n                    break;\n                case\
    \ 8:\n                    numsString[i] =\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"\
    three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three five nine\"\
    )).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five zero\
    \ four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n\
    \    Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpsx5wyds2.cs(80,36): error CS1525: Invalid expression term ''}''

    /tmp/tmpsx5wyds2.cs(80,36): error CS1002: ; expected

    /tmp/tmpsx5wyds2.cs(82,5): error CS0106: The modifier ''public'' is not valid
    for this item

    /tmp/tmpsx5wyds2.cs(90,2): error CS1513: } expected

    '
  timestamp: 1659798035
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        // TODO: Implement me\n        return \"\";\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\"\
    )));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"\
    three five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"\
    five zero four seven nine eight\")).Equals((\"zero four five seven eight nine\"\
    )));\n    Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <90b234f22cdb440fa1cf7d6dad6223b7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <90b234f22cdb440fa1cf7d6dad6223b7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798035
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        // TODO: Implement this function\n        return \"\";\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\
    \")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\"\
    )));\n    Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five\
    \ nine\")));\n    Debug.Assert(SortNumbers((\"five zero four seven nine eight\"\
    )).Equals((\"zero four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"\
    six five four three two one zero\")).Equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <959a76934a79427383ca9be1749b050c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <959a76934a79427383ca9be1749b050c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798035
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        // Your code goes here\n        return \"\";\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\"\
    )));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"\
    three five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"\
    five zero four seven nine eight\")).Equals((\"zero four five seven eight nine\"\
    )));\n    Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2e593562849b4f7f9c991456219b3cbb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2e593562849b4f7f9c991456219b3cbb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798035
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        var nums = numbers.Split(' ');\n        Array.Sort(nums);\n     \
    \   return string.Join(\" \", nums);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"\
    three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three five nine\"\
    )).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five zero\
    \ four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n\
    \    Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a52eb78c127b4f7b966d1276966c9022>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a52eb78c127b4f7b966d1276966c9022>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798035
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        var nums = numbers.Split(' ').Select(x => int.Parse(x)).OrderBy(x\
    \ => x).Select(x => x.ToString()).ToArray();\n        return string.Join(\" \"\
    , nums);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\
    \")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\"\
    )));\n    Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five\
    \ nine\")));\n    Debug.Assert(SortNumbers((\"five zero four seven nine eight\"\
    )).Equals((\"zero four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"\
    six five four three two one zero\")).Equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in\
    \ a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean\
    \ overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int32.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem+<>c.<SortNumbers>b__0_0 (System.String x) [0x00000] in <dc44429ce7df4cf69f56b1678990ebd2>:0\
    \ \n  at System.Linq.Enumerable+SelectArrayIterator`2[TSource,TResult].ToArray\
    \ () [0x00012] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Buffer`1[TElement]..ctor\
    \ (System.Collections.Generic.IEnumerable`1[T] source) [0x0000a] in <e540098dd111461e919c5863f6975c29>:0\
    \ \n  at System.Linq.OrderedEnumerable`1+<GetEnumerator>d__3[TElement].MoveNext\
    \ () [0x0001e] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable+SelectIPartitionIterator`2[TSource,TResult].PreallocatingToArray\
    \ (System.Int32 count) [0x00035] in <e540098dd111461e919c5863f6975c29>:0 \n  at\
    \ System.Linq.Enumerable+SelectIPartitionIterator`2[TSource,TResult].ToArray ()\
    \ [0x00023] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable.ToArray[TSource]\
    \ (System.Collections.Generic.IEnumerable`1[T] source) [0x0001f] in <e540098dd111461e919c5863f6975c29>:0\
    \ \n  at Problem.SortNumbers (System.String numbers) [0x00076] in <dc44429ce7df4cf69f56b1678990ebd2>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00001] in <dc44429ce7df4cf69f56b1678990ebd2>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.FormatException: Input string was\
    \ not in a correct format.\n  at System.Number.ThrowOverflowOrFormatException\
    \ (System.Boolean overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberS"
  stdout: ''
  timestamp: 1659798034
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        string[] nums = numbers.Split(' ');\n        int[] numsInt = new\
    \ int[nums.Length];\n        for (int i = 0; i < nums.Length; i++) {\n       \
    \     switch (nums[i]) {\n                case \"zero\":\n                   \
    \ numsInt[i] = 0;\n                    break;\n                case \"one\":\n\
    \                    numsInt[i] = 1;\n                    break;\n           \
    \     case \"two\":\n                    numsInt[i] = 2;\n                   \
    \ break;\n                case \"three\":\n                    numsInt[i] = 3;\n\
    \                    break;\n                case \"four\":\n                \
    \    numsInt[i] = 4;\n                    break;\n                case \"five\"\
    :\n                    numsInt[i] = 5;\n                    break;\n         \
    \       case \"six\":\n                    numsInt[i] = 6;\n                 \
    \   break;\n                case \"seven\":\n                    numsInt[i] =\
    \ 7;\n                    break;\n                case \"eight\":\n          \
    \          numsInt[i] = 8;\n                    break;\n                case \"\
    nine\":\n                    numsInt[i] = 9;\n                    break;\n   \
    \         }\n        }\n        Array.Sort(numsInt);\n        string[] numsStr\
    \ = new string[nums.Length];\n        for (int i = 0; i < nums.Length; i++) {\n\
    \            switch (numsInt[i]) {\n                case 0:\n                \
    \    numsStr[i] = \"zero\";\n                    break;\n                case\
    \ 1:\n                    numsStr[i] = \"one\";\n                    break;\n\
    \                case 2:\n                    numsStr[i] = \"two\";\n        \
    \            break;\n                case 3:\n                    numsStr[i] =\
    \ \"three\";\n                    break;\n                case 4:\n          \
    \          numsStr[i] = \"four\";\n                    break;\n              \
    \  case 5:\n                    numsStr[i] = \"five\";\n                    break;\n\
    \                case 6:\n                    numsStr[i] = \"six\";\n        \
    \            break;\n                case 7:\n                    numsStr[i] =\
    \ \"seven\";\n                    break;\n                case 8:\n          \
    \          numsStr[i] =\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"\
    three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three five nine\"\
    )).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five zero\
    \ four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n\
    \    Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp_ruqmnkb.cs(80,33): error CS1525: Invalid expression term ''}''

    /tmp/tmp_ruqmnkb.cs(80,33): error CS1002: ; expected

    /tmp/tmp_ruqmnkb.cs(82,5): error CS0106: The modifier ''public'' is not valid
    for this item

    /tmp/tmp_ruqmnkb.cs(90,2): error CS1513: } expected

    '
  timestamp: 1659798034
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        string[] nums = numbers.Split(' ');\n        Array.Sort(nums);\n\
    \        return string.Join(\" \", nums);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"\
    three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three five nine\"\
    )).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five zero\
    \ four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n\
    \    Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <92912d111b404a80ab493e004c0355c2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <92912d111b404a80ab493e004c0355c2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798035
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        // TODO: Implement this function\n        return \"\";\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\
    \")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\"\
    )));\n    Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five\
    \ nine\")));\n    Debug.Assert(SortNumbers((\"five zero four seven nine eight\"\
    )).Equals((\"zero four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"\
    six five four three two one zero\")).Equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <959a76934a79427383ca9be1749b050c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <959a76934a79427383ca9be1749b050c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798035
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        var nums = numbers.Split(' ').Select(x => x.ToLower()).ToArray();\n\
    \        var nums2 = new int[nums.Length];\n        for (int i = 0; i < nums.Length;\
    \ i++) {\n            switch (nums[i]) {\n                case \"zero\": nums2[i]\
    \ = 0; break;\n                case \"one\": nums2[i] = 1; break;\n          \
    \      case \"two\": nums2[i] = 2; break;\n                case \"three\": nums2[i]\
    \ = 3; break;\n                case \"four\": nums2[i] = 4; break;\n         \
    \       case \"five\": nums2[i] = 5; break;\n                case \"six\": nums2[i]\
    \ = 6; break;\n                case \"seven\": nums2[i] = 7; break;\n        \
    \        case \"eight\": nums2[i] = 8; break;\n                case \"nine\":\
    \ nums2[i] = 9; break;\n            }\n        }\n        Array.Sort(nums2);\n\
    \        var nums3 = new string[nums2.Length];\n        for (int i = 0; i < nums2.Length;\
    \ i++) {\n            switch (nums2[i]) {\n                case 0: nums3[i] =\
    \ \"zero\"; break;\n                case 1: nums3[i] = \"one\"; break;\n     \
    \           case 2: nums3[i] = \"two\"; break;\n                case 3: nums3[i]\
    \ = \"three\"; break;\n                case 4: nums3[i] = \"four\"; break;\n \
    \               case 5: nums3[i] = \"five\"; break;\n                case 6: nums3[i]\
    \ = \"six\"; break;\n                case 7: nums3[i] = \"seven\"; break;\n  \
    \              case 8: nums3[i] = \"eight\"; break;\n                case 9: nums3[i]\
    \ = \"nine\"; break;\n            }\n        }\n        return string.Join(\"\
    \ \", nums3);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\
    \")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\"\
    )));\n    Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five\
    \ nine\")));\n    Debug.Assert(SortNumbers((\"five zero four seven nine eight\"\
    )).Equals((\"zero four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"\
    six five four three two one zero\")).Equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <52ffed2e92c64f2bb681e6bac7b4b598>:0 \n"
  stdout: ''
  timestamp: 1659798036
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        string[] nums = numbers.Split(' ');\n        int[] numsInt = new\
    \ int[nums.Length];\n        for (int i = 0; i < nums.Length; i++) {\n       \
    \     switch (nums[i]) {\n                case \"zero\":\n                   \
    \ numsInt[i] = 0;\n                    break;\n                case \"one\":\n\
    \                    numsInt[i] = 1;\n                    break;\n           \
    \     case \"two\":\n                    numsInt[i] = 2;\n                   \
    \ break;\n                case \"three\":\n                    numsInt[i] = 3;\n\
    \                    break;\n                case \"four\":\n                \
    \    numsInt[i] = 4;\n                    break;\n                case \"five\"\
    :\n                    numsInt[i] = 5;\n                    break;\n         \
    \       case \"six\":\n                    numsInt[i] = 6;\n                 \
    \   break;\n                case \"seven\":\n                    numsInt[i] =\
    \ 7;\n                    break;\n                case \"eight\":\n          \
    \          numsInt[i] = 8;\n                    break;\n                case \"\
    nine\":\n                    numsInt[i] = 9;\n                    break;\n   \
    \         }\n        }\n        Array.Sort(numsInt);\n        for (int i = 0;\
    \ i < nums.Length; i++) {\n            switch (numsInt[i]) {\n               \
    \ case 0:\n                    nums[i] = \"zero\";\n                    break;\n\
    \                case 1:\n                    nums[i] = \"one\";\n           \
    \         break;\n                case 2:\n                    nums[i] = \"two\"\
    ;\n                    break;\n                case 3:\n                    nums[i]\
    \ = \"three\";\n                    break;\n                case 4:\n        \
    \            nums[i] = \"four\";\n                    break;\n               \
    \ case 5:\n                    nums[i] = \"five\";\n                    break;\n\
    \                case 6:\n                    nums[i] = \"six\";\n           \
    \         break;\n                case 7:\n                    nums[i] = \"seven\"\
    ;\n                    break;\n                case 8:\n                    nums[i]\
    \ = \"eight\";\n                    break;\n                case 9:\n        \
    \            nums[i] = \"nine\";\n                   \n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\"\
    )));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"\
    three five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"\
    five zero four seven nine eight\")).Equals((\"zero four five seven eight nine\"\
    )));\n    Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmplano5_jc.cs(85,5): error CS0106: The modifier ''public'' is not valid
    for this item

    /tmp/tmplano5_jc.cs(93,2): error CS1513: } expected

    '
  timestamp: 1659798034
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        var nums = numbers.Split(' ');\n        var numsInt = new int[nums.Length];\n\
    \        for (int i = 0; i < nums.Length; i++) {\n            numsInt[i] = Convert.ToInt32(nums[i]);\n\
    \        }\n        Array.Sort(numsInt);\n        var result = \"\";\n       \
    \ for (int i = 0; i < numsInt.Length; i++) {\n            result += numsInt[i].ToString()\
    \ + \" \";\n        }\n        return result.Trim();\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\"\
    )));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"\
    three five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"\
    five zero four seven nine eight\")).Equals((\"zero four five seven eight nine\"\
    )));\n    Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in\
    \ a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean\
    \ overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int32.Parse (System.String s, System.IFormatProvider provider)\
    \ [0x00017] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at System.Convert.ToInt32\
    \ (System.String value) [0x0000b] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n \
    \ at Problem.SortNumbers (System.String numbers) [0x00019] in <e89f747363d44ca9adb925cf124284d0>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00001] in <e89f747363d44ca9adb925cf124284d0>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.FormatException: Input string was\
    \ not in a correct format.\n  at System.Number.ThrowOverflowOrFormatException\
    \ (System.Boolean overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int32.Parse (System.String s, System.IFormatProvider provider)\
    \ [0x00017] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at System.Convert.ToInt32\
    \ (System.String value) [0x0000b] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n \
    \ at Problem.SortNumbers (System.String numbers) [0x00019] in <e89f747363d44ca9adb925cf124284d0>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00001] in <e89f747363d44ca9adb925cf124284d0>:0\
    \ \n"
  stdout: ''
  timestamp: 1659798036
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        string[] nums = numbers.Split(' ');\n        int[] nums2 = new int[nums.Length];\n\
    \        for (int i = 0; i < nums.Length; i++) {\n            nums2[i] = int.Parse(nums[i]);\n\
    \        }\n        Array.Sort(nums2);\n        string result = \"\";\n      \
    \  for (int i = 0; i < nums2.Length; i++) {\n            result += nums2[i] +\
    \ \" \";\n        }\n        return result.Trim();\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n\
    \    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"\
    three five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"\
    five zero four seven nine eight\")).Equals((\"zero four five seven eight nine\"\
    )));\n    Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in\
    \ a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean\
    \ overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int32.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.SortNumbers (System.String numbers) [0x00019] in <c86b946bc2584c1f9ef33507aee3cd4a>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00001] in <c86b946bc2584c1f9ef33507aee3cd4a>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.FormatException: Input string was\
    \ not in a correct format.\n  at System.Number.ThrowOverflowOrFormatException\
    \ (System.Boolean overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int32.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.SortNumbers (System.String numbers) [0x00019] in <c86b946bc2584c1f9ef33507aee3cd4a>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00001] in <c86b946bc2584c1f9ef33507aee3cd4a>:0\
    \ \n"
  stdout: ''
  timestamp: 1659798035
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        string[] nums = numbers.Split(' ');\n        int[] nums2 = new int[nums.Length];\n\
    \        for (int i = 0; i < nums.Length; i++) {\n            switch (nums[i])\
    \ {\n                case \"zero\":\n                    nums2[i] = 0;\n     \
    \               break;\n                case \"one\":\n                    nums2[i]\
    \ = 1;\n                    break;\n                case \"two\":\n          \
    \          nums2[i] = 2;\n                    break;\n                case \"\
    three\":\n                    nums2[i] = 3;\n                    break;\n    \
    \            case \"four\":\n                    nums2[i] = 4;\n             \
    \       break;\n                case \"five\":\n                    nums2[i] =\
    \ 5;\n                    break;\n                case \"six\":\n            \
    \        nums2[i] = 6;\n                    break;\n                case \"seven\"\
    :\n                    nums2[i] = 7;\n                    break;\n           \
    \     case \"eight\":\n                    nums2[i] = 8;\n                   \
    \ break;\n                case \"nine\":\n                    nums2[i] = 9;\n\
    \                    break;\n            }\n        }\n        Array.Sort(nums2);\n\
    \        for (int i = 0; i < nums.Length; i++) {\n            switch (nums2[i])\
    \ {\n                case 0:\n                    nums[i] = \"zero\";\n      \
    \              break;\n                case 1:\n                    nums[i] =\
    \ \"one\";\n                    break;\n                case 2:\n            \
    \        nums[i] = \"two\";\n                    break;\n                case\
    \ 3:\n                    nums[i] = \"three\";\n                    break;\n \
    \               case 4:\n                    nums[i] = \"four\";\n           \
    \         break;\n                case 5:\n                    nums[i] = \"five\"\
    ;\n                    break;\n                case 6:\n                    nums[i]\
    \ = \"six\";\n                    break;\n                case 7:\n          \
    \          nums[i] = \"seven\";\n                    break;\n                case\
    \ 8:\n                    nums[i] = \"eight\";\n                    break;\n \
    \               case 9:\n                    nums[i] = \"nine\";\n           \
    \        \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\
    \")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\"\
    )));\n    Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five\
    \ nine\")));\n    Debug.Assert(SortNumbers((\"five zero four seven nine eight\"\
    )).Equals((\"zero four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"\
    six five four three two one zero\")).Equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp8jpzi307.cs(85,5): error CS0106: The modifier ''public'' is not valid
    for this item

    /tmp/tmp8jpzi307.cs(93,2): error CS1513: } expected

    '
  timestamp: 1659798034
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        // Your code goes here\n        return \"\";\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\"\
    )));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"\
    three five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"\
    five zero four seven nine eight\")).Equals((\"zero four five seven eight nine\"\
    )));\n    Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2e593562849b4f7f9c991456219b3cbb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2e593562849b4f7f9c991456219b3cbb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798035
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        string[] nums = numbers.Split(' ');\n        int[] nums_int = new\
    \ int[nums.Length];\n        for (int i = 0; i < nums.Length; i++) {\n       \
    \     nums_int[i] = Convert.ToInt32(nums[i]);\n        }\n        Array.Sort(nums_int);\n\
    \        string result = \"\";\n        for (int i = 0; i < nums_int.Length; i++)\
    \ {\n            result += nums_int[i].ToString() + \" \";\n        }\n      \
    \  return result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\
    \")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\"\
    )));\n    Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five\
    \ nine\")));\n    Debug.Assert(SortNumbers((\"five zero four seven nine eight\"\
    )).Equals((\"zero four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"\
    six five four three two one zero\")).Equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in\
    \ a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean\
    \ overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int32.Parse (System.String s, System.IFormatProvider provider)\
    \ [0x00017] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at System.Convert.ToInt32\
    \ (System.String value) [0x0000b] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n \
    \ at Problem.SortNumbers (System.String numbers) [0x00019] in <8ef62a37d792468b8074ca7a399bea10>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00001] in <8ef62a37d792468b8074ca7a399bea10>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.FormatException: Input string was\
    \ not in a correct format.\n  at System.Number.ThrowOverflowOrFormatException\
    \ (System.Boolean overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int32.Parse (System.String s, System.IFormatProvider provider)\
    \ [0x00017] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at System.Convert.ToInt32\
    \ (System.String value) [0x0000b] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n \
    \ at Problem.SortNumbers (System.String numbers) [0x00019] in <8ef62a37d792468b8074ca7a399bea10>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00001] in <8ef62a37d792468b8074ca7a399bea10>:0\
    \ \n"
  stdout: ''
  timestamp: 1659798036
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        string[] nums = numbers.Split(' ');\n        int[] numsInt = new\
    \ int[nums.Length];\n        for (int i = 0; i < nums.Length; i++) {\n       \
    \     numsInt[i] = int.Parse(nums[i]);\n        }\n        Array.Sort(numsInt);\n\
    \        string result = \"\";\n        for (int i = 0; i < numsInt.Length; i++)\
    \ {\n            result += numsInt[i].ToString() + \" \";\n        }\n       \
    \ return result.Trim();\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"\
    three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three five nine\"\
    )).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five zero\
    \ four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n\
    \    Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in\
    \ a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean\
    \ overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int32.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.SortNumbers (System.String numbers) [0x00019] in <ad2c0a22337a42ccb55d660ba0591be7>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00001] in <ad2c0a22337a42ccb55d660ba0591be7>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.FormatException: Input string was\
    \ not in a correct format.\n  at System.Number.ThrowOverflowOrFormatException\
    \ (System.Boolean overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int32.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem.SortNumbers (System.String numbers) [0x00019] in <ad2c0a22337a42ccb55d660ba0591be7>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00001] in <ad2c0a22337a42ccb55d660ba0591be7>:0\
    \ \n"
  stdout: ''
  timestamp: 1659798036
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        // TODO: Implement this method\n        return \"\";\n    }\n   \
    \ public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\"\
    )).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\"\
    )));\n    Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five\
    \ nine\")));\n    Debug.Assert(SortNumbers((\"five zero four seven nine eight\"\
    )).Equals((\"zero four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"\
    six five four three two one zero\")).Equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e3990971b902448d9dacca3de990d1c2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e3990971b902448d9dacca3de990d1c2>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798036
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        var nums = numbers.Split(' ').Select(s => int.Parse(s)).OrderBy(n\
    \ => n).Select(n => n.ToString()).ToArray();\n        return string.Join(\" \"\
    , nums);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\
    \")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\"\
    )));\n    Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five\
    \ nine\")));\n    Debug.Assert(SortNumbers((\"five zero four seven nine eight\"\
    )).Equals((\"zero four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"\
    six five four three two one zero\")).Equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in\
    \ a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean\
    \ overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int32.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem+<>c.<SortNumbers>b__0_0 (System.String s) [0x00000] in <dbb89fb0f6da460699eb81a6b5b4f582>:0\
    \ \n  at System.Linq.Enumerable+SelectArrayIterator`2[TSource,TResult].ToArray\
    \ () [0x00012] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Buffer`1[TElement]..ctor\
    \ (System.Collections.Generic.IEnumerable`1[T] source) [0x0000a] in <e540098dd111461e919c5863f6975c29>:0\
    \ \n  at System.Linq.OrderedEnumerable`1+<GetEnumerator>d__3[TElement].MoveNext\
    \ () [0x0001e] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable+SelectIPartitionIterator`2[TSource,TResult].PreallocatingToArray\
    \ (System.Int32 count) [0x00035] in <e540098dd111461e919c5863f6975c29>:0 \n  at\
    \ System.Linq.Enumerable+SelectIPartitionIterator`2[TSource,TResult].ToArray ()\
    \ [0x00023] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable.ToArray[TSource]\
    \ (System.Collections.Generic.IEnumerable`1[T] source) [0x0001f] in <e540098dd111461e919c5863f6975c29>:0\
    \ \n  at Problem.SortNumbers (System.String numbers) [0x00076] in <dbb89fb0f6da460699eb81a6b5b4f582>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00001] in <dbb89fb0f6da460699eb81a6b5b4f582>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.FormatException: Input string was\
    \ not in a correct format.\n  at System.Number.ThrowOverflowOrFormatException\
    \ (System.Boolean overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberS"
  stdout: ''
  timestamp: 1659798036
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        var nums = numbers.Split(' ').Select(x => int.Parse(x)).OrderBy(x\
    \ => x).Select(x => x.ToString()).ToArray();\n        return string.Join(\" \"\
    , nums);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\
    \")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\"\
    )));\n    Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five\
    \ nine\")));\n    Debug.Assert(SortNumbers((\"five zero four seven nine eight\"\
    )).Equals((\"zero four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"\
    six five four three two one zero\")).Equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in\
    \ a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean\
    \ overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int32.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem+<>c.<SortNumbers>b__0_0 (System.String x) [0x00000] in <dc44429ce7df4cf69f56b1678990ebd2>:0\
    \ \n  at System.Linq.Enumerable+SelectArrayIterator`2[TSource,TResult].ToArray\
    \ () [0x00012] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Buffer`1[TElement]..ctor\
    \ (System.Collections.Generic.IEnumerable`1[T] source) [0x0000a] in <e540098dd111461e919c5863f6975c29>:0\
    \ \n  at System.Linq.OrderedEnumerable`1+<GetEnumerator>d__3[TElement].MoveNext\
    \ () [0x0001e] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable+SelectIPartitionIterator`2[TSource,TResult].PreallocatingToArray\
    \ (System.Int32 count) [0x00035] in <e540098dd111461e919c5863f6975c29>:0 \n  at\
    \ System.Linq.Enumerable+SelectIPartitionIterator`2[TSource,TResult].ToArray ()\
    \ [0x00023] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable.ToArray[TSource]\
    \ (System.Collections.Generic.IEnumerable`1[T] source) [0x0001f] in <e540098dd111461e919c5863f6975c29>:0\
    \ \n  at Problem.SortNumbers (System.String numbers) [0x00076] in <dc44429ce7df4cf69f56b1678990ebd2>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00001] in <dc44429ce7df4cf69f56b1678990ebd2>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.FormatException: Input string was\
    \ not in a correct format.\n  at System.Number.ThrowOverflowOrFormatException\
    \ (System.Boolean overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberS"
  stdout: ''
  timestamp: 1659798034
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        var nums = numbers.Split(' ').Select(s => (int)Enum.Parse(typeof(Numbers),\
    \ s)).OrderBy(i => i).Select(i => (Numbers)i).Select(n => n.ToString());\n   \
    \     return string.Join(\" \", nums);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"\
    three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three five nine\"\
    )).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five zero\
    \ four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n\
    \    Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp1ondieh6.cs(15,74): error CS0246: The type or namespace name ''Numbers''
    could not be found (are you missing a using directive or an assembly reference?)

    /tmp/tmp1ondieh6.cs(15,117): error CS0246: The type or namespace name ''Numbers''
    could not be found (are you missing a using directive or an assembly reference?)

    '
  timestamp: 1659798036
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        // Your code goes here\n        return \"\";\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\"\
    )));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"\
    three five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"\
    five zero four seven nine eight\")).Equals((\"zero four five seven eight nine\"\
    )));\n    Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2e593562849b4f7f9c991456219b3cbb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2e593562849b4f7f9c991456219b3cbb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798035
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        string[] nums = numbers.Split(' ');\n        int[] nums2 = new int[nums.Length];\n\
    \        for (int i = 0; i < nums.Length; i++) {\n            switch (nums[i])\
    \ {\n                case \"zero\":\n                    nums2[i] = 0;\n     \
    \               break;\n                case \"one\":\n                    nums2[i]\
    \ = 1;\n                    break;\n                case \"two\":\n          \
    \          nums2[i] = 2;\n                    break;\n                case \"\
    three\":\n                    nums2[i] = 3;\n                    break;\n    \
    \            case \"four\":\n                    nums2[i] = 4;\n             \
    \       break;\n                case \"five\":\n                    nums2[i] =\
    \ 5;\n                    break;\n                case \"six\":\n            \
    \        nums2[i] = 6;\n                    break;\n                case \"seven\"\
    :\n                    nums2[i] = 7;\n                    break;\n           \
    \     case \"eight\":\n                    nums2[i] = 8;\n                   \
    \ break;\n                case \"nine\":\n                    nums2[i] = 9;\n\
    \                    break;\n            }\n        }\n        Array.Sort(nums2);\n\
    \        for (int i = 0; i < nums.Length; i++) {\n            switch (nums2[i])\
    \ {\n                case 0:\n                    nums[i] = \"zero\";\n      \
    \              break;\n                case 1:\n                    nums[i] =\
    \ \"one\";\n                    break;\n                case 2:\n            \
    \        nums[i] = \"two\";\n                    break;\n                case\
    \ 3:\n                    nums[i] = \"three\";\n                    break;\n \
    \               case 4:\n                    nums[i] = \"four\";\n           \
    \         break;\n                case 5:\n                    nums[i] = \"five\"\
    ;\n                    break;\n                case 6:\n                    nums[i]\
    \ = \"six\";\n                    break;\n                case 7:\n          \
    \          nums[i] = \"seven\";\n                    break;\n                case\
    \ 8:\n                    nums[i] = \"eight\";\n                    break;\n \
    \               case 9:\n                    nums[i] = \"nine\";\n           \
    \        \n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\
    \")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\"\
    )));\n    Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five\
    \ nine\")));\n    Debug.Assert(SortNumbers((\"five zero four seven nine eight\"\
    )).Equals((\"zero four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"\
    six five four three two one zero\")).Equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp8jpzi307.cs(85,5): error CS0106: The modifier ''public'' is not valid
    for this item

    /tmp/tmp8jpzi307.cs(93,2): error CS1513: } expected

    '
  timestamp: 1659798034
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        // Your code goes here\n        return \"\";\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\"\
    )));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"\
    three five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"\
    five zero four seven nine eight\")).Equals((\"zero four five seven eight nine\"\
    )));\n    Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2e593562849b4f7f9c991456219b3cbb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2e593562849b4f7f9c991456219b3cbb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798035
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        string[] nums = numbers.Split(' ');\n        int[] numsInt = new\
    \ int[nums.Length];\n        for (int i = 0; i < nums.Length; i++) {\n       \
    \     switch (nums[i]) {\n                case \"zero\":\n                   \
    \ numsInt[i] = 0;\n                    break;\n                case \"one\":\n\
    \                    numsInt[i] = 1;\n                    break;\n           \
    \     case \"two\":\n                    numsInt[i] = 2;\n                   \
    \ break;\n                case \"three\":\n                    numsInt[i] = 3;\n\
    \                    break;\n                case \"four\":\n                \
    \    numsInt[i] = 4;\n                    break;\n                case \"five\"\
    :\n                    numsInt[i] = 5;\n                    break;\n         \
    \       case \"six\":\n                    numsInt[i] = 6;\n                 \
    \   break;\n                case \"seven\":\n                    numsInt[i] =\
    \ 7;\n                    break;\n                case \"eight\":\n          \
    \          numsInt[i] = 8;\n                    break;\n                case \"\
    nine\":\n                    numsInt[i] = 9;\n                    break;\n   \
    \         }\n        }\n        Array.Sort(numsInt);\n        string[] numsStr\
    \ = new string[nums.Length];\n        for (int i = 0; i < nums.Length; i++) {\n\
    \            switch (numsInt[i]) {\n                case 0:\n                \
    \    numsStr[i] = \"zero\";\n                    break;\n                case\
    \ 1:\n                    numsStr[i] = \"one\";\n                    break;\n\
    \                case 2:\n                    numsStr[i] = \"two\";\n        \
    \            break;\n                case 3:\n                    numsStr[i] =\
    \ \"three\";\n                    break;\n                case 4:\n          \
    \          numsStr[i] = \"four\";\n                    break;\n              \
    \  case 5:\n                    numsStr[i] = \"five\";\n                    break;\n\
    \                case 6:\n                    numsStr[i] = \"six\";\n        \
    \            break;\n                case 7:\n                    numsStr[i] =\
    \ \"seven\";\n                    break;\n                case 8:\n          \
    \          numsStr[i] =\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"\
    three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three five nine\"\
    )).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five zero\
    \ four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n\
    \    Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp_ruqmnkb.cs(80,33): error CS1525: Invalid expression term ''}''

    /tmp/tmp_ruqmnkb.cs(80,33): error CS1002: ; expected

    /tmp/tmp_ruqmnkb.cs(82,5): error CS0106: The modifier ''public'' is not valid
    for this item

    /tmp/tmp_ruqmnkb.cs(90,2): error CS1513: } expected

    '
  timestamp: 1659798034
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        var nums = numbers.Split(' ').Select(x => int.Parse(x)).OrderBy(x\
    \ => x).Select(x => x.ToString()).ToArray();\n        return string.Join(\" \"\
    , nums);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\
    \")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\"\
    )));\n    Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five\
    \ nine\")));\n    Debug.Assert(SortNumbers((\"five zero four seven nine eight\"\
    )).Equals((\"zero four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"\
    six five four three two one zero\")).Equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in\
    \ a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean\
    \ overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int32.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem+<>c.<SortNumbers>b__0_0 (System.String x) [0x00000] in <dc44429ce7df4cf69f56b1678990ebd2>:0\
    \ \n  at System.Linq.Enumerable+SelectArrayIterator`2[TSource,TResult].ToArray\
    \ () [0x00012] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Buffer`1[TElement]..ctor\
    \ (System.Collections.Generic.IEnumerable`1[T] source) [0x0000a] in <e540098dd111461e919c5863f6975c29>:0\
    \ \n  at System.Linq.OrderedEnumerable`1+<GetEnumerator>d__3[TElement].MoveNext\
    \ () [0x0001e] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable+SelectIPartitionIterator`2[TSource,TResult].PreallocatingToArray\
    \ (System.Int32 count) [0x00035] in <e540098dd111461e919c5863f6975c29>:0 \n  at\
    \ System.Linq.Enumerable+SelectIPartitionIterator`2[TSource,TResult].ToArray ()\
    \ [0x00023] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable.ToArray[TSource]\
    \ (System.Collections.Generic.IEnumerable`1[T] source) [0x0001f] in <e540098dd111461e919c5863f6975c29>:0\
    \ \n  at Problem.SortNumbers (System.String numbers) [0x00076] in <dc44429ce7df4cf69f56b1678990ebd2>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00001] in <dc44429ce7df4cf69f56b1678990ebd2>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.FormatException: Input string was\
    \ not in a correct format.\n  at System.Number.ThrowOverflowOrFormatException\
    \ (System.Boolean overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberS"
  stdout: ''
  timestamp: 1659798034
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        int[] nums = new int[10];\n        string[] words = numbers.Split('\
    \ ');\n        foreach (string word in words) {\n            switch (word) {\n\
    \                case \"zero\":\n                    nums[0]++;\n            \
    \        break;\n                case \"one\":\n                    nums[1]++;\n\
    \                    break;\n                case \"two\":\n                 \
    \   nums[2]++;\n                    break;\n                case \"three\":\n\
    \                    nums[3]++;\n                    break;\n                case\
    \ \"four\":\n                    nums[4]++;\n                    break;\n    \
    \            case \"five\":\n                    nums[5]++;\n                \
    \    break;\n                case \"six\":\n                    nums[6]++;\n \
    \                   break;\n                case \"seven\":\n                \
    \    nums[7]++;\n                    break;\n                case \"eight\":\n\
    \                    nums[8]++;\n                    break;\n                case\
    \ \"nine\":\n                    nums[9]++;\n                    break;\n    \
    \        }\n        }\n        string result = \"\";\n        for (int i = 0;\
    \ i < 10; i++) {\n            for (int j = 0; j < nums[i]; j++) {\n          \
    \      switch (i) {\n                    case 0:\n                        result\
    \ += \"zero \";\n                        break;\n                    case 1:\n\
    \                        result += \"one \";\n                        break;\n\
    \                    case 2:\n                        result += \"two \";\n  \
    \                      break;\n                    case 3:\n                 \
    \       result += \"three \";\n                        break;\n              \
    \      case 4:\n                        result += \"four \";\n               \
    \         break;\n                    case 5:\n                        result\
    \ += \"five \";\n                        break;\n                    case 6:\n\
    \                        result += \"six \";\n                        break;\n\
    \                    case 7:\n                        result += \"seven \";\n\
    \                        break;\n                    case 8:\n               \
    \         result += \"eight \";\n                        break;\n            \
    \        case 9:\n                        result += \"nine \";\n             \
    \           break;\n                }\n            }\n        }\n        return\
    \ result.Trim();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\
    \")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\"\
    )));\n    Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five\
    \ nine\")));\n    Debug.Assert(SortNumbers((\"five zero four seven nine eight\"\
    )).Equals((\"zero four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"\
    six five four three two one zero\")).Equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659798036
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        string[] nums = numbers.Split(' ');\n        int[] nums2 = new int[nums.Length];\n\
    \        for (int i = 0; i < nums.Length; i++) {\n            switch (nums[i])\
    \ {\n                case \"zero\":\n                    nums2[i] = 0;\n     \
    \               break;\n                case \"one\":\n                    nums2[i]\
    \ = 1;\n                    break;\n                case \"two\":\n          \
    \          nums2[i] = 2;\n                    break;\n                case \"\
    three\":\n                    nums2[i] = 3;\n                    break;\n    \
    \            case \"four\":\n                    nums2[i] = 4;\n             \
    \       break;\n                case \"five\":\n                    nums2[i] =\
    \ 5;\n                    break;\n                case \"six\":\n            \
    \        nums2[i] = 6;\n                    break;\n                case \"seven\"\
    :\n                    nums2[i] = 7;\n                    break;\n           \
    \     case \"eight\":\n                    nums2[i] = 8;\n                   \
    \ break;\n                case \"nine\":\n                    nums2[i] = 9;\n\
    \                    break;\n            }\n        }\n        Array.Sort(nums2);\n\
    \        string[] nums3 = new string[nums.Length];\n        for (int i = 0; i\
    \ < nums2.Length; i++) {\n            switch (nums2[i]) {\n                case\
    \ 0:\n                    nums3[i] = \"zero\";\n                    break;\n \
    \               case 1:\n                    nums3[i] = \"one\";\n           \
    \         break;\n                case 2:\n                    nums3[i] = \"two\"\
    ;\n                    break;\n                case 3:\n                    nums3[i]\
    \ = \"three\";\n                    break;\n                case 4:\n        \
    \            nums3[i] = \"four\";\n                    break;\n              \
    \  case 5:\n                    nums3[i] = \"five\";\n                    break;\n\
    \                case 6:\n                    nums3[i] = \"six\";\n          \
    \          break;\n                case 7:\n                    nums3[i] = \"\
    seven\";\n                    break;\n                case 8:\n              \
    \      nums3[i]\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\
    \")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\"\
    )));\n    Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five\
    \ nine\")));\n    Debug.Assert(SortNumbers((\"five zero four seven nine eight\"\
    )).Equals((\"zero four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"\
    six five four three two one zero\")).Equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmplxmd20j5.cs(80,29): error CS1002: ; expected

    /tmp/tmplxmd20j5.cs(82,5): error CS0106: The modifier ''public'' is not valid
    for this item

    /tmp/tmplxmd20j5.cs(90,2): error CS1513: } expected

    '
  timestamp: 1659798036
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        // Your code goes here\n        return \"\";\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\"\
    )));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"\
    three five nine\")).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"\
    five zero four seven nine eight\")).Equals((\"zero four five seven eight nine\"\
    )));\n    Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2e593562849b4f7f9c991456219b3cbb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <2e593562849b4f7f9c991456219b3cbb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798035
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        string[] nums = numbers.Split(' ');\n        int[] numsInt = new\
    \ int[nums.Length];\n        for (int i = 0; i < nums.Length; i++) {\n       \
    \     switch (nums[i]) {\n                case \"zero\":\n                   \
    \ numsInt[i] = 0;\n                    break;\n                case \"one\":\n\
    \                    numsInt[i] = 1;\n                    break;\n           \
    \     case \"two\":\n                    numsInt[i] = 2;\n                   \
    \ break;\n                case \"three\":\n                    numsInt[i] = 3;\n\
    \                    break;\n                case \"four\":\n                \
    \    numsInt[i] = 4;\n                    break;\n                case \"five\"\
    :\n                    numsInt[i] = 5;\n                    break;\n         \
    \       case \"six\":\n                    numsInt[i] = 6;\n                 \
    \   break;\n                case \"seven\":\n                    numsInt[i] =\
    \ 7;\n                    break;\n                case \"eight\":\n          \
    \          numsInt[i] = 8;\n                    break;\n                case \"\
    nine\":\n                    numsInt[i] = 9;\n                    break;\n   \
    \         }\n        }\n        Array.Sort(numsInt);\n        string[] numsStr\
    \ = new string[nums.Length];\n        for (int i = 0; i < nums.Length; i++) {\n\
    \            switch (numsInt[i]) {\n                case 0:\n                \
    \    numsStr[i] = \"zero\";\n                    break;\n                case\
    \ 1:\n                    numsStr[i] = \"one\";\n                    break;\n\
    \                case 2:\n                    numsStr[i] = \"two\";\n        \
    \            break;\n                case 3:\n                    numsStr[i] =\
    \ \"three\";\n                    break;\n                case 4:\n          \
    \          numsStr[i] = \"four\";\n                    break;\n              \
    \  case 5:\n                    numsStr[i] = \"five\";\n                    break;\n\
    \                case 6:\n                    numsStr[i] = \"six\";\n        \
    \            break;\n                case 7:\n                    numsStr[i] =\
    \ \"seven\";\n                    break;\n                case 8:\n          \
    \          numsStr[i] =\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"\
    three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three five nine\"\
    )).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five zero\
    \ four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n\
    \    Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp_ruqmnkb.cs(80,33): error CS1525: Invalid expression term ''}''

    /tmp/tmp_ruqmnkb.cs(80,33): error CS1002: ; expected

    /tmp/tmp_ruqmnkb.cs(82,5): error CS0106: The modifier ''public'' is not valid
    for this item

    /tmp/tmp_ruqmnkb.cs(90,2): error CS1513: } expected

    '
  timestamp: 1659798034
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        var nums = numbers.Split(' ').Select(x => int.Parse(x)).OrderBy(x\
    \ => x).Select(x => x.ToString()).ToArray();\n        return string.Join(\" \"\
    , nums);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\
    \")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\"\
    )));\n    Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five\
    \ nine\")));\n    Debug.Assert(SortNumbers((\"five zero four seven nine eight\"\
    )).Equals((\"zero four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"\
    six five four three two one zero\")).Equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in\
    \ a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean\
    \ overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int32.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem+<>c.<SortNumbers>b__0_0 (System.String x) [0x00000] in <dc44429ce7df4cf69f56b1678990ebd2>:0\
    \ \n  at System.Linq.Enumerable+SelectArrayIterator`2[TSource,TResult].ToArray\
    \ () [0x00012] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Buffer`1[TElement]..ctor\
    \ (System.Collections.Generic.IEnumerable`1[T] source) [0x0000a] in <e540098dd111461e919c5863f6975c29>:0\
    \ \n  at System.Linq.OrderedEnumerable`1+<GetEnumerator>d__3[TElement].MoveNext\
    \ () [0x0001e] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable+SelectIPartitionIterator`2[TSource,TResult].PreallocatingToArray\
    \ (System.Int32 count) [0x00035] in <e540098dd111461e919c5863f6975c29>:0 \n  at\
    \ System.Linq.Enumerable+SelectIPartitionIterator`2[TSource,TResult].ToArray ()\
    \ [0x00023] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable.ToArray[TSource]\
    \ (System.Collections.Generic.IEnumerable`1[T] source) [0x0001f] in <e540098dd111461e919c5863f6975c29>:0\
    \ \n  at Problem.SortNumbers (System.String numbers) [0x00076] in <dc44429ce7df4cf69f56b1678990ebd2>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00001] in <dc44429ce7df4cf69f56b1678990ebd2>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.FormatException: Input string was\
    \ not in a correct format.\n  at System.Number.ThrowOverflowOrFormatException\
    \ (System.Boolean overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberS"
  stdout: ''
  timestamp: 1659798034
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        var nums = numbers.Split(' ').Select(x => new { Name = x, Value =\
    \ GetNumber(x) }).OrderBy(x => x.Value).Select(x => x.Name);\n        return string.Join(\"\
    \ \", nums);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\
    \")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\"\
    )));\n    Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five\
    \ nine\")));\n    Debug.Assert(SortNumbers((\"five zero four seven nine eight\"\
    )).Equals((\"zero four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"\
    six five four three two one zero\")).Equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpg7mwpj_a.cs(15,75): error CS0103: The name ''GetNumber'' does not exist
    in the current context

    '
  timestamp: 1659798036
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        var nums = numbers.Split(' ').Select(x => int.Parse(x)).OrderBy(x\
    \ => x).Select(x => x.ToString()).ToArray();\n        return string.Join(\" \"\
    , nums);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\
    \")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\"\
    )));\n    Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five\
    \ nine\")));\n    Debug.Assert(SortNumbers((\"five zero four seven nine eight\"\
    )).Equals((\"zero four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"\
    six five four three two one zero\")).Equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: OK
  stderr: "\nUnhandled Exception:\nSystem.FormatException: Input string was not in\
    \ a correct format.\n  at System.Number.ThrowOverflowOrFormatException (System.Boolean\
    \ overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberStyles\
    \ styles, System.Globalization.NumberFormatInfo info) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Int32.Parse (System.String s) [0x00016] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at Problem+<>c.<SortNumbers>b__0_0 (System.String x) [0x00000] in <dc44429ce7df4cf69f56b1678990ebd2>:0\
    \ \n  at System.Linq.Enumerable+SelectArrayIterator`2[TSource,TResult].ToArray\
    \ () [0x00012] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Buffer`1[TElement]..ctor\
    \ (System.Collections.Generic.IEnumerable`1[T] source) [0x0000a] in <e540098dd111461e919c5863f6975c29>:0\
    \ \n  at System.Linq.OrderedEnumerable`1+<GetEnumerator>d__3[TElement].MoveNext\
    \ () [0x0001e] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable+SelectIPartitionIterator`2[TSource,TResult].PreallocatingToArray\
    \ (System.Int32 count) [0x00035] in <e540098dd111461e919c5863f6975c29>:0 \n  at\
    \ System.Linq.Enumerable+SelectIPartitionIterator`2[TSource,TResult].ToArray ()\
    \ [0x00023] in <e540098dd111461e919c5863f6975c29>:0 \n  at System.Linq.Enumerable.ToArray[TSource]\
    \ (System.Collections.Generic.IEnumerable`1[T] source) [0x0001f] in <e540098dd111461e919c5863f6975c29>:0\
    \ \n  at Problem.SortNumbers (System.String numbers) [0x00076] in <dc44429ce7df4cf69f56b1678990ebd2>:0\
    \ \n  at Problem.Main (System.String[] args) [0x00001] in <dc44429ce7df4cf69f56b1678990ebd2>:0\
    \ \n[ERROR] FATAL UNHANDLED EXCEPTION: System.FormatException: Input string was\
    \ not in a correct format.\n  at System.Number.ThrowOverflowOrFormatException\
    \ (System.Boolean overflow, System.String overflowResourceKey) [0x0001a] in <aa5dff9b31c64fce86559bbbf6cd364f>:0\
    \ \n  at System.Number.ParseInt32 (System.ReadOnlySpan`1[T] value, System.Globalization.NumberS"
  stdout: ''
  timestamp: 1659798034
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        var nums = numbers.Split(' ');\n        Array.Sort(nums);\n     \
    \   return string.Join(\" \", nums);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"\
    three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three five nine\"\
    )).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five zero\
    \ four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n\
    \    Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a52eb78c127b4f7b966d1276966c9022>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a52eb78c127b4f7b966d1276966c9022>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798035
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        return \"\";\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"\
    three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three five nine\"\
    )).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five zero\
    \ four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n\
    \    Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <897dae32f9854a2fbdf4e7bc72939644>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <897dae32f9854a2fbdf4e7bc72939644>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798035
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        int[] nums = new int[numbers.Split(' ').Length];\n        for (int\
    \ i = 0; i < nums.Length; i++) {\n            switch (numbers.Split(' ')[i]) {\n\
    \                case \"zero\":\n                    nums[i] = 0;\n          \
    \          break;\n                case \"one\":\n                    nums[i]\
    \ = 1;\n                    break;\n                case \"two\":\n          \
    \          nums[i] = 2;\n                    break;\n                case \"three\"\
    :\n                    nums[i] = 3;\n                    break;\n            \
    \    case \"four\":\n                    nums[i] = 4;\n                    break;\n\
    \                case \"five\":\n                    nums[i] = 5;\n          \
    \          break;\n                case \"six\":\n                    nums[i]\
    \ = 6;\n                    break;\n                case \"seven\":\n        \
    \            nums[i] = 7;\n                    break;\n                case \"\
    eight\":\n                    nums[i] = 8;\n                    break;\n     \
    \           case \"nine\":\n                    nums[i] = 9;\n               \
    \     break;\n            }\n        }\n        Array.Sort(nums);\n        string\
    \ result = \"\";\n        for (int i = 0; i < nums.Length; i++) {\n          \
    \  switch (nums[i]) {\n                case 0:\n                    result +=\
    \ \"zero \";\n                    break;\n                case 1:\n          \
    \          result += \"one \";\n                    break;\n                case\
    \ 2:\n                    result += \"two \";\n                    break;\n  \
    \              case 3:\n                    result += \"three \";\n          \
    \          break;\n                case 4:\n                    result += \"four\
    \ \";\n                    break;\n                case 5:\n                 \
    \   result += \"five \";\n                    break;\n                case 6:\n\
    \                    result += \"six \";\n                    break;\n       \
    \         case 7:\n                    result += \"seven \";\n               \
    \     break;\n                case 8:\n                    result += \"eight \"\
    ;\n                    break;\n                case 9:\n                    result\
    \ += \"nine \";\n                    break;\n            }\n        }\n      \
    \  return result.Trim();\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"\
    three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three five nine\"\
    )).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five zero\
    \ four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n\
    \    Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9485052c76884aa49b58beea5a4b5c4f>:0 \n"
  stdout: ''
  timestamp: 1659798035
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        string[] nums = numbers.Split(' ');\n        int[] nums2 = new int[nums.Length];\n\
    \        for (int i = 0; i < nums.Length; i++) {\n            switch (nums[i])\
    \ {\n                case \"zero\":\n                    nums2[i] = 0;\n     \
    \               break;\n                case \"one\":\n                    nums2[i]\
    \ = 1;\n                    break;\n                case \"two\":\n          \
    \          nums2[i] = 2;\n                    break;\n                case \"\
    three\":\n                    nums2[i] = 3;\n                    break;\n    \
    \            case \"four\":\n                    nums2[i] = 4;\n             \
    \       break;\n                case \"five\":\n                    nums2[i] =\
    \ 5;\n                    break;\n                case \"six\":\n            \
    \        nums2[i] = 6;\n                    break;\n                case \"seven\"\
    :\n                    nums2[i] = 7;\n                    break;\n           \
    \     case \"eight\":\n                    nums2[i] = 8;\n                   \
    \ break;\n                case \"nine\":\n                    nums2[i] = 9;\n\
    \                    break;\n            }\n        }\n        Array.Sort(nums2);\n\
    \        string[] nums3 = new string[nums.Length];\n        for (int i = 0; i\
    \ < nums.Length; i++) {\n            switch (nums2[i]) {\n                case\
    \ 0:\n                    nums3[i] = \"zero\";\n                    break;\n \
    \               case 1:\n                    nums3[i] = \"one\";\n           \
    \         break;\n                case 2:\n                    nums3[i] = \"two\"\
    ;\n                    break;\n                case 3:\n                    nums3[i]\
    \ = \"three\";\n                    break;\n                case 4:\n        \
    \            nums3[i] = \"four\";\n                    break;\n              \
    \  case 5:\n                    nums3[i] = \"five\";\n                    break;\n\
    \                case 6:\n                    nums3[i] = \"six\";\n          \
    \          break;\n                case 7:\n                    nums3[i] = \"\
    seven\";\n                    break;\n                case 8:\n              \
    \      nums3[i] =\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(SortNumbers((\"\
    \")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"three\")).Equals((\"three\"\
    )));\n    Debug.Assert(SortNumbers((\"three five nine\")).Equals((\"three five\
    \ nine\")));\n    Debug.Assert(SortNumbers((\"five zero four seven nine eight\"\
    )).Equals((\"zero four five seven eight nine\")));\n    Debug.Assert(SortNumbers((\"\
    six five four three two one zero\")).Equals((\"zero one two three four five six\"\
    )));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpwi1ha3o3.cs(80,31): error CS1525: Invalid expression term ''}''

    /tmp/tmpwi1ha3o3.cs(80,31): error CS1002: ; expected

    /tmp/tmpwi1ha3o3.cs(82,5): error CS0106: The modifier ''public'' is not valid
    for this item

    /tmp/tmpwi1ha3o3.cs(90,2): error CS1513: } expected

    '
  timestamp: 1659798035
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Input is a space-delimited string of numberals from 'zero'\
    \ to 'nine'.\n    // Valid choices are 'zero', 'one', 'two', 'three', 'four',\
    \ 'five', 'six', 'seven', 'eight' and 'nine'.\n    // Return the string with numbers\
    \ sorted from smallest to largest\n    // >>> SortNumbers((\"three one five\"\
    ))\n    // (\"one three five\")\n    public static string SortNumbers(string numbers)\
    \ {\n        var nums = numbers.Split(' ');\n        Array.Sort(nums);\n     \
    \   return string.Join(\" \", nums);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(SortNumbers((\"\")).Equals((\"\")));\n    Debug.Assert(SortNumbers((\"\
    three\")).Equals((\"three\")));\n    Debug.Assert(SortNumbers((\"three five nine\"\
    )).Equals((\"three five nine\")));\n    Debug.Assert(SortNumbers((\"five zero\
    \ four seven nine eight\")).Equals((\"zero four five seven eight nine\")));\n\
    \    Debug.Assert(SortNumbers((\"six five four three two one zero\")).Equals((\"\
    zero one two three four five six\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a52eb78c127b4f7b966d1276966c9022>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <a52eb78c127b4f7b966d1276966c9022>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659798035

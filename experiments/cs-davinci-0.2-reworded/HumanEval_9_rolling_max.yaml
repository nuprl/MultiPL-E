name: HumanEval_9_rolling_max
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // From a given list of integers, generate a list of rolling maximum\
  \ element found until given moment\n    // in the sequence.\n    // >>> RollingMax((new\
  \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)2L, (long)3L, (long)4L,\
  \ (long)2L})))\n    // (new List<long>(new long[]{(long)1L, (long)2L, (long)3L,\
  \ (long)3L, (long)3L, (long)4L, (long)4L}))\n    public static List<long> RollingMax(List<long>\
  \ numbers) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(RollingMax((new\
  \ List<long>())).Equals((new List<long>())));\n    Debug.Assert(RollingMax((new\
  \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new\
  \ long[]{(long)1L, (long)2L, (long)3L, (long)4L}))));\n    Debug.Assert(RollingMax((new\
  \ List<long>(new long[]{(long)4L, (long)3L, (long)2L, (long)1L}))).Equals((new List<long>(new\
  \ long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(RollingMax((new\
  \ List<long>(new long[]{(long)3L, (long)2L, (long)3L, (long)100L, (long)3L}))).Equals((new\
  \ List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)100L, (long)100L}))));\n\
  \    }\n\n}\n"
completions: ["        List<long> result = new List<long>();\n        long max = numbers[0];\n\
    \        result.Add(max);\n        for (int i = 1; i < numbers.Count; i++) {\n\
    \            if (numbers[i] > max) {\n                max = numbers[i];\n    \
    \        }\n            result.Add(max);\n        }\n        return result;",
  "        var result = new List<long>();\n        long max = numbers[0];\n      \
    \  result.Add(max);\n        for (int i = 1; i < numbers.Count; i++) {\n     \
    \       max = Math.Max(max, numbers[i]);\n            result.Add(max);\n     \
    \   }\n        return result;", "        var result = new List<long>();\n    \
    \    long max = numbers[0];\n        result.Add(max);\n        for (int i = 1;\
    \ i < numbers.Count; i++) {\n            if (numbers[i] > max) {\n           \
    \     max = numbers[i];\n            }\n            result.Add(max);\n       \
    \ }\n        return result;", "        var max = numbers[0];\n        var result\
    \ = new List<long>();\n        result.Add(max);\n        for (int i = 1; i < numbers.Count;\
    \ i++) {\n            if (numbers[i] > max) {\n                max = numbers[i];\n\
    \            }\n            result.Add(max);\n        }\n        return result;",
  "        List<long> result = new List<long>();\n        long max = numbers[0];\n\
    \        result.Add(max);\n        for (int i = 1; i < numbers.Count; i++) {\n\
    \            if (numbers[i] > max) {\n                max = numbers[i];\n    \
    \        }\n            result.Add(max);\n        }\n        return result;",
  "        List<long> result = new List<long>();\n        long max = numbers[0];\n\
    \        result.Add(max);\n        for (int i = 1; i < numbers.Count; i++) {\n\
    \            if (numbers[i] > max) {\n                max = numbers[i];\n    \
    \        }\n            result.Add(max);\n        }\n        return result;",
  "        List<long> result = new List<long>();\n        long max = numbers[0];\n\
    \        result.Add(max);\n        for (int i = 1; i < numbers.Count; i++) {\n\
    \            if (numbers[i] > max) {\n                max = numbers[i];\n    \
    \        }\n            result.Add(max);\n        }\n        return result;",
  "        List<long> result = new List<long>();\n        long max = numbers[0];\n\
    \        result.Add(max);\n        for (int i = 1; i < numbers.Count; i++) {\n\
    \            if (numbers[i] > max) {\n                max = numbers[i];\n    \
    \        }\n            result.Add(max);\n        }\n        return result;",
  "        List<long> result = new List<long>();\n        long max = numbers[0];\n\
    \        result.Add(max);\n        for (int i = 1; i < numbers.Count; i++) {\n\
    \            if (numbers[i] > max) {\n                max = numbers[i];\n    \
    \        }\n            result.Add(max);\n        }\n        return result;",
  "        var max = numbers[0];\n        var result = new List<long>();\n       \
    \ result.Add(max);\n        for (int i = 1; i < numbers.Count; i++) {\n      \
    \      if (numbers[i] > max) {\n                max = numbers[i];\n          \
    \  }\n            result.Add(max);\n        }\n        return result;", "    \
    \    List<long> result = new List<long>();\n        long max = numbers[0];\n \
    \       result.Add(max);\n        for (int i = 1; i < numbers.Count; i++) {\n\
    \            if (numbers[i] > max) {\n                max = numbers[i];\n    \
    \        }\n            result.Add(max);\n        }\n        return result;",
  "        List<long> result = new List<long>();\n        long max = numbers[0];\n\
    \        result.Add(max);\n        for (int i = 1; i < numbers.Count; i++) {\n\
    \            if (numbers[i] > max) {\n                max = numbers[i];\n    \
    \        }\n            result.Add(max);\n        }\n        return result;",
  "        var result = new List<long>();\n        var max = numbers[0];\n       \
    \ result.Add(max);\n        for (int i = 1; i < numbers.Count; i++) {\n      \
    \      if (numbers[i] > max) {\n                max = numbers[i];\n          \
    \  }\n            result.Add(max);\n        }\n        return result;", "    \
    \    List<long> result = new List<long>();\n        long max = numbers[0];\n \
    \       result.Add(max);\n        for (int i = 1; i < numbers.Count; i++) {\n\
    \            if (numbers[i] > max) {\n                max = numbers[i];\n    \
    \        }\n            result.Add(max);\n        }\n        return result;",
  "        List<long> result = new List<long>();\n        long max = numbers[0];\n\
    \        result.Add(max);\n        for (int i = 1; i < numbers.Count; i++) {\n\
    \            if (numbers[i] > max) {\n                max = numbers[i];\n    \
    \        }\n            result.Add(max);\n        }\n        return result;",
  "        List<long> result = new List<long>();\n        long currentMax = numbers[0];\n\
    \        result.Add(currentMax);\n        for (int i = 1; i < numbers.Count; i++)\
    \ {\n            if (numbers[i] > currentMax) {\n                currentMax =\
    \ numbers[i];\n            }\n            result.Add(currentMax);\n        }\n\
    \        return result;", "        List<long> result = new List<long>();\n   \
    \     long max = numbers[0];\n        result.Add(max);\n        for (int i = 1;\
    \ i < numbers.Count; i++) {\n            if (numbers[i] > max) {\n           \
    \     max = numbers[i];\n            }\n            result.Add(max);\n       \
    \ }\n        return result;", "        List<long> result = new List<long>();\n\
    \        long max = numbers[0];\n        result.Add(max);\n        for (int i\
    \ = 1; i < numbers.Count; i++) {\n            if (numbers[i] > max) {\n      \
    \          max = numbers[i];\n            }\n            result.Add(max);\n  \
    \      }\n        return result;", "        var result = new List<long>();\n \
    \       long max = numbers[0];\n        result.Add(max);\n        for (int i =\
    \ 1; i < numbers.Count; i++) {\n            if (numbers[i] > max) {\n        \
    \        max = numbers[i];\n            }\n            result.Add(max);\n    \
    \    }\n        return result;", "        List<long> result = new List<long>();\n\
    \        long max = numbers[0];\n        result.Add(max);\n        for (int i\
    \ = 1; i < numbers.Count; i++) {\n            if (numbers[i] > max) {\n      \
    \          max = numbers[i];\n            }\n            result.Add(max);\n  \
    \      }\n        return result;", "        List<long> result = new List<long>();\n\
    \        long max = numbers[0];\n        result.Add(max);\n        for (int i\
    \ = 1; i < numbers.Count; i++) {\n            if (numbers[i] > max) {\n      \
    \          max = numbers[i];\n            }\n            result.Add(max);\n  \
    \      }\n        return result;", "        var result = new List<long>();\n \
    \       long max = numbers[0];\n        result.Add(max);\n        for (int i =\
    \ 1; i < numbers.Count; i++) {\n            if (numbers[i] > max) {\n        \
    \        max = numbers[i];\n            }\n            result.Add(max);\n    \
    \    }\n        return result;", "        List<long> result = new List<long>();\n\
    \        long max = numbers[0];\n        result.Add(max);\n        for (int i\
    \ = 1; i < numbers.Count; i++) {\n            if (numbers[i] > max) {\n      \
    \          max = numbers[i];\n            }\n            result.Add(max);\n  \
    \      }\n        return result;", "        var maxes = new List<long>();\n  \
    \      var max = numbers[0];\n        maxes.Add(max);\n        for (int i = 1;\
    \ i < numbers.Count; i++) {\n            if (numbers[i] > max) {\n           \
    \     max = numbers[i];\n            }\n            maxes.Add(max);\n        }\n\
    \        return maxes;", "        List<long> result = new List<long>();\n    \
    \    long max = numbers[0];\n        result.Add(max);\n        for (int i = 1;\
    \ i < numbers.Count; i++) {\n            if (numbers[i] > max) {\n           \
    \     max = numbers[i];\n            }\n            result.Add(max);\n       \
    \ }\n        return result;", "        List<long> result = new List<long>();\n\
    \        long max = numbers[0];\n        result.Add(max);\n        for (int i\
    \ = 1; i < numbers.Count; i++) {\n            if (numbers[i] > max) {\n      \
    \          max = numbers[i];\n            }\n            result.Add(max);\n  \
    \      }\n        return result;", "        var result = new List<long>();\n \
    \       long max = numbers[0];\n        result.Add(max);\n        for (int i =\
    \ 1; i < numbers.Count; i++) {\n            if (numbers[i] > max) {\n        \
    \        max = numbers[i];\n            }\n            result.Add(max);\n    \
    \    }\n        return result;", "        var result = new List<long>();\n   \
    \     long max = numbers[0];\n        result.Add(max);\n        for (int i = 1;\
    \ i < numbers.Count; i++) {\n            if (numbers[i] > max) {\n           \
    \     max = numbers[i];\n            }\n            result.Add(max);\n       \
    \ }\n        return result;", "        var result = new List<long>();\n      \
    \  long max = numbers[0];\n        result.Add(max);\n        for (int i = 1; i\
    \ < numbers.Count; i++) {\n            max = Math.Max(max, numbers[i]);\n    \
    \        result.Add(max);\n        }\n        return result;", "        var result\
    \ = new List<long>();\n        var max = numbers[0];\n        result.Add(max);\n\
    \        for (int i = 1; i < numbers.Count; i++) {\n            if (numbers[i]\
    \ > max) {\n                max = numbers[i];\n            }\n            result.Add(max);\n\
    \        }\n        return result;", "        var result = new List<long>();\n\
    \        long max = numbers[0];\n        result.Add(max);\n        for (int i\
    \ = 1; i < numbers.Count; i++) {\n            max = Math.Max(max, numbers[i]);\n\
    \            result.Add(max);\n        }\n        return result;", "        List<long>\
    \ result = new List<long>();\n        long max = numbers[0];\n        result.Add(max);\n\
    \        for (int i = 1; i < numbers.Count; i++) {\n            if (numbers[i]\
    \ > max) {\n                max = numbers[i];\n            }\n            result.Add(max);\n\
    \        }\n        return result;", "        var max = numbers[0];\n        var\
    \ result = new List<long>();\n        result.Add(max);\n        for (int i = 1;\
    \ i < numbers.Count; i++) {\n            if (numbers[i] > max) {\n           \
    \     max = numbers[i];\n            }\n            result.Add(max);\n       \
    \ }\n        return result;", "        List<long> result = new List<long>();\n\
    \        long max = numbers[0];\n        result.Add(max);\n        for (int i\
    \ = 1; i < numbers.Count; i++) {\n            if (numbers[i] > max) {\n      \
    \          max = numbers[i];\n            }\n            result.Add(max);\n  \
    \      }\n        return result;", "        var result = new List<long>();\n \
    \       long max = numbers[0];\n        result.Add(max);\n        for (int i =\
    \ 1; i < numbers.Count; i++) {\n            max = Math.Max(max, numbers[i]);\n\
    \            result.Add(max);\n        }\n        return result;", "        var\
    \ result = new List<long>();\n        long max = numbers[0];\n        result.Add(max);\n\
    \        for (int i = 1; i < numbers.Count; i++) {\n            if (numbers[i]\
    \ > max) {\n                max = numbers[i];\n            }\n            result.Add(max);\n\
    \        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        long max = numbers[0];\n        result.Add(max);\n        for (int i\
    \ = 1; i < numbers.Count; i++) {\n            if (numbers[i] > max) {\n      \
    \          max = numbers[i];\n            }\n            result.Add(max);\n  \
    \      }\n        return result;", "        List<long> result = new List<long>();\n\
    \        long max = numbers[0];\n        result.Add(max);\n        for (int i\
    \ = 1; i < numbers.Count; i++) {\n            if (numbers[i] > max) {\n      \
    \          max = numbers[i];\n            }\n            result.Add(max);\n  \
    \      }\n        return result;", "        List<long> result = new List<long>();\n\
    \        long max = numbers[0];\n        result.Add(max);\n        for (int i\
    \ = 1; i < numbers.Count; i++) {\n            if (numbers[i] > max) {\n      \
    \          max = numbers[i];\n            }\n            result.Add(max);\n  \
    \      }\n        return result;", "        var max = new List<long>();\n    \
    \    long currentMax = numbers[0];\n        max.Add(currentMax);\n        for\
    \ (int i = 1; i < numbers.Count; i++) {\n            if (numbers[i] > currentMax)\
    \ {\n                currentMax = numbers[i];\n            }\n            max.Add(currentMax);\n\
    \        }\n        return max;", "        List<long> result = new List<long>();\n\
    \        long max = numbers[0];\n        result.Add(max);\n        for (int i\
    \ = 1; i < numbers.Count; i++) {\n            if (numbers[i] > max) {\n      \
    \          max = numbers[i];\n            }\n            result.Add(max);\n  \
    \      }\n        return result;", "        List<long> result = new List<long>();\n\
    \        long max = numbers[0];\n        result.Add(max);\n        for (int i\
    \ = 1; i < numbers.Count; i++) {\n            if (numbers[i] > max) {\n      \
    \          max = numbers[i];\n            }\n            result.Add(max);\n  \
    \      }\n        return result;", "        var result = new List<long>();\n \
    \       var max = numbers[0];\n        result.Add(max);\n        for (int i =\
    \ 1; i < numbers.Count; i++) {\n            if (numbers[i] > max) {\n        \
    \        max = numbers[i];\n            }\n            result.Add(max);\n    \
    \    }\n        return result;", "        List<long> result = new List<long>();\n\
    \        long max = numbers[0];\n        result.Add(max);\n        for (int i\
    \ = 1; i < numbers.Count; i++) {\n            max = Math.Max(max, numbers[i]);\n\
    \            result.Add(max);\n        }\n        return result;", "        var\
    \ result = new List<long>();\n        long max = numbers[0];\n        result.Add(max);\n\
    \        for (int i = 1; i < numbers.Count; i++) {\n            max = Math.Max(max,\
    \ numbers[i]);\n            result.Add(max);\n        }\n        return result;",
  "        List<long> result = new List<long>();\n        long max = numbers[0];\n\
    \        result.Add(max);\n        for (int i = 1; i < numbers.Count; i++) {\n\
    \            if (numbers[i] > max) {\n                max = numbers[i];\n    \
    \        }\n            result.Add(max);\n        }\n        return result;",
  "        List<long> result = new List<long>();\n        long max = numbers[0];\n\
    \        result.Add(max);\n        for (int i = 1; i < numbers.Count; i++) {\n\
    \            max = Math.Max(max, numbers[i]);\n            result.Add(max);\n\
    \        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        long max = numbers[0];\n        result.Add(max);\n        for (int i\
    \ = 1; i < numbers.Count; i++) {\n            if (numbers[i] > max) {\n      \
    \          max = numbers[i];\n            }\n            result.Add(max);\n  \
    \      }\n        return result;", "        List<long> result = new List<long>();\n\
    \        long max = numbers[0];\n        result.Add(max);\n        for (int i\
    \ = 1; i < numbers.Count; i++) {\n            if (numbers[i] > max) {\n      \
    \          max = numbers[i];\n            }\n            result.Add(max);\n  \
    \      }\n        return result;", "        List<long> result = new List<long>();\n\
    \        long max = numbers[0];\n        result.Add(max);\n        for (int i\
    \ = 1; i < numbers.Count; i++) {\n            if (numbers[i] > max) {\n      \
    \          max = numbers[i];\n            }\n            result.Add(max);\n  \
    \      }\n        return result;", "        List<long> result = new List<long>();\n\
    \        long currentMax = numbers[0];\n        result.Add(currentMax);\n    \
    \    for (int i = 1; i < numbers.Count; i++) {\n            if (numbers[i] > currentMax)\
    \ {\n                currentMax = numbers[i];\n            }\n            result.Add(currentMax);\n\
    \        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        long max = numbers[0];\n        result.Add(max);\n        for (int i\
    \ = 1; i < numbers.Count; i++) {\n            if (numbers[i] > max) {\n      \
    \          max = numbers[i];\n            }\n            result.Add(max);\n  \
    \      }\n        return result;", "        List<long> result = new List<long>();\n\
    \        long max = numbers[0];\n        result.Add(max);\n        for (int i\
    \ = 1; i < numbers.Count; i++) {\n            if (numbers[i] > max) {\n      \
    \          max = numbers[i];\n            }\n            result.Add(max);\n  \
    \      }\n        return result;", "        List<long> result = new List<long>();\n\
    \        long max = numbers[0];\n        result.Add(max);\n        for (int i\
    \ = 1; i < numbers.Count; i++) {\n            if (numbers[i] > max) {\n      \
    \          max = numbers[i];\n            }\n            result.Add(max);\n  \
    \      }\n        return result;", "        var result = new List<long>();\n \
    \       long max = numbers[0];\n        result.Add(max);\n        for (int i =\
    \ 1; i < numbers.Count; i++) {\n            if (numbers[i] > max) {\n        \
    \        max = numbers[i];\n            }\n            result.Add(max);\n    \
    \    }\n        return result;", "        var max = numbers[0];\n        var result\
    \ = new List<long>();\n        result.Add(max);\n        for (int i = 1; i < numbers.Count;\
    \ i++) {\n            if (numbers[i] > max) {\n                max = numbers[i];\n\
    \            }\n            result.Add(max);\n        }\n        return result;",
  "        List<long> result = new List<long>();\n        long max = numbers[0];\n\
    \        result.Add(max);\n        for (int i = 1; i < numbers.Count; i++) {\n\
    \            max = Math.Max(max, numbers[i]);\n            result.Add(max);\n\
    \        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        long max = numbers[0];\n        result.Add(max);\n        for (int i\
    \ = 1; i < numbers.Count; i++) {\n            if (numbers[i] > max) {\n      \
    \          max = numbers[i];\n            }\n            result.Add(max);\n  \
    \      }\n        return result;", "        List<long> result = new List<long>();\n\
    \        long max = numbers[0];\n        result.Add(max);\n        for (int i\
    \ = 1; i < numbers.Count; i++) {\n            if (numbers[i] > max) {\n      \
    \          max = numbers[i];\n            }\n            result.Add(max);\n  \
    \      }\n        return result;", "        List<long> result = new List<long>();\n\
    \        long currentMax = numbers[0];\n        result.Add(currentMax);\n    \
    \    for (int i = 1; i < numbers.Count; i++) {\n            if (numbers[i] > currentMax)\
    \ {\n                currentMax = numbers[i];\n            }\n            result.Add(currentMax);\n\
    \        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        long max = numbers[0];\n        result.Add(max);\n        for (int i\
    \ = 1; i < numbers.Count; i++) {\n            if (numbers[i] > max) {\n      \
    \          max = numbers[i];\n            }\n            result.Add(max);\n  \
    \      }\n        return result;", "        List<long> result = new List<long>();\n\
    \        long max = numbers[0];\n        result.Add(max);\n        for (int i\
    \ = 1; i < numbers.Count; i++) {\n            if (numbers[i] > max) {\n      \
    \          max = numbers[i];\n            }\n            result.Add(max);\n  \
    \      }\n        return result;", "        List<long> result = new List<long>();\n\
    \        long max = numbers[0];\n        result.Add(max);\n        for (int i\
    \ = 1; i < numbers.Count; i++) {\n            if (numbers[i] > max) {\n      \
    \          max = numbers[i];\n            }\n            result.Add(max);\n  \
    \      }\n        return result;", "        var result = new List<long>();\n \
    \       long max = numbers[0];\n        result.Add(max);\n        for (int i =\
    \ 1; i < numbers.Count; i++) {\n            if (numbers[i] > max) {\n        \
    \        max = numbers[i];\n            }\n            result.Add(max);\n    \
    \    }\n        return result;", "        var result = new List<long>();\n   \
    \     long max = numbers[0];\n        result.Add(max);\n        for (int i = 1;\
    \ i < numbers.Count; i++) {\n            max = Math.Max(max, numbers[i]);\n  \
    \          result.Add(max);\n        }\n        return result;", "        var\
    \ max = new List<long>();\n        long currentMax = numbers[0];\n        max.Add(currentMax);\n\
    \        for (int i = 1; i < numbers.Count; i++) {\n            if (numbers[i]\
    \ > currentMax) {\n                currentMax = numbers[i];\n            }\n \
    \           max.Add(currentMax);\n        }\n        return max;", "        var\
    \ result = new List<long>();\n        var max = numbers[0];\n        result.Add(max);\n\
    \        for (int i = 1; i < numbers.Count; i++) {\n            if (numbers[i]\
    \ > max) {\n                max = numbers[i];\n            }\n            result.Add(max);\n\
    \        }\n        return result;", "        var result = new List<long>();\n\
    \        long max = numbers[0];\n        result.Add(max);\n        for (int i\
    \ = 1; i < numbers.Count; i++) {\n            if (numbers[i] > max) {\n      \
    \          max = numbers[i];\n            }\n            result.Add(max);\n  \
    \      }\n        return result;", "        var result = new List<long>();\n \
    \       long max = numbers[0];\n        result.Add(max);\n        for (int i =\
    \ 1; i < numbers.Count; i++) {\n            if (numbers[i] > max) {\n        \
    \        max = numbers[i];\n            }\n            result.Add(max);\n    \
    \    }\n        return result;", "        List<long> result = new List<long>();\n\
    \        long currentMax = numbers[0];\n        result.Add(currentMax);\n    \
    \    for (int i = 1; i < numbers.Count; i++) {\n            if (numbers[i] > currentMax)\
    \ {\n                currentMax = numbers[i];\n            }\n            result.Add(currentMax);\n\
    \        }\n        return result;", "        List<long> maxes = new List<long>();\n\
    \        long currentMax = numbers[0];\n        maxes.Add(currentMax);\n     \
    \   for (int i = 1; i < numbers.Count; i++) {\n            if (numbers[i] > currentMax)\
    \ {\n                currentMax = numbers[i];\n            }\n            maxes.Add(currentMax);\n\
    \        }\n        return maxes;", "        List<long> result = new List<long>();\n\
    \        long currentMax = numbers[0];\n        result.Add(currentMax);\n    \
    \    for (int i = 1; i < numbers.Count; i++) {\n            currentMax = Math.Max(currentMax,\
    \ numbers[i]);\n            result.Add(currentMax);\n        }\n        return\
    \ result;", "        List<long> result = new List<long>();\n        long max =\
    \ numbers[0];\n        result.Add(max);\n        for (int i = 1; i < numbers.Count;\
    \ i++) {\n            if (numbers[i] > max) {\n                max = numbers[i];\n\
    \            }\n            result.Add(max);\n        }\n        return result;",
  "        List<long> result = new List<long>();\n        long currentMax = numbers[0];\n\
    \        result.Add(currentMax);\n        for (int i = 1; i < numbers.Count; i++)\
    \ {\n            if (numbers[i] > currentMax) {\n                currentMax =\
    \ numbers[i];\n            }\n            result.Add(currentMax);\n        }\n\
    \        return result;", "        List<long> result = new List<long>();\n   \
    \     long currentMax = numbers[0];\n        result.Add(currentMax);\n       \
    \ for (int i = 1; i < numbers.Count; i++) {\n            if (numbers[i] > currentMax)\
    \ {\n                currentMax = numbers[i];\n            }\n            result.Add(currentMax);\n\
    \        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        long max = numbers[0];\n        result.Add(max);\n        for (int i\
    \ = 1; i < numbers.Count; i++) {\n            if (numbers[i] > max) {\n      \
    \          max = numbers[i];\n            }\n            result.Add(max);\n  \
    \      }\n        return result;", "        var result = new List<long>();\n \
    \       long max = numbers[0];\n        result.Add(max);\n        for (int i =\
    \ 1; i < numbers.Count; i++) {\n            if (numbers[i] > max) {\n        \
    \        max = numbers[i];\n            }\n            result.Add(max);\n    \
    \    }\n        return result;", "        List<long> result = new List<long>();\n\
    \        long max = numbers[0];\n        result.Add(max);\n        for (int i\
    \ = 1; i < numbers.Count; i++) {\n            if (numbers[i] > max) {\n      \
    \          max = numbers[i];\n            }\n            result.Add(max);\n  \
    \      }\n        return result;", "        List<long> result = new List<long>();\n\
    \        long max = numbers[0];\n        result.Add(max);\n        for (int i\
    \ = 1; i < numbers.Count; i++) {\n            if (numbers[i] > max) {\n      \
    \          max = numbers[i];\n            }\n            result.Add(max);\n  \
    \      }\n        return result;", "        List<long> result = new List<long>();\n\
    \        long max = numbers[0];\n        result.Add(max);\n        for (int i\
    \ = 1; i < numbers.Count; i++) {\n            if (numbers[i] > max) {\n      \
    \          max = numbers[i];\n            }\n            result.Add(max);\n  \
    \      }\n        return result;", "        List<long> result = new List<long>();\n\
    \        long max = numbers[0];\n        result.Add(max);\n        for (int i\
    \ = 1; i < numbers.Count; i++) {\n            max = Math.Max(max, numbers[i]);\n\
    \            result.Add(max);\n        }\n        return result;", "        List<long>\
    \ result = new List<long>();\n        long max = numbers[0];\n        result.Add(max);\n\
    \        for (int i = 1; i < numbers.Count; i++) {\n            max = Math.Max(max,\
    \ numbers[i]);\n            result.Add(max);\n        }\n        return result;",
  "        var max = new List<long>();\n        long currentMax = numbers[0];\n  \
    \      max.Add(currentMax);\n        for (int i = 1; i < numbers.Count; i++) {\n\
    \            if (numbers[i] > currentMax) {\n                currentMax = numbers[i];\n\
    \            }\n            max.Add(currentMax);\n        }\n        return max;",
  "        List<long> result = new List<long>();\n        long max = numbers[0];\n\
    \        result.Add(max);\n        for (int i = 1; i < numbers.Count; i++) {\n\
    \            if (numbers[i] > max) {\n                max = numbers[i];\n    \
    \        }\n            result.Add(max);\n        }\n        return result;",
  "        List<long> result = new List<long>();\n        long max = numbers[0];\n\
    \        result.Add(max);\n        for (int i = 1; i < numbers.Count; i++) {\n\
    \            if (numbers[i] > max) {\n                max = numbers[i];\n    \
    \        }\n            result.Add(max);\n        }\n        return result;",
  "        var max = numbers[0];\n        var result = new List<long>();\n       \
    \ result.Add(max);\n        for (int i = 1; i < numbers.Count; i++) {\n      \
    \      if (numbers[i] > max) {\n                max = numbers[i];\n          \
    \  }\n            result.Add(max);\n        }\n        return result;", "    \
    \    var result = new List<long>();\n        long currentMax = numbers[0];\n \
    \       result.Add(currentMax);\n        for (int i = 1; i < numbers.Count; i++)\
    \ {\n            if (numbers[i] > currentMax) {\n                currentMax =\
    \ numbers[i];\n            }\n            result.Add(currentMax);\n        }\n\
    \        return result;", "        List<long> result = new List<long>();\n   \
    \     long max = numbers[0];\n        result.Add(max);\n        for (int i = 1;\
    \ i < numbers.Count; i++) {\n            if (numbers[i] > max) {\n           \
    \     max = numbers[i];\n            }\n            result.Add(max);\n       \
    \ }\n        return result;", "        var result = new List<long>();\n      \
    \  var max = numbers[0];\n        result.Add(max);\n        for (int i = 1; i\
    \ < numbers.Count; i++) {\n            max = Math.Max(max, numbers[i]);\n    \
    \        result.Add(max);\n        }\n        return result;", "        List<long>\
    \ result = new List<long>();\n        long max = numbers[0];\n        result.Add(max);\n\
    \        for (int i = 1; i < numbers.Count; i++) {\n            if (numbers[i]\
    \ > max) {\n                max = numbers[i];\n            }\n            result.Add(max);\n\
    \        }\n        return result;", "        var result = new List<long>();\n\
    \        long currentMax = numbers[0];\n        result.Add(currentMax);\n    \
    \    for (int i = 1; i < numbers.Count; i++) {\n            if (numbers[i] > currentMax)\
    \ {\n                currentMax = numbers[i];\n            }\n            result.Add(currentMax);\n\
    \        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        long currentMax = numbers[0];\n        result.Add(currentMax);\n    \
    \    for (int i = 1; i < numbers.Count; i++) {\n            if (numbers[i] > currentMax)\
    \ {\n                currentMax = numbers[i];\n            }\n            result.Add(currentMax);\n\
    \        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        long max = numbers[0];\n        result.Add(max);\n        for (int i\
    \ = 1; i < numbers.Count; i++) {\n            if (numbers[i] > max) {\n      \
    \          max = numbers[i];\n            }\n            result.Add(max);\n  \
    \      }\n        return result;", "        List<long> result = new List<long>();\n\
    \        long max = numbers[0];\n        result.Add(max);\n        for (int i\
    \ = 1; i < numbers.Count; i++) {\n            if (numbers[i] > max) {\n      \
    \          max = numbers[i];\n            }\n            result.Add(max);\n  \
    \      }\n        return result;", "        var result = new List<long>();\n \
    \       long max = numbers[0];\n        result.Add(max);\n        for (int i =\
    \ 1; i < numbers.Count; i++) {\n            max = Math.Max(max, numbers[i]);\n\
    \            result.Add(max);\n        }\n        return result;", "        List<long>\
    \ result = new List<long>();\n        long max = numbers[0];\n        result.Add(max);\n\
    \        for (int i = 1; i < numbers.Count; i++) {\n            if (numbers[i]\
    \ > max) {\n                max = numbers[i];\n            }\n            result.Add(max);\n\
    \        }\n        return result;", "        var result = new List<long>();\n\
    \        long max = numbers[0];\n        result.Add(max);\n        for (int i\
    \ = 1; i < numbers.Count; i++) {\n            if (numbers[i] > max) {\n      \
    \          max = numbers[i];\n            }\n            result.Add(max);\n  \
    \      }\n        return result;", "        var result = new List<long>();\n \
    \       long max = numbers[0];\n        result.Add(max);\n        for (int i =\
    \ 1; i < numbers.Count; i++) {\n            max = Math.Max(max, numbers[i]);\n\
    \            result.Add(max);\n        }\n        return result;", "        List<long>\
    \ result = new List<long>();\n        long max = numbers[0];\n        result.Add(max);\n\
    \        for (int i = 1; i < numbers.Count; i++) {\n            if (numbers[i]\
    \ > max) {\n                max = numbers[i];\n            }\n            result.Add(max);\n\
    \        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        long currentMax = numbers[0];\n        result.Add(currentMax);\n    \
    \    for (int i = 1; i < numbers.Count; i++) {\n            if (numbers[i] > currentMax)\
    \ {\n                currentMax = numbers[i];\n            }\n            result.Add(currentMax);\n\
    \        }\n        return result;", "        var result = new List<long>();\n\
    \        long currentMax = numbers[0];\n        result.Add(currentMax);\n    \
    \    for (int i = 1; i < numbers.Count; i++) {\n            if (numbers[i] > currentMax)\
    \ {\n                currentMax = numbers[i];\n            }\n            result.Add(currentMax);\n\
    \        }\n        return result;", "        var max = numbers[0];\n        var\
    \ result = new List<long>();\n        result.Add(max);\n        for (int i = 1;\
    \ i < numbers.Count; i++) {\n            var n = numbers[i];\n            if (n\
    \ > max) {\n                max = n;\n            }\n            result.Add(max);\n\
    \        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        long max = numbers[0];\n        result.Add(max);\n        for (int i\
    \ = 1; i < numbers.Count; i++) {\n            if (numbers[i] > max) {\n      \
    \          max = numbers[i];\n            }\n            result.Add(max);\n  \
    \      }\n        return result;", "        var result = new List<long>();\n \
    \       long max = numbers[0];\n        result.Add(max);\n        for (int i =\
    \ 1; i < numbers.Count; i++) {\n            if (numbers[i] > max) {\n        \
    \        max = numbers[i];\n            }\n            result.Add(max);\n    \
    \    }\n        return result;"]
stop_tokens:
- "\n    }\n"

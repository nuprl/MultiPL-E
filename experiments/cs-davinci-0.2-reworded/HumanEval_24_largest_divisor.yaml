name: HumanEval_24_largest_divisor
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // For a given number n, find the largest number that divides n\
  \ evenly, smaller than n\n    // >>> LargestDivisor((15L))\n    // (5L)\n    public\
  \ static long LargestDivisor(long n) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(LargestDivisor((3L))\
  \ == (1L));\n    Debug.Assert(LargestDivisor((7L)) == (1L));\n    Debug.Assert(LargestDivisor((10L))\
  \ == (5L));\n    Debug.Assert(LargestDivisor((100L)) == (50L));\n    Debug.Assert(LargestDivisor((49L))\
  \ == (7L));\n    }\n\n}\n"
completions: ["        long i = n / 2;\n        while (i > 1) {\n            if (n\
    \ % i == 0) {\n                return i;\n            }\n            i--;\n  \
    \      }\n        return 1;", "        for (long i = n - 1; i > 1; i--) {\n  \
    \          if (n % i == 0) {\n                return i;\n            }\n     \
    \   }\n        return 1;", "        long largest = 1;\n        for (long i = 2;\
    \ i < n; i++) {\n            if (n % i == 0) {\n                largest = i;\n\
    \            }\n        }\n        return largest;", "        for (long i = n\
    \ / 2; i > 1; i--) {\n            if (n % i == 0) {\n                return i;\n\
    \            }\n        }\n        return 1;", "        long largestDivisor =\
    \ 1;\n        for (long i = 2; i < n; i++) {\n            if (n % i == 0) {\n\
    \                largestDivisor = i;\n            }\n        }\n        return\
    \ largestDivisor;", "        for (long i = n - 1; i > 1; i--) {\n            if\
    \ (n % i == 0) {\n                return i;\n            }\n        }\n      \
    \  return 1;", "        if (n == 1) {\n            return 1;\n        }\n    \
    \    long i = 2;\n        while (i < n) {\n            if (n % i == 0) {\n   \
    \             return n / i;\n            }\n            i++;\n        }\n    \
    \    return 1;", "        long largestDivisor = 1;\n        for (long i = 2; i\
    \ <= n; i++) {\n            if (n % i == 0) {\n                largestDivisor\
    \ = i;\n            }\n        }\n        return largestDivisor;", "        for\
    \ (long i = n - 1; i > 1; i--) {\n            if (n % i == 0) {\n            \
    \    return i;\n            }\n        }\n        return 1;", "        long largestDivisor\
    \ = 1;\n        for (long i = 2; i <= n / 2; i++) {\n            if (n % i ==\
    \ 0) {\n                largestDivisor = i;\n            }\n        }\n      \
    \  return largestDivisor;", "        long maxDivisor = n - 1;\n        while (maxDivisor\
    \ > 1) {\n            if (n % maxDivisor == 0) {\n                return maxDivisor;\n\
    \            }\n            maxDivisor--;\n        }\n        return 1;", "  \
    \      long largest = 1;\n        for (long i = 2; i < n; i++) {\n           \
    \ if (n % i == 0) {\n                largest = i;\n            }\n        }\n\
    \        return largest;", "        for (long i = n - 1; i > 1; i--) {\n     \
    \       if (n % i == 0) {\n                return i;\n            }\n        }\n\
    \        return 1;", "        for (long i = n - 1; i > 1; i--) {\n           \
    \ if (n % i == 0) {\n                return i;\n            }\n        }\n   \
    \     return 1;", "        for (long i = 2; i < n; i++) {\n            if (n %\
    \ i == 0) {\n                return i;\n            }\n        }\n        return\
    \ 1;", "        long i = n / 2;\n        while (i > 1) {\n            if (n %\
    \ i == 0) {\n                return i;\n            }\n            i--;\n    \
    \    }\n        return 1;", "        for (long i = n - 1; i > 1; i--) {\n    \
    \        if (n % i == 0) {\n                return i;\n            }\n       \
    \ }\n        return 1;", "        for (long i = n - 1; i > 1; i--) {\n       \
    \     if (n % i == 0) {\n                return i;\n            }\n        }\n\
    \        return 1;", "        for (long i = n - 1; i > 1; i--) {\n           \
    \ if (n % i == 0) {\n                return i;\n            }\n        }\n   \
    \     return 1;", "        long maxDivisor = n - 1;\n        while (maxDivisor\
    \ > 1) {\n            if (n % maxDivisor == 0) {\n                return maxDivisor;\n\
    \            }\n            maxDivisor--;\n        }\n        return 1;"]
stop_tokens:
- "\n    }\n"

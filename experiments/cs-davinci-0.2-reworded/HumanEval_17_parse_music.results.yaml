language: cs
name: HumanEval_17_parse_music
results:
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        List<long> result = new List<long>();\n        // Your
    code goes here.\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o
    o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,
    (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .|
    o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L,
    (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o|
    .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L,
    (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d9e771fcc3b341d1a13398388f23a321>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d9e771fcc3b341d1a13398388f23a321>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799607
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        var result = new List<long>();\n        var beats = new
    Dictionary<char, long>();\n        beats['o'] = 4;\n        beats['|'] = 2;\n
    \       beats['.'] = 1;\n        var current_beat = 0L;\n        foreach (var
    c in music_string) {\n            if (c == ' ') {\n                result.Add(current_beat);\n
    \               current_beat = 0;\n            } else {\n                current_beat
    += beats[c];\n            }\n        }\n        result.Add(current_beat);\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new
    List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new
    long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".|
    .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n
    \   Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new
    long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new List<long>(new
    long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4b84e77ed2724f829c867bb15770e6f1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4b84e77ed2724f829c867bb15770e6f1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        List<long> result = new List<long>();\n        for (int
    i = 0; i < music_string.Length; i++) {\n            if (music_string[i] == 'o')
    {\n                if (i + 1 < music_string.Length && music_string[i + 1] == '|')
    {\n                    result.Add(2);\n                    i++;\n                }
    else {\n                    result.Add(4);\n                }\n            } else
    if (music_string[i] == '.') {\n                result.Add(1);\n                i++;\n
    \           }\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n
    \   Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,
    (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o|
    o| .| .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,
    (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o|
    .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L,
    (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d6e66c1e39ae41a191f458f51849c9d1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d6e66c1e39ae41a191f458f51849c9d1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        List<long> result = new List<long>();\n        string[]
    notes = music_string.Split(' ');\n        foreach (string note in notes) {\n            if
    (note == \"o\") {\n                result.Add(4);\n            } else if (note
    == \"o|\") {\n                result.Add(2);\n            } else if (note == \".|\")
    {\n                result.Add(1);\n            }\n        }\n        return result;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new
    List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new
    long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".|
    .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n
    \   Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new
    long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new List<long>(new
    long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0e88bca602a8422990190e4fababf9ab>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0e88bca602a8422990190e4fababf9ab>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799607
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        var result = new List<long>();\n        var current_note
    = new StringBuilder();\n        foreach (var c in music_string) {\n            if
    (c == ' ') {\n                result.Add(current_note.ToString() == \"o\" ? 4
    : 2);\n                current_note.Clear();\n            } else {\n                current_note.Append(c);\n
    \           }\n        }\n        result.Add(current_note.ToString() == \"o\"
    ? 4 : 2);\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o
    o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,
    (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .|
    o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L,
    (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o|
    .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L,
    (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <48cf892e18964dd9ae99cab2fb19ae1e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <48cf892e18964dd9ae99cab2fb19ae1e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799607
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        List<long> result = new List<long>();\n        for (int
    i = 0; i < music_string.Length; i++) {\n            if (music_string[i] == 'o')
    {\n                result.Add(4);\n            }\n            else if (music_string[i]
    == '.') {\n                result.Add(1);\n            }\n            else if
    (music_string[i] == '|') {\n                result.Add(2);\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o
    o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,
    (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .|
    o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L,
    (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o|
    .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L,
    (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c4bedc8fd1c447818ef69ea63196a995>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c4bedc8fd1c447818ef69ea63196a995>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799607
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        List<long> result = new List<long>();\n        // Your
    code goes here\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o
    o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,
    (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .|
    o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L,
    (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o|
    .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L,
    (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1da6c7e19f6f47f8bbe6f48c3222d20f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1da6c7e19f6f47f8bbe6f48c3222d20f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799607
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        List<long> result = new List<long>();\n        for (int
    i = 0; i < music_string.Length; i++) {\n            if (music_string[i] == 'o')
    {\n                if (i + 1 < music_string.Length && music_string[i + 1] == '|')
    {\n                    result.Add(2);\n                    i++;\n                }
    else {\n                    result.Add(4);\n                }\n            } else
    if (music_string[i] == '.') {\n                result.Add(1);\n                i++;\n
    \           }\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n
    \   Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,
    (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o|
    o| .| .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,
    (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o|
    .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L,
    (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d6e66c1e39ae41a191f458f51849c9d1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d6e66c1e39ae41a191f458f51849c9d1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        List<long> result = new List<long>();\n        int i
    = 0;\n        while (i < music_string.Length) {\n            if (music_string[i]
    == 'o') {\n                if (i + 1 < music_string.Length && music_string[i +
    1] == '|') {\n                    result.Add(2);\n                    i += 2;\n
    \               } else {\n                    result.Add(4);\n                    i
    += 1;\n                }\n            } else {\n                result.Add(1);\n
    \               i += 2;\n            }\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new
    List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new
    long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".|
    .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n
    \   Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new
    long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new List<long>(new
    long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e8cb2e1b19a04929bf2dc6c9159b5eb5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e8cb2e1b19a04929bf2dc6c9159b5eb5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        var result = new List<long>();\n        var notes = music_string.Split('
    ');\n        foreach (var note in notes) {\n            if (note == \"o\") {\n
    \               result.Add(4);\n            } else if (note == \"o|\") {\n                result.Add(2);\n
    \           } else if (note == \".|\") {\n                result.Add(1);\n            }\n
    \       }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o
    o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,
    (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .|
    o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L,
    (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o|
    .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L,
    (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ca417ca0f5ca4378837c6524ec190d6c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ca417ca0f5ca4378837c6524ec190d6c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        var result = new List<long>();\n        var notes = music_string.Split('
    ');\n        foreach (var note in notes) {\n            if (note == \"o\") {\n
    \               result.Add(4);\n            } else if (note == \"o|\") {\n                result.Add(2);\n
    \           } else if (note == \".|\") {\n                result.Add(1);\n            }\n
    \       }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o
    o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,
    (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .|
    o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L,
    (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o|
    .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L,
    (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ca417ca0f5ca4378837c6524ec190d6c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ca417ca0f5ca4378837c6524ec190d6c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        List<long> result = new List<long>();\n        foreach
    (var c in music_string) {\n            if (c == 'o') {\n                result.Add(4);\n
    \           } else if (c == '|') {\n                result[result.Count - 1] /=
    2;\n            }\n        }\n        return result;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n
    \   Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,
    (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o|
    o| .| .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,
    (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o|
    .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L,
    (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e79fc651183e4268b4ecfcd387c5bd5b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e79fc651183e4268b4ecfcd387c5bd5b>:0
    \n\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out of
    range. Must be non-negative and less than the size of the collection.\nParameter
    name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32
    index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.ParseMusic
    (System.String music_string) ["
  stdout: ''
  timestamp: 1659799607
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        List<long> result = new List<long>();\n        for (int
    i = 0; i < music_string.Length; i++) {\n            if (music_string[i] == 'o')
    {\n                if (i + 1 < music_string.Length && music_string[i + 1] == '|')
    {\n                    result.Add(2);\n                    i++;\n                }
    else {\n                    result.Add(4);\n                }\n            } else
    if (music_string[i] == '.') {\n                result.Add(1);\n                i++;\n
    \           }\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n
    \   Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,
    (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o|
    o| .| .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,
    (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o|
    .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L,
    (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d6e66c1e39ae41a191f458f51849c9d1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d6e66c1e39ae41a191f458f51849c9d1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        var result = new List<long>();\n        var notes = music_string.Split('
    ');\n        foreach (var note in notes) {\n            if (note == \"o\") {\n
    \               result.Add(4);\n            } else if (note == \"o|\") {\n                result.Add(2);\n
    \           } else if (note == \".|\") {\n                result.Add(1);\n            }\n
    \       }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o
    o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,
    (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .|
    o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L,
    (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o|
    .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L,
    (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ca417ca0f5ca4378837c6524ec190d6c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ca417ca0f5ca4378837c6524ec190d6c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        List<long> result = new List<long>();\n        for (int
    i = 0; i < music_string.Length; i++) {\n            if (music_string[i] == 'o')
    {\n                result.Add(4);\n            }\n            else if (music_string[i]
    == '.') {\n                result.Add(1);\n            }\n            else if
    (music_string[i] == '|') {\n                result.Add(2);\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o
    o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,
    (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .|
    o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L,
    (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o|
    .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L,
    (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c4bedc8fd1c447818ef69ea63196a995>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c4bedc8fd1c447818ef69ea63196a995>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799607
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        var res = new List<long>();\n        var beats = new
    List<char>();\n        foreach (var c in music_string) {\n            if (c ==
    ' ') {\n                if (beats.Count == 0) {\n                    continue;\n
    \               }\n                if (beats.Count == 1) {\n                    if
    (beats[0] == 'o') {\n                        res.Add(4);\n                    }
    else if (beats[0] == '.') {\n                        res.Add(1);\n                    }
    else {\n                        throw new Exception(\"Invalid music string\");\n
    \                   }\n                } else if (beats.Count == 2) {\n                    if
    (beats[0] == 'o' && beats[1] == '|') {\n                        res.Add(2);\n
    \                   } else {\n                        throw new Exception(\"Invalid
    music string\");\n                    }\n                } else {\n                    throw
    new Exception(\"Invalid music string\");\n                }\n                beats.Clear();\n
    \           } else {\n                beats.Add(c);\n            }\n        }\n
    \       if (beats.Count > 0) {\n            throw new Exception(\"Invalid music
    string\");\n        }\n        return res;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o
    o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,
    (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .|
    o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L,
    (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o|
    .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L,
    (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e7127e20ad884d0e9ba726faeef928d7>:0
    \n\nUnhandled Exception:\nSystem.Exception: Invalid music string\n  at Problem.ParseMusic
    (System.String music_string) [0x0012e] in <e7127e20ad884d0e9ba726faeef928d7>:0
    \n  at Problem.Main (System.String[] args) [0x0001b] in <e7127e20ad884d0e9ba726faeef928d7>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.Exception: Invalid music string\n
    \ at Problem.ParseMusic (System.String music_string) [0x0012e] in <e7127e20ad884d0e9ba726faeef928d7>:0
    \n  at Problem.Main (System.String[] args) [0x0001b] in <e7127e20ad884d0e9ba726faeef928d7>:0
    \n"
  stdout: ''
  timestamp: 1659799607
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        var result = new List<long>();\n        var notes = music_string.Split('
    ');\n        foreach (var note in notes) {\n            switch (note) {\n                case
    \"o\":\n                    result.Add(4);\n                    break;\n                case
    \"o|\":\n                    result.Add(2);\n                    break;\n                case
    \".|\":\n                    result.Add(1);\n                    break;\n            }\n
    \       }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o
    o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,
    (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .|
    o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L,
    (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o|
    .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L,
    (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1547400e75374e538eeb07c91af31d0e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1547400e75374e538eeb07c91af31d0e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        List<long> result = new List<long>();\n        foreach
    (var c in music_string) {\n            if (c == 'o') {\n                result.Add(4);\n
    \           } else if (c == '|') {\n                result[result.Count - 1] /=
    2;\n            }\n        }\n        return result;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n
    \   Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,
    (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o|
    o| .| .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,
    (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o|
    .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L,
    (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e79fc651183e4268b4ecfcd387c5bd5b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e79fc651183e4268b4ecfcd387c5bd5b>:0
    \n\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out of
    range. Must be non-negative and less than the size of the collection.\nParameter
    name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32
    index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.ParseMusic
    (System.String music_string) ["
  stdout: ''
  timestamp: 1659799607
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        var result = new List<long>();\n        var beats = new
    Dictionary<char, long>();\n        beats['o'] = 4;\n        beats['|'] = 2;\n
    \       beats['.'] = 1;\n        var current_beat = 0L;\n        foreach (var
    c in music_string) {\n            if (beats.ContainsKey(c)) {\n                current_beat
    += beats[c];\n            } else {\n                result.Add(current_beat);\n
    \               current_beat = 0;\n            }\n        }\n        result.Add(current_beat);\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o
    o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,
    (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .|
    o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L,
    (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o|
    .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L,
    (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <16f4b26f953f43879fd93669d9a0003a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <16f4b26f953f43879fd93669d9a0003a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        List<long> result = new List<long>();\n        int i
    = 0;\n        while (i < music_string.Length) {\n            if (music_string[i]
    == 'o') {\n                if (i + 1 < music_string.Length && music_string[i +
    1] == '|') {\n                    result.Add(2);\n                    i += 2;\n
    \               } else {\n                    result.Add(4);\n                    i
    += 1;\n                }\n            } else {\n                result.Add(1);\n
    \               i += 2;\n            }\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new
    List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new
    long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".|
    .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n
    \   Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new
    long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new List<long>(new
    long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e8cb2e1b19a04929bf2dc6c9159b5eb5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e8cb2e1b19a04929bf2dc6c9159b5eb5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        var result = new List<long>();\n        var notes = music_string.Split('
    ');\n        foreach (var note in notes) {\n            switch (note) {\n                case
    \"o\":\n                    result.Add(4);\n                    break;\n                case
    \"o|\":\n                    result.Add(2);\n                    break;\n                case
    \".|\":\n                    result.Add(1);\n                    break;\n            }\n
    \       }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o
    o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,
    (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .|
    o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L,
    (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o|
    .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L,
    (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1547400e75374e538eeb07c91af31d0e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1547400e75374e538eeb07c91af31d0e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        List<long> result = new List<long>();\n        string[]
    notes = music_string.Split(' ');\n        foreach (string note in notes) {\n            if
    (note == \"o\") {\n                result.Add(4);\n            } else if (note
    == \"o|\") {\n                result.Add(2);\n            } else if (note == \".|\")
    {\n                result.Add(1);\n            }\n        }\n        return result;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new
    List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new
    long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".|
    .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n
    \   Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new
    long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new List<long>(new
    long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0e88bca602a8422990190e4fababf9ab>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0e88bca602a8422990190e4fababf9ab>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799607
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        var result = new List<long>();\n        var notes = music_string.Split('
    ');\n        foreach (var note in notes) {\n            if (note == \"o\") {\n
    \               result.Add(4);\n            } else if (note == \"o|\") {\n                result.Add(2);\n
    \           } else if (note == \".|\") {\n                result.Add(1);\n            }\n
    \       }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o
    o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,
    (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .|
    o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L,
    (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o|
    .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L,
    (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ca417ca0f5ca4378837c6524ec190d6c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ca417ca0f5ca4378837c6524ec190d6c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        var result = new List<long>();\n        var current_note
    = new StringBuilder();\n        foreach (var c in music_string) {\n            if
    (c == ' ') {\n                result.Add(current_note.ToString() == \"o\" ? 4
    : 2);\n                current_note.Clear();\n            } else {\n                current_note.Append(c);\n
    \           }\n        }\n        result.Add(current_note.ToString() == \"o\"
    ? 4 : 2);\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o
    o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,
    (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .|
    o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L,
    (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o|
    .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L,
    (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <48cf892e18964dd9ae99cab2fb19ae1e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <48cf892e18964dd9ae99cab2fb19ae1e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799607
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        List<long> result = new List<long>();\n        foreach
    (var c in music_string) {\n            if (c == 'o') {\n                result.Add(4);\n
    \           } else if (c == '|') {\n                result[result.Count - 1] /=
    2;\n            }\n        }\n        return result;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n
    \   Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,
    (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o|
    o| .| .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,
    (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o|
    .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L,
    (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e79fc651183e4268b4ecfcd387c5bd5b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e79fc651183e4268b4ecfcd387c5bd5b>:0
    \n\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out of
    range. Must be non-negative and less than the size of the collection.\nParameter
    name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32
    index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.ParseMusic
    (System.String music_string) ["
  stdout: ''
  timestamp: 1659799607
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        var result = new List<long>();\n        var notes = music_string.Split('
    ');\n        foreach (var note in notes) {\n            if (note == \"o\") {\n
    \               result.Add(4);\n            } else if (note == \"o|\") {\n                result.Add(2);\n
    \           } else if (note == \".|\") {\n                result.Add(1);\n            }\n
    \       }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o
    o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,
    (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .|
    o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L,
    (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o|
    .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L,
    (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ca417ca0f5ca4378837c6524ec190d6c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ca417ca0f5ca4378837c6524ec190d6c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        var result = new List<long>();\n        var notes = music_string.Split('
    ');\n        foreach (var note in notes) {\n            if (note == \"o\") {\n
    \               result.Add(4);\n            } else if (note == \"o|\") {\n                result.Add(2);\n
    \           } else if (note == \".|\") {\n                result.Add(1);\n            }\n
    \       }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o
    o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,
    (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .|
    o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L,
    (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o|
    .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L,
    (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ca417ca0f5ca4378837c6524ec190d6c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ca417ca0f5ca4378837c6524ec190d6c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        // your code goes here\n        return new List<long>();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new
    List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new
    long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".|
    .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n
    \   Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new
    long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new List<long>(new
    long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <bf605134172f49e89c3a2cdc445cbb2d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <bf605134172f49e89c3a2cdc445cbb2d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        return null;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o
    o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,
    (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .|
    o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L,
    (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o|
    .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L,
    (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x00010] in <2b1b5963d0374439a5623e924224ad5e>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x00010] in <2b1b5963d0374439a5623e924224ad5e>:0
    \n"
  stdout: ''
  timestamp: 1659799607
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        List<long> result = new List<long>();\n        long beats
    = 0;\n        foreach (char c in music_string) {\n            if (c == 'o') {\n
    \               beats = 4;\n            } else if (c == '|') {\n                beats
    /= 2;\n            } else if (c == '.') {\n                result.Add(beats);\n
    \           }\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n
    \   Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,
    (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o|
    o| .| .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,
    (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o|
    .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L,
    (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0e7db3e46949482f80e1accd71475aa5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0e7db3e46949482f80e1accd71475aa5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        List<long> result = new List<long>();\n        long counter
    = 0;\n        for (int i = 0; i < music_string.Length; i++) {\n            if
    (music_string[i] == 'o') {\n                result.Add(4);\n                counter
    += 4;\n            }\n            else if (music_string[i] == '|') {\n                result.Add(counter);\n
    \               counter = 0;\n            }\n            else if (music_string[i]
    == '.') {\n                counter += 1;\n            }\n        }\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new
    List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new
    long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".|
    .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n
    \   Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new
    long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new List<long>(new
    long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <536a66a7294f4dce8e60c22dbe62ecc5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <536a66a7294f4dce8e60c22dbe62ecc5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        var beats = new List<long>();\n        var currentBeat
    = 0L;\n        foreach (var c in music_string) {\n            switch (c) {\n                case
    'o':\n                    beats.Add(4L);\n                    currentBeat += 4L;\n
    \                   break;\n                case '|':\n                    if
    (currentBeat % 2 == 0) {\n                        beats.Add(2L);\n                        currentBeat
    += 2L;\n                    } else {\n                        beats.Add(1L);\n
    \                       currentBeat += 1L;\n                    }\n                    break;\n
    \               case '.':\n                    beats.Add(1L);\n                    currentBeat
    += 1L;\n                    break;\n                default:\n                    break;\n
    \           }\n        }\n        return beats;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n
    \   Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,
    (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o|
    o| .| .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,
    (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o|
    .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L,
    (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3d51f67d3a2f45e9aa64b36195ebe17e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3d51f67d3a2f45e9aa64b36195ebe17e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        var result = new List<long>();\n        var beats = new
    Dictionary<char, long>();\n        beats['o'] = 4;\n        beats['|'] = 2;\n
    \       beats['.'] = 1;\n        var current_beat = 0L;\n        foreach (var
    c in music_string) {\n            if (beats.ContainsKey(c)) {\n                result.Add(beats[c]);\n
    \           }\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n
    \   Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,
    (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o|
    o| .| .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,
    (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o|
    .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L,
    (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <32416936f10e4599b1e765891673aaeb>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <32416936f10e4599b1e765891673aaeb>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        var result = new List<long>();\n        var notes = music_string.Split('
    ');\n        foreach (var note in notes) {\n            if (note == \"o\") {\n
    \               result.Add(4);\n            } else if (note == \"o|\") {\n                result.Add(2);\n
    \           } else if (note == \".|\") {\n                result.Add(1);\n            }\n
    \       }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o
    o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,
    (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .|
    o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L,
    (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o|
    .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L,
    (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ca417ca0f5ca4378837c6524ec190d6c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ca417ca0f5ca4378837c6524ec190d6c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        var result = new List<long>();\n        var notes = music_string.Split('
    ');\n        foreach (var note in notes) {\n            switch (note) {\n                case
    \"o\":\n                    result.Add(4);\n                    break;\n                case
    \"o|\":\n                    result.Add(2);\n                    break;\n                case
    \".|\":\n                    result.Add(1);\n                    break;\n            }\n
    \       }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o
    o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,
    (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .|
    o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L,
    (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o|
    .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L,
    (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1547400e75374e538eeb07c91af31d0e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1547400e75374e538eeb07c91af31d0e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        var beats = new List<long>();\n        var notes = music_string.Split('
    ');\n        foreach (var note in notes) {\n            if (note == \"o\") {\n
    \               beats.Add(4);\n            } else if (note == \"o|\") {\n                beats.Add(2);\n
    \           } else if (note == \".|\") {\n                beats.Add(1);\n            }\n
    \       }\n        return beats;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o
    o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,
    (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .|
    o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L,
    (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o|
    .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L,
    (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8722ff579dcf4bbaac9cd4122aeacf5c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8722ff579dcf4bbaac9cd4122aeacf5c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        var result = new List<long>();\n        var notes = music_string.Split('
    ');\n        foreach (var note in notes) {\n            switch (note) {\n                case
    \"o\":\n                    result.Add(4);\n                    break;\n                case
    \"o|\":\n                    result.Add(2);\n                    break;\n                case
    \".|\":\n                    result.Add(1);\n                    break;\n            }\n
    \       }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o
    o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,
    (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .|
    o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L,
    (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o|
    .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L,
    (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1547400e75374e538eeb07c91af31d0e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1547400e75374e538eeb07c91af31d0e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        var result = new List<long>();\n        var notes = music_string.Split('
    ');\n        foreach (var note in notes) {\n            switch (note) {\n                case
    \"o\":\n                    result.Add(4);\n                    break;\n                case
    \"o|\":\n                    result.Add(2);\n                    break;\n                case
    \".|\":\n                    result.Add(1);\n                    break;\n            }\n
    \       }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o
    o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,
    (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .|
    o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L,
    (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o|
    .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L,
    (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1547400e75374e538eeb07c91af31d0e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1547400e75374e538eeb07c91af31d0e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        var result = new List<long>();\n        var current_note
    = \"\";\n        foreach (var c in music_string) {\n            if (c == ' ')
    {\n                if (current_note == \"o\") {\n                    result.Add(4);\n
    \               } else if (current_note == \"o|\") {\n                    result.Add(2);\n
    \               } else if (current_note == \".|\") {\n                    result.Add(1);\n
    \               }\n                current_note = \"\";\n            } else {\n
    \               current_note += c;\n            }\n        }\n        if (current_note
    == \"o\") {\n            result.Add(4);\n        } else if (current_note == \"o|\")
    {\n            result.Add(2);\n        } else if (current_note == \".|\") {\n
    \           result.Add(1);\n        }\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new
    List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new
    long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".|
    .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n
    \   Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new
    long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new List<long>(new
    long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e1ec55859943459ebee0fedb51fe3729>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e1ec55859943459ebee0fedb51fe3729>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        List<long> result = new List<long>();\n        long current_beat
    = 0L;\n        foreach (char c in music_string) {\n            if (c == 'o') {\n
    \               result.Add(4L);\n                current_beat += 4L;\n            }
    else if (c == '|') {\n                result.Add(current_beat);\n                current_beat
    = 0L;\n            }\n        }\n        return result;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n
    \   Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,
    (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o|
    o| .| .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,
    (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o|
    .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L,
    (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5176f8775f5c4bf3b52530962f0e5285>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5176f8775f5c4bf3b52530962f0e5285>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799607
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        var result = new List<long>();\n        var notes = music_string.Split('
    ');\n        foreach (var note in notes) {\n            if (note == \"o\") {\n
    \               result.Add(4);\n            } else if (note == \"o|\") {\n                result.Add(2);\n
    \           } else if (note == \".|\") {\n                result.Add(1);\n            }\n
    \       }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o
    o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,
    (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .|
    o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L,
    (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o|
    .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L,
    (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ca417ca0f5ca4378837c6524ec190d6c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ca417ca0f5ca4378837c6524ec190d6c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        List<long> result = new List<long>();\n        long beats
    = 0;\n        foreach (char c in music_string) {\n            if (c == 'o') {\n
    \               beats += 4;\n            } else if (c == '|') {\n                result.Add(beats);\n
    \               beats = 0;\n            }\n        }\n        result.Add(beats);\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o
    o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,
    (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .|
    o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L,
    (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o|
    .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L,
    (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <bab4e998e72a4a7d940ee5280d53d091>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <bab4e998e72a4a7d940ee5280d53d091>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799607
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        // Your code goes here\n        List<long> result = new
    List<long>();\n        string[] notes = music_string.Split(' ');\n        foreach
    (string note in notes) {\n            switch (note) {\n                case \"o\":\n
    \                   result.Add(4);\n                    break;\n                case
    \"o|\":\n                    result.Add(2);\n                    break;\n                case
    \".|\":\n                    result.Add(1);\n                    break;\n            }\n
    \       }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o
    o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,
    (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .|
    o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L,
    (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o|
    .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L,
    (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6fdee8e546a4454b81147238bd3e8c25>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6fdee8e546a4454b81147238bd3e8c25>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        var beats = new List<long>();\n        for (int i = 0;
    i < music_string.Length; i++) {\n            if (music_string[i] == 'o') {\n                if
    (i + 1 < music_string.Length && music_string[i + 1] == '|') {\n                    beats.Add(2);\n
    \                   i++;\n                }\n                else {\n                    beats.Add(4);\n
    \               }\n            }\n            else if (music_string[i] == '.')
    {\n                beats.Add(1);\n                i++;\n            }\n        }\n
    \       return beats;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new
    List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new
    long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".|
    .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n
    \   Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new
    long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new List<long>(new
    long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4e29b2e874b947bc84c367eb3363f196>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4e29b2e874b947bc84c367eb3363f196>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        List<long> result = new List<long>();\n        string[]
    notes = music_string.Split(' ');\n        foreach (string note in notes) {\n            if
    (note == \"o\") {\n                result.Add(4);\n            } else if (note
    == \"o|\") {\n                result.Add(2);\n            } else if (note == \".|\")
    {\n                result.Add(1);\n            }\n        }\n        return result;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new
    List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new
    long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".|
    .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n
    \   Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new
    long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new List<long>(new
    long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0e88bca602a8422990190e4fababf9ab>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0e88bca602a8422990190e4fababf9ab>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799607
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        var result = new List<long>();\n        var beats = new
    Dictionary<char, long>();\n        beats['o'] = 4;\n        beats['|'] = 2;\n
    \       beats['.'] = 1;\n        var current_beat = 0L;\n        foreach (var
    c in music_string) {\n            if (c == ' ') {\n                result.Add(current_beat);\n
    \               current_beat = 0;\n            } else {\n                current_beat
    += beats[c];\n            }\n        }\n        result.Add(current_beat);\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new
    List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new
    long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".|
    .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n
    \   Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new
    long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new List<long>(new
    long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4b84e77ed2724f829c867bb15770e6f1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4b84e77ed2724f829c867bb15770e6f1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        var result = new List<long>();\n        var notes = music_string.Split('
    ');\n        foreach (var note in notes) {\n            switch (note) {\n                case
    \"o\":\n                    result.Add(4);\n                    break;\n                case
    \"o|\":\n                    result.Add(2);\n                    break;\n                case
    \".|\":\n                    result.Add(1);\n                    break;\n            }\n
    \       }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o
    o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,
    (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .|
    o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L,
    (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o|
    .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L,
    (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1547400e75374e538eeb07c91af31d0e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1547400e75374e538eeb07c91af31d0e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        List<long> res = new List<long>();\n        int i = 0;\n
    \       while (i < music_string.Length) {\n            if (music_string[i] ==
    'o') {\n                if (i + 1 < music_string.Length && music_string[i + 1]
    == '|') {\n                    res.Add(2);\n                    i += 2;\n                }
    else {\n                    res.Add(4);\n                    i += 1;\n                }\n
    \           } else {\n                res.Add(1);\n                i += 2;\n            }\n
    \       }\n        return res;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o
    o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,
    (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .|
    o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L,
    (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o|
    .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L,
    (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7fcde4626c13419083afcfae5585cc59>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7fcde4626c13419083afcfae5585cc59>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        var result = new List<long>();\n        var beats = new
    List<string>();\n        var notes = music_string.Split(' ');\n        foreach
    (var note in notes) {\n            if (note == \"o\") {\n                beats.Add(\"o\");\n
    \           } else if (note == \"o|\") {\n                beats.Add(\"o|\");\n
    \           } else if (note == \".|\") {\n                beats.Add(\".|\");\n
    \           }\n        }\n        foreach (var beat in beats) {\n            if
    (beat == \"o\") {\n                result.Add(4);\n            } else if (beat
    == \"o|\") {\n                result.Add(2);\n            } else if (beat == \".|\")
    {\n                result.Add(1);\n            }\n        }\n        return result;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new
    List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new
    long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".|
    .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n
    \   Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new
    long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new List<long>(new
    long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7ab4c7680e2c43c2b8b024da5a3ba2cf>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7ab4c7680e2c43c2b8b024da5a3ba2cf>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        List<long> result = new List<long>();\n        // Your
    code goes here\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o
    o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,
    (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .|
    o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L,
    (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o|
    .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L,
    (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1da6c7e19f6f47f8bbe6f48c3222d20f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1da6c7e19f6f47f8bbe6f48c3222d20f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799607
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        List<long> result = new List<long>();\n        long current_beat
    = 0L;\n        foreach (char c in music_string) {\n            if (c == 'o') {\n
    \               result.Add(4L);\n                current_beat += 4L;\n            }
    else if (c == '|') {\n                result.Add(current_beat);\n                current_beat
    = 0L;\n            }\n        }\n        return result;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n
    \   Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,
    (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o|
    o| .| .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,
    (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o|
    .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L,
    (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5176f8775f5c4bf3b52530962f0e5285>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5176f8775f5c4bf3b52530962f0e5285>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799607
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        List<long> res = new List<long>();\n        for (int
    i = 0; i < music_string.Length; i++) {\n            if (music_string[i] == 'o')
    {\n                if (i + 1 < music_string.Length && music_string[i + 1] == '|')
    {\n                    res.Add(2);\n                    i++;\n                }
    else {\n                    res.Add(4);\n                }\n            } else
    if (music_string[i] == '.') {\n                res.Add(1);\n                i++;\n
    \           }\n        }\n        return res;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o
    o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,
    (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .|
    o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L,
    (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o|
    .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L,
    (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <093d3da6bd6f49fbbaa0e09b0210b57d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <093d3da6bd6f49fbbaa0e09b0210b57d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        List<long> result = new List<long>();\n        string[]
    notes = music_string.Split(' ');\n        foreach (string note in notes) {\n            if
    (note == \"o\") {\n                result.Add(4);\n            } else if (note
    == \"o|\") {\n                result.Add(2);\n            } else if (note == \".|\")
    {\n                result.Add(1);\n            }\n        }\n        return result;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new
    List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new
    long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".|
    .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n
    \   Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new
    long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new List<long>(new
    long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0e88bca602a8422990190e4fababf9ab>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0e88bca602a8422990190e4fababf9ab>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799607
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        var result = new List<long>();\n        foreach (var
    c in music_string) {\n            if (c == 'o') {\n                result.Add(4);\n
    \           } else if (c == '|') {\n                result[result.Count - 1] /=
    2;\n            }\n        }\n        return result;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n
    \   Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,
    (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o|
    o| .| .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,
    (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o|
    .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L,
    (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <60d645aa40b34914949fa22b931d8207>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <60d645aa40b34914949fa22b931d8207>:0
    \n\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out of
    range. Must be non-negative and less than the size of the collection.\nParameter
    name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32
    index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.ParseMusic
    (System.String music_string) ["
  stdout: ''
  timestamp: 1659799608
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        var result = new List<long>();\n        foreach (var
    ch in music_string) {\n            if (ch == 'o') {\n                result.Add(4);\n
    \           } else if (ch == '|') {\n                result[result.Count - 1]
    /= 2;\n            }\n        }\n        return result;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n
    \   Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,
    (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o|
    o| .| .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,
    (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o|
    .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L,
    (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d7e9b72d6d3e48a9bca6485b94b4ab91>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d7e9b72d6d3e48a9bca6485b94b4ab91>:0
    \n\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out of
    range. Must be non-negative and less than the size of the collection.\nParameter
    name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32
    index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.ParseMusic
    (System.String music_string) ["
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        List<long> result = new List<long>();\n        string[]
    notes = music_string.Split(' ');\n        foreach (string note in notes) {\n            if
    (note == \"o\") {\n                result.Add(4);\n            } else if (note
    == \"o|\") {\n                result.Add(2);\n            } else if (note == \".|\")
    {\n                result.Add(1);\n            }\n        }\n        return result;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new
    List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new
    long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".|
    .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n
    \   Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new
    long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new List<long>(new
    long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0e88bca602a8422990190e4fababf9ab>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0e88bca602a8422990190e4fababf9ab>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799607
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        var beats = new List<long>();\n        var currentBeat
    = 0L;\n        var currentNote = 0L;\n        var currentNoteLength = 0L;\n        var
    currentNoteLengths = new List<long>();\n        var currentNoteLengthsIndex =
    0L;\n        var currentNoteLengthsLength = 0L;\n        var currentNoteLengthsLengths
    = new List<long>();\n        var currentNoteLengthsLengthsIndex = 0L;\n        var
    currentNoteLengthsLengthsLength = 0L;\n        var currentNoteLengthsLengthsLengths
    = new List<long>();\n        var currentNoteLengthsLengthsLengthsIndex = 0L;\n
    \       var currentNoteLengthsLengthsLengthsLength = 0L;\n        var currentNoteLengthsLengthsLengthsLengths
    = new List<long>();\n        var currentNoteLengthsLengthsLengthsLengthsIndex
    = 0L;\n        var currentNoteLengthsLengthsLengthsLengthsLength = 0L;\n        var
    currentNoteLengthsLengthsLengthsLengthsLengths = new List<long>();\n        var
    currentNoteLengthsLengthsLengthsLengthsLengthsIndex = 0L;\n        var currentNoteLengthsLengthsLengthsLengthsLengthsLength
    = 0L;\n        var currentNoteLengthsLengthsLengthsLengthsLengthsLengths = new
    List<long>();\n        var currentNoteLengthsLengthsLengthsLengthsLengthsLengthsIndex
    = 0L;\n        var currentNoteLengthsLengthsLengthsLengthsLengthsLengthsLength
    = 0L;\n        var currentNoteLengthsLengthsLengthsLengthsLengthsLengthsLengths
    = new List<long>();\n        var currentNoteLengthsLengthsLengthsLengthsLengthsLengthsLengthsIndex
    = 0L;\n        var currentNoteLengthsLengthsLengthsLengthsLengthsLengthsLengthsLength
    = 0L;\n        var currentNoteLengthsLengthsLengthsLengthsLengthsLengthsLengthsLengths
    = new List<long>();\n        var currentNoteLengthsLengthsLengthsLengthsLengthsLengthsLengthsLengthsIndex
    = 0L;\n        var currentNoteLengthsLengthsLengthsLengthsLengthsLengthsLengthsLengthsLength
    = 0L;\n\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new
    List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new
    long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".|
    .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n
    \   Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new
    long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new List<long>(new
    long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpa8kypyyo.cs(20,13): warning CS0219: The variable ''currentBeat'' is assigned
    but its value is never used

    /tmp/tmpa8kypyyo.cs(21,13): warning CS0219: The variable ''currentNote'' is assigned
    but its value is never used

    /tmp/tmpa8kypyyo.cs(22,13): warning CS0219: The variable ''currentNoteLength''
    is assigned but its value is never used

    /tmp/tmpa8kypyyo.cs(24,13): warning CS0219: The variable ''currentNoteLengthsIndex''
    is assigned but its value is never used

    /tmp/tmpa8kypyyo.cs(25,13): warning CS0219: The variable ''currentNoteLengthsLength''
    is assigned but its value is never used

    /tmp/tmpa8kypyyo.cs(27,13): warning CS0219: The variable ''currentNoteLengthsLengthsIndex''
    is assigned but its value is never used

    /tmp/tmpa8kypyyo.cs(28,13): warning CS0219: The variable ''currentNoteLengthsLengthsLength''
    is assigned but its value is never used

    /tmp/tmpa8kypyyo.cs(30,13): warning CS0219: The variable ''currentNoteLengthsLengthsLengthsIndex''
    is assigned but its value is never used

    /tmp/tmpa8kypyyo.cs(31,13): warning CS0219: The variable ''currentNoteLengthsLengthsLengthsLength''
    is assigned but its value is never used

    /tmp/tmpa8kypyyo.cs(33,13): warning CS0219: The variable ''currentNoteLengthsLengthsLengthsLengthsIndex''
    is assigned but its value is never used

    /tmp/tmpa8kypyyo.cs(34,13): warning CS0219: The variable ''currentNoteLengthsLengthsLengthsLengthsLength''
    is assigned but its value is never used

    /tmp/tmpa8kypyyo.cs(36,13): warning CS0219: The variable ''currentNoteLengthsLengthsLengthsLengthsLengthsIndex''
    is assigned but its value is never used

    /tmp/tmpa8kypyyo.cs(37,13): warning CS0219: The variable ''currentNoteLengthsLengthsLengthsLengthsLengthsLength''
    is assigned but its value is never used

    /tmp/tmpa8kypyyo.cs(39,13): warning CS0219: The variable ''currentNoteLengthsLengthsLengthsLengthsLengthsLengthsIndex''
    is assigned but its value is never used

    /tmp/tmpa8kypyyo.cs(40,13): warning CS0219: The v'
  timestamp: 1659799608
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        List<long> result = new List<long>();\n        foreach
    (var c in music_string) {\n            if (c == 'o') {\n                result.Add(4);\n
    \           } else if (c == '|') {\n                result[result.Count - 1] /=
    2;\n            }\n        }\n        return result;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n
    \   Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,
    (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o|
    o| .| .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,
    (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o|
    .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L,
    (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e79fc651183e4268b4ecfcd387c5bd5b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e79fc651183e4268b4ecfcd387c5bd5b>:0
    \n\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out of
    range. Must be non-negative and less than the size of the collection.\nParameter
    name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32
    index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.ParseMusic
    (System.String music_string) ["
  stdout: ''
  timestamp: 1659799607
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        List<long> result = new List<long>();\n        foreach
    (char c in music_string) {\n            if (c == 'o') {\n                result.Add(4);\n
    \           } else if (c == '|') {\n                result[result.Count - 1] /=
    2;\n            }\n        }\n        return result;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n
    \   Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,
    (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o|
    o| .| .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,
    (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o|
    .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L,
    (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1cc85df7e69849e28d63d8b3781442b4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1cc85df7e69849e28d63d8b3781442b4>:0
    \n\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out of
    range. Must be non-negative and less than the size of the collection.\nParameter
    name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32
    index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.ParseMusic
    (System.String music_string) ["
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        List<long> result = new List<long>();\n        foreach
    (var note in music_string.Split(' ')) {\n            switch (note) {\n                case
    \"o\":\n                    result.Add(4);\n                    break;\n                case
    \"o|\":\n                    result.Add(2);\n                    break;\n                case
    \".|\":\n                    result.Add(1);\n                    break;\n            }\n
    \       }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o
    o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,
    (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .|
    o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L,
    (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o|
    .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L,
    (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5be5e1d109a44872ae65816bc9fe8c1e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5be5e1d109a44872ae65816bc9fe8c1e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        var result = new List<long>();\n        var notes = music_string.Split('
    ');\n        foreach (var note in notes) {\n            if (note == \"o\") {\n
    \               result.Add(4);\n            } else if (note == \"o|\") {\n                result.Add(2);\n
    \           } else if (note == \".|\") {\n                result.Add(1);\n            }\n
    \       }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o
    o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,
    (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .|
    o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L,
    (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o|
    .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L,
    (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ca417ca0f5ca4378837c6524ec190d6c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ca417ca0f5ca4378837c6524ec190d6c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        List<long> result = new List<long>();\n        string[]
    notes = music_string.Split(' ');\n        foreach (string note in notes) {\n            if
    (note == \"o\") {\n                result.Add(4);\n            } else if (note
    == \"o|\") {\n                result.Add(2);\n            } else if (note == \".|\")
    {\n                result.Add(1);\n            }\n        }\n        return result;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new
    List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new
    long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".|
    .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n
    \   Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new
    long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new List<long>(new
    long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0e88bca602a8422990190e4fababf9ab>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0e88bca602a8422990190e4fababf9ab>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799607
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        var result = new List<long>();\n        var notes = music_string.Split('
    ');\n        foreach (var note in notes) {\n            switch (note) {\n                case
    \"o\":\n                    result.Add(4);\n                    break;\n                case
    \"o|\":\n                    result.Add(2);\n                    break;\n                case
    \".|\":\n                    result.Add(1);\n                    break;\n            }\n
    \       }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o
    o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,
    (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .|
    o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L,
    (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o|
    .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L,
    (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1547400e75374e538eeb07c91af31d0e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1547400e75374e538eeb07c91af31d0e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        var result = new List<long>();\n        var current =
    0L;\n        foreach (var c in music_string) {\n            if (c == 'o') {\n
    \               result.Add(current);\n                current = 4L;\n            }
    else if (c == '|') {\n                current /= 2L;\n            } else if (c
    == '.') {\n                result.Add(current);\n                current = 1L;\n
    \           }\n        }\n        result.Add(current);\n        return result;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new
    List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new
    long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".|
    .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n
    \   Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new
    long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new List<long>(new
    long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b590e45b43524a13ad5dfce3c70d6579>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <b590e45b43524a13ad5dfce3c70d6579>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        List<long> result = new List<long>();\n        foreach
    (var c in music_string) {\n            if (c == 'o') {\n                result.Add(4);\n
    \           } else if (c == '|') {\n                result[result.Count - 1] /=
    2;\n            }\n        }\n        return result;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n
    \   Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,
    (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o|
    o| .| .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,
    (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o|
    .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L,
    (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e79fc651183e4268b4ecfcd387c5bd5b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e79fc651183e4268b4ecfcd387c5bd5b>:0
    \n\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out of
    range. Must be non-negative and less than the size of the collection.\nParameter
    name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32
    index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.ParseMusic
    (System.String music_string) ["
  stdout: ''
  timestamp: 1659799607
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        var notes = new List<long>();\n        var note = 0L;\n
    \       foreach (var c in music_string) {\n            if (c == 'o') {\n                note
    += 4;\n            } else if (c == '|') {\n                notes.Add(note);\n
    \               note = 0;\n            } else if (c == '.') {\n                note
    += 1;\n            }\n        }\n        notes.Add(note);\n        return notes;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new
    List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new
    long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".|
    .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n
    \   Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new
    long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new List<long>(new
    long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fdc13a11b7fe442aaba0ff9094fbf457>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fdc13a11b7fe442aaba0ff9094fbf457>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        List<long> result = new List<long>();\n        // Your
    code goes here\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o
    o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,
    (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .|
    o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L,
    (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o|
    .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L,
    (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1da6c7e19f6f47f8bbe6f48c3222d20f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1da6c7e19f6f47f8bbe6f48c3222d20f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799607
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        List<long> result = new List<long>();\n        // TODO:
    Implement this function\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n
    \   Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,
    (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o|
    o| .| .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,
    (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o|
    .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L,
    (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d1dc8ff47eb04d468dab39e3a6dd9c34>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d1dc8ff47eb04d468dab39e3a6dd9c34>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        var result = new List<long>();\n        var notes = music_string.Split('
    ');\n        foreach (var note in notes) {\n            if (note == \"o\") {\n
    \               result.Add(4);\n            } else if (note == \"o|\") {\n                result.Add(2);\n
    \           } else if (note == \".|\") {\n                result.Add(1);\n            }\n
    \       }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o
    o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,
    (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .|
    o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L,
    (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o|
    .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L,
    (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ca417ca0f5ca4378837c6524ec190d6c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ca417ca0f5ca4378837c6524ec190d6c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        return new List<long>();\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n
    \   Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,
    (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o|
    o| .| .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,
    (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o|
    .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L,
    (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e927bab609564e378c351b641cf446c1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e927bab609564e378c351b641cf446c1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        List<long> result = new List<long>();\n        foreach
    (var c in music_string) {\n            if (c == 'o') {\n                result.Add(4);\n
    \           } else if (c == '|') {\n                result[result.Count - 1] /=
    2;\n            }\n        }\n        return result;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n
    \   Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,
    (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o|
    o| .| .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,
    (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o|
    .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L,
    (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e79fc651183e4268b4ecfcd387c5bd5b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e79fc651183e4268b4ecfcd387c5bd5b>:0
    \n\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out of
    range. Must be non-negative and less than the size of the collection.\nParameter
    name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32
    index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.ParseMusic
    (System.String music_string) ["
  stdout: ''
  timestamp: 1659799607
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        List<long> ret = new List<long>();\n        int i = 0;\n
    \       while (i < music_string.Length) {\n            if (music_string[i] ==
    'o') {\n                if (i + 1 < music_string.Length && music_string[i + 1]
    == '|') {\n                    ret.Add(2);\n                    i += 2;\n                }
    else {\n                    ret.Add(4);\n                    i += 1;\n                }\n
    \           } else {\n                ret.Add(1);\n                i += 2;\n            }\n
    \       }\n        return ret;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o
    o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,
    (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .|
    o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L,
    (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o|
    .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L,
    (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <86d6a48805154fc1a0cfef915a311c60>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <86d6a48805154fc1a0cfef915a311c60>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        List<long> result = new List<long>();\n        foreach
    (var note in music_string.Split(' ')) {\n            if (note == \"o\") {\n                result.Add(4);\n
    \           } else if (note == \"o|\") {\n                result.Add(2);\n            }
    else if (note == \".|\") {\n                result.Add(1);\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o
    o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,
    (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .|
    o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L,
    (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o|
    .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L,
    (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <918440cfb4b64213b099c4df379de4be>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <918440cfb4b64213b099c4df379de4be>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        List<long> result = new List<long>();\n        long beats
    = 0;\n        for (int i = 0; i < music_string.Length; i++) {\n            if
    (music_string[i] == 'o') {\n                beats = 4L;\n            }\n            else
    if (music_string[i] == '|') {\n                beats = 2L;\n            }\n            else
    if (music_string[i] == '.') {\n                beats = 1L;\n            }\n            else
    {\n                beats = 0L;\n            }\n            result.Add(beats);\n
    \       }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o
    o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,
    (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .|
    o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L,
    (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o|
    .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L,
    (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <2ad0d420ffcb4dd28912243f98b8927b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <2ad0d420ffcb4dd28912243f98b8927b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        List<long> result = new List<long>();\n        int i
    = 0;\n        while (i < music_string.Length) {\n            if (music_string[i]
    == 'o') {\n                if (i + 1 < music_string.Length && music_string[i +
    1] == '|') {\n                    result.Add(2);\n                    i += 2;\n
    \               } else {\n                    result.Add(4);\n                    i
    += 1;\n                }\n            } else {\n                result.Add(1);\n
    \               i += 2;\n            }\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new
    List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new
    long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".|
    .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n
    \   Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new
    long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new List<long>(new
    long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e8cb2e1b19a04929bf2dc6c9159b5eb5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e8cb2e1b19a04929bf2dc6c9159b5eb5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        List<long> result = new List<long>();\n        foreach
    (var c in music_string) {\n            if (c == 'o') {\n                result.Add(4);\n
    \           } else if (c == '|') {\n                result[result.Count - 1] /=
    2;\n            }\n        }\n        return result;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n
    \   Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,
    (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o|
    o| .| .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,
    (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o|
    .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L,
    (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e79fc651183e4268b4ecfcd387c5bd5b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e79fc651183e4268b4ecfcd387c5bd5b>:0
    \n\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out of
    range. Must be non-negative and less than the size of the collection.\nParameter
    name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32
    index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.ParseMusic
    (System.String music_string) ["
  stdout: ''
  timestamp: 1659799607
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        List<long> result = new List<long>();\n        string[]
    notes = music_string.Split(' ');\n        foreach (string note in notes) {\n            if
    (note == \"o\") {\n                result.Add(4);\n            } else if (note
    == \"o|\") {\n                result.Add(2);\n            } else if (note == \".|\")
    {\n                result.Add(1);\n            }\n        }\n        return result;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new
    List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new
    long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".|
    .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n
    \   Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new
    long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new List<long>(new
    long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0e88bca602a8422990190e4fababf9ab>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0e88bca602a8422990190e4fababf9ab>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799607
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        List<long> res = new List<long>();\n        foreach (var
    c in music_string) {\n            if (c == 'o') {\n                res.Add(4);\n
    \           } else if (c == '|') {\n                res[res.Count - 1] /= 2;\n
    \           }\n        }\n        return res;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o
    o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,
    (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .|
    o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L,
    (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o|
    .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L,
    (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <444942af632c43068841f3cdb5c9e745>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <444942af632c43068841f3cdb5c9e745>:0
    \n\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out of
    range. Must be non-negative and less than the size of the collection.\nParameter
    name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32
    index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.ParseMusic
    (System.String music_string) ["
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        var result = new List<long>();\n        var notes = music_string.Split(new
    char[] { ' ' }, StringSplitOptions.RemoveEmptyEntries);\n        foreach (var
    note in notes) {\n            if (note == \"o\") {\n                result.Add(4);\n
    \           } else if (note == \"o|\") {\n                result.Add(2);\n            }
    else if (note == \".|\") {\n                result.Add(1);\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o
    o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,
    (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .|
    o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L,
    (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o|
    .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L,
    (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <63a92914498d4a33b26d3b794c0f6db2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <63a92914498d4a33b26d3b794c0f6db2>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        var list = new List<long>();\n        var music = music_string.Split('
    ');\n        foreach (var note in music) {\n            if (note == \"o\") {\n
    \               list.Add(4);\n            } else if (note == \"o|\") {\n                list.Add(2);\n
    \           } else if (note == \".|\") {\n                list.Add(1);\n            }\n
    \       }\n        return list;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o
    o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,
    (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .|
    o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L,
    (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o|
    .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L,
    (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ee8a79e3ff28490087f23b2157f83932>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ee8a79e3ff28490087f23b2157f83932>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        var result = new List<long>();\n        var notes = music_string.Split('
    ');\n        foreach (var note in notes) {\n            if (note == \"o\") {\n
    \               result.Add(4);\n            } else if (note == \"o|\") {\n                result.Add(2);\n
    \           } else if (note == \".|\") {\n                result.Add(1);\n            }\n
    \       }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o
    o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,
    (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .|
    o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L,
    (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o|
    .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L,
    (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ca417ca0f5ca4378837c6524ec190d6c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ca417ca0f5ca4378837c6524ec190d6c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        List<long> result = new List<long>();\n        long current_note
    = 0;\n        for (int i = 0; i < music_string.Length; i++) {\n            if
    (music_string[i] == 'o') {\n                if (i + 1 < music_string.Length &&
    music_string[i + 1] == '|') {\n                    current_note = 2;\n                    i++;\n
    \               } else {\n                    current_note = 4;\n                }\n
    \           } else if (music_string[i] == '.') {\n                current_note
    = 1;\n            } else if (music_string[i] == '|') {\n                result.Add(current_note);\n
    \               current_note = 0;\n            }\n        }\n        if (current_note
    != 0) {\n            result.Add(current_note);\n        }\n        return result;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new
    List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new
    long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".|
    .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n
    \   Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new
    long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new List<long>(new
    long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <43cd12d168cc463c99fcf268f598d7b6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <43cd12d168cc463c99fcf268f598d7b6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        List<long> result = new List<long>();\n        string[]
    notes = music_string.Split(' ');\n        foreach (string note in notes) {\n            if
    (note == \"o\") {\n                result.Add(4);\n            } else if (note
    == \"o|\") {\n                result.Add(2);\n            } else if (note == \".|\")
    {\n                result.Add(1);\n            }\n        }\n        return result;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new
    List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new
    long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".|
    .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n
    \   Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new
    long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new List<long>(new
    long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0e88bca602a8422990190e4fababf9ab>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0e88bca602a8422990190e4fababf9ab>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799607
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        List<long> result = new List<long>();\n        foreach
    (char c in music_string) {\n            if (c == 'o') {\n                result.Add(4);\n
    \           } else if (c == '|') {\n                result[result.Count - 1] /=
    2;\n            }\n        }\n        return result;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n
    \   Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,
    (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o|
    o| .| .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,
    (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o|
    .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L,
    (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1cc85df7e69849e28d63d8b3781442b4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1cc85df7e69849e28d63d8b3781442b4>:0
    \n\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out of
    range. Must be non-negative and less than the size of the collection.\nParameter
    name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32
    index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.ParseMusic
    (System.String music_string) ["
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        var result = new List<long>();\n        var note = '
    ';\n        var length = 0;\n        foreach (var c in music_string) {\n            if
    (c == ' ') {\n                result.Add(length);\n                length = 0;\n
    \           } else if (c == 'o') {\n                if (note == 'o') {\n                    length
    += 4;\n                } else {\n                    note = 'o';\n                    length
    = 4;\n                }\n            } else if (c == '|') {\n                if
    (note == 'o') {\n                    length += 2;\n                } else {\n
    \                   note = 'o';\n                    length = 2;\n                }\n
    \           } else if (c == '.') {\n                if (note == 'o') {\n                    length
    += 1;\n                } else {\n                    note = 'o';\n                    length
    = 1;\n                }\n            }\n        }\n        result.Add(length);\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o
    o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,
    (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .|
    o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L,
    (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o|
    .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L,
    (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7dbbe17737dc4ccab8abdf10ca7bf0aa>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7dbbe17737dc4ccab8abdf10ca7bf0aa>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        List<long> result = new List<long>();\n        for (int
    i = 0; i < music_string.Length; i++) {\n            if (music_string[i] == 'o')
    {\n                if (i + 1 < music_string.Length && music_string[i + 1] == '|')
    {\n                    result.Add(2);\n                    i++;\n                }
    else {\n                    result.Add(4);\n                }\n            } else
    if (music_string[i] == '.') {\n                result.Add(1);\n                i++;\n
    \           }\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n
    \   Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,
    (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o|
    o| .| .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,
    (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o|
    .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L,
    (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d6e66c1e39ae41a191f458f51849c9d1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d6e66c1e39ae41a191f458f51849c9d1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        var result = new List<long>();\n        var note = \"\";\n
    \       for (int i = 0; i < music_string.Length; i++) {\n            if (music_string[i]
    == ' ') {\n                if (note == \"o\") {\n                    result.Add(4L);\n
    \               }\n                else if (note == \"o|\") {\n                    result.Add(2L);\n
    \               }\n                else if (note == \".|\") {\n                    result.Add(1L);\n
    \               }\n                note = \"\";\n            }\n            else
    {\n                note += music_string[i];\n            }\n        }\n        if
    (note == \"o\") {\n            result.Add(4L);\n        }\n        else if (note
    == \"o|\") {\n            result.Add(2L);\n        }\n        else if (note ==
    \".|\") {\n            result.Add(1L);\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new
    List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new
    long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".|
    .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n
    \   Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new
    long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new List<long>(new
    long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6d25c9e9d1044a338acef7cf434a6235>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <6d25c9e9d1044a338acef7cf434a6235>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        var result = new List<long>();\n        var notes = music_string.Split('
    ');\n        foreach (var note in notes) {\n            switch (note) {\n                case
    \"o\":\n                    result.Add(4);\n                    break;\n                case
    \"o|\":\n                    result.Add(2);\n                    break;\n                case
    \".|\":\n                    result.Add(1);\n                    break;\n            }\n
    \       }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o
    o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,
    (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .|
    o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L,
    (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o|
    .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L,
    (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1547400e75374e538eeb07c91af31d0e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1547400e75374e538eeb07c91af31d0e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        var result = new List<long>();\n        var notes = music_string.Split('
    ');\n        foreach (var note in notes) {\n            if (note == \"o\") {\n
    \               result.Add(4);\n            } else if (note == \"o|\") {\n                result.Add(2);\n
    \           } else if (note == \".|\") {\n                result.Add(1);\n            }\n
    \       }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o
    o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,
    (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .|
    o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L,
    (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o|
    .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L,
    (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ca417ca0f5ca4378837c6524ec190d6c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ca417ca0f5ca4378837c6524ec190d6c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        List<long> result = new List<long>();\n        long current_note
    = 0;\n        for (int i = 0; i < music_string.Length; i++) {\n            if
    (music_string[i] == 'o') {\n                if (i + 1 < music_string.Length &&
    music_string[i + 1] == '|') {\n                    result.Add(2);\n                    i++;\n
    \               } else {\n                    result.Add(4);\n                }\n
    \           } else if (music_string[i] == '.') {\n                result.Add(1);\n
    \               i++;\n            }\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new
    List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new
    long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".|
    .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n
    \   Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new
    long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new List<long>(new
    long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a7396c36fd2f42c99695e1ace1cdf492>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a7396c36fd2f42c99695e1ace1cdf492>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799609
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        List<long> result = new List<long>();\n        // Your
    code goes here\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o
    o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,
    (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .|
    o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L,
    (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o|
    .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L,
    (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1da6c7e19f6f47f8bbe6f48c3222d20f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1da6c7e19f6f47f8bbe6f48c3222d20f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799607
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        List<long> result = new List<long>();\n        int i
    = 0;\n        while (i < music_string.Length) {\n            if (music_string[i]
    == 'o') {\n                if (i + 1 < music_string.Length && music_string[i +
    1] == '|') {\n                    result.Add(2);\n                    i += 2;\n
    \               } else {\n                    result.Add(4);\n                    i
    += 1;\n                }\n            } else {\n                result.Add(1);\n
    \               i += 2;\n            }\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new
    List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new
    long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".|
    .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n
    \   Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new
    long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new List<long>(new
    long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e8cb2e1b19a04929bf2dc6c9159b5eb5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e8cb2e1b19a04929bf2dc6c9159b5eb5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        List<long> result = new List<long>();\n        int i
    = 0;\n        while (i < music_string.Length) {\n            if (music_string[i]
    == 'o') {\n                if (i + 1 < music_string.Length && music_string[i +
    1] == '|') {\n                    result.Add(2);\n                    i += 2;\n
    \               } else {\n                    result.Add(4);\n                    i
    += 1;\n                }\n            } else {\n                result.Add(1);\n
    \               i += 2;\n            }\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new
    List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new
    long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".|
    .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n
    \   Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new
    long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new List<long>(new
    long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e8cb2e1b19a04929bf2dc6c9159b5eb5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e8cb2e1b19a04929bf2dc6c9159b5eb5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        var result = new List<long>();\n        foreach (var
    c in music_string) {\n            switch (c) {\n                case 'o':\n                    result.Add(4);\n
    \                   break;\n                case '|':\n                    result[result.Count
    - 1] /= 2;\n                    break;\n                case '.':\n                    result.Add(1);\n
    \                   break;\n            }\n        }\n        return result;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new
    List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new
    long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".|
    .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n
    \   Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new
    long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new List<long>(new
    long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f0faf51d00104325bd064200863dad15>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f0faf51d00104325bd064200863dad15>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799609
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        var result = new List<long>();\n        var notes = music_string.Split('
    ');\n        foreach (var note in notes) {\n            switch (note) {\n                case
    \"o\":\n                    result.Add(4);\n                    break;\n                case
    \"o|\":\n                    result.Add(2);\n                    break;\n                case
    \".|\":\n                    result.Add(1);\n                    break;\n            }\n
    \       }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o
    o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,
    (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .|
    o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L,
    (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o|
    .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L,
    (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1547400e75374e538eeb07c91af31d0e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1547400e75374e538eeb07c91af31d0e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        var result = new List<long>();\n        var notes = music_string.Split('
    ');\n        foreach (var note in notes) {\n            switch (note) {\n                case
    \"o\":\n                    result.Add(4);\n                    break;\n                case
    \"o|\":\n                    result.Add(2);\n                    break;\n                case
    \".|\":\n                    result.Add(1);\n                    break;\n            }\n
    \       }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o
    o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,
    (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .|
    o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L,
    (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o|
    .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L,
    (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1547400e75374e538eeb07c91af31d0e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1547400e75374e538eeb07c91af31d0e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        var result = new List<long>();\n        var beats = new
    Dictionary<char, long>();\n        beats['o'] = 4;\n        beats['|'] = 2;\n
    \       beats['.'] = 1;\n        var current_beat = 0L;\n        foreach (var
    c in music_string) {\n            if (beats.ContainsKey(c)) {\n                current_beat
    += beats[c];\n            } else {\n                result.Add(current_beat);\n
    \               current_beat = 0;\n            }\n        }\n        result.Add(current_beat);\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o
    o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,
    (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .|
    o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L,
    (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o|
    .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L,
    (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <16f4b26f953f43879fd93669d9a0003a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <16f4b26f953f43879fd93669d9a0003a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        var result = new List<long>();\n        var notes = music_string.Split('
    ');\n        foreach (var note in notes) {\n            if (note == \"o\") {\n
    \               result.Add(4);\n            } else if (note == \"o|\") {\n                result.Add(2);\n
    \           } else if (note == \".|\") {\n                result.Add(1);\n            }\n
    \       }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o
    o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,
    (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .|
    o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L,
    (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o|
    .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L,
    (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ca417ca0f5ca4378837c6524ec190d6c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ca417ca0f5ca4378837c6524ec190d6c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        var result = new List<long>();\n        var notes = music_string.Split('
    ');\n        foreach (var note in notes) {\n            if (note == \"o\") {\n
    \               result.Add(4);\n            } else if (note == \"o|\") {\n                result.Add(2);\n
    \           } else if (note == \".|\") {\n                result.Add(1);\n            }\n
    \       }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o
    o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,
    (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .|
    o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L,
    (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o|
    .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L,
    (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ca417ca0f5ca4378837c6524ec190d6c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ca417ca0f5ca4378837c6524ec190d6c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        var result = new List<long>();\n        var notes = music_string.Split('
    ');\n        foreach (var note in notes) {\n            if (note == \"o\") {\n
    \               result.Add(4);\n            } else if (note == \"o|\") {\n                result.Add(2);\n
    \           } else if (note == \".|\") {\n                result.Add(1);\n            }\n
    \       }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o
    o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,
    (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .|
    o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L,
    (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o|
    .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L,
    (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ca417ca0f5ca4378837c6524ec190d6c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ca417ca0f5ca4378837c6524ec190d6c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        List<long> result = new List<long>();\n        // Your
    code goes here.\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o
    o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,
    (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .|
    o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L,
    (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o|
    .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L,
    (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d9e771fcc3b341d1a13398388f23a321>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d9e771fcc3b341d1a13398388f23a321>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799607
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        List<long> result = new List<long>();\n        string[]
    notes = music_string.Split(' ');\n        foreach (string note in notes) {\n            if
    (note == \"o\") {\n                result.Add(4);\n            } else if (note
    == \"o|\") {\n                result.Add(2);\n            } else if (note == \".|\")
    {\n                result.Add(1);\n            }\n        }\n        return result;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new
    List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new
    long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".|
    .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n
    \   Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new
    long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new List<long>(new
    long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0e88bca602a8422990190e4fababf9ab>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0e88bca602a8422990190e4fababf9ab>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799607
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        List<long> result = new List<long>();\n        foreach
    (char c in music_string) {\n            if (c == 'o') {\n                result.Add(4);\n
    \           } else if (c == '|') {\n                result[result.Count - 1] /=
    2;\n            }\n        }\n        return result;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n
    \   Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,
    (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o|
    o| .| .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,
    (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o|
    .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L,
    (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1cc85df7e69849e28d63d8b3781442b4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1cc85df7e69849e28d63d8b3781442b4>:0
    \n\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out of
    range. Must be non-negative and less than the size of the collection.\nParameter
    name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32
    index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.ParseMusic
    (System.String music_string) ["
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        List<long> result = new List<long>();\n        long counter
    = 0;\n        for (long i = 0; i < music_string.Length; i++) {\n            if
    (music_string[(int)i] == 'o') {\n                result.Add(4L);\n                counter
    += 4L;\n            }\n            else if (music_string[(int)i] == '|') {\n                result.Add(counter);\n
    \               counter = 0L;\n            }\n            else {\n                counter
    += 1L;\n            }\n        }\n        return result;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n
    \   Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,
    (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o|
    o| .| .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,
    (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o|
    .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L,
    (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0962039638f34faf90c1930bb02c1e8d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0962039638f34faf90c1930bb02c1e8d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799609
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        var result = new List<long>();\n        var notes = music_string.Split('
    ');\n        foreach (var note in notes) {\n            switch (note) {\n                case
    \"o\":\n                    result.Add(4);\n                    break;\n                case
    \"o|\":\n                    result.Add(2);\n                    break;\n                case
    \".|\":\n                    result.Add(1);\n                    break;\n            }\n
    \       }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o
    o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,
    (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .|
    o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L,
    (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o|
    .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L,
    (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1547400e75374e538eeb07c91af31d0e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1547400e75374e538eeb07c91af31d0e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        List<long> result = new List<long>();\n        for (int
    i = 0; i < music_string.Length; i++) {\n            if (music_string[i] == 'o')
    {\n                if (i + 1 < music_string.Length && music_string[i + 1] == '|')
    {\n                    result.Add(2);\n                    i++;\n                }
    else {\n                    result.Add(4);\n                }\n            } else
    if (music_string[i] == '.') {\n                result.Add(1);\n                i++;\n
    \           }\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n
    \   Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,
    (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o|
    o| .| .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,
    (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o|
    .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L,
    (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d6e66c1e39ae41a191f458f51849c9d1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d6e66c1e39ae41a191f458f51849c9d1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        List<long> result = new List<long>();\n        for (int
    i = 0; i < music_string.Length; i++) {\n            if (music_string[i] == 'o')
    {\n                result.Add(4);\n            }\n            else if (music_string[i]
    == '.') {\n                result.Add(1);\n            }\n            else if
    (music_string[i] == '|') {\n                result.Add(2);\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o
    o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,
    (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .|
    o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L,
    (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o|
    .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L,
    (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c4bedc8fd1c447818ef69ea63196a995>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c4bedc8fd1c447818ef69ea63196a995>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799607
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        List<long> result = new List<long>();\n        long current_note
    = 0;\n        for (int i = 0; i < music_string.Length; i++) {\n            if
    (music_string[i] == 'o') {\n                if (i + 1 < music_string.Length &&
    music_string[i + 1] == '|') {\n                    current_note = 2;\n                    i++;\n
    \               } else {\n                    current_note = 4;\n                }\n
    \           } else if (music_string[i] == '.') {\n                current_note
    = 1;\n            } else if (music_string[i] == '|') {\n                result.Add(current_note);\n
    \               current_note = 0;\n            }\n        }\n        if (current_note
    != 0) {\n            result.Add(current_note);\n        }\n        return result;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new
    List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new
    long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".|
    .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n
    \   Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new
    long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new List<long>(new
    long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <43cd12d168cc463c99fcf268f598d7b6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <43cd12d168cc463c99fcf268f598d7b6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        List<long> result = new List<long>();\n        for (int
    i = 0; i < music_string.Length; i++) {\n            if (music_string[i] == 'o')
    {\n                if (i + 1 < music_string.Length && music_string[i + 1] == '|')
    {\n                    result.Add(2);\n                    i++;\n                }
    else {\n                    result.Add(4);\n                }\n            } else
    if (music_string[i] == '.') {\n                result.Add(1);\n                i++;\n
    \           }\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n
    \   Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,
    (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o|
    o| .| .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,
    (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o|
    .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L,
    (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d6e66c1e39ae41a191f458f51849c9d1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d6e66c1e39ae41a191f458f51849c9d1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        List<long> res = new List<long>();\n        for (int
    i = 0; i < music_string.Length; i++) {\n            if (music_string[i] == 'o')
    {\n                if (i + 1 < music_string.Length && music_string[i + 1] == '|')
    {\n                    res.Add(2);\n                    i++;\n                }
    else {\n                    res.Add(4);\n                }\n            } else
    if (music_string[i] == '.') {\n                res.Add(1);\n                i++;\n
    \           }\n        }\n        return res;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o
    o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,
    (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .|
    o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L,
    (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o|
    .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L,
    (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <093d3da6bd6f49fbbaa0e09b0210b57d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <093d3da6bd6f49fbbaa0e09b0210b57d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        List<long> res = new List<long>();\n        foreach (char
    c in music_string) {\n            if (c == 'o') {\n                res.Add(4);\n
    \           } else if (c == '|') {\n                res[res.Count - 1] /= 2;\n
    \           }\n        }\n        return res;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o
    o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,
    (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .|
    o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L,
    (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o|
    .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L,
    (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a739389247ee4b608893bb5a7b00be06>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <a739389247ee4b608893bb5a7b00be06>:0
    \n\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out of
    range. Must be non-negative and less than the size of the collection.\nParameter
    name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32
    index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.ParseMusic
    (System.String music_string) ["
  stdout: ''
  timestamp: 1659799609
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        List<long> res = new List<long>();\n        foreach (var
    c in music_string) {\n            if (c == 'o') {\n                res.Add(4);\n
    \           } else if (c == '|') {\n                res[res.Count - 1] /= 2;\n
    \           }\n        }\n        return res;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o
    o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,
    (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .|
    o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L,
    (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o|
    .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L,
    (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <444942af632c43068841f3cdb5c9e745>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <444942af632c43068841f3cdb5c9e745>:0
    \n\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out of
    range. Must be non-negative and less than the size of the collection.\nParameter
    name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32
    index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.ParseMusic
    (System.String music_string) ["
  stdout: ''
  timestamp: 1659799608
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        List<long> result = new List<long>();\n        foreach
    (var c in music_string) {\n            if (c == 'o') {\n                result.Add(4);\n
    \           } else if (c == '|') {\n                result[result.Count - 1] /=
    2;\n            }\n        }\n        return result;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n
    \   Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,
    (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o|
    o| .| .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,
    (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o|
    .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L,
    (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e79fc651183e4268b4ecfcd387c5bd5b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e79fc651183e4268b4ecfcd387c5bd5b>:0
    \n\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out of
    range. Must be non-negative and less than the size of the collection.\nParameter
    name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32
    index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.ParseMusic
    (System.String music_string) ["
  stdout: ''
  timestamp: 1659799607
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        List<long> result = new List<long>();\n        long beats
    = 0;\n        for (int i = 0; i < music_string.Length; i++) {\n            if
    (music_string[i] == 'o') {\n                beats = 4L;\n            }\n            else
    if (music_string[i] == '|') {\n                result.Add(beats);\n                beats
    = 0L;\n            }\n            else if (music_string[i] == '.') {\n                beats
    = 1L;\n            }\n        }\n        return result;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n
    \   Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,
    (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o|
    o| .| .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,
    (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o|
    .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L,
    (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <327595636cd24763ac79ce21df6f8f45>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <327595636cd24763ac79ce21df6f8f45>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799609
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        var result = new List<long>();\n        var current_note
    = \"\";\n        foreach (var c in music_string) {\n            if (c == ' ')
    {\n                result.Add(GetNoteLength(current_note));\n                current_note
    = \"\";\n            } else {\n                current_note += c;\n            }\n
    \       }\n        result.Add(GetNoteLength(current_note));\n        return result;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new
    List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new
    long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".|
    .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n
    \   Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new
    long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new List<long>(new
    long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpri2ine6e.cs(23,28): error CS0103: The name ''GetNoteLength'' does not
    exist in the current context

    /tmp/tmpri2ine6e.cs(29,20): error CS0103: The name ''GetNoteLength'' does not
    exist in the current context

    '
  timestamp: 1659799609
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        List<long> result = new List<long>();\n        long current_note
    = 0;\n        for (long i = 0; i < music_string.Length; i++) {\n            if
    (music_string[(int)i] == 'o') {\n                current_note = 4L;\n            }\n
    \           else if (music_string[(int)i] == '|') {\n                result.Add(current_note);\n
    \               current_note = 0L;\n            }\n            else if (music_string[(int)i]
    == '.') {\n                current_note = 1L;\n            }\n        }\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new
    List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new
    long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".|
    .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n
    \   Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new
    long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new List<long>(new
    long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <de29bee543924227ab3c70a48977c196>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <de29bee543924227ab3c70a48977c196>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799609
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        // Your code goes here\n        return null;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new
    List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new
    long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".|
    .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n
    \   Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new
    long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new List<long>(new
    long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.NullReferenceException: Object reference
    not set to an instance of an object\n  at Problem.Main (System.String[] args)
    [0x00010] in <3201633e7dd54505b5b14bc131e596c6>:0 \n[ERROR] FATAL UNHANDLED EXCEPTION:
    System.NullReferenceException: Object reference not set to an instance of an object\n
    \ at Problem.Main (System.String[] args) [0x00010] in <3201633e7dd54505b5b14bc131e596c6>:0
    \n"
  stdout: ''
  timestamp: 1659799609
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        var result = new List<long>();\n        var beats = new
    Dictionary<char, long>();\n        beats['o'] = 4;\n        beats['|'] = 2;\n
    \       beats['.'] = 1;\n        var current_beat = 0L;\n        foreach (var
    c in music_string) {\n            if (c == ' ') {\n                result.Add(current_beat);\n
    \               current_beat = 0;\n            } else {\n                current_beat
    += beats[c];\n            }\n        }\n        result.Add(current_beat);\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new
    List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new
    long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".|
    .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n
    \   Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new
    long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new List<long>(new
    long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4b84e77ed2724f829c867bb15770e6f1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4b84e77ed2724f829c867bb15770e6f1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        List<long> result = new List<long>();\n        // TODO:
    implement this function\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n
    \   Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,
    (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o|
    o| .| .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,
    (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o|
    .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L,
    (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <01e002287b074b0491efebeaea96241f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <01e002287b074b0491efebeaea96241f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799609
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        var result = new List<long>();\n        var note = 0L;\n
    \       foreach (var c in music_string) {\n            switch (c) {\n                case
    'o':\n                    note = 4L;\n                    break;\n                case
    '|':\n                    result.Add(note);\n                    note = 0L;\n
    \                   break;\n                case '.':\n                    note
    /= 2L;\n                    break;\n            }\n        }\n        return result;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new
    List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new
    long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".|
    .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n
    \   Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new
    long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new List<long>(new
    long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8695436ac0f540a99715c64a42059f44>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8695436ac0f540a99715c64a42059f44>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799609
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        var result = new List<long>();\n        var beats = new
    Dictionary<char, long>();\n        beats['o'] = 4;\n        beats['|'] = 2;\n
    \       beats['.'] = 1;\n        var current_beat = 0L;\n        foreach (var
    c in music_string) {\n            if (c == ' ') {\n                result.Add(current_beat);\n
    \               current_beat = 0;\n            } else {\n                current_beat
    += beats[c];\n            }\n        }\n        result.Add(current_beat);\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new
    List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new
    long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".|
    .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n
    \   Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new
    long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new List<long>(new
    long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4b84e77ed2724f829c867bb15770e6f1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4b84e77ed2724f829c867bb15770e6f1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        List<long> result = new List<long>();\n        long[]
    beats = new long[]{(long)4L, (long)2L, (long)1L};\n        string[] notes = music_string.Split('
    ');\n        foreach (string note in notes) {\n            if (note.Length ==
    1) {\n                result.Add(beats[0]);\n            } else {\n                result.Add(beats[note.Length
    - 2]);\n            }\n        }\n        return result;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n
    \   Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,
    (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o|
    o| .| .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,
    (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o|
    .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L,
    (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.IndexOutOfRangeException: Index was outside
    the bounds of the array.\n  at Problem.ParseMusic (System.String music_string)
    [0x0005a] in <ef7a0dbacdf94240bd5407127b3285af>:0 \n  at Problem.Main (System.String[]
    args) [0x00001] in <ef7a0dbacdf94240bd5407127b3285af>:0 \n[ERROR] FATAL UNHANDLED
    EXCEPTION: System.IndexOutOfRangeException: Index was outside the bounds of the
    array.\n  at Problem.ParseMusic (System.String music_string) [0x0005a] in <ef7a0dbacdf94240bd5407127b3285af>:0
    \n  at Problem.Main (System.String[] args) [0x00001] in <ef7a0dbacdf94240bd5407127b3285af>:0
    \n"
  stdout: ''
  timestamp: 1659799609
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        List<long> result = new List<long>();\n        long beats
    = 0;\n        for (int i = 0; i < music_string.Length; i++) {\n            if
    (music_string[i] == 'o') {\n                if (i + 1 < music_string.Length &&
    music_string[i + 1] == '|') {\n                    beats = 2;\n                    i++;\n
    \               }\n                else {\n                    beats = 4;\n                }\n
    \           }\n            else if (music_string[i] == '.') {\n                beats
    = 1;\n            }\n            else if (music_string[i] == '|') {\n                continue;\n
    \           }\n            result.Add(beats);\n        }\n        return result;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new
    List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new
    long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".|
    .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n
    \   Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new
    long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new List<long>(new
    long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e215829ae7bf40f0a3f55100ffa757c8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e215829ae7bf40f0a3f55100ffa757c8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799609
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        // Your code goes here\n        List<long> list = new
    List<long>();\n        int count = 0;\n        for (int i = 0; i < music_string.Length;
    i++) {\n            if (music_string[i] == 'o') {\n                if (i + 1 <
    music_string.Length && music_string[i + 1] == '|') {\n                    list.Add(2);\n
    \                   i++;\n                } else {\n                    list.Add(4);\n
    \               }\n            } else if (music_string[i] == '.') {\n                list.Add(1);\n
    \               i++;\n            }\n        }\n        return list;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new
    List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new
    long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".|
    .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n
    \   Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new
    long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new List<long>(new
    long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e8952d8a454049579ad18249d849fd9d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e8952d8a454049579ad18249d849fd9d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799609
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        List<long> result = new List<long>();\n        // Your
    code goes here\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o
    o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,
    (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .|
    o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L,
    (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o|
    .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L,
    (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1da6c7e19f6f47f8bbe6f48c3222d20f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1da6c7e19f6f47f8bbe6f48c3222d20f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799607
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        // Your code goes here\n        return new List<long>();\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new
    List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new
    long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".|
    .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n
    \   Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new
    long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new List<long>(new
    long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <417a16b7b6aa405f83260ec89cb53c08>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <417a16b7b6aa405f83260ec89cb53c08>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799609
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        List<long> result = new List<long>();\n        for (int
    i = 0; i < music_string.Length; i++) {\n            if (music_string[i] == 'o')
    {\n                if (i + 1 < music_string.Length && music_string[i + 1] == '|')
    {\n                    result.Add(2);\n                    i++;\n                }
    else {\n                    result.Add(4);\n                }\n            } else
    if (music_string[i] == '.') {\n                result.Add(1);\n                i++;\n
    \           }\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n
    \   Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,
    (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o|
    o| .| .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,
    (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o|
    .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L,
    (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d6e66c1e39ae41a191f458f51849c9d1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d6e66c1e39ae41a191f458f51849c9d1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        var result = new List<long>();\n        var current_note
    = 0L;\n        foreach (var c in music_string) {\n            switch (c) {\n                case
    'o':\n                    result.Add(current_note);\n                    current_note
    = 4L;\n                    break;\n                case '|':\n                    current_note
    /= 2L;\n                    break;\n                case '.':\n                    break;\n
    \               default:\n                    throw new Exception(\"Invalid character\");\n
    \           }\n        }\n        result.Add(current_note);\n        return result;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new
    List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new
    long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".|
    .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n
    \   Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new
    long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new List<long>(new
    long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <35774ad9be5e47dea6a0f4e56a97e94b>:0
    \n\nUnhandled Exception:\nSystem.Exception: Invalid character\n  at Problem.ParseMusic
    (System.String music_string) [0x00051] in <35774ad9be5e47dea6a0f4e56a97e94b>:0
    \n  at Problem.Main (System.String[] args) [0x0001b] in <35774ad9be5e47dea6a0f4e56a97e94b>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.Exception: Invalid character\n  at
    Problem.ParseMusic (System.String music_string) [0x00051] in <35774ad9be5e47dea6a0f4e56a97e94b>:0
    \n  at Problem.Main (System.String[] args) [0x0001b] in <35774ad9be5e47dea6a0f4e56a97e94b>:0
    \n"
  stdout: ''
  timestamp: 1659799609
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        var result = new List<long>();\n        var note = new
    List<char>();\n        foreach (var c in music_string) {\n            if (c ==
    ' ') {\n                if (note.Count > 0) {\n                    result.Add(ParseNote(note));\n
    \                   note.Clear();\n                }\n            } else {\n                note.Add(c);\n
    \           }\n        }\n        if (note.Count > 0) {\n            result.Add(ParseNote(note));\n
    \       }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o
    o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,
    (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .|
    o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L,
    (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o|
    .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L,
    (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpgyjv2wm4.cs(24,32): error CS0103: The name ''ParseNote'' does not exist
    in the current context

    /tmp/tmpgyjv2wm4.cs(32,24): error CS0103: The name ''ParseNote'' does not exist
    in the current context

    '
  timestamp: 1659799609
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        var result = new List<long>();\n        var notes = music_string.Split('
    ');\n        foreach (var note in notes) {\n            switch (note) {\n                case
    \"o\":\n                    result.Add(4);\n                    break;\n                case
    \"o|\":\n                    result.Add(2);\n                    break;\n                case
    \".|\":\n                    result.Add(1);\n                    break;\n            }\n
    \       }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o
    o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,
    (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .|
    o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L,
    (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o|
    .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L,
    (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1547400e75374e538eeb07c91af31d0e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1547400e75374e538eeb07c91af31d0e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        var result = new List<long>();\n        var beats = new
    List<long>();\n        var notes = music_string.Split(' ');\n        foreach (var
    note in notes) {\n            if (note == \"o\") {\n                beats.Add(4);\n
    \           } else if (note == \"o|\") {\n                beats.Add(2);\n            }
    else if (note == \".|\") {\n                beats.Add(1);\n            }\n        }\n
    \       return beats;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new
    List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new
    long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".|
    .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n
    \   Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new
    long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new List<long>(new
    long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e87b64a44f4a4335b6bd91fc450e1c68>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e87b64a44f4a4335b6bd91fc450e1c68>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799609
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        List<long> result = new List<long>();\n        string[]
    notes = music_string.Split(' ');\n        foreach (string note in notes) {\n            if
    (note == \"o\") {\n                result.Add(4);\n            } else if (note
    == \"o|\") {\n                result.Add(2);\n            } else if (note == \".|\")
    {\n                result.Add(1);\n            }\n        }\n        return result;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new
    List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new
    long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".|
    .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n
    \   Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new
    long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new List<long>(new
    long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0e88bca602a8422990190e4fababf9ab>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0e88bca602a8422990190e4fababf9ab>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799607
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        List<long> result = new List<long>();\n        foreach
    (char c in music_string) {\n            if (c == 'o') {\n                result.Add(4);\n
    \           } else if (c == '|') {\n                result[result.Count - 1] /=
    2;\n            }\n        }\n        return result;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n
    \   Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,
    (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o|
    o| .| .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,
    (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o|
    .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L,
    (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1cc85df7e69849e28d63d8b3781442b4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1cc85df7e69849e28d63d8b3781442b4>:0
    \n\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out of
    range. Must be non-negative and less than the size of the collection.\nParameter
    name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32
    index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.ParseMusic
    (System.String music_string) ["
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        List<long> result = new List<long>();\n        long beats
    = 0;\n        for (int i = 0; i < music_string.Length; i++) {\n            if
    (music_string[i] == 'o') {\n                beats = 4L;\n            }\n            else
    if (music_string[i] == '|') {\n                beats = 2L;\n            }\n            else
    if (music_string[i] == '.') {\n                beats = 1L;\n            }\n            result.Add(beats);\n
    \       }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o
    o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,
    (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .|
    o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L,
    (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o|
    .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L,
    (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <47e21eb0535d48d4852776fd9ee20406>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <47e21eb0535d48d4852776fd9ee20406>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799609
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        List<long> result = new List<long>();\n        // TODO:
    implement this function\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n
    \   Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,
    (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o|
    o| .| .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,
    (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o|
    .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L,
    (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <01e002287b074b0491efebeaea96241f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <01e002287b074b0491efebeaea96241f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799609
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        List<long> result = new List<long>();\n        int i
    = 0;\n        while (i < music_string.Length) {\n            if (music_string[i]
    == 'o') {\n                if (i + 1 < music_string.Length && music_string[i +
    1] == '|') {\n                    result.Add(2);\n                    i += 2;\n
    \               } else {\n                    result.Add(4);\n                    i
    += 1;\n                }\n            } else {\n                result.Add(1);\n
    \               i += 2;\n            }\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new
    List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new
    long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".|
    .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n
    \   Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new
    long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new List<long>(new
    long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e8cb2e1b19a04929bf2dc6c9159b5eb5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e8cb2e1b19a04929bf2dc6c9159b5eb5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        List<long> result = new List<long>();\n        for (int
    i = 0; i < music_string.Length; i++) {\n            if (music_string[i] == 'o')
    {\n                result.Add(4);\n            }\n            else if (music_string[i]
    == '.') {\n                result.Add(1);\n            }\n            else if
    (music_string[i] == '|') {\n                result.Add(2);\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o
    o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,
    (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .|
    o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L,
    (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o|
    .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L,
    (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c4bedc8fd1c447818ef69ea63196a995>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c4bedc8fd1c447818ef69ea63196a995>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799607
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        List<long> result = new List<long>();\n        for (int
    i = 0; i < music_string.Length; i++) {\n            if (music_string[i] == 'o')
    {\n                result.Add(4);\n            }\n            else if (music_string[i]
    == '.') {\n                result.Add(1);\n            }\n            else if
    (music_string[i] == '|') {\n                result.Add(2);\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o
    o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,
    (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .|
    o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L,
    (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o|
    .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L,
    (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c4bedc8fd1c447818ef69ea63196a995>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <c4bedc8fd1c447818ef69ea63196a995>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799607
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        List<long> result = new List<long>();\n        for (int
    i = 0; i < music_string.Length; i++) {\n            if (music_string[i] == 'o')
    {\n                if (i + 1 < music_string.Length && music_string[i + 1] == '|')
    {\n                    result.Add(2);\n                    i++;\n                }
    else {\n                    result.Add(4);\n                }\n            } else
    if (music_string[i] == '.') {\n                result.Add(1);\n                i++;\n
    \           }\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n
    \   Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,
    (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o|
    o| .| .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,
    (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o|
    .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L,
    (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d6e66c1e39ae41a191f458f51849c9d1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d6e66c1e39ae41a191f458f51849c9d1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        List<long> result = new List<long>();\n        // TODO:
    Implement your solution here.\n        return result;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n
    \   Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,
    (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o|
    o| .| .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,
    (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o|
    .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L,
    (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8938bba890e44b8fae56ddb23c20c6e7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8938bba890e44b8fae56ddb23c20c6e7>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799609
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        var result = new List<long>();\n        var beats = new
    List<long>();\n        var beat = 0L;\n        foreach (var c in music_string)
    {\n            if (c == 'o') {\n                beat += 4;\n            } else
    if (c == '|') {\n                beats.Add(beat);\n                beat = 0;\n
    \           } else if (c == '.') {\n                beat += 1;\n            }\n
    \       }\n        beats.Add(beat);\n        return beats;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new
    List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new
    long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".|
    .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n
    \   Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new
    long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new List<long>(new
    long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7094bf6822da4a5b8bb39e0cc52e11ae>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <7094bf6822da4a5b8bb39e0cc52e11ae>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799609
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        List<long> result = new List<long>();\n        for (int
    i = 0; i < music_string.Length; i++) {\n            if (music_string[i] == 'o')
    {\n                if (i + 1 < music_string.Length && music_string[i + 1] == '|')
    {\n                    result.Add(2);\n                    i++;\n                }
    else {\n                    result.Add(4);\n                }\n            } else
    if (music_string[i] == '.') {\n                result.Add(1);\n                i++;\n
    \           }\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n
    \   Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,
    (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o|
    o| .| .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,
    (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o|
    .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L,
    (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d6e66c1e39ae41a191f458f51849c9d1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d6e66c1e39ae41a191f458f51849c9d1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        var result = new List<long>();\n        var beat_count
    = 0L;\n        var note_count = 0L;\n        var is_note = false;\n        var
    is_rest = false;\n        var is_half = false;\n        var is_quarter = false;\n
    \       var is_whole = false;\n        var is_double_whole = false;\n        foreach
    (var c in music_string) {\n            if (c == ' ') {\n                if (is_note)
    {\n                    result.Add(note_count);\n                    beat_count
    += note_count;\n                    note_count = 0L;\n                    is_note
    = false;\n                    is_rest = false;\n                    is_half =
    false;\n                    is_quarter = false;\n                    is_whole
    = false;\n                    is_double_whole = false;\n                }\n            }
    else if (c == 'o') {\n                if (is_note) {\n                    result.Add(note_count);\n
    \                   beat_count += note_count;\n                    note_count
    = 0L;\n                    is_note = false;\n                    is_rest = false;\n
    \                   is_half = false;\n                    is_quarter = false;\n
    \                   is_whole = false;\n                    is_double_whole = false;\n
    \               }\n                is_note = true;\n                is_whole =
    true;\n            } else if (c == '.') {\n                if (is_note) {\n                    result.Add(note_count);\n
    \                   beat_count += note_count;\n                    note_count
    = 0L;\n                    is_note = false;\n                    is_rest = false;\n
    \                   is_half = false;\n                    is_quarter = false;\n
    \                   is_whole = false;\n                    is_double_whole = false;\n
    \               }\n                is_note = true;\n                is_quarter
    = true;\n            } else if (c == '|') {\n                if (is_note) {\n
    \                   result.Add(note_count);\n                    beat_count +=
    note_count;\n                    note_count = 0L;\n                    is_note
    = false;\n                    is_rest =\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o
    o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,
    (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .|
    o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L,
    (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o|
    .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L,
    (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmp09mgiqgk.cs(75,30): error CS1525: Invalid expression term ''}''

    /tmp/tmp09mgiqgk.cs(75,30): error CS1002: ; expected

    /tmp/tmp09mgiqgk.cs(77,5): error CS0106: The modifier ''public'' is not valid
    for this item

    /tmp/tmp09mgiqgk.cs(85,2): error CS1513: } expected

    '
  timestamp: 1659799609
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        List<long> result = new List<long>();\n        foreach
    (char c in music_string) {\n            if (c == 'o') {\n                result.Add(4);\n
    \           } else if (c == '|') {\n                result[result.Count - 1] /=
    2;\n            }\n        }\n        return result;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n
    \   Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,
    (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o|
    o| .| .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,
    (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o|
    .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L,
    (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1cc85df7e69849e28d63d8b3781442b4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1cc85df7e69849e28d63d8b3781442b4>:0
    \n\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out of
    range. Must be non-negative and less than the size of the collection.\nParameter
    name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32
    index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.ParseMusic
    (System.String music_string) ["
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        var result = new List<long>();\n        var note = new
    List<char>();\n        foreach (var c in music_string) {\n            if (c ==
    ' ') {\n                if (note.Count == 2) {\n                    result.Add(2);\n
    \               } else if (note.Count == 3) {\n                    result.Add(1);\n
    \               } else if (note.Count == 4) {\n                    result.Add(4);\n
    \               }\n                note.Clear();\n            } else {\n                note.Add(c);\n
    \           }\n        }\n        if (note.Count == 2) {\n            result.Add(2);\n
    \       } else if (note.Count == 3) {\n            result.Add(1);\n        } else
    if (note.Count == 4) {\n            result.Add(4);\n        }\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new
    List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new
    long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".|
    .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n
    \   Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new
    long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new List<long>(new
    long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0e7e8a4d34204faaa5e53593b3b68ce6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0e7e8a4d34204faaa5e53593b3b68ce6>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799609
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        List<long> result = new List<long>();\n        foreach
    (char c in music_string) {\n            if (c == 'o') {\n                result.Add(4);\n
    \           } else if (c == '|') {\n                result[result.Count - 1] /=
    2;\n            }\n        }\n        return result;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n
    \   Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,
    (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o|
    o| .| .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,
    (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o|
    .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L,
    (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1cc85df7e69849e28d63d8b3781442b4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1cc85df7e69849e28d63d8b3781442b4>:0
    \n\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out of
    range. Must be non-negative and less than the size of the collection.\nParameter
    name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32
    index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.ParseMusic
    (System.String music_string) ["
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        List<long> result = new List<long>();\n        int i
    = 0;\n        while (i < music_string.Length) {\n            if (music_string[i]
    == 'o') {\n                if (i + 1 < music_string.Length && music_string[i +
    1] == '|') {\n                    result.Add(2);\n                    i += 2;\n
    \               } else {\n                    result.Add(4);\n                    i
    += 1;\n                }\n            } else {\n                result.Add(1);\n
    \               i += 2;\n            }\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new
    List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new
    long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".|
    .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n
    \   Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new
    long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new List<long>(new
    long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e8cb2e1b19a04929bf2dc6c9159b5eb5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e8cb2e1b19a04929bf2dc6c9159b5eb5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        var beats = new List<long>();\n        var notes = music_string.Split('
    ');\n        foreach (var note in notes) {\n            if (note == \"o\") {\n
    \               beats.Add(4);\n            } else if (note == \"o|\") {\n                beats.Add(2);\n
    \           } else if (note == \".|\") {\n                beats.Add(1);\n            }\n
    \       }\n        return beats;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o
    o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,
    (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .|
    o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L,
    (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o|
    .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L,
    (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8722ff579dcf4bbaac9cd4122aeacf5c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8722ff579dcf4bbaac9cd4122aeacf5c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        List<long> result = new List<long>();\n        // Your
    code goes here\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o
    o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,
    (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .|
    o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L,
    (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o|
    .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L,
    (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1da6c7e19f6f47f8bbe6f48c3222d20f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1da6c7e19f6f47f8bbe6f48c3222d20f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799607
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        var beats = new List<long>();\n        var notes = music_string.Split('
    ');\n        foreach (var note in notes) {\n            if (note == \"o\") {\n
    \               beats.Add(4);\n            } else if (note == \"o|\") {\n                beats.Add(2);\n
    \           } else if (note == \".|\") {\n                beats.Add(1);\n            }\n
    \       }\n        return beats;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o
    o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,
    (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .|
    o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L,
    (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o|
    .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L,
    (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8722ff579dcf4bbaac9cd4122aeacf5c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8722ff579dcf4bbaac9cd4122aeacf5c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        List<long> result = new List<long>();\n        int i
    = 0;\n        while (i < music_string.Length) {\n            if (music_string[i]
    == 'o') {\n                if (i + 1 < music_string.Length && music_string[i +
    1] == '|') {\n                    result.Add(2);\n                    i += 2;\n
    \               } else {\n                    result.Add(4);\n                    i
    += 1;\n                }\n            } else {\n                result.Add(1);\n
    \               i += 2;\n            }\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new
    List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new
    long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".|
    .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n
    \   Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new
    long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new List<long>(new
    long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e8cb2e1b19a04929bf2dc6c9159b5eb5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e8cb2e1b19a04929bf2dc6c9159b5eb5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        List<long> result = new List<long>();\n        foreach
    (char c in music_string) {\n            if (c == 'o') {\n                result.Add(4);\n
    \           } else if (c == '|') {\n                result[result.Count - 1] /=
    2;\n            }\n        }\n        return result;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n
    \   Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,
    (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o|
    o| .| .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,
    (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o|
    .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L,
    (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1cc85df7e69849e28d63d8b3781442b4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1cc85df7e69849e28d63d8b3781442b4>:0
    \n\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out of
    range. Must be non-negative and less than the size of the collection.\nParameter
    name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32
    index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.ParseMusic
    (System.String music_string) ["
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        List<long> result = new List<long>();\n        for (int
    i = 0; i < music_string.Length; i++) {\n            if (music_string[i] == 'o')
    {\n                if (i + 1 < music_string.Length && music_string[i + 1] == '|')
    {\n                    result.Add(2);\n                    i++;\n                }
    else {\n                    result.Add(4);\n                }\n            } else
    if (music_string[i] == '.') {\n                result.Add(1);\n                i++;\n
    \           }\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n
    \   Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,
    (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o|
    o| .| .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,
    (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o|
    .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L,
    (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d6e66c1e39ae41a191f458f51849c9d1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d6e66c1e39ae41a191f458f51849c9d1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        List<long> result = new List<long>();\n        for (int
    i = 0; i < music_string.Length; i++) {\n            if (music_string[i] == 'o')
    {\n                if (i + 1 < music_string.Length && music_string[i + 1] == '|')
    {\n                    result.Add(2);\n                    i++;\n                }
    else {\n                    result.Add(4);\n                }\n            } else
    if (music_string[i] == '.') {\n                result.Add(1);\n                i++;\n
    \           }\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n
    \   Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,
    (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o|
    o| .| .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,
    (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o|
    .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L,
    (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d6e66c1e39ae41a191f458f51849c9d1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d6e66c1e39ae41a191f458f51849c9d1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        List<long> result = new List<long>();\n        string[]
    notes = music_string.Split(' ');\n        foreach (string note in notes) {\n            if
    (note == \"o\") {\n                result.Add(4);\n            } else if (note
    == \"o|\") {\n                result.Add(2);\n            } else if (note == \".|\")
    {\n                result.Add(1);\n            }\n        }\n        return result;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new
    List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new
    long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".|
    .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n
    \   Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new
    long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new List<long>(new
    long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0e88bca602a8422990190e4fababf9ab>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0e88bca602a8422990190e4fababf9ab>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799607
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        List<long> res = new List<long>();\n        for (int
    i = 0; i < music_string.Length; i++) {\n            if (music_string[i] == 'o')
    {\n                if (i + 1 < music_string.Length && music_string[i + 1] == '|')
    {\n                    res.Add(2);\n                    i++;\n                }
    else {\n                    res.Add(4);\n                }\n            } else
    if (music_string[i] == '.') {\n                res.Add(1);\n                i++;\n
    \           }\n        }\n        return res;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o
    o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,
    (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .|
    o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L,
    (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o|
    .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L,
    (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <093d3da6bd6f49fbbaa0e09b0210b57d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <093d3da6bd6f49fbbaa0e09b0210b57d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        List<long> result = new List<long>();\n        for (int
    i = 0; i < music_string.Length; i++) {\n            if (music_string[i] == 'o')
    {\n                if (i + 1 < music_string.Length && music_string[i + 1] == '|')
    {\n                    result.Add(2);\n                    i++;\n                }
    else {\n                    result.Add(4);\n                }\n            } else
    if (music_string[i] == '.') {\n                result.Add(1);\n                i++;\n
    \           }\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n
    \   Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,
    (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o|
    o| .| .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,
    (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o|
    .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L,
    (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d6e66c1e39ae41a191f458f51849c9d1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d6e66c1e39ae41a191f458f51849c9d1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        List<long> result = new List<long>();\n        foreach
    (var c in music_string) {\n            if (c == 'o') {\n                result.Add(4);\n
    \           } else if (c == '|') {\n                result[result.Count - 1] /=
    2;\n            }\n        }\n        return result;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n
    \   Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,
    (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o|
    o| .| .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,
    (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o|
    .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L,
    (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e79fc651183e4268b4ecfcd387c5bd5b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e79fc651183e4268b4ecfcd387c5bd5b>:0
    \n\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out of
    range. Must be non-negative and less than the size of the collection.\nParameter
    name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32
    index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.ParseMusic
    (System.String music_string) ["
  stdout: ''
  timestamp: 1659799607
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        List<long> result = new List<long>();\n        // TODO:
    Implement this function\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n
    \   Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,
    (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o|
    o| .| .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,
    (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o|
    .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L,
    (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d1dc8ff47eb04d468dab39e3a6dd9c34>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d1dc8ff47eb04d468dab39e3a6dd9c34>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        List<long> result = new List<long>();\n        foreach
    (var note in music_string.Split(' ')) {\n            switch (note) {\n                case
    \"o\":\n                    result.Add(4);\n                    break;\n                case
    \"o|\":\n                    result.Add(2);\n                    break;\n                case
    \".|\":\n                    result.Add(1);\n                    break;\n            }\n
    \       }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o
    o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,
    (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .|
    o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L,
    (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o|
    .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L,
    (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5be5e1d109a44872ae65816bc9fe8c1e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <5be5e1d109a44872ae65816bc9fe8c1e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        List<long> result = new List<long>();\n        foreach
    (char c in music_string) {\n            if (c == 'o') {\n                result.Add(4);\n
    \           } else if (c == '|') {\n                result[result.Count - 1] /=
    2;\n            }\n        }\n        return result;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n
    \   Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,
    (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o|
    o| .| .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,
    (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o|
    .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L,
    (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1cc85df7e69849e28d63d8b3781442b4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1cc85df7e69849e28d63d8b3781442b4>:0
    \n\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out of
    range. Must be non-negative and less than the size of the collection.\nParameter
    name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32
    index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.ParseMusic
    (System.String music_string) ["
  stdout: ''
  timestamp: 1659799608
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        List<long> result = new List<long>();\n        foreach
    (char c in music_string) {\n            if (c == 'o') {\n                result.Add(4);\n
    \           } else if (c == '|') {\n                result[result.Count - 1] /=
    2;\n            }\n        }\n        return result;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n
    \   Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,
    (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o|
    o| .| .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,
    (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o|
    .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L,
    (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1cc85df7e69849e28d63d8b3781442b4>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1cc85df7e69849e28d63d8b3781442b4>:0
    \n\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out of
    range. Must be non-negative and less than the size of the collection.\nParameter
    name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32
    index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.ParseMusic
    (System.String music_string) ["
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        var result = new List<long>();\n        var notes = music_string.Split('
    ');\n        foreach (var note in notes) {\n            if (note == \"o\") {\n
    \               result.Add(4);\n            } else if (note == \"o|\") {\n                result.Add(2);\n
    \           } else if (note == \".|\") {\n                result.Add(1);\n            }\n
    \       }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o
    o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,
    (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .|
    o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L,
    (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o|
    .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L,
    (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ca417ca0f5ca4378837c6524ec190d6c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ca417ca0f5ca4378837c6524ec190d6c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        var result = new List<long>();\n        var note = new
    List<char>();\n        foreach (var c in music_string) {\n            if (c ==
    ' ') {\n                if (note.Count > 0) {\n                    result.Add(GetNoteLength(note));\n
    \                   note.Clear();\n                }\n            } else {\n                note.Add(c);\n
    \           }\n        }\n        if (note.Count > 0) {\n            result.Add(GetNoteLength(note));\n
    \       }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o
    o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,
    (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .|
    o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L,
    (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o|
    .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L,
    (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpd8zeacn8.cs(24,32): error CS0103: The name ''GetNoteLength'' does not
    exist in the current context

    /tmp/tmpd8zeacn8.cs(32,24): error CS0103: The name ''GetNoteLength'' does not
    exist in the current context

    '
  timestamp: 1659799609
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        List<long> result = new List<long>();\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new
    List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new
    long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".|
    .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n
    \   Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new
    long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new List<long>(new
    long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4a3f153406c2462f8f781c7fd14cbc56>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <4a3f153406c2462f8f781c7fd14cbc56>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799610
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        List<long> result = new List<long>();\n        int i
    = 0;\n        while (i < music_string.Length) {\n            if (music_string[i]
    == 'o') {\n                if (i + 1 < music_string.Length && music_string[i +
    1] == '|') {\n                    result.Add(2);\n                    i += 2;\n
    \               } else {\n                    result.Add(4);\n                    i
    += 1;\n                }\n            } else {\n                result.Add(1);\n
    \               i += 2;\n            }\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new
    List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new
    long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".|
    .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n
    \   Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new
    long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new List<long>(new
    long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e8cb2e1b19a04929bf2dc6c9159b5eb5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e8cb2e1b19a04929bf2dc6c9159b5eb5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        List<long> beats = new List<long>();\n        for (int
    i = 0; i < music_string.Length; i++) {\n            if (music_string[i] == 'o')
    {\n                beats.Add(4);\n            }\n            else if (music_string[i]
    == '|') {\n                beats.Add(2);\n            }\n            else if (music_string[i]
    == '.') {\n                beats.Add(1);\n            }\n        }\n        return
    beats;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new
    List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new
    long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".|
    .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n
    \   Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new
    long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new List<long>(new
    long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <13d134d172074f6c91b17e953e8d00e0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <13d134d172074f6c91b17e953e8d00e0>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799610
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        List<long> result = new List<long>();\n        int i
    = 0;\n        while (i < music_string.Length) {\n            if (music_string[i]
    == 'o') {\n                if (i + 1 < music_string.Length && music_string[i +
    1] == '|') {\n                    result.Add(2);\n                    i += 2;\n
    \               } else {\n                    result.Add(4);\n                    i
    += 1;\n                }\n            } else {\n                result.Add(1);\n
    \               i += 2;\n            }\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new
    List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new
    long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".|
    .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n
    \   Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new
    long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new List<long>(new
    long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e8cb2e1b19a04929bf2dc6c9159b5eb5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e8cb2e1b19a04929bf2dc6c9159b5eb5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        List<long> result = new List<long>();\n        string[]
    notes = music_string.Split(' ');\n        foreach (string note in notes) {\n            if
    (note == \"o\") {\n                result.Add(4);\n            } else if (note
    == \"o|\") {\n                result.Add(2);\n            } else if (note == \".|\")
    {\n                result.Add(1);\n            }\n        }\n        return result;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new
    List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new
    long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".|
    .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n
    \   Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new
    long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new List<long>(new
    long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0e88bca602a8422990190e4fababf9ab>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0e88bca602a8422990190e4fababf9ab>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799607
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        List<long> result = new List<long>();\n        foreach
    (var c in music_string) {\n            if (c == 'o') {\n                result.Add(4);\n
    \           } else if (c == '|') {\n                result[result.Count - 1] /=
    2;\n            }\n        }\n        return result;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n
    \   Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,
    (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o|
    o| .| .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,
    (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o|
    .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L,
    (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e79fc651183e4268b4ecfcd387c5bd5b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e79fc651183e4268b4ecfcd387c5bd5b>:0
    \n\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out of
    range. Must be non-negative and less than the size of the collection.\nParameter
    name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32
    index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.ParseMusic
    (System.String music_string) ["
  stdout: ''
  timestamp: 1659799607
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        var result = new List<long>();\n        var notes = music_string.Split('
    ');\n        foreach (var note in notes) {\n            if (note == \"o\") {\n
    \               result.Add(4);\n            } else if (note == \"o|\") {\n                result.Add(2);\n
    \           } else if (note == \".|\") {\n                result.Add(1);\n            }\n
    \       }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o
    o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,
    (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .|
    o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L,
    (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o|
    .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L,
    (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ca417ca0f5ca4378837c6524ec190d6c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ca417ca0f5ca4378837c6524ec190d6c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        List<long> result = new List<long>();\n        long counter
    = 0;\n        for (int i = 0; i < music_string.Length; i++) {\n            if
    (music_string[i] == 'o') {\n                if (i + 1 < music_string.Length &&
    music_string[i + 1] == '|') {\n                    result.Add(2);\n                    i++;\n
    \               }\n                else {\n                    result.Add(4);\n
    \               }\n            }\n            else if (music_string[i] == '.')
    {\n                result.Add(1);\n                i++;\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o
    o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,
    (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .|
    o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L,
    (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o|
    .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L,
    (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <dba25e2a48974e169ed8bcc40cb669aa>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <dba25e2a48974e169ed8bcc40cb669aa>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799610
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        List<long> res = new List<long>();\n        for (int
    i = 0; i < music_string.Length; i++) {\n            if (music_string[i] == 'o')
    {\n                res.Add(4);\n            }\n            else if (music_string[i]
    == '.') {\n                res.Add(1);\n            }\n            else if (music_string[i]
    == '|') {\n                res.Add(2);\n            }\n        }\n        return
    res;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new
    List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new
    long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".|
    .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n
    \   Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new
    long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new List<long>(new
    long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <30f7ff9120b44c92a9f3313c4d161733>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <30f7ff9120b44c92a9f3313c4d161733>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799610
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        var result = new List<long>();\n        var beats = new
    List<string>();\n        var beat = new StringBuilder();\n        foreach (var
    ch in music_string) {\n            if (ch == ' ') {\n                beats.Add(beat.ToString());\n
    \               beat.Clear();\n            } else {\n                beat.Append(ch);\n
    \           }\n        }\n        beats.Add(beat.ToString());\n        foreach
    (var b in beats) {\n            switch (b) {\n                case \"o\":\n                    result.Add(4);\n
    \                   break;\n                case \"o|\":\n                    result.Add(2);\n
    \                   break;\n                case \".|\":\n                    result.Add(1);\n
    \                   break;\n                default:\n                    throw
    new Exception(\"Invalid beat: \" + b);\n            }\n        }\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new
    List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new
    long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".|
    .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n
    \   Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new
    long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new List<long>(new
    long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "\nUnhandled Exception:\nSystem.Exception: Invalid beat: \n  at Problem.ParseMusic
    (System.String music_string) [0x000ed] in <bd28b959895d42cfabf8f54a9924b731>:0
    \n  at Problem.Main (System.String[] args) [0x00001] in <bd28b959895d42cfabf8f54a9924b731>:0
    \n[ERROR] FATAL UNHANDLED EXCEPTION: System.Exception: Invalid beat: \n  at Problem.ParseMusic
    (System.String music_string) [0x000ed] in <bd28b959895d42cfabf8f54a9924b731>:0
    \n  at Problem.Main (System.String[] args) [0x00001] in <bd28b959895d42cfabf8f54a9924b731>:0
    \n"
  stdout: ''
  timestamp: 1659799610
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        var result = new List<long>();\n        var beats = new
    Dictionary<char, long>() {\n            {'o', 4},\n            {'|', 2},\n            {'.',
    1}\n        };\n        var current = 0L;\n        foreach (var c in music_string)
    {\n            if (c == ' ') {\n                result.Add(current);\n                current
    = 0;\n            } else {\n                current += beats[c];\n            }\n
    \       }\n        result.Add(current);\n        return result;\n    }\n    public
    static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new
    List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new
    long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".|
    .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n
    \   Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new
    long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new List<long>(new
    long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <2e5bb6297a5142a191ef52e68d4cc23c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <2e5bb6297a5142a191ef52e68d4cc23c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799610
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        List<long> result = new List<long>();\n        foreach
    (var c in music_string) {\n            if (c == 'o') {\n                result.Add(4);\n
    \           } else if (c == '|') {\n                result[result.Count - 1] /=
    2;\n            }\n        }\n        return result;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n
    \   Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,
    (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o|
    o| .| .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,
    (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o|
    .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L,
    (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e79fc651183e4268b4ecfcd387c5bd5b>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e79fc651183e4268b4ecfcd387c5bd5b>:0
    \n\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out of
    range. Must be non-negative and less than the size of the collection.\nParameter
    name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32
    index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.ParseMusic
    (System.String music_string) ["
  stdout: ''
  timestamp: 1659799607
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        List<long> result = new List<long>();\n        string[]
    notes = music_string.Split(' ');\n        foreach (string note in notes) {\n            if
    (note == \"o\") {\n                result.Add(4);\n            } else if (note
    == \"o|\") {\n                result.Add(2);\n            } else if (note == \".|\")
    {\n                result.Add(1);\n            }\n        }\n        return result;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new
    List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new
    long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".|
    .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n
    \   Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new
    long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new List<long>(new
    long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0e88bca602a8422990190e4fababf9ab>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0e88bca602a8422990190e4fababf9ab>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799607
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        List<long> result = new List<long>();\n        // Your
    code goes here\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o
    o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,
    (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .|
    o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L,
    (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o|
    .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L,
    (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1da6c7e19f6f47f8bbe6f48c3222d20f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1da6c7e19f6f47f8bbe6f48c3222d20f>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799607
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        var beats = new List<long>();\n        foreach (var c
    in music_string) {\n            if (c == 'o') {\n                beats.Add(4);\n
    \           } else if (c == '|') {\n                beats.Add(2);\n            }
    else if (c == '.') {\n                beats.Add(1);\n            }\n        }\n
    \       return beats;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new
    List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new
    long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".|
    .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n
    \   Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new
    long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new List<long>(new
    long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d87a5f23bebc40bb9dd6083d82d7317d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d87a5f23bebc40bb9dd6083d82d7317d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799610
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        var result = new List<long>();\n        var current_note
    = 0L;\n        foreach (var c in music_string) {\n            if (c == 'o') {\n
    \               current_note += 4;\n            } else if (c == '|') {\n                result.Add(current_note);\n
    \               current_note = 0;\n            } else if (c == '.') {\n                current_note
    += 1;\n            }\n        }\n        result.Add(current_note);\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new
    List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new
    long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".|
    .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n
    \   Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new
    long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new List<long>(new
    long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1257a666b1a74fabb8bca92b374c2303>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <1257a666b1a74fabb8bca92b374c2303>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799610
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        List<long> result = new List<long>();\n        string[]
    notes = music_string.Split(' ');\n        foreach (string note in notes) {\n            if
    (note == \"o\") {\n                result.Add(4);\n            } else if (note
    == \"o|\") {\n                result.Add(2);\n            } else if (note == \".|\")
    {\n                result.Add(1);\n            }\n        }\n        return result;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new
    List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new
    long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".|
    .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n
    \   Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new
    long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new List<long>(new
    long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0e88bca602a8422990190e4fababf9ab>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0e88bca602a8422990190e4fababf9ab>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799607
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        var beats = new List<long>();\n        foreach (var c
    in music_string) {\n            if (c == 'o') {\n                beats.Add(4);\n
    \           } else if (c == '|') {\n                beats.Add(2);\n            }
    else if (c == '.') {\n                beats.Add(1);\n            }\n        }\n
    \       return beats;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new
    List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new
    long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".|
    .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n
    \   Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new
    long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new List<long>(new
    long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d87a5f23bebc40bb9dd6083d82d7317d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d87a5f23bebc40bb9dd6083d82d7317d>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799610
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        List<long> result = new List<long>();\n        for (int
    i = 0; i < music_string.Length; i++) {\n            if (music_string[i] == 'o')
    {\n                if (i + 1 < music_string.Length && music_string[i + 1] == '|')
    {\n                    result.Add(2);\n                    i++;\n                }
    else {\n                    result.Add(4);\n                }\n            } else
    if (music_string[i] == '.') {\n                result.Add(1);\n                i++;\n
    \           }\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n
    \   Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,
    (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o|
    o| .| .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,
    (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o|
    .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L,
    (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d6e66c1e39ae41a191f458f51849c9d1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d6e66c1e39ae41a191f458f51849c9d1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        var result = new List<long>();\n        var beats = new
    Dictionary<char, long>() {\n            {'o', 4},\n            {'|', 2},\n            {'.',
    1}\n        };\n        var current_beat = 0L;\n        foreach (var c in music_string)
    {\n            if (beats.ContainsKey(c)) {\n                result.Add(beats[c]
    - current_beat);\n                current_beat = beats[c];\n            } else
    {\n                current_beat = 0;\n            }\n        }\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new
    List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new
    long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".|
    .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n
    \   Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new
    long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new List<long>(new
    long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fd0b861805d645bf9b1c4d0330750b89>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <fd0b861805d645bf9b1c4d0330750b89>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799610
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        List<long> result = new List<long>();\n        long beats
    = 0;\n        foreach (char c in music_string) {\n            if (c == 'o') {\n
    \               beats += 4;\n            } else if (c == '|') {\n                result.Add(beats);\n
    \               beats = 0;\n            }\n        }\n        result.Add(beats);\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o
    o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,
    (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .|
    o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L,
    (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o|
    .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L,
    (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <bab4e998e72a4a7d940ee5280d53d091>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <bab4e998e72a4a7d940ee5280d53d091>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799607
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        var result = new List<long>();\n        var notes = music_string.Split('
    ');\n        foreach (var note in notes) {\n            if (note == \"o\") {\n
    \               result.Add(4);\n            } else if (note == \"o|\") {\n                result.Add(2);\n
    \           } else if (note == \".|\") {\n                result.Add(1);\n            }\n
    \       }\n        return result;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o
    o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,
    (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .|
    o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L,
    (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o|
    .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L,
    (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ca417ca0f5ca4378837c6524ec190d6c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ca417ca0f5ca4378837c6524ec190d6c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        // Write your code here.\n        var result = new List<long>();\n
    \       var notes = music_string.Split(' ');\n        foreach (var note in notes)
    {\n            if (note == \"o\") {\n                result.Add(4);\n            }
    else if (note == \"o|\") {\n                result.Add(2);\n            } else
    if (note == \".|\") {\n                result.Add(1);\n            }\n        }\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o
    o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,
    (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .|
    o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L,
    (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o|
    .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L,
    (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ac8f8fd88f4b4922b50d6fc00ebd8434>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <ac8f8fd88f4b4922b50d6fc00ebd8434>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799610
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        var beats = new List<long>();\n        var notes = music_string.Split('
    ');\n        foreach (var note in notes) {\n            if (note == \"o\") {\n
    \               beats.Add(4);\n            } else if (note == \"o|\") {\n                beats.Add(2);\n
    \           } else if (note == \".|\") {\n                beats.Add(1);\n            }\n
    \       }\n        return beats;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o
    o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,
    (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .|
    o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L,
    (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o|
    .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L,
    (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8722ff579dcf4bbaac9cd4122aeacf5c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8722ff579dcf4bbaac9cd4122aeacf5c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        List<long> result = new List<long>();\n        for (int
    i = 0; i < music_string.Length; i++) {\n            if (music_string[i] == 'o')
    {\n                if (i + 1 < music_string.Length && music_string[i + 1] == '|')
    {\n                    result.Add(2);\n                    i++;\n                }
    else {\n                    result.Add(4);\n                }\n            } else
    if (music_string[i] == '.') {\n                result.Add(1);\n                i++;\n
    \           }\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n
    \   Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,
    (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o|
    o| .| .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,
    (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o|
    .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L,
    (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d6e66c1e39ae41a191f458f51849c9d1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <d6e66c1e39ae41a191f458f51849c9d1>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        var res = new List<long>();\n        var notes = music_string.Split('
    ');\n        foreach (var note in notes) {\n            if (note == \"o\") {\n
    \               res.Add(4);\n            } else if (note == \"o|\") {\n                res.Add(2);\n
    \           } else if (note == \".|\") {\n                res.Add(1);\n            }\n
    \       }\n        return res;\n    }\n    public static void Main(string[] args)
    {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o
    o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,
    (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .|
    o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L,
    (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o|
    .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L,
    (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0f9b7f484e2645d48a01b186c738f8c8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <0f9b7f484e2645d48a01b186c738f8c8>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799610
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        var res = new List<long>();\n        var s = music_string.Replace(\"
    \", \"\");\n        for (int i = 0; i < s.Length; i++) {\n            if (s[i]
    == 'o') {\n                res.Add(4);\n            } else if (s[i] == '.') {\n
    \               res.Add(1);\n            } else if (s[i] == '|') {\n                res.Add(2);\n
    \           }\n        }\n        return res;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o
    o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,
    (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .|
    o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L,
    (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o|
    .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L,
    (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <eff69ba5c6cc4ebf9c10028c9c41a3ad>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <eff69ba5c6cc4ebf9c10028c9c41a3ad>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799610
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        var beats = new List<long>();\n        var notes = music_string.Split('
    ');\n        foreach (var note in notes) {\n            if (note == \"o\") {\n
    \               beats.Add(4);\n            } else if (note == \"o|\") {\n                beats.Add(2);\n
    \           } else if (note == \".|\") {\n                beats.Add(1);\n            }\n
    \       }\n        return beats;\n    }\n    public static void Main(string[]
    args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o
    o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,
    (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .|
    o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L,
    (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o|
    .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L,
    (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8722ff579dcf4bbaac9cd4122aeacf5c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <8722ff579dcf4bbaac9cd4122aeacf5c>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799608
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        var result = new List<long>();\n        var note = \"\";\n
    \       foreach (var c in music_string) {\n            if (c == ' ') {\n                result.Add(GetNoteLength(note));\n
    \               note = \"\";\n            } else {\n                note += c;\n
    \           }\n        }\n        result.Add(GetNoteLength(note));\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new
    List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new
    long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".|
    .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n
    \   Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new
    long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new List<long>(new
    long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n
    \   }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmpavgc02g1.cs(23,28): error CS0103: The name ''GetNoteLength'' does not
    exist in the current context

    /tmp/tmpavgc02g1.cs(29,20): error CS0103: The name ''GetNoteLength'' does not
    exist in the current context

    '
  timestamp: 1659799610
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        var result = new List<long>();\n        var beats = new
    List<long>();\n        var beat = 0L;\n        foreach (var c in music_string)
    {\n            if (c == 'o') {\n                beats.Add(beat);\n                beat
    = 0L;\n            } else if (c == '|') {\n                beat++;\n            }\n
    \       }\n        beats.Add(beat);\n        foreach (var b in beats) {\n            if
    (b == 0L) {\n                result.Add(4L);\n            } else if (b == 1L)
    {\n                result.Add(2L);\n            } else {\n                result.Add(1L);\n
    \           }\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n
    \   Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,
    (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o|
    o| .| .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,
    (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o|
    .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L,
    (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <53c393c3a6d64191bac483a13ce3f071>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <53c393c3a6d64191bac483a13ce3f071>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799610
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        List<long> result = new List<long>();\n        foreach
    (var c in music_string) {\n            switch (c) {\n                case 'o':\n
    \                   result.Add(4);\n                    break;\n                case
    '|':\n                    result[result.Count - 1] /= 2;\n                    break;\n
    \               case '.':\n                    result.Add(1);\n                    break;\n
    \           }\n        }\n        return result;\n    }\n    public static void
    Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n
    \   Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,
    (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o|
    o| .| .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,
    (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o|
    .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L,
    (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e46109b44c4d4db786cad762a4bd6e47>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e46109b44c4d4db786cad762a4bd6e47>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799610
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        var result = new List<long>();\n        var note_lengths
    = new Dictionary<char, long>();\n        note_lengths['o'] = 4;\n        note_lengths['|']
    = 2;\n        note_lengths['.'] = 1;\n        var current_note = 0L;\n        foreach
    (var c in music_string) {\n            if (note_lengths.ContainsKey(c)) {\n                current_note
    += note_lengths[c];\n            } else {\n                result.Add(current_note);\n
    \               current_note = 0;\n            }\n        }\n        result.Add(current_note);\n
    \       return result;\n    }\n    public static void Main(string[] args) {\n
    \   Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o
    o o o\")).Equals((new List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L,
    (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .|
    o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L,
    (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o|
    .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L,
    (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3b9e6aea54a448fb825f6a1face5c85a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <3b9e6aea54a448fb825f6a1face5c85a>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799610
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        var result = new List<long>();\n        var note_lengths
    = new Dictionary<char, long>();\n        note_lengths['o'] = 4;\n        note_lengths['|']
    = 2;\n        note_lengths['.'] = 1;\n        var current_note = ' ';\n        var
    current_note_length = 0L;\n        foreach (var c in music_string) {\n            if
    (note_lengths.ContainsKey(c)) {\n                if (c == '|') {\n                    current_note_length
    += note_lengths[c];\n                } else {\n                    if (current_note
    != ' ') {\n                        result.Add(current_note_length);\n                    }\n
    \                   current_note = c;\n                    current_note_length
    = note_lengths[c];\n                }\n            }\n        }\n        if (current_note
    != ' ') {\n            result.Add(current_note_length);\n        }\n        return
    result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new
    List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new
    long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".|
    .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n
    \   Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new
    long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new List<long>(new
    long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f217aedec1824ce88f0442360e570e0e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <f217aedec1824ce88f0442360e570e0e>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799610
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        var beats = new List<long>();\n        foreach (var c
    in music_string) {\n            switch (c) {\n                case 'o':\n                    beats.Add(4);\n
    \                   break;\n                case '|':\n                    beats[beats.Count
    - 1] /= 2;\n                    break;\n                case '.':\n                    beats.Add(1);\n
    \                   break;\n            }\n        }\n        return beats;\n
    \   }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new
    List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new
    long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".|
    .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n
    \   Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new
    long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new List<long>(new
    long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <92f026c9879046e29b830c02f717ecde>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <92f026c9879046e29b830c02f717ecde>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799610
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        var result = new List<long>();\n        foreach (var
    c in music_string) {\n            if (c == 'o') {\n                result.Add(4);\n
    \           } else if (c == '|') {\n                result[result.Count - 1] /=
    2;\n            }\n        }\n        return result;\n    }\n    public static
    void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new List<long>())));\n
    \   Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new long[]{(long)4L,
    (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".| .| .| .|\")).Equals((new
    List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n    Debug.Assert(ParseMusic((\"o|
    o| .| .| o o o o\")).Equals((new List<long>(new long[]{(long)2L, (long)2L, (long)1L,
    (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o|
    .| o| .| o o| o o|\")).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L,
    (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <60d645aa40b34914949fa22b931d8207>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <60d645aa40b34914949fa22b931d8207>:0
    \n\nUnhandled Exception:\nSystem.ArgumentOutOfRangeException: Index was out of
    range. Must be non-negative and less than the size of the collection.\nParameter
    name: index\n  at System.Collections.Generic.List`1[T].get_Item (System.Int32
    index) [0x00009] in <aa5dff9b31c64fce86559bbbf6cd364f>:0 \n  at Problem.ParseMusic
    (System.String music_string) ["
  stdout: ''
  timestamp: 1659799608
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing
    System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass
    Problem {\n    // Input to this function is a string representing musical notes
    in a special ASCII format.\n    // Your task is to parse this string and return
    list of integers corresponding to how many beats does each\n    // not last.\n
    \   // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'
    - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //
    >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new
    long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,
    (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string
    music_string) {\n        List<long> result = new List<long>();\n        int i
    = 0;\n        while (i < music_string.Length) {\n            if (music_string[i]
    == 'o') {\n                if (i + 1 < music_string.Length && music_string[i +
    1] == '|') {\n                    result.Add(2);\n                    i += 2;\n
    \               } else {\n                    result.Add(4);\n                    i
    += 1;\n                }\n            } else {\n                result.Add(1);\n
    \               i += 2;\n            }\n        }\n        return result;\n    }\n
    \   public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\")).Equals((new
    List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new List<long>(new
    long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\".|
    .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L, (long)1L}))));\n
    \   Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new List<long>(new
    long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L, (long)4L, (long)4L}))));\n
    \   Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\")).Equals((new List<long>(new
    long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L, (long)2L, (long)4L, (long)2L}))));\n
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String
    message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e8cb2e1b19a04929bf2dc6c9159b5eb5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at
    System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceInternal.Assert (System.Boolean condition) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.Debug.Assert
    (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n
    \ at Problem.Main (System.String[] args) [0x00000] in <e8cb2e1b19a04929bf2dc6c9159b5eb5>:0
    \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String message,
    System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0
    \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]
    in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail
    (System.String "
  stdout: ''
  timestamp: 1659799608

language: cs
name: HumanEval_61_correct_bracketing
results:
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count +=\
    \ 1;\n            } else if (c == ')') {\n                count -= 1;\n      \
    \      }\n            if (count < 0) {\n                return false;\n      \
    \      }\n        }\n        return count == 0;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count +=\
    \ 1;\n            } else if (c == ')') {\n                count -= 1;\n      \
    \      }\n            if (count < 0) {\n                return false;\n      \
    \      }\n        }\n        return count == 0;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') count++;\n            else\
    \ if (c == ')') count--;\n            if (count < 0) return false;\n        }\n\
    \        return count == 0;\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count +=\
    \ 1;\n            } else if (c == ')') {\n                count -= 1;\n      \
    \      }\n            if (count < 0) {\n                return false;\n      \
    \      }\n        }\n        return count == 0;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count +=\
    \ 1;\n            } else if (c == ')') {\n                count -= 1;\n      \
    \      }\n            if (count < 0) {\n                return false;\n      \
    \      }\n        }\n        return count == 0;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        for (int\
    \ i = 0; i < brackets.Length; i++) {\n            if (brackets[i] == '(') {\n\
    \                count++;\n            } else {\n                count--;\n  \
    \          }\n            if (count < 0) {\n                return false;\n  \
    \          }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count +=\
    \ 1;\n            } else if (c == ')') {\n                count -= 1;\n      \
    \      }\n            if (count < 0) {\n                return false;\n      \
    \      }\n        }\n        return count == 0;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count +=\
    \ 1;\n            } else if (c == ')') {\n                count -= 1;\n      \
    \      }\n            if (count < 0) {\n                return false;\n      \
    \      }\n        }\n        return count == 0;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count +=\
    \ 1;\n            } else if (c == ')') {\n                count -= 1;\n      \
    \      }\n            if (count < 0) {\n                return false;\n      \
    \      }\n        }\n        return count == 0;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        for (int\
    \ i = 0; i < brackets.Length; i++) {\n            if (brackets[i] == '(') {\n\
    \                count++;\n            } else {\n                count--;\n  \
    \          }\n            if (count < 0) {\n                return false;\n  \
    \          }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count +=\
    \ 1;\n            } else if (c == ')') {\n                count -= 1;\n      \
    \      }\n            if (count < 0) {\n                return false;\n      \
    \      }\n        }\n        return count == 0;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count +=\
    \ 1;\n            } else if (c == ')') {\n                count -= 1;\n      \
    \      }\n            if (count < 0) {\n                return false;\n      \
    \      }\n        }\n        return count == 0;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        for (int\
    \ i = 0; i < brackets.Length; i++) {\n            if (brackets[i] == '(') {\n\
    \                count++;\n            } else {\n                count--;\n  \
    \          }\n            if (count < 0) {\n                return false;\n  \
    \          }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count +=\
    \ 1;\n            } else if (c == ')') {\n                count -= 1;\n      \
    \      }\n            if (count < 0) {\n                return false;\n      \
    \      }\n        }\n        return count == 0;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count +=\
    \ 1;\n            } else if (c == ')') {\n                count -= 1;\n      \
    \      }\n            if (count < 0) {\n                return false;\n      \
    \      }\n        }\n        return count == 0;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count +=\
    \ 1;\n            } else if (c == ')') {\n                count -= 1;\n      \
    \      }\n            if (count < 0) {\n                return false;\n      \
    \      }\n        }\n        return count == 0;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        for (int\
    \ i = 0; i < brackets.Length; i++) {\n            if (brackets[i] == '(') {\n\
    \                count++;\n            } else {\n                count--;\n  \
    \          }\n            if (count < 0) {\n                return false;\n  \
    \          }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        for (int\
    \ i = 0; i < brackets.Length; i++) {\n            if (brackets[i] == '(') {\n\
    \                count++;\n            } else {\n                count--;\n  \
    \          }\n            if (count < 0) {\n                return false;\n  \
    \          }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        for (int\
    \ i = 0; i < brackets.Length; i++) {\n            if (brackets[i] == '(') {\n\
    \                count++;\n            } else {\n                count--;\n  \
    \          }\n            if (count < 0) {\n                return false;\n  \
    \          }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        for (int\
    \ i = 0; i < brackets.Length; i++) {\n            if (brackets[i] == '(') {\n\
    \                count++;\n            } else {\n                count--;\n  \
    \          }\n            if (count < 0) {\n                return false;\n  \
    \          }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count +=\
    \ 1;\n            } else if (c == ')') {\n                count -= 1;\n      \
    \      }\n            if (count < 0) {\n                return false;\n      \
    \      }\n        }\n        return count == 0;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        for (int\
    \ i = 0; i < brackets.Length; i++) {\n            if (brackets[i] == '(') {\n\
    \                count++;\n            } else {\n                count--;\n  \
    \          }\n            if (count < 0) {\n                return false;\n  \
    \          }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        for (int\
    \ i = 0; i < brackets.Length; i++) {\n            if (brackets[i] == '(') {\n\
    \                count++;\n            } else {\n                count--;\n  \
    \          }\n            if (count < 0) {\n                return false;\n  \
    \          }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count +=\
    \ 1;\n            } else if (c == ')') {\n                count -= 1;\n      \
    \      }\n            if (count < 0) {\n                return false;\n      \
    \      }\n        }\n        return count == 0;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        for (int\
    \ i = 0; i < brackets.Length; i++) {\n            if (brackets[i] == '(') {\n\
    \                count++;\n            } else {\n                count--;\n  \
    \          }\n            if (count < 0) {\n                return false;\n  \
    \          }\n        }\n        return count == 0;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) ==\
    \ (true));\n    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n   \
    \ Debug.Assert(CorrectBracketing((\"()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()((()()())())(()()(()))\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ((()())))\")) == (false));\n    Debug.Assert(CorrectBracketing((\")(()\")) ==\
    \ (false));\n    Debug.Assert(CorrectBracketing((\"(\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ((((\")) == (false));\n    Debug.Assert(CorrectBracketing((\")\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\"(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())())(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\"\
    )) == (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count +=\
    \ 1;\n            } else if (c == ')') {\n                count -= 1;\n      \
    \      }\n            if (count < 0) {\n                return false;\n      \
    \      }\n        }\n        return count == 0;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count +=\
    \ 1;\n            } else if (c == ')') {\n                count -= 1;\n      \
    \      }\n            if (count < 0) {\n                return false;\n      \
    \      }\n        }\n        return count == 0;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count +=\
    \ 1;\n            } else if (c == ')') {\n                count -= 1;\n      \
    \      }\n            if (count < 0) {\n                return false;\n      \
    \      }\n        }\n        return count == 0;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count +=\
    \ 1;\n            } else if (c == ')') {\n                count -= 1;\n      \
    \      }\n            if (count < 0) {\n                return false;\n      \
    \      }\n        }\n        return count == 0;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count +=\
    \ 1;\n            } else if (c == ')') {\n                count -= 1;\n      \
    \      }\n            if (count < 0) {\n                return false;\n      \
    \      }\n        }\n        return count == 0;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count +=\
    \ 1;\n            } else if (c == ')') {\n                count -= 1;\n      \
    \      }\n            if (count < 0) {\n                return false;\n      \
    \      }\n        }\n        return count == 0;\n    }\n    public static void\
    \ Main(string[] args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n\
    \    Debug.Assert(CorrectBracketing((\"(()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    ()()(()())()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // brackets is a string of \"(\" and \")\".\n    // return\
    \ true if every opening bracket has a corresponding closing bracket.\n    // >>>\
    \ CorrectBracketing((\"(\"))\n    // (false)\n    // >>> CorrectBracketing((\"\
    ()\"))\n    // (true)\n    // >>> CorrectBracketing((\"(()())\"))\n    // (true)\n\
    \    // >>> CorrectBracketing((\")(()\"))\n    // (false)\n    public static bool\
    \ CorrectBracketing(string brackets) {\n        int count = 0;\n        foreach\
    \ (char c in brackets) {\n            if (c == '(') {\n                count++;\n\
    \            } else if (c == ')') {\n                count--;\n            }\n\
    \            if (count < 0) {\n                return false;\n            }\n\
    \        }\n        return count == 0;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CorrectBracketing((\"()\")) == (true));\n    Debug.Assert(CorrectBracketing((\"\
    (()())\")) == (true));\n    Debug.Assert(CorrectBracketing((\"()()(()())()\"))\
    \ == (true));\n    Debug.Assert(CorrectBracketing((\"()()((()()())())(()()(()))\"\
    )) == (true));\n    Debug.Assert(CorrectBracketing((\"((()())))\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")(()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (\")) == (false));\n    Debug.Assert(CorrectBracketing((\"((((\")) == (false));\n\
    \    Debug.Assert(CorrectBracketing((\")\")) == (false));\n    Debug.Assert(CorrectBracketing((\"\
    (()\")) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())())(()\"\
    )) == (false));\n    Debug.Assert(CorrectBracketing((\"()()(()())()))()\")) ==\
    \ (false));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794831

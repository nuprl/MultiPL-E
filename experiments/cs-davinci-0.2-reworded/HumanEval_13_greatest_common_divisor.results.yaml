language: cs
name: HumanEval_13_greatest_common_divisor
results:
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        if (a < b) {\n            return GreatestCommonDivisor(b, a);\n\
    \        }\n        if (b == 0) {\n            return a;\n        }\n        return\
    \ GreatestCommonDivisor(b, a % b);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L),\
    \ (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n\
    \    Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        long c;\n        while (b != 0) {\n            c = a % b;\n  \
    \          a = b;\n            b = c;\n        }\n        return a;\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L),\
    \ (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        while (b != 0) {\n            long t = b;\n            b = a %\
    \ b;\n            a = t;\n        }\n        return a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L))\
    \ == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        while (b != 0) {\n            long t = b;\n            b = a %\
    \ b;\n            a = t;\n        }\n        return a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L))\
    \ == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        while (b != 0) {\n            long t = b;\n            b = a %\
    \ b;\n            a = t;\n        }\n        return a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L))\
    \ == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        if (a < b) {\n            return GreatestCommonDivisor(b, a);\n\
    \        }\n        if (b == 0) {\n            return a;\n        }\n        return\
    \ GreatestCommonDivisor(b, a % b);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L),\
    \ (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n\
    \    Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        while (b != 0) {\n            long t = b;\n            b = a %\
    \ b;\n            a = t;\n        }\n        return a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L))\
    \ == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        while (b != 0) {\n            long t = b;\n            b = a %\
    \ b;\n            a = t;\n        }\n        return a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L))\
    \ == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        if (a < b) {\n            long tmp = a;\n            a = b;\n\
    \            b = tmp;\n        }\n        while (b != 0) {\n            long tmp\
    \ = a % b;\n            a = b;\n            b = tmp;\n        }\n        return\
    \ a;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L),\
    \ (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        while (b != 0) {\n            long t = b;\n            b = a %\
    \ b;\n            a = t;\n        }\n        return a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L))\
    \ == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        if (a < b) {\n            return GreatestCommonDivisor(b, a);\n\
    \        }\n        if (b == 0) {\n            return a;\n        }\n        return\
    \ GreatestCommonDivisor(b, a % b);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L),\
    \ (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n\
    \    Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        if (a < b) {\n            long tmp = a;\n            a = b;\n\
    \            b = tmp;\n        }\n        while (b != 0) {\n            long tmp\
    \ = a % b;\n            a = b;\n            b = tmp;\n        }\n        return\
    \ a;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L),\
    \ (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        while (b != 0) {\n            long t = b;\n            b = a %\
    \ b;\n            a = t;\n        }\n        return a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L))\
    \ == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        while (b != 0) {\n            long t = b;\n            b = a %\
    \ b;\n            a = t;\n        }\n        return a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L))\
    \ == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        if (a < b) {\n            return GreatestCommonDivisor(b, a);\n\
    \        }\n        if (b == 0) {\n            return a;\n        }\n        return\
    \ GreatestCommonDivisor(b, a % b);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L),\
    \ (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n\
    \    Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        if (a < b) {\n            return GreatestCommonDivisor(b, a);\n\
    \        }\n        if (b == 0) {\n            return a;\n        }\n        return\
    \ GreatestCommonDivisor(b, a % b);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L),\
    \ (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n\
    \    Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        if (a < b) {\n            return GreatestCommonDivisor(b, a);\n\
    \        }\n        if (b == 0) {\n            return a;\n        }\n        return\
    \ GreatestCommonDivisor(b, a % b);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L),\
    \ (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n\
    \    Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        while (b != 0) {\n            long t = b;\n            b = a %\
    \ b;\n            a = t;\n        }\n        return a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L))\
    \ == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        if (a < b) {\n            return GreatestCommonDivisor(b, a);\n\
    \        }\n        if (b == 0) {\n            return a;\n        }\n        return\
    \ GreatestCommonDivisor(b, a % b);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L),\
    \ (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n\
    \    Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        if (a < b) {\n            long tmp = a;\n            a = b;\n\
    \            b = tmp;\n        }\n        while (b != 0) {\n            long tmp\
    \ = a % b;\n            a = b;\n            b = tmp;\n        }\n        return\
    \ a;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L),\
    \ (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        while (b != 0) {\n            long t = b;\n            b = a %\
    \ b;\n            a = t;\n        }\n        return a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L))\
    \ == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        while (b != 0) {\n            long t = b;\n            b = a %\
    \ b;\n            a = t;\n        }\n        return a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L))\
    \ == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        while (b != 0) {\n            long t = b;\n            b = a %\
    \ b;\n            a = t;\n        }\n        return a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L))\
    \ == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        if (a < b) {\n            return GreatestCommonDivisor(b, a);\n\
    \        }\n        while (b != 0) {\n            long c = a % b;\n          \
    \  a = b;\n            b = c;\n        }\n        return a;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L),\
    \ (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        if (a < b) {\n            return GreatestCommonDivisor(b, a);\n\
    \        }\n        if (b == 0) {\n            return a;\n        }\n        return\
    \ GreatestCommonDivisor(b, a % b);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L),\
    \ (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n\
    \    Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        long c;\n        while (b != 0) {\n            c = a % b;\n  \
    \          a = b;\n            b = c;\n        }\n        return a;\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L),\
    \ (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        while (b != 0) {\n            long t = b;\n            b = a %\
    \ b;\n            a = t;\n        }\n        return a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L))\
    \ == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        if (a < b) {\n            long tmp = a;\n            a = b;\n\
    \            b = tmp;\n        }\n        while (b != 0) {\n            long tmp\
    \ = a % b;\n            a = b;\n            b = tmp;\n        }\n        return\
    \ a;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L),\
    \ (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        while (b != 0) {\n            long t = b;\n            b = a %\
    \ b;\n            a = t;\n        }\n        return a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L))\
    \ == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        if (a < b) {\n            return GreatestCommonDivisor(b, a);\n\
    \        }\n        if (b == 0) {\n            return a;\n        }\n        return\
    \ GreatestCommonDivisor(b, a % b);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L),\
    \ (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n\
    \    Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        while (b != 0) {\n            long t = b;\n            b = a %\
    \ b;\n            a = t;\n        }\n        return a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L))\
    \ == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        if (a < b) {\n            long tmp = a;\n            a = b;\n\
    \            b = tmp;\n        }\n        while (b != 0) {\n            long tmp\
    \ = a % b;\n            a = b;\n            b = tmp;\n        }\n        return\
    \ a;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L),\
    \ (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        while (b != 0) {\n            long t = b;\n            b = a %\
    \ b;\n            a = t;\n        }\n        return a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L))\
    \ == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        while (b != 0) {\n            long t = b;\n            b = a %\
    \ b;\n            a = t;\n        }\n        return a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L))\
    \ == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        if (a < b) {\n            return GreatestCommonDivisor(b, a);\n\
    \        }\n        if (b == 0) {\n            return a;\n        }\n        return\
    \ GreatestCommonDivisor(b, a % b);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L),\
    \ (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n\
    \    Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        if (a < b) {\n            return GreatestCommonDivisor(b, a);\n\
    \        }\n        while (b != 0) {\n            long c = a % b;\n          \
    \  a = b;\n            b = c;\n        }\n        return a;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L),\
    \ (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        while (b != 0) {\n            long t = b;\n            b = a %\
    \ b;\n            a = t;\n        }\n        return a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L))\
    \ == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        while (b != 0) {\n            long t = b;\n            b = a %\
    \ b;\n            a = t;\n        }\n        return a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L))\
    \ == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        while (b != 0) {\n            long t = b;\n            b = a %\
    \ b;\n            a = t;\n        }\n        return a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L))\
    \ == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        while (b != 0) {\n            long t = b;\n            b = a %\
    \ b;\n            a = t;\n        }\n        return a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L))\
    \ == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        while (b != 0) {\n            long t = b;\n            b = a %\
    \ b;\n            a = t;\n        }\n        return a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L))\
    \ == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        if (a < b) {\n            return GreatestCommonDivisor(b, a);\n\
    \        }\n        if (b == 0) {\n            return a;\n        }\n        return\
    \ GreatestCommonDivisor(b, a % b);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L),\
    \ (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n\
    \    Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        if (a < b) {\n            long tmp = a;\n            a = b;\n\
    \            b = tmp;\n        }\n        while (b != 0) {\n            long tmp\
    \ = a % b;\n            a = b;\n            b = tmp;\n        }\n        return\
    \ a;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L),\
    \ (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        long c;\n        while (b != 0) {\n            c = a % b;\n  \
    \          a = b;\n            b = c;\n        }\n        return a;\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L),\
    \ (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        while (b != 0) {\n            long t = b;\n            b = a %\
    \ b;\n            a = t;\n        }\n        return a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L))\
    \ == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        if (a < b) {\n            return GreatestCommonDivisor(b, a);\n\
    \        }\n        if (b == 0) {\n            return a;\n        }\n        return\
    \ GreatestCommonDivisor(b, a % b);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L),\
    \ (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n\
    \    Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        while (b != 0) {\n            long t = b;\n            b = a %\
    \ b;\n            a = t;\n        }\n        return a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L))\
    \ == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        if (a < b) {\n            long tmp = a;\n            a = b;\n\
    \            b = tmp;\n        }\n        while (b != 0) {\n            long tmp\
    \ = a % b;\n            a = b;\n            b = tmp;\n        }\n        return\
    \ a;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L),\
    \ (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        long c;\n        while (b != 0) {\n            c = a % b;\n  \
    \          a = b;\n            b = c;\n        }\n        return a;\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L),\
    \ (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        if (a < b) {\n            return GreatestCommonDivisor(b, a);\n\
    \        }\n        if (b == 0) {\n            return a;\n        }\n        return\
    \ GreatestCommonDivisor(b, a % b);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L),\
    \ (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n\
    \    Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        while (b != 0) {\n            long t = b;\n            b = a %\
    \ b;\n            a = t;\n        }\n        return a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L))\
    \ == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        while (b != 0) {\n            long t = b;\n            b = a %\
    \ b;\n            a = t;\n        }\n        return a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L))\
    \ == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        if (a < b) {\n            return GreatestCommonDivisor(b, a);\n\
    \        }\n        if (b == 0) {\n            return a;\n        }\n        return\
    \ GreatestCommonDivisor(b, a % b);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L),\
    \ (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n\
    \    Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        long c;\n        while (b != 0) {\n            c = a % b;\n  \
    \          a = b;\n            b = c;\n        }\n        return a;\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L),\
    \ (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        while (b != 0) {\n            long t = b;\n            b = a %\
    \ b;\n            a = t;\n        }\n        return a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L))\
    \ == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        while (b != 0) {\n            long t = b;\n            b = a %\
    \ b;\n            a = t;\n        }\n        return a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L))\
    \ == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        if (a < b) {\n            return GreatestCommonDivisor(b, a);\n\
    \        }\n        while (b != 0) {\n            long c = a % b;\n          \
    \  a = b;\n            b = c;\n        }\n        return a;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L),\
    \ (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        while (b != 0) {\n            long t = b;\n            b = a %\
    \ b;\n            a = t;\n        }\n        return a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L))\
    \ == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        while (b != 0) {\n            long c = a % b;\n            a =\
    \ b;\n            b = c;\n        }\n        return a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L))\
    \ == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        if (a < b) {\n            long tmp = a;\n            a = b;\n\
    \            b = tmp;\n        }\n        while (b != 0) {\n            long tmp\
    \ = a % b;\n            a = b;\n            b = tmp;\n        }\n        return\
    \ a;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L),\
    \ (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        if (a < b) {\n            long tmp = a;\n            a = b;\n\
    \            b = tmp;\n        }\n        while (b != 0) {\n            long tmp\
    \ = a % b;\n            a = b;\n            b = tmp;\n        }\n        return\
    \ a;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L),\
    \ (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        if (a < b) {\n            return GreatestCommonDivisor(b, a);\n\
    \        }\n        if (b == 0) {\n            return a;\n        }\n        return\
    \ GreatestCommonDivisor(b, a % b);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L),\
    \ (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n\
    \    Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        while (b != 0) {\n            long t = b;\n            b = a %\
    \ b;\n            a = t;\n        }\n        return a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L))\
    \ == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        while (b != 0) {\n            long t = b;\n            b = a %\
    \ b;\n            a = t;\n        }\n        return a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L))\
    \ == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        if (a < b) {\n            long tmp = a;\n            a = b;\n\
    \            b = tmp;\n        }\n        while (b != 0) {\n            long r\
    \ = a % b;\n            a = b;\n            b = r;\n        }\n        return\
    \ a;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L),\
    \ (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        while (b != 0) {\n            long t = b;\n            b = a %\
    \ b;\n            a = t;\n        }\n        return a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L))\
    \ == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        if (a < b) {\n            return GreatestCommonDivisor(b, a);\n\
    \        }\n        if (b == 0) {\n            return a;\n        }\n        return\
    \ GreatestCommonDivisor(b, a % b);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L),\
    \ (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n\
    \    Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        while (b != 0) {\n            long t = b;\n            b = a %\
    \ b;\n            a = t;\n        }\n        return a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L))\
    \ == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        while (b != 0) {\n            long t = b;\n            b = a %\
    \ b;\n            a = t;\n        }\n        return a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L))\
    \ == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        while (b != 0) {\n            long t = b;\n            b = a %\
    \ b;\n            a = t;\n        }\n        return a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L))\
    \ == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        while (b != 0) {\n            long t = b;\n            b = a %\
    \ b;\n            a = t;\n        }\n        return a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L))\
    \ == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        if (a < b) {\n            long tmp = a;\n            a = b;\n\
    \            b = tmp;\n        }\n        while (b != 0) {\n            long tmp\
    \ = a % b;\n            a = b;\n            b = tmp;\n        }\n        return\
    \ a;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L),\
    \ (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        while (b != 0) {\n            long t = b;\n            b = a %\
    \ b;\n            a = t;\n        }\n        return a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L))\
    \ == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        while (b != 0) {\n            long t = b;\n            b = a %\
    \ b;\n            a = t;\n        }\n        return a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L))\
    \ == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        while (b != 0) {\n            long t = b;\n            b = a %\
    \ b;\n            a = t;\n        }\n        return a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L))\
    \ == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        if (a < b) {\n            return GreatestCommonDivisor(b, a);\n\
    \        }\n        if (b == 0) {\n            return a;\n        }\n        return\
    \ GreatestCommonDivisor(b, a % b);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L),\
    \ (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n\
    \    Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        if (a < b) {\n            return GreatestCommonDivisor(b, a);\n\
    \        }\n        while (b != 0) {\n            var t = b;\n            b =\
    \ a % b;\n            a = t;\n        }\n        return a;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L),\
    \ (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794505
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        while (b != 0) {\n            long t = b;\n            b = a %\
    \ b;\n            a = t;\n        }\n        return a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L))\
    \ == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        if (a < b) {\n            var tmp = a;\n            a = b;\n \
    \           b = tmp;\n        }\n        while (b != 0) {\n            var tmp\
    \ = a % b;\n            a = b;\n            b = tmp;\n        }\n        return\
    \ a;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L),\
    \ (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794505
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        while (b != 0) {\n            long t = b;\n            b = a %\
    \ b;\n            a = t;\n        }\n        return a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L))\
    \ == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        if (a < b) {\n            return GreatestCommonDivisor(b, a);\n\
    \        }\n        if (b == 0) {\n            return a;\n        }\n        return\
    \ GreatestCommonDivisor(b, a % b);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L),\
    \ (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n\
    \    Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        if (a < b) {\n            return GreatestCommonDivisor(b, a);\n\
    \        }\n        if (b == 0) {\n            return a;\n        }\n        return\
    \ GreatestCommonDivisor(b, a % b);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L),\
    \ (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n\
    \    Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        if (a < b) {\n            return GreatestCommonDivisor(b, a);\n\
    \        }\n        if (b == 0) {\n            return a;\n        }\n        return\
    \ GreatestCommonDivisor(b, a % b);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L),\
    \ (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n\
    \    Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        if (a < b) {\n            return GreatestCommonDivisor(b, a);\n\
    \        }\n        while (b != 0) {\n            long c = a % b;\n          \
    \  a = b;\n            b = c;\n        }\n        return a;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L),\
    \ (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        while (b != 0) {\n            long t = b;\n            b = a %\
    \ b;\n            a = t;\n        }\n        return a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L))\
    \ == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        if (a < b) {\n            long tmp = a;\n            a = b;\n\
    \            b = tmp;\n        }\n        while (b != 0) {\n            long tmp\
    \ = a % b;\n            a = b;\n            b = tmp;\n        }\n        return\
    \ a;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L),\
    \ (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        while (b != 0) {\n            long c = a % b;\n            a =\
    \ b;\n            b = c;\n        }\n        return a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L))\
    \ == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        if (a < b) {\n            long tmp = a;\n            a = b;\n\
    \            b = tmp;\n        }\n        while (b != 0) {\n            long tmp\
    \ = a % b;\n            a = b;\n            b = tmp;\n        }\n        return\
    \ a;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L),\
    \ (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        while (b != 0) {\n            long t = b;\n            b = a %\
    \ b;\n            a = t;\n        }\n        return a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L))\
    \ == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        while (b != 0) {\n            long t = b;\n            b = a %\
    \ b;\n            a = t;\n        }\n        return a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L))\
    \ == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        if (a < b) {\n            return GreatestCommonDivisor(b, a);\n\
    \        }\n        while (b != 0) {\n            long c = a % b;\n          \
    \  a = b;\n            b = c;\n        }\n        return a;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L),\
    \ (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        while (b != 0) {\n            long t = b;\n            b = a %\
    \ b;\n            a = t;\n        }\n        return a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L))\
    \ == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        if (a < b) {\n            var tmp = a;\n            a = b;\n \
    \           b = tmp;\n        }\n        while (b != 0) {\n            var tmp\
    \ = a % b;\n            a = b;\n            b = tmp;\n        }\n        return\
    \ a;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L),\
    \ (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794505
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        if (a < b) {\n            return GreatestCommonDivisor(b, a);\n\
    \        }\n        if (b == 0) {\n            return a;\n        }\n        return\
    \ GreatestCommonDivisor(b, a % b);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L),\
    \ (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n\
    \    Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        if (a < b) {\n            long c = a;\n            a = b;\n  \
    \          b = c;\n        }\n        while (b != 0) {\n            long c = a\
    \ % b;\n            a = b;\n            b = c;\n        }\n        return a;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L),\
    \ (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        if (a < b) {\n            return GreatestCommonDivisor(b, a);\n\
    \        }\n        if (b == 0) {\n            return a;\n        }\n        return\
    \ GreatestCommonDivisor(b, a % b);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L),\
    \ (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n\
    \    Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        while (b != 0) {\n            long t = b;\n            b = a %\
    \ b;\n            a = t;\n        }\n        return a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L))\
    \ == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        while (b != 0) {\n            long t = b;\n            b = a %\
    \ b;\n            a = t;\n        }\n        return a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L))\
    \ == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        long r;\n        while (b != 0) {\n            r = a % b;\n  \
    \          a = b;\n            b = r;\n        }\n        return a;\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L),\
    \ (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        if (a < b) {\n            long tmp = a;\n            a = b;\n\
    \            b = tmp;\n        }\n        while (b != 0) {\n            long tmp\
    \ = a % b;\n            a = b;\n            b = tmp;\n        }\n        return\
    \ a;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L),\
    \ (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        while (b != 0) {\n            long t = b;\n            b = a %\
    \ b;\n            a = t;\n        }\n        return a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L))\
    \ == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        while (b != 0) {\n            long t = b;\n            b = a %\
    \ b;\n            a = t;\n        }\n        return a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L))\
    \ == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        if (a < b) {\n            return GreatestCommonDivisor(b, a);\n\
    \        }\n        while (b != 0) {\n            long c = a % b;\n          \
    \  a = b;\n            b = c;\n        }\n        return a;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L),\
    \ (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        while (b != 0) {\n            long t = b;\n            b = a %\
    \ b;\n            a = t;\n        }\n        return a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L))\
    \ == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        if (a < b) {\n            return GreatestCommonDivisor(b, a);\n\
    \        }\n        if (b == 0) {\n            return a;\n        }\n        return\
    \ GreatestCommonDivisor(b, a % b);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L),\
    \ (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n\
    \    Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        if (a < b) {\n            return GreatestCommonDivisor(b, a);\n\
    \        }\n        if (b == 0) {\n            return a;\n        }\n        return\
    \ GreatestCommonDivisor(b, a % b);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L),\
    \ (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n\
    \    Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        while (b != 0) {\n            long t = b;\n            b = a %\
    \ b;\n            a = t;\n        }\n        return a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L))\
    \ == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        if (a < b) {\n            return GreatestCommonDivisor(b, a);\n\
    \        }\n        if (b == 0) {\n            return a;\n        }\n        return\
    \ GreatestCommonDivisor(b, a % b);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L),\
    \ (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n\
    \    Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        while (b != 0) {\n            long t = b;\n            b = a %\
    \ b;\n            a = t;\n        }\n        return a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L))\
    \ == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        if (a < b) {\n            long tmp = a;\n            a = b;\n\
    \            b = tmp;\n        }\n        while (b != 0) {\n            long tmp\
    \ = a % b;\n            a = b;\n            b = tmp;\n        }\n        return\
    \ a;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L),\
    \ (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        while (b != 0) {\n            long t = b;\n            b = a %\
    \ b;\n            a = t;\n        }\n        return a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L))\
    \ == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        if (a < b) {\n            return GreatestCommonDivisor(b, a);\n\
    \        }\n        if (b == 0) {\n            return a;\n        }\n        return\
    \ GreatestCommonDivisor(b, a % b);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L),\
    \ (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n\
    \    Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        if (a < b) {\n            return GreatestCommonDivisor(b, a);\n\
    \        }\n        while (b != 0) {\n            long c = a % b;\n          \
    \  a = b;\n            b = c;\n        }\n        return a;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L),\
    \ (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        while (b != 0) {\n            long t = b;\n            b = a %\
    \ b;\n            a = t;\n        }\n        return a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L))\
    \ == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        while (b != 0) {\n            long t = b;\n            b = a %\
    \ b;\n            a = t;\n        }\n        return a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L))\
    \ == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        if (a < b) {\n            long tmp = a;\n            a = b;\n\
    \            b = tmp;\n        }\n        while (b != 0) {\n            long tmp\
    \ = a % b;\n            a = b;\n            b = tmp;\n        }\n        return\
    \ a;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L),\
    \ (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        while (b != 0) {\n            long t = b;\n            b = a %\
    \ b;\n            a = t;\n        }\n        return a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L))\
    \ == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        while (b != 0) {\n            long t = b;\n            b = a %\
    \ b;\n            a = t;\n        }\n        return a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L))\
    \ == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        while (b != 0) {\n            long t = b;\n            b = a %\
    \ b;\n            a = t;\n        }\n        return a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L))\
    \ == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        while (b != 0) {\n            long t = b;\n            b = a %\
    \ b;\n            a = t;\n        }\n        return a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L))\
    \ == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        while (b != 0) {\n            long t = b;\n            b = a %\
    \ b;\n            a = t;\n        }\n        return a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L))\
    \ == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        while (b != 0) {\n            long t = b;\n            b = a %\
    \ b;\n            a = t;\n        }\n        return a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L))\
    \ == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        while (b != 0) {\n            long t = b;\n            b = a %\
    \ b;\n            a = t;\n        }\n        return a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L))\
    \ == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        while (b != 0) {\n            long t = b;\n            b = a %\
    \ b;\n            a = t;\n        }\n        return a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L))\
    \ == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        while (b != 0) {\n            long t = b;\n            b = a %\
    \ b;\n            a = t;\n        }\n        return a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L))\
    \ == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        if (a < b) {\n            long tmp = a;\n            a = b;\n\
    \            b = tmp;\n        }\n        while (b != 0) {\n            long tmp\
    \ = a % b;\n            a = b;\n            b = tmp;\n        }\n        return\
    \ a;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L),\
    \ (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        if (a < b) {\n            return GreatestCommonDivisor(b, a);\n\
    \        }\n        if (b == 0) {\n            return a;\n        }\n        return\
    \ GreatestCommonDivisor(b, a % b);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L),\
    \ (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n\
    \    Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        while (b != 0) {\n            long t = b;\n            b = a %\
    \ b;\n            a = t;\n        }\n        return a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L))\
    \ == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        if (a < b) {\n            long tmp = a;\n            a = b;\n\
    \            b = tmp;\n        }\n        while (b != 0) {\n            long tmp\
    \ = a % b;\n            a = b;\n            b = tmp;\n        }\n        return\
    \ a;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L),\
    \ (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        while (b != 0) {\n            long t = b;\n            b = a %\
    \ b;\n            a = t;\n        }\n        return a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L))\
    \ == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        if (a < b) {\n            long c = a;\n            a = b;\n  \
    \          b = c;\n        }\n        while (b != 0) {\n            long c = a\
    \ % b;\n            a = b;\n            b = c;\n        }\n        return a;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L),\
    \ (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        while (b != 0) {\n            long t = b;\n            b = a %\
    \ b;\n            a = t;\n        }\n        return a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L))\
    \ == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        if (a < b) {\n            return GreatestCommonDivisor(b, a);\n\
    \        }\n        if (b == 0) {\n            return a;\n        }\n        return\
    \ GreatestCommonDivisor(b, a % b);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L),\
    \ (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n\
    \    Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        while (b != 0) {\n            long t = b;\n            b = a %\
    \ b;\n            a = t;\n        }\n        return a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L))\
    \ == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        if (a < b) {\n            return GreatestCommonDivisor(b, a);\n\
    \        }\n        if (b == 0) {\n            return a;\n        }\n        return\
    \ GreatestCommonDivisor(b, a % b);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L),\
    \ (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n\
    \    Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        if (a < b) {\n            return GreatestCommonDivisor(b, a);\n\
    \        }\n        if (b == 0) {\n            return a;\n        }\n        return\
    \ GreatestCommonDivisor(b, a % b);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L),\
    \ (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n\
    \    Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        while (b != 0) {\n            long t = b;\n            b = a %\
    \ b;\n            a = t;\n        }\n        return a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L))\
    \ == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        while (b != 0) {\n            long t = b;\n            b = a %\
    \ b;\n            a = t;\n        }\n        return a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L))\
    \ == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        while (b != 0) {\n            long t = b;\n            b = a %\
    \ b;\n            a = t;\n        }\n        return a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L))\
    \ == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        if (a < b) {\n            return GreatestCommonDivisor(b, a);\n\
    \        }\n        if (b == 0) {\n            return a;\n        }\n        return\
    \ GreatestCommonDivisor(b, a % b);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L),\
    \ (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n\
    \    Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        while (b != 0) {\n            long t = b;\n            b = a %\
    \ b;\n            a = t;\n        }\n        return a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L))\
    \ == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        while (b != 0) {\n            long t = b;\n            b = a %\
    \ b;\n            a = t;\n        }\n        return a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L))\
    \ == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        if (a < b) {\n            return GreatestCommonDivisor(b, a);\n\
    \        }\n        if (b == 0) {\n            return a;\n        }\n        return\
    \ GreatestCommonDivisor(b, a % b);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L),\
    \ (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n\
    \    Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        if (a < b) {\n            long tmp = a;\n            a = b;\n\
    \            b = tmp;\n        }\n        while (b != 0) {\n            long tmp\
    \ = a % b;\n            a = b;\n            b = tmp;\n        }\n        return\
    \ a;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L),\
    \ (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        while (b != 0) {\n            long t = b;\n            b = a %\
    \ b;\n            a = t;\n        }\n        return a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L))\
    \ == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        if (a < b) {\n            return GreatestCommonDivisor(b, a);\n\
    \        }\n        while (b != 0) {\n            long c = a % b;\n          \
    \  a = b;\n            b = c;\n        }\n        return a;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L),\
    \ (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        while (b != 0) {\n            long t = b;\n            b = a %\
    \ b;\n            a = t;\n        }\n        return a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L))\
    \ == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        while (b != 0) {\n            long t = b;\n            b = a %\
    \ b;\n            a = t;\n        }\n        return a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L))\
    \ == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        if (a < b) {\n            return GreatestCommonDivisor(b, a);\n\
    \        }\n        if (b == 0) {\n            return a;\n        }\n        return\
    \ GreatestCommonDivisor(b, a % b);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L),\
    \ (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n\
    \    Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        while (b != 0) {\n            long t = b;\n            b = a %\
    \ b;\n            a = t;\n        }\n        return a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L))\
    \ == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        if (a < b) {\n            return GreatestCommonDivisor(b, a);\n\
    \        }\n        if (b == 0) {\n            return a;\n        }\n        return\
    \ GreatestCommonDivisor(b, a % b);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L),\
    \ (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n\
    \    Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        while (b != 0) {\n            long t = b;\n            b = a %\
    \ b;\n            a = t;\n        }\n        return a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L))\
    \ == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        if (a < b) {\n            return GreatestCommonDivisor(b, a);\n\
    \        }\n        while (b != 0) {\n            long t = b;\n            b =\
    \ a % b;\n            a = t;\n        }\n        return a;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L),\
    \ (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        while (b != 0) {\n            long t = b;\n            b = a %\
    \ b;\n            a = t;\n        }\n        return a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L))\
    \ == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        if (a < b) {\n            return GreatestCommonDivisor(b, a);\n\
    \        }\n        if (b == 0) {\n            return a;\n        }\n        return\
    \ GreatestCommonDivisor(b, a % b);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L),\
    \ (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n\
    \    Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        if (a < b) {\n            return GreatestCommonDivisor(b, a);\n\
    \        }\n        if (b == 0) {\n            return a;\n        }\n        return\
    \ GreatestCommonDivisor(b, a % b);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L),\
    \ (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n\
    \    Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        if (a < b) {\n            long tmp = a;\n            a = b;\n\
    \            b = tmp;\n        }\n        while (b != 0) {\n            long tmp\
    \ = a % b;\n            a = b;\n            b = tmp;\n        }\n        return\
    \ a;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L),\
    \ (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        while (b != 0) {\n            long t = b;\n            b = a %\
    \ b;\n            a = t;\n        }\n        return a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L))\
    \ == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        while (b != 0) {\n            long t = b;\n            b = a %\
    \ b;\n            a = t;\n        }\n        return a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L))\
    \ == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        while (b != 0) {\n            long t = b;\n            b = a %\
    \ b;\n            a = t;\n        }\n        return a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L))\
    \ == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        while (b != 0) {\n            long t = b;\n            b = a %\
    \ b;\n            a = t;\n        }\n        return a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L))\
    \ == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        if (a < b) {\n            return GreatestCommonDivisor(b, a);\n\
    \        }\n        if (b == 0) {\n            return a;\n        }\n        return\
    \ GreatestCommonDivisor(b, a % b);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L),\
    \ (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n\
    \    Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        if (a < b) {\n            return GreatestCommonDivisor(b, a);\n\
    \        }\n        if (b == 0) {\n            return a;\n        }\n        return\
    \ GreatestCommonDivisor(b, a % b);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L),\
    \ (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n\
    \    Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        if (a < b) {\n            return GreatestCommonDivisor(b, a);\n\
    \        }\n        if (b == 0) {\n            return a;\n        }\n        return\
    \ GreatestCommonDivisor(b, a % b);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L),\
    \ (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n\
    \    Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        if (a < b) {\n            return GreatestCommonDivisor(b, a);\n\
    \        }\n        if (b == 0) {\n            return a;\n        }\n        return\
    \ GreatestCommonDivisor(b, a % b);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L),\
    \ (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n\
    \    Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        if (a < b) {\n            return GreatestCommonDivisor(b, a);\n\
    \        }\n        if (b == 0) {\n            return a;\n        }\n        return\
    \ GreatestCommonDivisor(b, a % b);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L),\
    \ (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n\
    \    Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        while (b != 0) {\n            var t = b;\n            b = a %\
    \ b;\n            a = t;\n        }\n        return a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L))\
    \ == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        while (b != 0) {\n            long t = b;\n            b = a %\
    \ b;\n            a = t;\n        }\n        return a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L))\
    \ == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        while (b != 0) {\n            long t = b;\n            b = a %\
    \ b;\n            a = t;\n        }\n        return a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L))\
    \ == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        if (a < b) {\n            return GreatestCommonDivisor(b, a);\n\
    \        }\n        if (b == 0) {\n            return a;\n        }\n        return\
    \ GreatestCommonDivisor(b, a % b);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L),\
    \ (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n\
    \    Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        while (b != 0) {\n            long t = b;\n            b = a %\
    \ b;\n            a = t;\n        }\n        return a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L))\
    \ == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        while (b != 0) {\n            var t = b;\n            b = a %\
    \ b;\n            a = t;\n        }\n        return a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L))\
    \ == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        while (b != 0) {\n            long t = b;\n            b = a %\
    \ b;\n            a = t;\n        }\n        return a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L))\
    \ == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        while (b != 0) {\n            long t = b;\n            b = a %\
    \ b;\n            a = t;\n        }\n        return a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L))\
    \ == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        while (b != 0) {\n            long t = b;\n            b = a %\
    \ b;\n            a = t;\n        }\n        return a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L))\
    \ == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        while (b != 0) {\n            long t = b;\n            b = a %\
    \ b;\n            a = t;\n        }\n        return a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L))\
    \ == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        if (a < b) {\n            return GreatestCommonDivisor(b, a);\n\
    \        }\n        if (b == 0) {\n            return a;\n        }\n        return\
    \ GreatestCommonDivisor(b, a % b);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L),\
    \ (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n\
    \    Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        if (a < b) {\n            return GreatestCommonDivisor(b, a);\n\
    \        }\n        while (b != 0) {\n            long c = a % b;\n          \
    \  a = b;\n            b = c;\n        }\n        return a;\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L),\
    \ (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        if (a < b) {\n            return GreatestCommonDivisor(b, a);\n\
    \        }\n        if (b == 0) {\n            return a;\n        }\n        return\
    \ GreatestCommonDivisor(b, a % b);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L),\
    \ (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n\
    \    Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        while (b != 0) {\n            long t = b;\n            b = a %\
    \ b;\n            a = t;\n        }\n        return a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L))\
    \ == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        if (a < b) {\n            return GreatestCommonDivisor(b, a);\n\
    \        }\n        if (b == 0) {\n            return a;\n        }\n        return\
    \ GreatestCommonDivisor(b, a % b);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L),\
    \ (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n\
    \    Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        if (a < b) {\n            long tmp = a;\n            a = b;\n\
    \            b = tmp;\n        }\n        while (b != 0) {\n            long tmp\
    \ = a % b;\n            a = b;\n            b = tmp;\n        }\n        return\
    \ a;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L),\
    \ (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        if (a < b) {\n            return GreatestCommonDivisor(b, a);\n\
    \        }\n        if (b == 0) {\n            return a;\n        }\n        return\
    \ GreatestCommonDivisor(b, a % b);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L),\
    \ (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n\
    \    Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        while (b != 0) {\n            long t = b;\n            b = a %\
    \ b;\n            a = t;\n        }\n        return a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L))\
    \ == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        while (b != 0) {\n            long t = b;\n            b = a %\
    \ b;\n            a = t;\n        }\n        return a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L))\
    \ == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        while (b != 0) {\n            long t = b;\n            b = a %\
    \ b;\n            a = t;\n        }\n        return a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L))\
    \ == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        while (b != 0) {\n            long t = b;\n            b = a %\
    \ b;\n            a = t;\n        }\n        return a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L))\
    \ == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        if (a < b) {\n            long tmp = a;\n            a = b;\n\
    \            b = tmp;\n        }\n        while (b != 0) {\n            long tmp\
    \ = a % b;\n            a = b;\n            b = tmp;\n        }\n        return\
    \ a;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L),\
    \ (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        while (b != 0) {\n            var t = b;\n            b = a %\
    \ b;\n            a = t;\n        }\n        return a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L))\
    \ == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        if (a < b) {\n            long tmp = a;\n            a = b;\n\
    \            b = tmp;\n        }\n        while (b != 0) {\n            long tmp\
    \ = a % b;\n            a = b;\n            b = tmp;\n        }\n        return\
    \ a;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L),\
    \ (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        while (b != 0) {\n            long t = b;\n            b = a %\
    \ b;\n            a = t;\n        }\n        return a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L))\
    \ == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        if (a < b) {\n            return GreatestCommonDivisor(b, a);\n\
    \        }\n        if (b == 0) {\n            return a;\n        }\n        return\
    \ GreatestCommonDivisor(b, a % b);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L),\
    \ (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n\
    \    Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        if (a < b) {\n            return GreatestCommonDivisor(b, a);\n\
    \        }\n        if (b == 0) {\n            return a;\n        }\n        return\
    \ GreatestCommonDivisor(b, a % b);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L),\
    \ (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n\
    \    Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        if (a < b) {\n            return GreatestCommonDivisor(b, a);\n\
    \        }\n        if (b == 0) {\n            return a;\n        }\n        return\
    \ GreatestCommonDivisor(b, a % b);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L),\
    \ (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n\
    \    Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        if (a < b) {\n            long tmp = a;\n            a = b;\n\
    \            b = tmp;\n        }\n        while (b != 0) {\n            long tmp\
    \ = a % b;\n            a = b;\n            b = tmp;\n        }\n        return\
    \ a;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L),\
    \ (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        long c;\n        while (b != 0) {\n            c = a % b;\n  \
    \          a = b;\n            b = c;\n        }\n        return a;\n    }\n \
    \   public static void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L),\
    \ (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        while (b != 0) {\n            long t = b;\n            b = a %\
    \ b;\n            a = t;\n        }\n        return a;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L))\
    \ == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        if (a < b) {\n            return GreatestCommonDivisor(b, a);\n\
    \        }\n        if (b == 0) {\n            return a;\n        }\n        return\
    \ GreatestCommonDivisor(b, a % b);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L),\
    \ (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n\
    \    Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        if (a < b) {\n            return GreatestCommonDivisor(b, a);\n\
    \        }\n        if (b == 0) {\n            return a;\n        }\n        return\
    \ GreatestCommonDivisor(b, a % b);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(GreatestCommonDivisor((3L), (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L),\
    \ (15L)) == (5L));\n    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n\
    \    Debug.Assert(GreatestCommonDivisor((144L), (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a greatest common divisor of two integers a and\
    \ b\n    // >>> GreatestCommonDivisor((3L), (5L))\n    // (1L)\n    // >>> GreatestCommonDivisor((25L),\
    \ (15L))\n    // (5L)\n    public static long GreatestCommonDivisor(long a, long\
    \ b) {\n        if (a < b) {\n            long tmp = a;\n            a = b;\n\
    \            b = tmp;\n        }\n        while (b != 0) {\n            long tmp\
    \ = a % b;\n            a = b;\n            b = tmp;\n        }\n        return\
    \ a;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(GreatestCommonDivisor((3L),\
    \ (7L)) == (1L));\n    Debug.Assert(GreatestCommonDivisor((10L), (15L)) == (5L));\n\
    \    Debug.Assert(GreatestCommonDivisor((49L), (14L)) == (7L));\n    Debug.Assert(GreatestCommonDivisor((144L),\
    \ (60L)) == (12L));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659794504

name: HumanEval_94_skjkasdkd
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // You are given a list of integers.\n    // You need to find the\
  \ largest prime value and return the sum of its digits.\n    // Examples:\n    //\
  \ >>> Skjkasdkd((new List<long>(new long[]{(long)0L, (long)3L, (long)2L, (long)1L,\
  \ (long)3L, (long)5L, (long)7L, (long)4L, (long)5L, (long)5L, (long)5L, (long)2L,\
  \ (long)181L, (long)32L, (long)4L, (long)32L, (long)3L, (long)2L, (long)32L, (long)324L,\
  \ (long)4L, (long)3L})))\n    // (10L)\n    // >>> Skjkasdkd((new List<long>(new\
  \ long[]{(long)1L, (long)0L, (long)1L, (long)8L, (long)2L, (long)4597L, (long)2L,\
  \ (long)1L, (long)3L, (long)40L, (long)1L, (long)2L, (long)1L, (long)2L, (long)4L,\
  \ (long)2L, (long)5L, (long)1L})))\n    // (25L)\n    // >>> Skjkasdkd((new List<long>(new\
  \ long[]{(long)1L, (long)3L, (long)1L, (long)32L, (long)5107L, (long)34L, (long)83278L,\
  \ (long)109L, (long)163L, (long)23L, (long)2323L, (long)32L, (long)30L, (long)1L,\
  \ (long)9L, (long)3L})))\n    // (13L)\n    // >>> Skjkasdkd((new List<long>(new\
  \ long[]{(long)0L, (long)724L, (long)32L, (long)71L, (long)99L, (long)32L, (long)6L,\
  \ (long)0L, (long)5L, (long)91L, (long)83L, (long)0L, (long)5L, (long)6L})))\n \
  \   // (11L)\n    // >>> Skjkasdkd((new List<long>(new long[]{(long)0L, (long)81L,\
  \ (long)12L, (long)3L, (long)1L, (long)21L})))\n    // (3L)\n    // >>> Skjkasdkd((new\
  \ List<long>(new long[]{(long)0L, (long)8L, (long)1L, (long)2L, (long)1L, (long)7L})))\n\
  \    // (7L)\n    public static long Skjkasdkd(List<long> lst) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(Skjkasdkd((new\
  \ List<long>(new long[]{(long)0L, (long)3L, (long)2L, (long)1L, (long)3L, (long)5L,\
  \ (long)7L, (long)4L, (long)5L, (long)5L, (long)5L, (long)2L, (long)181L, (long)32L,\
  \ (long)4L, (long)32L, (long)3L, (long)2L, (long)32L, (long)324L, (long)4L, (long)3L})))\
  \ == (10L));\n    Debug.Assert(Skjkasdkd((new List<long>(new long[]{(long)1L, (long)0L,\
  \ (long)1L, (long)8L, (long)2L, (long)4597L, (long)2L, (long)1L, (long)3L, (long)40L,\
  \ (long)1L, (long)2L, (long)1L, (long)2L, (long)4L, (long)2L, (long)5L, (long)1L})))\
  \ == (25L));\n    Debug.Assert(Skjkasdkd((new List<long>(new long[]{(long)1L, (long)3L,\
  \ (long)1L, (long)32L, (long)5107L, (long)34L, (long)83278L, (long)109L, (long)163L,\
  \ (long)23L, (long)2323L, (long)32L, (long)30L, (long)1L, (long)9L, (long)3L})))\
  \ == (13L));\n    Debug.Assert(Skjkasdkd((new List<long>(new long[]{(long)0L, (long)724L,\
  \ (long)32L, (long)71L, (long)99L, (long)32L, (long)6L, (long)0L, (long)5L, (long)91L,\
  \ (long)83L, (long)0L, (long)5L, (long)6L}))) == (11L));\n    Debug.Assert(Skjkasdkd((new\
  \ List<long>(new long[]{(long)0L, (long)81L, (long)12L, (long)3L, (long)1L, (long)21L})))\
  \ == (3L));\n    Debug.Assert(Skjkasdkd((new List<long>(new long[]{(long)0L, (long)8L,\
  \ (long)1L, (long)2L, (long)1L, (long)7L}))) == (7L));\n    Debug.Assert(Skjkasdkd((new\
  \ List<long>(new long[]{(long)8191L}))) == (19L));\n    Debug.Assert(Skjkasdkd((new\
  \ List<long>(new long[]{(long)8191L, (long)123456L, (long)127L, (long)7L}))) ==\
  \ (19L));\n    Debug.Assert(Skjkasdkd((new List<long>(new long[]{(long)127L, (long)97L,\
  \ (long)8192L}))) == (10L));\n    }\n\n}\n"
completions: ["        long max = 0;\n        foreach (long l in lst) {\n        \
    \    if (IsPrime(l)) {\n                max = l;\n            }\n        }\n \
    \       return SumDigits(max);", "        long max = 0;\n        foreach (long\
    \ i in lst) {\n            if (IsPrime(i)) {\n                max = i;\n     \
    \       }\n        }\n        return SumOfDigits(max);", "        long largestPrime\
    \ = 0;\n        foreach (long num in lst) {\n            if (IsPrime(num)) {\n\
    \                largestPrime = num;\n            }\n        }\n        return\
    \ SumDigits(largestPrime);", "        long max = 0;\n        foreach (long num\
    \ in lst) {\n            if (IsPrime(num)) {\n                if (num > max) {\n\
    \                    max = num;\n                }\n            }\n        }\n\
    \        return SumDigits(max);", "        // Your code goes here.\n        return\
    \ 0L;", "        long max = 0;\n        foreach (long i in lst) {\n          \
    \  if (IsPrime(i)) {\n                max = i;\n            }\n        }\n   \
    \     return SumDigits(max);", "        long max = 0;\n        foreach (long i\
    \ in lst) {\n            if (i > max) {\n                max = i;\n          \
    \  }\n        }\n        long sum = 0;\n        for (long i = 2; i <= max; i++)\
    \ {\n            bool isPrime = true;\n            for (long j = 2; j < i; j++)\
    \ {\n                if (i % j == 0) {\n                    isPrime = false;\n\
    \                    break;\n                }\n            }\n            if\
    \ (isPrime) {\n                sum += i;\n            }\n        }\n        return\
    \ sum;", "        long max = 0;\n        foreach (long i in lst) {\n         \
    \   if (i > max) {\n                max = i;\n            }\n        }\n     \
    \   long sum = 0;\n        for (long i = 2; i <= max; i++) {\n            bool\
    \ isPrime = true;\n            for (long j = 2; j < i; j++) {\n              \
    \  if (i % j == 0) {\n                    isPrime = false;\n                 \
    \   break;\n                }\n            }\n            if (isPrime) {\n   \
    \             long temp = i;\n                while (temp > 0) {\n           \
    \         sum += temp % 10;\n                    temp /= 10;\n               \
    \ }\n            }\n        }\n        return sum;", "        long max = 0;\n\
    \        foreach (long i in lst) {\n            if (i > max) {\n             \
    \   max = i;\n            }\n        }\n        long sum = 0;\n        while (max\
    \ > 0) {\n            sum += max % 10;\n            max /= 10;\n        }\n  \
    \      return sum;", "        long max = 0;\n        foreach (long i in lst) {\n\
    \            if (i > max) {\n                max = i;\n            }\n       \
    \ }\n        long sum = 0;\n        for (long i = 2; i <= max; i++) {\n      \
    \      bool isPrime = true;\n            for (long j = 2; j < i; j++) {\n    \
    \            if (i % j == 0) {\n                    isPrime = false;\n       \
    \             break;\n                }\n            }\n            if (isPrime)\
    \ {\n                long temp = i;\n                while (temp > 0) {\n    \
    \                sum += temp % 10;\n                    temp /= 10;\n        \
    \        }\n            }\n        }\n        return sum;", "        long max\
    \ = 0;\n        foreach (long i in lst) {\n            if (i > max) {\n      \
    \          max = i;\n            }\n        }\n        long sum = 0;\n       \
    \ while (max > 0) {\n            sum += max % 10;\n            max /= 10;\n  \
    \      }\n        return sum;", "        long max = 0;\n        foreach (long\
    \ i in lst) {\n            if (i > max) {\n                if (IsPrime(i)) {\n\
    \                    max = i;\n                }\n            }\n        }\n \
    \       return SumDigits(max);", "        long largestPrime = 0;\n        foreach\
    \ (long i in lst) {\n            if (IsPrime(i)) {\n                if (i > largestPrime)\
    \ {\n                    largestPrime = i;\n                }\n            }\n\
    \        }\n        return DigitSum(largestPrime);", "        long max = lst.Max();\n\
    \        long sum = 0;\n        for (long i = max; i > 1; i--) {\n           \
    \ if (lst.Contains(i) && IsPrime(i)) {\n                sum = SumDigits(i);\n\
    \                break;\n            }\n        }\n        return sum;", "   \
    \     long largestPrime = 0;\n        foreach (long num in lst) {\n          \
    \  if (IsPrime(num)) {\n                largestPrime = num;\n            }\n \
    \       }\n        return SumDigits(largestPrime);", "        long max = 0;\n\
    \        foreach (long i in lst) {\n            if (IsPrime(i)) {\n          \
    \      if (i > max) {\n                    max = i;\n                }\n     \
    \       }\n        }\n        return SumDigits(max);", "        long largestPrime\
    \ = 0;\n        foreach (long num in lst) {\n            if (IsPrime(num)) {\n\
    \                largestPrime = num;\n            }\n        }\n        return\
    \ SumDigits(largestPrime);", "        // Your code goes here.\n        return\
    \ 0L;", "        long max = 0;\n        foreach (long x in lst) {\n          \
    \  if (x > max) {\n                max = x;\n            }\n        }\n      \
    \  long maxPrime = 0;\n        for (long i = max; i > 0; i--) {\n            if\
    \ (IsPrime(i)) {\n                maxPrime = i;\n                break;\n    \
    \        }\n        }\n        long sum = 0;\n        while (maxPrime > 0) {\n\
    \            sum += maxPrime % 10;\n            maxPrime /= 10;\n        }\n \
    \       return sum;", "        // Your code goes here.\n        return (long)0L;",
  "        long max = 0;\n        foreach (long i in lst) {\n            if (i > max)\
    \ {\n                max = i;\n            }\n        }\n        long sum = 0;\n\
    \        while (max > 0) {\n            sum += max % 10;\n            max /= 10;\n\
    \        }\n        return sum;", "        // Your code goes here.\n        return\
    \ 0L;", "        long max = 0;\n        foreach (long i in lst) {\n          \
    \  if (IsPrime(i)) {\n                max = i;\n            }\n        }\n   \
    \     return SumDigits(max);", "        long largest = 0;\n        foreach (long\
    \ i in lst) {\n            if (IsPrime(i)) {\n                if (i > largest)\
    \ {\n                    largest = i;\n                }\n            }\n    \
    \    }\n        return SumDigits(largest);", "        long max = 0;\n        foreach\
    \ (long i in lst) {\n            if (IsPrime(i)) {\n                max = i;\n\
    \            }\n        }\n        return SumDigits(max);", "        long max\
    \ = 0;\n        foreach (long i in lst) {\n            if (i > max) {\n      \
    \          max = i;\n            }\n        }\n        long sum = 0;\n       \
    \ while (max > 0) {\n            sum += max % 10;\n            max /= 10;\n  \
    \      }\n        return sum;", "        // >>> Skjkasdkd((new List<long>(new\
    \ long[]{(long)0L, (long)3L, (long)2L, (long)1L, (long)3L, (long)5L, (long)7L,\
    \ (long)4L, (long)5L, (long)5L, (long)5L, (long)2L, (long)181L, (long)32L, (long)4L,\
    \ (long)32L, (long)3L, (long)2L, (long)32L, (long)324L, (long)4L, (long)3L})))\n\
    \        // (10L)\n        // >>> Skjkasdkd((new List<long>(new long[]{(long)1L,\
    \ (long)0L, (long)1L, (long)8L, (long)2L, (long)4597L, (long)2L, (long)1L, (long)3L,\
    \ (long)40L, (long)1L, (long)2L, (long)1L, (long)2L, (long)4L, (long)2L, (long)5L,\
    \ (long)1L})))\n        // (25L)\n        // >>> Skjkasdkd((new List<long>(new\
    \ long[]{(long)1L, (long)3L, (long)1L, (long)32L, (long)5107L, (long)34L, (long)83278L,\
    \ (long)109L, (long)163L, (long)23L, (long)2323L, (long)32L, (long)30L, (long)1L,\
    \ (long)9L, (long)3L})))\n        // (13L)\n        // >>> Skjkasdkd((new List<long>(new\
    \ long[]{(long)0L, (long)724L, (long)32L, (long)71L, (long)99L, (long)32L, (long)6L,\
    \ (long)0L, (long)5L, (long)91L, (long)83L, (long)0L", "        long largestPrime\
    \ = 0;\n        foreach (long num in lst) {\n            if (IsPrime(num)) {\n\
    \                largestPrime = num;\n            }\n        }\n        return\
    \ SumDigits(largestPrime);", "        long max = 0;\n        foreach (long i in\
    \ lst) {\n            if (IsPrime(i)) {\n                max = i;\n          \
    \  }\n        }\n        return SumOfDigits(max);", "        long max = 0;\n \
    \       foreach (long i in lst) {\n            if (i > max) {\n              \
    \  max = i;\n            }\n        }\n        long sum = 0;\n        while (max\
    \ > 0) {\n            sum += max % 10;\n            max /= 10;\n        }\n  \
    \      return sum;", "        long max = 0;\n        foreach (long i in lst) {\n\
    \            if (i > max) {\n                max = i;\n            }\n       \
    \ }\n        long sum = 0;\n        while (max > 0) {\n            sum += max\
    \ % 10;\n            max /= 10;\n        }\n        return sum;", "        long\
    \ max = 0;\n        foreach (long i in lst) {\n            if (IsPrime(i)) {\n\
    \                if (i > max) {\n                    max = i;\n              \
    \  }\n            }\n        }\n        return SumDigits(max);", "        long\
    \ max = 0;\n        foreach (long i in lst) {\n            if (i > max) {\n  \
    \              max = i;\n            }\n        }\n        long sum = 0;\n   \
    \     while (max > 0) {\n            sum += max % 10;\n            max /= 10;\n\
    \        }\n        return sum;", "        long max = 0;\n        foreach (long\
    \ i in lst) {\n            if (IsPrime(i)) {\n                max = i;\n     \
    \       }\n        }\n        return SumDigits(max);", "        long largestPrime\
    \ = 0;\n        foreach (long i in lst) {\n            if (IsPrime(i)) {\n   \
    \             if (i > largestPrime) {\n                    largestPrime = i;\n\
    \                }\n            }\n        }\n        return SumDigits(largestPrime);",
  "        long max = 0;\n        foreach (long i in lst) {\n            if (IsPrime(i))\
    \ {\n                if (i > max) {\n                    max = i;\n          \
    \      }\n            }\n        }\n        return SumDigits(max);", "       \
    \ long largestPrime = 0;\n        foreach (long i in lst) {\n            if (IsPrime(i))\
    \ {\n                if (i > largestPrime) {\n                    largestPrime\
    \ = i;\n                }\n            }\n        }\n        return SumDigits(largestPrime);",
  "        long largestPrime = 0;\n        foreach (long num in lst) {\n         \
    \   if (IsPrime(num)) {\n                largestPrime = num;\n            }\n\
    \        }\n        return SumDigits(largestPrime);", "        long maxPrime =\
    \ 0;\n        foreach (long item in lst) {\n            if (IsPrime(item)) {\n\
    \                maxPrime = Math.Max(maxPrime, item);\n            }\n       \
    \ }\n        return SumDigits(maxPrime);", "        long largestPrime = 0;\n \
    \       foreach (long i in lst) {\n            if (IsPrime(i)) {\n           \
    \     if (i > largestPrime) {\n                    largestPrime = i;\n       \
    \         }\n            }\n        }\n        return SumDigits(largestPrime);",
  "        long max = 0;\n        foreach (long i in lst) {\n            if (IsPrime(i))\
    \ {\n                if (i > max) {\n                    max = i;\n          \
    \      }\n            }\n        }\n        return SumDigits(max);", "       \
    \ long max = 0;\n        foreach (long i in lst) {\n            if (IsPrime(i))\
    \ {\n                max = Math.Max(max, i);\n            }\n        }\n     \
    \   return SumDigits(max);", "        // Your code goes here.\n        return\
    \ 0L;", "        long max = 0;\n        foreach (long i in lst) {\n          \
    \  if (IsPrime(i)) {\n                max = i;\n            }\n        }\n   \
    \     return SumDigits(max);", "        long max = (long)0L;\n        foreach\
    \ (long num in lst) {\n            if (IsPrime(num)) {\n                max =\
    \ Math.Max(max, num);\n            }\n        }\n        return SumDigits(max);",
  "        long largestPrime = 0;\n        foreach (long n in lst) {\n           \
    \ if (IsPrime(n)) {\n                largestPrime = n;\n            }\n      \
    \  }\n        return SumDigits(largestPrime);", "        long max = 0;\n     \
    \   foreach (long i in lst) {\n            if (IsPrime(i)) {\n               \
    \ max = Math.Max(max, i);\n            }\n        }\n        return SumDigits(max);",
  "        long largestPrime = 0;\n        foreach (long i in lst) {\n           \
    \ if (IsPrime(i)) {\n                if (i > largestPrime) {\n               \
    \     largestPrime = i;\n                }\n            }\n        }\n       \
    \ return SumOfDigits(largestPrime);", "        long max = 0;\n        foreach\
    \ (long i in lst) {\n            if (i > max) {\n                if (IsPrime(i))\
    \ {\n                    max = i;\n                }\n            }\n        }\n\
    \        return SumDigits(max);", "        long max = 0;\n        foreach (long\
    \ i in lst) {\n            if (i > max) {\n                max = i;\n        \
    \    }\n        }\n        long sum = 0;\n        for (long i = max; i > 1; i--)\
    \ {\n            bool isPrime = true;\n            for (long j = 2; j < i; j++)\
    \ {\n                if (i % j == 0) {\n                    isPrime = false;\n\
    \                    break;\n                }\n            }\n            if\
    \ (isPrime) {\n                sum = 0;\n                foreach (char c in i.ToString())\
    \ {\n                    sum += (long)Char.GetNumericValue(c);\n             \
    \   }\n                break;\n            }\n        }\n        return sum;",
  "        long largestPrime = 0;\n        foreach (long num in lst) {\n         \
    \   if (IsPrime(num)) {\n                if (num > largestPrime) {\n         \
    \           largestPrime = num;\n                }\n            }\n        }\n\
    \        return SumDigits(largestPrime);", "        long max = 0;\n        foreach\
    \ (long i in lst) {\n            if (IsPrime(i)) {\n                if (i > max)\
    \ {\n                    max = i;\n                }\n            }\n        }\n\
    \        return SumDigits(max);", "        // Your code goes here.\n        //\
    \ You can add more classes and methods.\n        long max = 0;\n        foreach\
    \ (long i in lst) {\n            if (i > max) {\n                max = i;\n  \
    \          }\n        }\n        long sum = 0;\n        while (max > 0) {\n  \
    \          sum += max % 10;\n            max /= 10;\n        }\n        return\
    \ sum;", "        long max = 0;\n        foreach (long i in lst) {\n         \
    \   if (i > max) {\n                max = i;\n            }\n        }\n     \
    \   long sum = 0;\n        while (max > 0) {\n            sum += max % 10;\n \
    \           max /= 10;\n        }\n        return sum;", "        long max = 0;\n\
    \        foreach (long i in lst) {\n            if (IsPrime(i)) {\n          \
    \      if (i > max) {\n                    max = i;\n                }\n     \
    \       }\n        }\n        return SumDigits(max);", "        long max = 0;\n\
    \        foreach (long i in lst) {\n            if (IsPrime(i)) {\n          \
    \      max = i;\n            }\n        }\n        return SumDigits(max);", " \
    \       // Your code goes here.\n        return 0L;", "        long max = 0;\n\
    \        foreach (long i in lst) {\n            if (i > max) {\n             \
    \   max = i;\n            }\n        }\n        long sum = 0;\n        while (max\
    \ > 0) {\n            sum += max % 10;\n            max /= 10;\n        }\n  \
    \      return sum;", "        long largestPrime = 0;\n        foreach (long num\
    \ in lst) {\n            if (IsPrime(num)) {\n                if (num > largestPrime)\
    \ {\n                    largestPrime = num;\n                }\n            }\n\
    \        }\n        return SumOfDigits(largestPrime);", "        long largestPrime\
    \ = 0;\n        foreach (long i in lst) {\n            if (IsPrime(i)) {\n   \
    \             if (i > largestPrime) {\n                    largestPrime = i;\n\
    \                }\n            }\n        }\n        return SumDigits(largestPrime);",
  "        long max = 0;\n        foreach (long i in lst) {\n            if (IsPrime(i))\
    \ {\n                max = Math.Max(max, i);\n            }\n        }\n     \
    \   return SumDigits(max);", "        // Your code goes here.\n        return\
    \ 0L;", "        long max = 0;\n        foreach (long i in lst) {\n          \
    \  if (IsPrime(i)) {\n                if (i > max) {\n                    max\
    \ = i;\n                }\n            }\n        }\n        return SumDigits(max);",
  "        long max = 0;\n        foreach (long item in lst) {\n            if (item\
    \ > max) {\n                max = item;\n            }\n        }\n        long\
    \ sum = 0;\n        while (max > 0) {\n            sum += max % 10;\n        \
    \    max /= 10;\n        }\n        return sum;", "        long max = lst.Max();\n\
    \        long sum = 0;\n        for (long i = max; i > 1; i--) {\n           \
    \ if (lst.Contains(i) && IsPrime(i)) {\n                sum = SumDigits(i);\n\
    \                break;\n            }\n        }\n        return sum;", "   \
    \     long largest = 0;\n        foreach (long num in lst) {\n            if (IsPrime(num))\
    \ {\n                if (num > largest) {\n                    largest = num;\n\
    \                }\n            }\n        }\n        return SumDigits(largest);",
  "        long max = 0;\n        foreach (long i in lst) {\n            if (IsPrime(i))\
    \ {\n                max = i;\n            }\n        }\n        return SumDigits(max);",
  "        long max = 0;\n        foreach (long i in lst) {\n            if (IsPrime(i))\
    \ {\n                if (i > max) {\n                    max = i;\n          \
    \      }\n            }\n        }\n        return SumOfDigits(max);", "     \
    \   long max = (long)0L;\n        foreach (long i in lst) {\n            if (i\
    \ > max) {\n                if (IsPrime(i)) {\n                    max = i;\n\
    \                }\n            }\n        }\n        return SumDigits(max);",
  "        long max = 0;\n        foreach (long i in lst) {\n            if (i > max)\
    \ {\n                max = i;\n            }\n        }\n        long sum = 0;\n\
    \        for (long i = 2; i <= max; i++) {\n            bool isPrime = true;\n\
    \            for (long j = 2; j < i; j++) {\n                if (i % j == 0) {\n\
    \                    isPrime = false;\n                    break;\n          \
    \      }\n            }\n            if (isPrime) {\n                long num\
    \ = i;\n                while (num > 0) {\n                    sum += num % 10;\n\
    \                    num /= 10;\n                }\n            }\n        }\n\
    \        return sum;", "        long largestPrime = 0;\n        foreach (long\
    \ num in lst) {\n            if (IsPrime(num)) {\n                if (num > largestPrime)\
    \ {\n                    largestPrime = num;\n                }\n            }\n\
    \        }\n        return SumDigits(largestPrime);", "        long sum = 0;\n\
    \        long max = 0;\n        for (int i = 0; i < lst.Count; i++) {\n      \
    \      if (lst[i] > max) {\n                max = lst[i];\n            }\n   \
    \     }\n        for (int i = 0; i < lst.Count; i++) {\n            if (lst[i]\
    \ == max) {\n                if (IsPrime(lst[i])) {\n                    sum =\
    \ SumDigits(lst[i]);\n                }\n            }\n        }\n        return\
    \ sum;", "        long max = lst.Max();\n        long sum = 0;\n        for (long\
    \ i = max; i > 1; i--) {\n            if (lst.Contains(i) && IsPrime(i)) {\n \
    \               sum = SumDigits(i);\n                break;\n            }\n \
    \       }\n        return sum;", "        long max = 0;\n        foreach (long\
    \ x in lst) {\n            if (IsPrime(x)) {\n                max = Math.Max(max,\
    \ x);\n            }\n        }\n        return SumDigits(max);", "        long\
    \ largestPrime = 0;\n        foreach (long i in lst) {\n            if (IsPrime(i))\
    \ {\n                if (i > largestPrime) {\n                    largestPrime\
    \ = i;\n                }\n            }\n        }\n        return SumDigits(largestPrime);",
  "        long max = 0;\n        foreach (long i in lst) {\n            if (IsPrime(i))\
    \ {\n                if (i > max) {\n                    max = i;\n          \
    \      }\n            }\n        }\n        return SumDigits(max);", "       \
    \ long max = 0;\n        foreach (long i in lst) {\n            if (IsPrime(i))\
    \ {\n                max = i;\n            }\n        }\n        return SumDigits(max);",
  "        long max = 0;\n        foreach (long i in lst) {\n            if (IsPrime(i))\
    \ {\n                max = i;\n            }\n        }\n        return SumDigits(max);",
  "        long max = 0;\n        foreach (long i in lst) {\n            if (i > max)\
    \ {\n                max = i;\n            }\n        }\n        long largestPrime\
    \ = 0;\n        for (long i = max; i > 0; i--) {\n            if (IsPrime(i))\
    \ {\n                largestPrime = i;\n                break;\n            }\n\
    \        }\n        long sum = 0;\n        foreach (char c in largestPrime.ToString())\
    \ {\n            sum += (long)Char.GetNumericValue(c);\n        }\n        return\
    \ sum;", "        long max = 0;\n        foreach (long i in lst) {\n         \
    \   if (i > max) {\n                max = i;\n            }\n        }\n     \
    \   long sum = 0;\n        while (max > 0) {\n            sum += max % 10;\n \
    \           max /= 10;\n        }\n        return sum;", "        long largestPrime\
    \ = 0;\n        foreach (long num in lst) {\n            if (IsPrime(num)) {\n\
    \                largestPrime = num;\n            }\n        }\n        return\
    \ SumDigits(largestPrime);", "        // Your code goes here.\n        return\
    \ 0L;", "        long max = 0;\n        foreach (long i in lst) {\n          \
    \  if (IsPrime(i)) {\n                if (i > max) {\n                    max\
    \ = i;\n                }\n            }\n        }\n        return SumDigits(max);",
  "        long largestPrime = 0;\n        foreach (long num in lst) {\n         \
    \   if (IsPrime(num)) {\n                largestPrime = Math.Max(largestPrime,\
    \ num);\n            }\n        }\n        return SumDigits(largestPrime);", " \
    \       long max = 0;\n        foreach (long i in lst) {\n            if (i >\
    \ max) {\n                max = i;\n            }\n        }\n        long sum\
    \ = 0;\n        while (max > 0) {\n            sum += max % 10;\n            max\
    \ /= 10;\n        }\n        return sum;", "        // Your code goes here.\n\
    \        return 0L;", "        long largestPrime = 0;\n        foreach (long num\
    \ in lst) {\n            if (IsPrime(num)) {\n                largestPrime = num;\n\
    \            }\n        }\n        return SumDigits(largestPrime);", "       \
    \ long max = 0;\n        foreach (long num in lst) {\n            if (IsPrime(num))\
    \ {\n                max = Math.Max(max, num);\n            }\n        }\n   \
    \     return SumDigits(max);", "        long max = 0;\n        foreach (long n\
    \ in lst) {\n            if (IsPrime(n)) {\n                max = n;\n       \
    \     }\n        }\n        return SumDigits(max);", "        long largestPrime\
    \ = 0;\n        foreach (long i in lst) {\n            if (IsPrime(i)) {\n   \
    \             if (i > largestPrime) {\n                    largestPrime = i;\n\
    \                }\n            }\n        }\n        return SumDigits(largestPrime);",
  "        long largestPrime = 0;\n        foreach (long num in lst) {\n         \
    \   if (IsPrime(num)) {\n                largestPrime = num;\n            }\n\
    \        }\n        return SumDigits(largestPrime);", "        long max = 0;\n\
    \        foreach (long i in lst) {\n            if (i > max) {\n             \
    \   max = i;\n            }\n        }\n        long sum = 0;\n        while (max\
    \ > 0) {\n            sum += max % 10;\n            max /= 10;\n        }\n  \
    \      return sum;", "        long max = 0;\n        foreach (long i in lst) {\n\
    \            if (IsPrime(i)) {\n                if (i > max) {\n             \
    \       max = i;\n                }\n            }\n        }\n        long sum\
    \ = 0;\n        while (max > 0) {\n            sum += max % 10;\n            max\
    \ /= 10;\n        }\n        return sum;", "        long max = 0;\n        foreach\
    \ (long item in lst) {\n            if (item > max) {\n                max = item;\n\
    \            }\n        }\n        long sum = 0;\n        for (long i = 2; i <=\
    \ max; i++) {\n            bool isPrime = true;\n            for (long j = 2;\
    \ j <= i / 2; j++) {\n                if (i % j == 0) {\n                    isPrime\
    \ = false;\n                    break;\n                }\n            }\n   \
    \         if (isPrime) {\n                sum += i;\n            }\n        }\n\
    \        return sum;", "        long max = 0;\n        foreach (long i in lst)\
    \ {\n            if (i > max) {\n                max = i;\n            }\n   \
    \     }\n        long sum = 0;\n        while (max > 0) {\n            sum +=\
    \ max % 10;\n            max /= 10;\n        }\n        return sum;", "      \
    \  long max = 0;\n        foreach (long num in lst) {\n            if (num > max\
    \ && IsPrime(num)) {\n                max = num;\n            }\n        }\n \
    \       return SumDigits(max);", "        long largestPrime = 0;\n        foreach\
    \ (long num in lst) {\n            if (IsPrime(num)) {\n                largestPrime\
    \ = num;\n            }\n        }\n        return SumDigits(largestPrime);",
  "        long max = 0;\n        foreach (long i in lst) {\n            if (i > max)\
    \ {\n                max = i;\n            }\n        }\n        long sum = 0;\n\
    \        while (max > 0) {\n            sum += max % 10;\n            max /= 10;\n\
    \        }\n        return sum;", "        long max = 0;\n        foreach (long\
    \ i in lst) {\n            if (IsPrime(i)) {\n                if (i > max) {\n\
    \                    max = i;\n                }\n            }\n        }\n \
    \       return SumDigits(max);", "        long max = lst.Max();\n        long\
    \ maxPrime = 0;\n        for (long i = max; i > 1; i--) {\n            if (IsPrime(i))\
    \ {\n                maxPrime = i;\n                break;\n            }\n  \
    \      }\n        return SumDigits(maxPrime);", "        long max = 0;\n     \
    \   foreach (long i in lst) {\n            if (IsPrime(i)) {\n               \
    \ max = i;\n            }\n        }\n        return SumDigits(max);", "     \
    \   long max = 0;\n        foreach (long i in lst) {\n            if (IsPrime(i))\
    \ {\n                if (i > max) {\n                    max = i;\n          \
    \      }\n            }\n        }\n        return SumOfDigits(max);", "     \
    \   long largestPrime = 0;\n        foreach (long num in lst) {\n            if\
    \ (IsPrime(num)) {\n                largestPrime = Math.Max(largestPrime, num);\n\
    \            }\n        }\n        return SumDigits(largestPrime);", "       \
    \ long largestPrime = 0;\n        foreach (long num in lst) {\n            if\
    \ (IsPrime(num)) {\n                largestPrime = num;\n            }\n     \
    \   }\n        return SumDigits(largestPrime);", "        long largestPrime =\
    \ 0;\n        foreach (long num in lst) {\n            if (IsPrime(num)) {\n \
    \               largestPrime = num;\n            }\n        }\n        return\
    \ SumDigits(largestPrime);", "        long max = 0;\n        foreach (long i in\
    \ lst) {\n            if (i > max) {\n                max = i;\n            }\n\
    \        }\n        long sum = 0;\n        while (max > 0) {\n            sum\
    \ += max % 10;\n            max /= 10;\n        }\n        return sum;", "   \
    \     long max = lst.Max();\n        long maxPrime = 0;\n        for (long i =\
    \ max; i > 1; i--) {\n            if (IsPrime(i)) {\n                maxPrime\
    \ = i;\n                break;\n            }\n        }\n        return SumDigits(maxPrime);",
  "        long max = 0;\n        foreach (long i in lst) {\n            if (IsPrime(i))\
    \ {\n                max = i;\n            }\n        }\n        return SumDigits(max);",
  "        long largestPrime = 0;\n        foreach (long i in lst) {\n           \
    \ if (IsPrime(i)) {\n                if (i > largestPrime) {\n               \
    \     largestPrime = i;\n                }\n            }\n        }\n       \
    \ return SumDigits(largestPrime);", "        // Your code here\n        return\
    \ 0L;", "        // Your code goes here.\n        return 0L;", "        long largest\
    \ = 0;\n        foreach (long i in lst) {\n            if (IsPrime(i)) {\n   \
    \             if (i > largest) {\n                    largest = i;\n         \
    \       }\n            }\n        }\n        return SumDigits(largest);", "  \
    \      // Your code goes here.\n        return 0L;", "        long largestPrime\
    \ = 0;\n        foreach (long num in lst) {\n            if (IsPrime(num)) {\n\
    \                largestPrime = num;\n            }\n        }\n        return\
    \ SumDigits(largestPrime);", "        long max = 0;\n        foreach (long i in\
    \ lst) {\n            if (IsPrime(i)) {\n                if (i > max) {\n    \
    \                max = i;\n                }\n            }\n        }\n     \
    \   return SumDigits(max);", "        long max = 0;\n        foreach (long i in\
    \ lst) {\n            if (IsPrime(i)) {\n                max = i;\n          \
    \  }\n        }\n        return SumDigits(max);", "        // Your code goes here.\n\
    \        return 0L;", "        long max = lst.Max();\n        long maxPrime =\
    \ 0;\n        for (long i = max; i > 0; i--) {\n            if (lst.Contains(i)\
    \ && IsPrime(i)) {\n                maxPrime = i;\n                break;\n  \
    \          }\n        }\n        return maxPrime.ToString().Select(c => long.Parse(c.ToString())).Sum();",
  "        long max = 0;\n        foreach (long i in lst) {\n            if (i > max)\
    \ {\n                max = i;\n            }\n        }\n        long sum = 0;\n\
    \        while (max > 0) {\n            sum += max % 10;\n            max /= 10;\n\
    \        }\n        return sum;", "        long largestPrime = 0;\n        foreach\
    \ (long i in lst) {\n            if (IsPrime(i)) {\n                if (i > largestPrime)\
    \ {\n                    largestPrime = i;\n                }\n            }\n\
    \        }\n        return SumDigits(largestPrime);", '        return lst.Where(x
    => x > 1).Where(x => Enumerable.Range(2, (int)Math.Sqrt(x) - 1).All(i => x % i
    > 0)).Max().ToString().Select(x => long.Parse(x.ToString())).Sum();', "      \
    \  long max = 0;\n        foreach (long i in lst) {\n            if (IsPrime(i))\
    \ {\n                if (i > max) {\n                    max = i;\n          \
    \      }\n            }\n        }\n        return SumDigits(max);", "       \
    \ // Your code goes here.\n        return 0L;", "        long max = 0;\n     \
    \   foreach (long i in lst) {\n            if (IsPrime(i)) {\n               \
    \ if (i > max) {\n                    max = i;\n                }\n          \
    \  }\n        }\n        return SumDigits(max);", "        long max = 0;\n   \
    \     foreach (long i in lst) {\n            if (IsPrime(i)) {\n             \
    \   if (i > max) {\n                    max = i;\n                }\n        \
    \    }\n        }\n        return SumDigits(max);", "        // Your code goes\
    \ here.\n        return 0L;", "        long largestPrime = 0;\n        foreach\
    \ (long num in lst) {\n            if (IsPrime(num)) {\n                largestPrime\
    \ = num;\n            }\n        }\n        return SumDigits(largestPrime);",
  "        long sum = 0;\n        long max = 0;\n        foreach (long i in lst) {\n\
    \            if (IsPrime(i)) {\n                if (i > max) {\n             \
    \       max = i;\n                }\n            }\n        }\n        while (max\
    \ > 0) {\n            sum += max % 10;\n            max /= 10;\n        }\n  \
    \      return sum;", "        long largestPrime = 0;\n        foreach (long i\
    \ in lst) {\n            if (IsPrime(i)) {\n                if (i > largestPrime)\
    \ {\n                    largestPrime = i;\n                }\n            }\n\
    \        }\n        return SumOfDigits(largestPrime);", "        // Your code\
    \ goes here.\n        return 0L;", "        long largestPrime = 0;\n        foreach\
    \ (long num in lst) {\n            if (IsPrime(num)) {\n                largestPrime\
    \ = num;\n            }\n        }\n        return SumDigits(largestPrime);",
  "        long max = 0;\n        foreach (long i in lst) {\n            if (i > max)\
    \ {\n                max = i;\n            }\n        }\n        long sum = 0;\n\
    \        while (max > 0) {\n            sum += max % 10;\n            max /= 10;\n\
    \        }\n        return sum;", '        return lst.Where(x => IsPrime(x)).Max().ToString().Select(x
    => (long)Char.GetNumericValue(x)).Sum();', "        long max = 0;\n        foreach\
    \ (long i in lst) {\n            if (IsPrime(i)) {\n                max = i;\n\
    \            }\n        }\n        return SumDigits(max);", "        long max\
    \ = (long)0L;\n        foreach (long i in lst) {\n            if (IsPrime(i))\
    \ {\n                if (i > max) {\n                    max = i;\n          \
    \      }\n            }\n        }\n        return SumDigits(max);", "       \
    \ long max = 0;\n        foreach (long i in lst) {\n            if (i > max) {\n\
    \                max = i;\n            }\n        }\n        long largestPrime\
    \ = 0;\n        for (long i = max; i > 1; i--) {\n            if (IsPrime(i))\
    \ {\n                largestPrime = i;\n                break;\n            }\n\
    \        }\n        long sum = 0;\n        while (largestPrime > 0) {\n      \
    \      sum += largestPrime % 10;\n            largestPrime /= 10;\n        }\n\
    \        return sum;", "        long max = 0;\n        foreach (long i in lst)\
    \ {\n            if (IsPrime(i)) {\n                if (i > max) {\n         \
    \           max = i;\n                }\n            }\n        }\n        return\
    \ SumDigits(max);", "        long max = 0;\n        foreach (long i in lst) {\n\
    \            if (i > max) {\n                max = i;\n            }\n       \
    \ }\n        long sum = 0;\n        while (max > 0) {\n            sum += max\
    \ % 10;\n            max /= 10;\n        }\n        return sum;", "        long\
    \ max = 0;\n        foreach (long i in lst) {\n            if (IsPrime(i)) {\n\
    \                max = Math.Max(max, i);\n            }\n        }\n        return\
    \ SumDigits(max);", "        long max = 0;\n        foreach (long num in lst)\
    \ {\n            if (IsPrime(num)) {\n                max = Math.Max(max, num);\n\
    \            }\n        }\n        return SumDigits(max);", "        long max\
    \ = 0;\n        foreach (long num in lst) {\n            if (IsPrime(num)) {\n\
    \                max = Math.Max(max, num);\n            }\n        }\n       \
    \ return SumDigits(max);", "        long max = 0;\n        foreach (long i in\
    \ lst) {\n            if (i > max) {\n                max = i;\n            }\n\
    \        }\n        long sum = 0;\n        for (long i = 2; i <= max; i++) {\n\
    \            bool prime = true;\n            for (long j = 2; j < i; j++) {\n\
    \                if (i % j == 0) {\n                    prime = false;\n     \
    \               break;\n                }\n            }\n            if (prime)\
    \ {\n                long temp = i;\n                while (temp > 0) {\n    \
    \                sum += temp % 10;\n                    temp /= 10;\n        \
    \        }\n            }\n        }\n        return sum;", "        // Your code\
    \ goes here.\n        return 0L;", "        long largestPrime = 0;\n        foreach\
    \ (long i in lst) {\n            if (IsPrime(i)) {\n                if (i > largestPrime)\
    \ {\n                    largestPrime = i;\n                }\n            }\n\
    \        }\n        return SumDigits(largestPrime);", "        long max = 0;\n\
    \        foreach (long i in lst) {\n            if (i > max) {\n             \
    \   max = i;\n            }\n        }\n        long sum = 0;\n        for (long\
    \ i = 2; i <= max; i++) {\n            if (isPrime(i)) {\n                sum\
    \ += i;\n            }\n        }\n        return sum;", "        long largestPrime\
    \ = 0;\n        foreach (long i in lst) {\n            if (IsPrime(i)) {\n   \
    \             if (i > largestPrime) {\n                    largestPrime = i;\n\
    \                }\n            }\n        }\n        long sum = 0;\n        while\
    \ (largestPrime > 0) {\n            sum += largestPrime % 10;\n            largestPrime\
    \ /= 10;\n        }\n        return sum;", "        long max = 0;\n        foreach\
    \ (long i in lst) {\n            if (IsPrime(i)) {\n                max = i;\n\
    \            }\n        }\n        return SumDigits(max);", "        long max\
    \ = 0;\n        foreach (long i in lst) {\n            if (i > max) {\n      \
    \          max = i;\n            }\n        }\n        long sum = 0;\n       \
    \ for (long i = max; i > 0; i--) {\n            if (IsPrime(i)) {\n          \
    \      sum = SumDigits(i);\n                break;\n            }\n        }\n\
    \        return sum;", "        long max = 0;\n        foreach (long i in lst)\
    \ {\n            if (IsPrime(i)) {\n                if (i > max) {\n         \
    \           max = i;\n                }\n            }\n        }\n        return\
    \ SumDigits(max);", "        long max = 0;\n        foreach (long i in lst) {\n\
    \            if (i > max) {\n                max = i;\n            }\n       \
    \ }\n        long sum = 0;\n        while (max > 0) {\n            sum += max\
    \ % 10;\n            max /= 10;\n        }\n        return sum;", "        long\
    \ max = 0;\n        foreach (long i in lst) {\n            if (IsPrime(i)) {\n\
    \                if (i > max) {\n                    max = i;\n              \
    \  }\n            }\n        }\n        return SumDigits(max);", "        long\
    \ sum = 0;\n        long max = 0;\n        for (int i = 0; i < lst.Count; i++)\
    \ {\n            if (IsPrime(lst[i])) {\n                if (lst[i] > max) {\n\
    \                    max = lst[i];\n                }\n            }\n       \
    \ }\n        while (max > 0) {\n            sum += max % 10;\n            max\
    \ /= 10;\n        }\n        return sum;", "        long max = 0;\n        foreach\
    \ (long i in lst) {\n            if (IsPrime(i)) {\n                if (i > max)\
    \ {\n                    max = i;\n                }\n            }\n        }\n\
    \        return SumOfDigits(max);", "        long max = 0;\n        foreach (long\
    \ i in lst) {\n            if (i > max) {\n                max = i;\n        \
    \    }\n        }\n        long sum = 0;\n        while (max > 0) {\n        \
    \    sum += max % 10;\n            max /= 10;\n        }\n        return sum;",
  "        return lst.Where(x => x > 1).Where(x => Enumerable.Range(2, (int)Math.Sqrt(x)\
    \ - 1).All(i => x % i > 0)).Max().ToString().Sum(x => x - '0');", "        long\
    \ largest = 0;\n        foreach (long num in lst) {\n            if (IsPrime(num))\
    \ {\n                if (num > largest) {\n                    largest = num;\n\
    \                }\n            }\n        }\n        return SumDigits(largest);",
  "        long largestPrime = 0;\n        foreach (long num in lst) {\n         \
    \   if (IsPrime(num)) {\n                largestPrime = num;\n            }\n\
    \        }\n        return SumOfDigits(largestPrime);", "        long max = 0;\n\
    \        foreach (long x in lst) {\n            if (IsPrime(x)) {\n          \
    \      max = x;\n            }\n        }\n        long sum = 0;\n        while\
    \ (max > 0) {\n            sum += max % 10;\n            max /= 10;\n        }\n\
    \        return sum;", "        long max = 0;\n        foreach (long i in lst)\
    \ {\n            if (i > max) {\n                if (IsPrime(i)) {\n         \
    \           max = i;\n                }\n            }\n        }\n        return\
    \ SumOfDigits(max);", "        long max = 0;\n        foreach (long i in lst)\
    \ {\n            if (i > max) {\n                max = i;\n            }\n   \
    \     }\n        long sum = 0;\n        while (max > 0) {\n            sum +=\
    \ max % 10;\n            max /= 10;\n        }\n        return sum;"]
stop_tokens:
- "\n    }\n"

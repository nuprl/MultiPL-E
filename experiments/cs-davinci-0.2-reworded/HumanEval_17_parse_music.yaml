name: HumanEval_17_parse_music
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // Input to this function is a string representing musical notes\
  \ in a special ASCII format.\n    // Your task is to parse this string and return\
  \ list of integers corresponding to how many beats does each\n    // not last.\n\
  \    // Here is a legend:\n    // 'o' - whole note, lasts four beats\n    // 'o|'\
  \ - half note, lasts two beats\n    // '.|' - quater note, lasts one beat\n    //\
  \ >>> ParseMusic((\"o o| .| o| o| .| .| .| .| o o\"))\n    // (new List<long>(new\
  \ long[]{(long)4L, (long)2L, (long)1L, (long)2L, (long)2L, (long)1L, (long)1L, (long)1L,\
  \ (long)1L, (long)4L, (long)4L}))\n    public static List<long> ParseMusic(string\
  \ music_string) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(ParseMusic((\"\
  \")).Equals((new List<long>())));\n    Debug.Assert(ParseMusic((\"o o o o\")).Equals((new\
  \ List<long>(new long[]{(long)4L, (long)4L, (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"\
  .| .| .| .|\")).Equals((new List<long>(new long[]{(long)1L, (long)1L, (long)1L,\
  \ (long)1L}))));\n    Debug.Assert(ParseMusic((\"o| o| .| .| o o o o\")).Equals((new\
  \ List<long>(new long[]{(long)2L, (long)2L, (long)1L, (long)1L, (long)4L, (long)4L,\
  \ (long)4L, (long)4L}))));\n    Debug.Assert(ParseMusic((\"o| .| o| .| o o| o o|\"\
  )).Equals((new List<long>(new long[]{(long)2L, (long)1L, (long)2L, (long)1L, (long)4L,\
  \ (long)2L, (long)4L, (long)2L}))));\n    }\n\n}\n"
completions: ["        List<long> result = new List<long>();\n        // Your code\
    \ goes here.\n        return result;", "        var result = new List<long>();\n\
    \        var beats = new Dictionary<char, long>();\n        beats['o'] = 4;\n\
    \        beats['|'] = 2;\n        beats['.'] = 1;\n        var current_beat =\
    \ 0L;\n        foreach (var c in music_string) {\n            if (c == ' ') {\n\
    \                result.Add(current_beat);\n                current_beat = 0;\n\
    \            } else {\n                current_beat += beats[c];\n           \
    \ }\n        }\n        result.Add(current_beat);\n        return result;", " \
    \       List<long> result = new List<long>();\n        for (int i = 0; i < music_string.Length;\
    \ i++) {\n            if (music_string[i] == 'o') {\n                if (i + 1\
    \ < music_string.Length && music_string[i + 1] == '|') {\n                   \
    \ result.Add(2);\n                    i++;\n                } else {\n       \
    \             result.Add(4);\n                }\n            } else if (music_string[i]\
    \ == '.') {\n                result.Add(1);\n                i++;\n          \
    \  }\n        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        string[] notes = music_string.Split(' ');\n        foreach (string note\
    \ in notes) {\n            if (note == \"o\") {\n                result.Add(4);\n\
    \            } else if (note == \"o|\") {\n                result.Add(2);\n  \
    \          } else if (note == \".|\") {\n                result.Add(1);\n    \
    \        }\n        }\n        return result;", "        var result = new List<long>();\n\
    \        var current_note = new StringBuilder();\n        foreach (var c in music_string)\
    \ {\n            if (c == ' ') {\n                result.Add(current_note.ToString()\
    \ == \"o\" ? 4 : 2);\n                current_note.Clear();\n            } else\
    \ {\n                current_note.Append(c);\n            }\n        }\n     \
    \   result.Add(current_note.ToString() == \"o\" ? 4 : 2);\n        return result;",
  "        List<long> result = new List<long>();\n        for (int i = 0; i < music_string.Length;\
    \ i++) {\n            if (music_string[i] == 'o') {\n                result.Add(4);\n\
    \            }\n            else if (music_string[i] == '.') {\n             \
    \   result.Add(1);\n            }\n            else if (music_string[i] == '|')\
    \ {\n                result.Add(2);\n            }\n        }\n        return\
    \ result;", "        List<long> result = new List<long>();\n        // Your code\
    \ goes here\n        return result;", "        List<long> result = new List<long>();\n\
    \        for (int i = 0; i < music_string.Length; i++) {\n            if (music_string[i]\
    \ == 'o') {\n                if (i + 1 < music_string.Length && music_string[i\
    \ + 1] == '|') {\n                    result.Add(2);\n                    i++;\n\
    \                } else {\n                    result.Add(4);\n              \
    \  }\n            } else if (music_string[i] == '.') {\n                result.Add(1);\n\
    \                i++;\n            }\n        }\n        return result;", "  \
    \      List<long> result = new List<long>();\n        int i = 0;\n        while\
    \ (i < music_string.Length) {\n            if (music_string[i] == 'o') {\n   \
    \             if (i + 1 < music_string.Length && music_string[i + 1] == '|') {\n\
    \                    result.Add(2);\n                    i += 2;\n           \
    \     } else {\n                    result.Add(4);\n                    i += 1;\n\
    \                }\n            } else {\n                result.Add(1);\n   \
    \             i += 2;\n            }\n        }\n        return result;", "  \
    \      var result = new List<long>();\n        var notes = music_string.Split('\
    \ ');\n        foreach (var note in notes) {\n            if (note == \"o\") {\n\
    \                result.Add(4);\n            } else if (note == \"o|\") {\n  \
    \              result.Add(2);\n            } else if (note == \".|\") {\n    \
    \            result.Add(1);\n            }\n        }\n        return result;",
  "        var result = new List<long>();\n        var notes = music_string.Split('\
    \ ');\n        foreach (var note in notes) {\n            if (note == \"o\") {\n\
    \                result.Add(4);\n            } else if (note == \"o|\") {\n  \
    \              result.Add(2);\n            } else if (note == \".|\") {\n    \
    \            result.Add(1);\n            }\n        }\n        return result;",
  "        List<long> result = new List<long>();\n        foreach (var c in music_string)\
    \ {\n            if (c == 'o') {\n                result.Add(4);\n           \
    \ } else if (c == '|') {\n                result[result.Count - 1] /= 2;\n   \
    \         }\n        }\n        return result;", "        List<long> result =\
    \ new List<long>();\n        for (int i = 0; i < music_string.Length; i++) {\n\
    \            if (music_string[i] == 'o') {\n                if (i + 1 < music_string.Length\
    \ && music_string[i + 1] == '|') {\n                    result.Add(2);\n     \
    \               i++;\n                } else {\n                    result.Add(4);\n\
    \                }\n            } else if (music_string[i] == '.') {\n       \
    \         result.Add(1);\n                i++;\n            }\n        }\n   \
    \     return result;", "        var result = new List<long>();\n        var notes\
    \ = music_string.Split(' ');\n        foreach (var note in notes) {\n        \
    \    if (note == \"o\") {\n                result.Add(4);\n            } else\
    \ if (note == \"o|\") {\n                result.Add(2);\n            } else if\
    \ (note == \".|\") {\n                result.Add(1);\n            }\n        }\n\
    \        return result;", "        List<long> result = new List<long>();\n   \
    \     for (int i = 0; i < music_string.Length; i++) {\n            if (music_string[i]\
    \ == 'o') {\n                result.Add(4);\n            }\n            else if\
    \ (music_string[i] == '.') {\n                result.Add(1);\n            }\n\
    \            else if (music_string[i] == '|') {\n                result.Add(2);\n\
    \            }\n        }\n        return result;", "        var res = new List<long>();\n\
    \        var beats = new List<char>();\n        foreach (var c in music_string)\
    \ {\n            if (c == ' ') {\n                if (beats.Count == 0) {\n  \
    \                  continue;\n                }\n                if (beats.Count\
    \ == 1) {\n                    if (beats[0] == 'o') {\n                      \
    \  res.Add(4);\n                    } else if (beats[0] == '.') {\n          \
    \              res.Add(1);\n                    } else {\n                   \
    \     throw new Exception(\"Invalid music string\");\n                    }\n\
    \                } else if (beats.Count == 2) {\n                    if (beats[0]\
    \ == 'o' && beats[1] == '|') {\n                        res.Add(2);\n        \
    \            } else {\n                        throw new Exception(\"Invalid music\
    \ string\");\n                    }\n                } else {\n              \
    \      throw new Exception(\"Invalid music string\");\n                }\n   \
    \             beats.Clear();\n            } else {\n                beats.Add(c);\n\
    \            }\n        }\n        if (beats.Count > 0) {\n            throw new\
    \ Exception(\"Invalid music string\");\n        }\n        return res;", "   \
    \     var result = new List<long>();\n        var notes = music_string.Split('\
    \ ');\n        foreach (var note in notes) {\n            switch (note) {\n  \
    \              case \"o\":\n                    result.Add(4);\n             \
    \       break;\n                case \"o|\":\n                    result.Add(2);\n\
    \                    break;\n                case \".|\":\n                  \
    \  result.Add(1);\n                    break;\n            }\n        }\n    \
    \    return result;", "        List<long> result = new List<long>();\n       \
    \ foreach (var c in music_string) {\n            if (c == 'o') {\n           \
    \     result.Add(4);\n            } else if (c == '|') {\n                result[result.Count\
    \ - 1] /= 2;\n            }\n        }\n        return result;", "        var\
    \ result = new List<long>();\n        var beats = new Dictionary<char, long>();\n\
    \        beats['o'] = 4;\n        beats['|'] = 2;\n        beats['.'] = 1;\n \
    \       var current_beat = 0L;\n        foreach (var c in music_string) {\n  \
    \          if (beats.ContainsKey(c)) {\n                current_beat += beats[c];\n\
    \            } else {\n                result.Add(current_beat);\n           \
    \     current_beat = 0;\n            }\n        }\n        result.Add(current_beat);\n\
    \        return result;", "        List<long> result = new List<long>();\n   \
    \     int i = 0;\n        while (i < music_string.Length) {\n            if (music_string[i]\
    \ == 'o') {\n                if (i + 1 < music_string.Length && music_string[i\
    \ + 1] == '|') {\n                    result.Add(2);\n                    i +=\
    \ 2;\n                } else {\n                    result.Add(4);\n         \
    \           i += 1;\n                }\n            } else {\n               \
    \ result.Add(1);\n                i += 2;\n            }\n        }\n        return\
    \ result;", "        var result = new List<long>();\n        var notes = music_string.Split('\
    \ ');\n        foreach (var note in notes) {\n            switch (note) {\n  \
    \              case \"o\":\n                    result.Add(4);\n             \
    \       break;\n                case \"o|\":\n                    result.Add(2);\n\
    \                    break;\n                case \".|\":\n                  \
    \  result.Add(1);\n                    break;\n            }\n        }\n    \
    \    return result;", "        List<long> result = new List<long>();\n       \
    \ string[] notes = music_string.Split(' ');\n        foreach (string note in notes)\
    \ {\n            if (note == \"o\") {\n                result.Add(4);\n      \
    \      } else if (note == \"o|\") {\n                result.Add(2);\n        \
    \    } else if (note == \".|\") {\n                result.Add(1);\n          \
    \  }\n        }\n        return result;", "        var result = new List<long>();\n\
    \        var notes = music_string.Split(' ');\n        foreach (var note in notes)\
    \ {\n            if (note == \"o\") {\n                result.Add(4);\n      \
    \      } else if (note == \"o|\") {\n                result.Add(2);\n        \
    \    } else if (note == \".|\") {\n                result.Add(1);\n          \
    \  }\n        }\n        return result;", "        var result = new List<long>();\n\
    \        var current_note = new StringBuilder();\n        foreach (var c in music_string)\
    \ {\n            if (c == ' ') {\n                result.Add(current_note.ToString()\
    \ == \"o\" ? 4 : 2);\n                current_note.Clear();\n            } else\
    \ {\n                current_note.Append(c);\n            }\n        }\n     \
    \   result.Add(current_note.ToString() == \"o\" ? 4 : 2);\n        return result;",
  "        List<long> result = new List<long>();\n        foreach (var c in music_string)\
    \ {\n            if (c == 'o') {\n                result.Add(4);\n           \
    \ } else if (c == '|') {\n                result[result.Count - 1] /= 2;\n   \
    \         }\n        }\n        return result;", "        var result = new List<long>();\n\
    \        var notes = music_string.Split(' ');\n        foreach (var note in notes)\
    \ {\n            if (note == \"o\") {\n                result.Add(4);\n      \
    \      } else if (note == \"o|\") {\n                result.Add(2);\n        \
    \    } else if (note == \".|\") {\n                result.Add(1);\n          \
    \  }\n        }\n        return result;", "        var result = new List<long>();\n\
    \        var notes = music_string.Split(' ');\n        foreach (var note in notes)\
    \ {\n            if (note == \"o\") {\n                result.Add(4);\n      \
    \      } else if (note == \"o|\") {\n                result.Add(2);\n        \
    \    } else if (note == \".|\") {\n                result.Add(1);\n          \
    \  }\n        }\n        return result;", "        // your code goes here\n  \
    \      return new List<long>();", '        return null;', "        List<long>\
    \ result = new List<long>();\n        long beats = 0;\n        foreach (char c\
    \ in music_string) {\n            if (c == 'o') {\n                beats = 4;\n\
    \            } else if (c == '|') {\n                beats /= 2;\n           \
    \ } else if (c == '.') {\n                result.Add(beats);\n            }\n\
    \        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        long counter = 0;\n        for (int i = 0; i < music_string.Length; i++)\
    \ {\n            if (music_string[i] == 'o') {\n                result.Add(4);\n\
    \                counter += 4;\n            }\n            else if (music_string[i]\
    \ == '|') {\n                result.Add(counter);\n                counter = 0;\n\
    \            }\n            else if (music_string[i] == '.') {\n             \
    \   counter += 1;\n            }\n        }\n        return result;", "      \
    \  var beats = new List<long>();\n        var currentBeat = 0L;\n        foreach\
    \ (var c in music_string) {\n            switch (c) {\n                case 'o':\n\
    \                    beats.Add(4L);\n                    currentBeat += 4L;\n\
    \                    break;\n                case '|':\n                    if\
    \ (currentBeat % 2 == 0) {\n                        beats.Add(2L);\n         \
    \               currentBeat += 2L;\n                    } else {\n           \
    \             beats.Add(1L);\n                        currentBeat += 1L;\n   \
    \                 }\n                    break;\n                case '.':\n \
    \                   beats.Add(1L);\n                    currentBeat += 1L;\n \
    \                   break;\n                default:\n                    break;\n\
    \            }\n        }\n        return beats;", "        var result = new List<long>();\n\
    \        var beats = new Dictionary<char, long>();\n        beats['o'] = 4;\n\
    \        beats['|'] = 2;\n        beats['.'] = 1;\n        var current_beat =\
    \ 0L;\n        foreach (var c in music_string) {\n            if (beats.ContainsKey(c))\
    \ {\n                result.Add(beats[c]);\n            }\n        }\n       \
    \ return result;", "        var result = new List<long>();\n        var notes\
    \ = music_string.Split(' ');\n        foreach (var note in notes) {\n        \
    \    if (note == \"o\") {\n                result.Add(4);\n            } else\
    \ if (note == \"o|\") {\n                result.Add(2);\n            } else if\
    \ (note == \".|\") {\n                result.Add(1);\n            }\n        }\n\
    \        return result;", "        var result = new List<long>();\n        var\
    \ notes = music_string.Split(' ');\n        foreach (var note in notes) {\n  \
    \          switch (note) {\n                case \"o\":\n                    result.Add(4);\n\
    \                    break;\n                case \"o|\":\n                  \
    \  result.Add(2);\n                    break;\n                case \".|\":\n\
    \                    result.Add(1);\n                    break;\n            }\n\
    \        }\n        return result;", "        var beats = new List<long>();\n\
    \        var notes = music_string.Split(' ');\n        foreach (var note in notes)\
    \ {\n            if (note == \"o\") {\n                beats.Add(4);\n       \
    \     } else if (note == \"o|\") {\n                beats.Add(2);\n          \
    \  } else if (note == \".|\") {\n                beats.Add(1);\n            }\n\
    \        }\n        return beats;", "        var result = new List<long>();\n\
    \        var notes = music_string.Split(' ');\n        foreach (var note in notes)\
    \ {\n            switch (note) {\n                case \"o\":\n              \
    \      result.Add(4);\n                    break;\n                case \"o|\"\
    :\n                    result.Add(2);\n                    break;\n          \
    \      case \".|\":\n                    result.Add(1);\n                    break;\n\
    \            }\n        }\n        return result;", "        var result = new\
    \ List<long>();\n        var notes = music_string.Split(' ');\n        foreach\
    \ (var note in notes) {\n            switch (note) {\n                case \"\
    o\":\n                    result.Add(4);\n                    break;\n       \
    \         case \"o|\":\n                    result.Add(2);\n                 \
    \   break;\n                case \".|\":\n                    result.Add(1);\n\
    \                    break;\n            }\n        }\n        return result;",
  "        var result = new List<long>();\n        var current_note = \"\";\n    \
    \    foreach (var c in music_string) {\n            if (c == ' ') {\n        \
    \        if (current_note == \"o\") {\n                    result.Add(4);\n  \
    \              } else if (current_note == \"o|\") {\n                    result.Add(2);\n\
    \                } else if (current_note == \".|\") {\n                    result.Add(1);\n\
    \                }\n                current_note = \"\";\n            } else {\n\
    \                current_note += c;\n            }\n        }\n        if (current_note\
    \ == \"o\") {\n            result.Add(4);\n        } else if (current_note ==\
    \ \"o|\") {\n            result.Add(2);\n        } else if (current_note == \"\
    .|\") {\n            result.Add(1);\n        }\n        return result;", "   \
    \     List<long> result = new List<long>();\n        long current_beat = 0L;\n\
    \        foreach (char c in music_string) {\n            if (c == 'o') {\n   \
    \             result.Add(4L);\n                current_beat += 4L;\n         \
    \   } else if (c == '|') {\n                result.Add(current_beat);\n      \
    \          current_beat = 0L;\n            }\n        }\n        return result;",
  "        var result = new List<long>();\n        var notes = music_string.Split('\
    \ ');\n        foreach (var note in notes) {\n            if (note == \"o\") {\n\
    \                result.Add(4);\n            } else if (note == \"o|\") {\n  \
    \              result.Add(2);\n            } else if (note == \".|\") {\n    \
    \            result.Add(1);\n            }\n        }\n        return result;",
  "        List<long> result = new List<long>();\n        long beats = 0;\n      \
    \  foreach (char c in music_string) {\n            if (c == 'o') {\n         \
    \       beats += 4;\n            } else if (c == '|') {\n                result.Add(beats);\n\
    \                beats = 0;\n            }\n        }\n        result.Add(beats);\n\
    \        return result;", "        // Your code goes here\n        List<long>\
    \ result = new List<long>();\n        string[] notes = music_string.Split(' ');\n\
    \        foreach (string note in notes) {\n            switch (note) {\n     \
    \           case \"o\":\n                    result.Add(4);\n                \
    \    break;\n                case \"o|\":\n                    result.Add(2);\n\
    \                    break;\n                case \".|\":\n                  \
    \  result.Add(1);\n                    break;\n            }\n        }\n    \
    \    return result;", "        var beats = new List<long>();\n        for (int\
    \ i = 0; i < music_string.Length; i++) {\n            if (music_string[i] == 'o')\
    \ {\n                if (i + 1 < music_string.Length && music_string[i + 1] ==\
    \ '|') {\n                    beats.Add(2);\n                    i++;\n      \
    \          }\n                else {\n                    beats.Add(4);\n    \
    \            }\n            }\n            else if (music_string[i] == '.') {\n\
    \                beats.Add(1);\n                i++;\n            }\n        }\n\
    \        return beats;", "        List<long> result = new List<long>();\n    \
    \    string[] notes = music_string.Split(' ');\n        foreach (string note in\
    \ notes) {\n            if (note == \"o\") {\n                result.Add(4);\n\
    \            } else if (note == \"o|\") {\n                result.Add(2);\n  \
    \          } else if (note == \".|\") {\n                result.Add(1);\n    \
    \        }\n        }\n        return result;", "        var result = new List<long>();\n\
    \        var beats = new Dictionary<char, long>();\n        beats['o'] = 4;\n\
    \        beats['|'] = 2;\n        beats['.'] = 1;\n        var current_beat =\
    \ 0L;\n        foreach (var c in music_string) {\n            if (c == ' ') {\n\
    \                result.Add(current_beat);\n                current_beat = 0;\n\
    \            } else {\n                current_beat += beats[c];\n           \
    \ }\n        }\n        result.Add(current_beat);\n        return result;", " \
    \       var result = new List<long>();\n        var notes = music_string.Split('\
    \ ');\n        foreach (var note in notes) {\n            switch (note) {\n  \
    \              case \"o\":\n                    result.Add(4);\n             \
    \       break;\n                case \"o|\":\n                    result.Add(2);\n\
    \                    break;\n                case \".|\":\n                  \
    \  result.Add(1);\n                    break;\n            }\n        }\n    \
    \    return result;", "        List<long> res = new List<long>();\n        int\
    \ i = 0;\n        while (i < music_string.Length) {\n            if (music_string[i]\
    \ == 'o') {\n                if (i + 1 < music_string.Length && music_string[i\
    \ + 1] == '|') {\n                    res.Add(2);\n                    i += 2;\n\
    \                } else {\n                    res.Add(4);\n                 \
    \   i += 1;\n                }\n            } else {\n                res.Add(1);\n\
    \                i += 2;\n            }\n        }\n        return res;", "  \
    \      var result = new List<long>();\n        var beats = new List<string>();\n\
    \        var notes = music_string.Split(' ');\n        foreach (var note in notes)\
    \ {\n            if (note == \"o\") {\n                beats.Add(\"o\");\n   \
    \         } else if (note == \"o|\") {\n                beats.Add(\"o|\");\n \
    \           } else if (note == \".|\") {\n                beats.Add(\".|\");\n\
    \            }\n        }\n        foreach (var beat in beats) {\n           \
    \ if (beat == \"o\") {\n                result.Add(4);\n            } else if\
    \ (beat == \"o|\") {\n                result.Add(2);\n            } else if (beat\
    \ == \".|\") {\n                result.Add(1);\n            }\n        }\n   \
    \     return result;", "        List<long> result = new List<long>();\n      \
    \  // Your code goes here\n        return result;", "        List<long> result\
    \ = new List<long>();\n        long current_beat = 0L;\n        foreach (char\
    \ c in music_string) {\n            if (c == 'o') {\n                result.Add(4L);\n\
    \                current_beat += 4L;\n            } else if (c == '|') {\n   \
    \             result.Add(current_beat);\n                current_beat = 0L;\n\
    \            }\n        }\n        return result;", "        List<long> res =\
    \ new List<long>();\n        for (int i = 0; i < music_string.Length; i++) {\n\
    \            if (music_string[i] == 'o') {\n                if (i + 1 < music_string.Length\
    \ && music_string[i + 1] == '|') {\n                    res.Add(2);\n        \
    \            i++;\n                } else {\n                    res.Add(4);\n\
    \                }\n            } else if (music_string[i] == '.') {\n       \
    \         res.Add(1);\n                i++;\n            }\n        }\n      \
    \  return res;", "        List<long> result = new List<long>();\n        string[]\
    \ notes = music_string.Split(' ');\n        foreach (string note in notes) {\n\
    \            if (note == \"o\") {\n                result.Add(4);\n          \
    \  } else if (note == \"o|\") {\n                result.Add(2);\n            }\
    \ else if (note == \".|\") {\n                result.Add(1);\n            }\n\
    \        }\n        return result;", "        var result = new List<long>();\n\
    \        foreach (var c in music_string) {\n            if (c == 'o') {\n    \
    \            result.Add(4);\n            } else if (c == '|') {\n            \
    \    result[result.Count - 1] /= 2;\n            }\n        }\n        return\
    \ result;", "        var result = new List<long>();\n        foreach (var ch in\
    \ music_string) {\n            if (ch == 'o') {\n                result.Add(4);\n\
    \            } else if (ch == '|') {\n                result[result.Count - 1]\
    \ /= 2;\n            }\n        }\n        return result;", "        List<long>\
    \ result = new List<long>();\n        string[] notes = music_string.Split(' ');\n\
    \        foreach (string note in notes) {\n            if (note == \"o\") {\n\
    \                result.Add(4);\n            } else if (note == \"o|\") {\n  \
    \              result.Add(2);\n            } else if (note == \".|\") {\n    \
    \            result.Add(1);\n            }\n        }\n        return result;",
  "        var beats = new List<long>();\n        var currentBeat = 0L;\n        var\
    \ currentNote = 0L;\n        var currentNoteLength = 0L;\n        var currentNoteLengths\
    \ = new List<long>();\n        var currentNoteLengthsIndex = 0L;\n        var\
    \ currentNoteLengthsLength = 0L;\n        var currentNoteLengthsLengths = new\
    \ List<long>();\n        var currentNoteLengthsLengthsIndex = 0L;\n        var\
    \ currentNoteLengthsLengthsLength = 0L;\n        var currentNoteLengthsLengthsLengths\
    \ = new List<long>();\n        var currentNoteLengthsLengthsLengthsIndex = 0L;\n\
    \        var currentNoteLengthsLengthsLengthsLength = 0L;\n        var currentNoteLengthsLengthsLengthsLengths\
    \ = new List<long>();\n        var currentNoteLengthsLengthsLengthsLengthsIndex\
    \ = 0L;\n        var currentNoteLengthsLengthsLengthsLengthsLength = 0L;\n   \
    \     var currentNoteLengthsLengthsLengthsLengthsLengths = new List<long>();\n\
    \        var currentNoteLengthsLengthsLengthsLengthsLengthsIndex = 0L;\n     \
    \   var currentNoteLengthsLengthsLengthsLengthsLengthsLength = 0L;\n        var\
    \ currentNoteLengthsLengthsLengthsLengthsLengthsLengths = new List<long>();\n\
    \        var currentNoteLengthsLengthsLengthsLengthsLengthsLengthsIndex = 0L;\n\
    \        var currentNoteLengthsLengthsLengthsLengthsLengthsLengthsLength = 0L;\n\
    \        var currentNoteLengthsLengthsLengthsLengthsLengthsLengthsLengths = new\
    \ List<long>();\n        var currentNoteLengthsLengthsLengthsLengthsLengthsLengthsLengthsIndex\
    \ = 0L;\n        var currentNoteLengthsLengthsLengthsLengthsLengthsLengthsLengthsLength\
    \ = 0L;\n        var currentNoteLengthsLengthsLengthsLengthsLengthsLengthsLengthsLengths\
    \ = new List<long>();\n        var currentNoteLengthsLengthsLengthsLengthsLengthsLengthsLengthsLengthsIndex\
    \ = 0L;\n        var currentNoteLengthsLengthsLengthsLengthsLengthsLengthsLengthsLengthsLength\
    \ = 0L;\n", "        List<long> result = new List<long>();\n        foreach (var\
    \ c in music_string) {\n            if (c == 'o') {\n                result.Add(4);\n\
    \            } else if (c == '|') {\n                result[result.Count - 1]\
    \ /= 2;\n            }\n        }\n        return result;", "        List<long>\
    \ result = new List<long>();\n        foreach (char c in music_string) {\n   \
    \         if (c == 'o') {\n                result.Add(4);\n            } else\
    \ if (c == '|') {\n                result[result.Count - 1] /= 2;\n          \
    \  }\n        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        foreach (var note in music_string.Split(' ')) {\n            switch (note)\
    \ {\n                case \"o\":\n                    result.Add(4);\n       \
    \             break;\n                case \"o|\":\n                    result.Add(2);\n\
    \                    break;\n                case \".|\":\n                  \
    \  result.Add(1);\n                    break;\n            }\n        }\n    \
    \    return result;", "        var result = new List<long>();\n        var notes\
    \ = music_string.Split(' ');\n        foreach (var note in notes) {\n        \
    \    if (note == \"o\") {\n                result.Add(4);\n            } else\
    \ if (note == \"o|\") {\n                result.Add(2);\n            } else if\
    \ (note == \".|\") {\n                result.Add(1);\n            }\n        }\n\
    \        return result;", "        List<long> result = new List<long>();\n   \
    \     string[] notes = music_string.Split(' ');\n        foreach (string note\
    \ in notes) {\n            if (note == \"o\") {\n                result.Add(4);\n\
    \            } else if (note == \"o|\") {\n                result.Add(2);\n  \
    \          } else if (note == \".|\") {\n                result.Add(1);\n    \
    \        }\n        }\n        return result;", "        var result = new List<long>();\n\
    \        var notes = music_string.Split(' ');\n        foreach (var note in notes)\
    \ {\n            switch (note) {\n                case \"o\":\n              \
    \      result.Add(4);\n                    break;\n                case \"o|\"\
    :\n                    result.Add(2);\n                    break;\n          \
    \      case \".|\":\n                    result.Add(1);\n                    break;\n\
    \            }\n        }\n        return result;", "        var result = new\
    \ List<long>();\n        var current = 0L;\n        foreach (var c in music_string)\
    \ {\n            if (c == 'o') {\n                result.Add(current);\n     \
    \           current = 4L;\n            } else if (c == '|') {\n              \
    \  current /= 2L;\n            } else if (c == '.') {\n                result.Add(current);\n\
    \                current = 1L;\n            }\n        }\n        result.Add(current);\n\
    \        return result;", "        List<long> result = new List<long>();\n   \
    \     foreach (var c in music_string) {\n            if (c == 'o') {\n       \
    \         result.Add(4);\n            } else if (c == '|') {\n               \
    \ result[result.Count - 1] /= 2;\n            }\n        }\n        return result;",
  "        var notes = new List<long>();\n        var note = 0L;\n        foreach\
    \ (var c in music_string) {\n            if (c == 'o') {\n                note\
    \ += 4;\n            } else if (c == '|') {\n                notes.Add(note);\n\
    \                note = 0;\n            } else if (c == '.') {\n             \
    \   note += 1;\n            }\n        }\n        notes.Add(note);\n        return\
    \ notes;", "        List<long> result = new List<long>();\n        // Your code\
    \ goes here\n        return result;", "        List<long> result = new List<long>();\n\
    \        // TODO: Implement this function\n        return result;", "        var\
    \ result = new List<long>();\n        var notes = music_string.Split(' ');\n \
    \       foreach (var note in notes) {\n            if (note == \"o\") {\n    \
    \            result.Add(4);\n            } else if (note == \"o|\") {\n      \
    \          result.Add(2);\n            } else if (note == \".|\") {\n        \
    \        result.Add(1);\n            }\n        }\n        return result;", '        return
    new List<long>();', "        List<long> result = new List<long>();\n        foreach\
    \ (var c in music_string) {\n            if (c == 'o') {\n                result.Add(4);\n\
    \            } else if (c == '|') {\n                result[result.Count - 1]\
    \ /= 2;\n            }\n        }\n        return result;", "        List<long>\
    \ ret = new List<long>();\n        int i = 0;\n        while (i < music_string.Length)\
    \ {\n            if (music_string[i] == 'o') {\n                if (i + 1 < music_string.Length\
    \ && music_string[i + 1] == '|') {\n                    ret.Add(2);\n        \
    \            i += 2;\n                } else {\n                    ret.Add(4);\n\
    \                    i += 1;\n                }\n            } else {\n      \
    \          ret.Add(1);\n                i += 2;\n            }\n        }\n  \
    \      return ret;", "        List<long> result = new List<long>();\n        foreach\
    \ (var note in music_string.Split(' ')) {\n            if (note == \"o\") {\n\
    \                result.Add(4);\n            } else if (note == \"o|\") {\n  \
    \              result.Add(2);\n            } else if (note == \".|\") {\n    \
    \            result.Add(1);\n            }\n        }\n        return result;",
  "        List<long> result = new List<long>();\n        long beats = 0;\n      \
    \  for (int i = 0; i < music_string.Length; i++) {\n            if (music_string[i]\
    \ == 'o') {\n                beats = 4L;\n            }\n            else if (music_string[i]\
    \ == '|') {\n                beats = 2L;\n            }\n            else if (music_string[i]\
    \ == '.') {\n                beats = 1L;\n            }\n            else {\n\
    \                beats = 0L;\n            }\n            result.Add(beats);\n\
    \        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        int i = 0;\n        while (i < music_string.Length) {\n            if\
    \ (music_string[i] == 'o') {\n                if (i + 1 < music_string.Length\
    \ && music_string[i + 1] == '|') {\n                    result.Add(2);\n     \
    \               i += 2;\n                } else {\n                    result.Add(4);\n\
    \                    i += 1;\n                }\n            } else {\n      \
    \          result.Add(1);\n                i += 2;\n            }\n        }\n\
    \        return result;", "        List<long> result = new List<long>();\n   \
    \     foreach (var c in music_string) {\n            if (c == 'o') {\n       \
    \         result.Add(4);\n            } else if (c == '|') {\n               \
    \ result[result.Count - 1] /= 2;\n            }\n        }\n        return result;",
  "        List<long> result = new List<long>();\n        string[] notes = music_string.Split('\
    \ ');\n        foreach (string note in notes) {\n            if (note == \"o\"\
    ) {\n                result.Add(4);\n            } else if (note == \"o|\") {\n\
    \                result.Add(2);\n            } else if (note == \".|\") {\n  \
    \              result.Add(1);\n            }\n        }\n        return result;",
  "        List<long> res = new List<long>();\n        foreach (var c in music_string)\
    \ {\n            if (c == 'o') {\n                res.Add(4);\n            } else\
    \ if (c == '|') {\n                res[res.Count - 1] /= 2;\n            }\n \
    \       }\n        return res;", "        var result = new List<long>();\n   \
    \     var notes = music_string.Split(new char[] { ' ' }, StringSplitOptions.RemoveEmptyEntries);\n\
    \        foreach (var note in notes) {\n            if (note == \"o\") {\n   \
    \             result.Add(4);\n            } else if (note == \"o|\") {\n     \
    \           result.Add(2);\n            } else if (note == \".|\") {\n       \
    \         result.Add(1);\n            }\n        }\n        return result;", " \
    \       var list = new List<long>();\n        var music = music_string.Split('\
    \ ');\n        foreach (var note in music) {\n            if (note == \"o\") {\n\
    \                list.Add(4);\n            } else if (note == \"o|\") {\n    \
    \            list.Add(2);\n            } else if (note == \".|\") {\n        \
    \        list.Add(1);\n            }\n        }\n        return list;", "    \
    \    var result = new List<long>();\n        var notes = music_string.Split('\
    \ ');\n        foreach (var note in notes) {\n            if (note == \"o\") {\n\
    \                result.Add(4);\n            } else if (note == \"o|\") {\n  \
    \              result.Add(2);\n            } else if (note == \".|\") {\n    \
    \            result.Add(1);\n            }\n        }\n        return result;",
  "        List<long> result = new List<long>();\n        long current_note = 0;\n\
    \        for (int i = 0; i < music_string.Length; i++) {\n            if (music_string[i]\
    \ == 'o') {\n                if (i + 1 < music_string.Length && music_string[i\
    \ + 1] == '|') {\n                    current_note = 2;\n                    i++;\n\
    \                } else {\n                    current_note = 4;\n           \
    \     }\n            } else if (music_string[i] == '.') {\n                current_note\
    \ = 1;\n            } else if (music_string[i] == '|') {\n                result.Add(current_note);\n\
    \                current_note = 0;\n            }\n        }\n        if (current_note\
    \ != 0) {\n            result.Add(current_note);\n        }\n        return result;",
  "        List<long> result = new List<long>();\n        string[] notes = music_string.Split('\
    \ ');\n        foreach (string note in notes) {\n            if (note == \"o\"\
    ) {\n                result.Add(4);\n            } else if (note == \"o|\") {\n\
    \                result.Add(2);\n            } else if (note == \".|\") {\n  \
    \              result.Add(1);\n            }\n        }\n        return result;",
  "        List<long> result = new List<long>();\n        foreach (char c in music_string)\
    \ {\n            if (c == 'o') {\n                result.Add(4);\n           \
    \ } else if (c == '|') {\n                result[result.Count - 1] /= 2;\n   \
    \         }\n        }\n        return result;", "        var result = new List<long>();\n\
    \        var note = ' ';\n        var length = 0;\n        foreach (var c in music_string)\
    \ {\n            if (c == ' ') {\n                result.Add(length);\n      \
    \          length = 0;\n            } else if (c == 'o') {\n                if\
    \ (note == 'o') {\n                    length += 4;\n                } else {\n\
    \                    note = 'o';\n                    length = 4;\n          \
    \      }\n            } else if (c == '|') {\n                if (note == 'o')\
    \ {\n                    length += 2;\n                } else {\n            \
    \        note = 'o';\n                    length = 2;\n                }\n   \
    \         } else if (c == '.') {\n                if (note == 'o') {\n       \
    \             length += 1;\n                } else {\n                    note\
    \ = 'o';\n                    length = 1;\n                }\n            }\n\
    \        }\n        result.Add(length);\n        return result;", "        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < music_string.Length;\
    \ i++) {\n            if (music_string[i] == 'o') {\n                if (i + 1\
    \ < music_string.Length && music_string[i + 1] == '|') {\n                   \
    \ result.Add(2);\n                    i++;\n                } else {\n       \
    \             result.Add(4);\n                }\n            } else if (music_string[i]\
    \ == '.') {\n                result.Add(1);\n                i++;\n          \
    \  }\n        }\n        return result;", "        var result = new List<long>();\n\
    \        var note = \"\";\n        for (int i = 0; i < music_string.Length; i++)\
    \ {\n            if (music_string[i] == ' ') {\n                if (note == \"\
    o\") {\n                    result.Add(4L);\n                }\n             \
    \   else if (note == \"o|\") {\n                    result.Add(2L);\n        \
    \        }\n                else if (note == \".|\") {\n                    result.Add(1L);\n\
    \                }\n                note = \"\";\n            }\n            else\
    \ {\n                note += music_string[i];\n            }\n        }\n    \
    \    if (note == \"o\") {\n            result.Add(4L);\n        }\n        else\
    \ if (note == \"o|\") {\n            result.Add(2L);\n        }\n        else\
    \ if (note == \".|\") {\n            result.Add(1L);\n        }\n        return\
    \ result;", "        var result = new List<long>();\n        var notes = music_string.Split('\
    \ ');\n        foreach (var note in notes) {\n            switch (note) {\n  \
    \              case \"o\":\n                    result.Add(4);\n             \
    \       break;\n                case \"o|\":\n                    result.Add(2);\n\
    \                    break;\n                case \".|\":\n                  \
    \  result.Add(1);\n                    break;\n            }\n        }\n    \
    \    return result;", "        var result = new List<long>();\n        var notes\
    \ = music_string.Split(' ');\n        foreach (var note in notes) {\n        \
    \    if (note == \"o\") {\n                result.Add(4);\n            } else\
    \ if (note == \"o|\") {\n                result.Add(2);\n            } else if\
    \ (note == \".|\") {\n                result.Add(1);\n            }\n        }\n\
    \        return result;", "        List<long> result = new List<long>();\n   \
    \     long current_note = 0;\n        for (int i = 0; i < music_string.Length;\
    \ i++) {\n            if (music_string[i] == 'o') {\n                if (i + 1\
    \ < music_string.Length && music_string[i + 1] == '|') {\n                   \
    \ result.Add(2);\n                    i++;\n                } else {\n       \
    \             result.Add(4);\n                }\n            } else if (music_string[i]\
    \ == '.') {\n                result.Add(1);\n                i++;\n          \
    \  }\n        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        // Your code goes here\n        return result;", "        List<long>\
    \ result = new List<long>();\n        int i = 0;\n        while (i < music_string.Length)\
    \ {\n            if (music_string[i] == 'o') {\n                if (i + 1 < music_string.Length\
    \ && music_string[i + 1] == '|') {\n                    result.Add(2);\n     \
    \               i += 2;\n                } else {\n                    result.Add(4);\n\
    \                    i += 1;\n                }\n            } else {\n      \
    \          result.Add(1);\n                i += 2;\n            }\n        }\n\
    \        return result;", "        List<long> result = new List<long>();\n   \
    \     int i = 0;\n        while (i < music_string.Length) {\n            if (music_string[i]\
    \ == 'o') {\n                if (i + 1 < music_string.Length && music_string[i\
    \ + 1] == '|') {\n                    result.Add(2);\n                    i +=\
    \ 2;\n                } else {\n                    result.Add(4);\n         \
    \           i += 1;\n                }\n            } else {\n               \
    \ result.Add(1);\n                i += 2;\n            }\n        }\n        return\
    \ result;", "        var result = new List<long>();\n        foreach (var c in\
    \ music_string) {\n            switch (c) {\n                case 'o':\n     \
    \               result.Add(4);\n                    break;\n                case\
    \ '|':\n                    result[result.Count - 1] /= 2;\n                 \
    \   break;\n                case '.':\n                    result.Add(1);\n  \
    \                  break;\n            }\n        }\n        return result;",
  "        var result = new List<long>();\n        var notes = music_string.Split('\
    \ ');\n        foreach (var note in notes) {\n            switch (note) {\n  \
    \              case \"o\":\n                    result.Add(4);\n             \
    \       break;\n                case \"o|\":\n                    result.Add(2);\n\
    \                    break;\n                case \".|\":\n                  \
    \  result.Add(1);\n                    break;\n            }\n        }\n    \
    \    return result;", "        var result = new List<long>();\n        var notes\
    \ = music_string.Split(' ');\n        foreach (var note in notes) {\n        \
    \    switch (note) {\n                case \"o\":\n                    result.Add(4);\n\
    \                    break;\n                case \"o|\":\n                  \
    \  result.Add(2);\n                    break;\n                case \".|\":\n\
    \                    result.Add(1);\n                    break;\n            }\n\
    \        }\n        return result;", "        var result = new List<long>();\n\
    \        var beats = new Dictionary<char, long>();\n        beats['o'] = 4;\n\
    \        beats['|'] = 2;\n        beats['.'] = 1;\n        var current_beat =\
    \ 0L;\n        foreach (var c in music_string) {\n            if (beats.ContainsKey(c))\
    \ {\n                current_beat += beats[c];\n            } else {\n       \
    \         result.Add(current_beat);\n                current_beat = 0;\n     \
    \       }\n        }\n        result.Add(current_beat);\n        return result;",
  "        var result = new List<long>();\n        var notes = music_string.Split('\
    \ ');\n        foreach (var note in notes) {\n            if (note == \"o\") {\n\
    \                result.Add(4);\n            } else if (note == \"o|\") {\n  \
    \              result.Add(2);\n            } else if (note == \".|\") {\n    \
    \            result.Add(1);\n            }\n        }\n        return result;",
  "        var result = new List<long>();\n        var notes = music_string.Split('\
    \ ');\n        foreach (var note in notes) {\n            if (note == \"o\") {\n\
    \                result.Add(4);\n            } else if (note == \"o|\") {\n  \
    \              result.Add(2);\n            } else if (note == \".|\") {\n    \
    \            result.Add(1);\n            }\n        }\n        return result;",
  "        var result = new List<long>();\n        var notes = music_string.Split('\
    \ ');\n        foreach (var note in notes) {\n            if (note == \"o\") {\n\
    \                result.Add(4);\n            } else if (note == \"o|\") {\n  \
    \              result.Add(2);\n            } else if (note == \".|\") {\n    \
    \            result.Add(1);\n            }\n        }\n        return result;",
  "        List<long> result = new List<long>();\n        // Your code goes here.\n\
    \        return result;", "        List<long> result = new List<long>();\n   \
    \     string[] notes = music_string.Split(' ');\n        foreach (string note\
    \ in notes) {\n            if (note == \"o\") {\n                result.Add(4);\n\
    \            } else if (note == \"o|\") {\n                result.Add(2);\n  \
    \          } else if (note == \".|\") {\n                result.Add(1);\n    \
    \        }\n        }\n        return result;", "        List<long> result = new\
    \ List<long>();\n        foreach (char c in music_string) {\n            if (c\
    \ == 'o') {\n                result.Add(4);\n            } else if (c == '|')\
    \ {\n                result[result.Count - 1] /= 2;\n            }\n        }\n\
    \        return result;", "        List<long> result = new List<long>();\n   \
    \     long counter = 0;\n        for (long i = 0; i < music_string.Length; i++)\
    \ {\n            if (music_string[(int)i] == 'o') {\n                result.Add(4L);\n\
    \                counter += 4L;\n            }\n            else if (music_string[(int)i]\
    \ == '|') {\n                result.Add(counter);\n                counter = 0L;\n\
    \            }\n            else {\n                counter += 1L;\n         \
    \   }\n        }\n        return result;", "        var result = new List<long>();\n\
    \        var notes = music_string.Split(' ');\n        foreach (var note in notes)\
    \ {\n            switch (note) {\n                case \"o\":\n              \
    \      result.Add(4);\n                    break;\n                case \"o|\"\
    :\n                    result.Add(2);\n                    break;\n          \
    \      case \".|\":\n                    result.Add(1);\n                    break;\n\
    \            }\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        for (int i = 0; i < music_string.Length; i++) {\n\
    \            if (music_string[i] == 'o') {\n                if (i + 1 < music_string.Length\
    \ && music_string[i + 1] == '|') {\n                    result.Add(2);\n     \
    \               i++;\n                } else {\n                    result.Add(4);\n\
    \                }\n            } else if (music_string[i] == '.') {\n       \
    \         result.Add(1);\n                i++;\n            }\n        }\n   \
    \     return result;", "        List<long> result = new List<long>();\n      \
    \  for (int i = 0; i < music_string.Length; i++) {\n            if (music_string[i]\
    \ == 'o') {\n                result.Add(4);\n            }\n            else if\
    \ (music_string[i] == '.') {\n                result.Add(1);\n            }\n\
    \            else if (music_string[i] == '|') {\n                result.Add(2);\n\
    \            }\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        long current_note = 0;\n        for (int i = 0;\
    \ i < music_string.Length; i++) {\n            if (music_string[i] == 'o') {\n\
    \                if (i + 1 < music_string.Length && music_string[i + 1] == '|')\
    \ {\n                    current_note = 2;\n                    i++;\n       \
    \         } else {\n                    current_note = 4;\n                }\n\
    \            } else if (music_string[i] == '.') {\n                current_note\
    \ = 1;\n            } else if (music_string[i] == '|') {\n                result.Add(current_note);\n\
    \                current_note = 0;\n            }\n        }\n        if (current_note\
    \ != 0) {\n            result.Add(current_note);\n        }\n        return result;",
  "        List<long> result = new List<long>();\n        for (int i = 0; i < music_string.Length;\
    \ i++) {\n            if (music_string[i] == 'o') {\n                if (i + 1\
    \ < music_string.Length && music_string[i + 1] == '|') {\n                   \
    \ result.Add(2);\n                    i++;\n                } else {\n       \
    \             result.Add(4);\n                }\n            } else if (music_string[i]\
    \ == '.') {\n                result.Add(1);\n                i++;\n          \
    \  }\n        }\n        return result;", "        List<long> res = new List<long>();\n\
    \        for (int i = 0; i < music_string.Length; i++) {\n            if (music_string[i]\
    \ == 'o') {\n                if (i + 1 < music_string.Length && music_string[i\
    \ + 1] == '|') {\n                    res.Add(2);\n                    i++;\n\
    \                } else {\n                    res.Add(4);\n                }\n\
    \            } else if (music_string[i] == '.') {\n                res.Add(1);\n\
    \                i++;\n            }\n        }\n        return res;", "     \
    \   List<long> res = new List<long>();\n        foreach (char c in music_string)\
    \ {\n            if (c == 'o') {\n                res.Add(4);\n            } else\
    \ if (c == '|') {\n                res[res.Count - 1] /= 2;\n            }\n \
    \       }\n        return res;", "        List<long> res = new List<long>();\n\
    \        foreach (var c in music_string) {\n            if (c == 'o') {\n    \
    \            res.Add(4);\n            } else if (c == '|') {\n               \
    \ res[res.Count - 1] /= 2;\n            }\n        }\n        return res;", " \
    \       List<long> result = new List<long>();\n        foreach (var c in music_string)\
    \ {\n            if (c == 'o') {\n                result.Add(4);\n           \
    \ } else if (c == '|') {\n                result[result.Count - 1] /= 2;\n   \
    \         }\n        }\n        return result;", "        List<long> result =\
    \ new List<long>();\n        long beats = 0;\n        for (int i = 0; i < music_string.Length;\
    \ i++) {\n            if (music_string[i] == 'o') {\n                beats = 4L;\n\
    \            }\n            else if (music_string[i] == '|') {\n             \
    \   result.Add(beats);\n                beats = 0L;\n            }\n         \
    \   else if (music_string[i] == '.') {\n                beats = 1L;\n        \
    \    }\n        }\n        return result;", "        var result = new List<long>();\n\
    \        var current_note = \"\";\n        foreach (var c in music_string) {\n\
    \            if (c == ' ') {\n                result.Add(GetNoteLength(current_note));\n\
    \                current_note = \"\";\n            } else {\n                current_note\
    \ += c;\n            }\n        }\n        result.Add(GetNoteLength(current_note));\n\
    \        return result;", "        List<long> result = new List<long>();\n   \
    \     long current_note = 0;\n        for (long i = 0; i < music_string.Length;\
    \ i++) {\n            if (music_string[(int)i] == 'o') {\n                current_note\
    \ = 4L;\n            }\n            else if (music_string[(int)i] == '|') {\n\
    \                result.Add(current_note);\n                current_note = 0L;\n\
    \            }\n            else if (music_string[(int)i] == '.') {\n        \
    \        current_note = 1L;\n            }\n        }\n        return result;",
  "        // Your code goes here\n        return null;", "        var result = new\
    \ List<long>();\n        var beats = new Dictionary<char, long>();\n        beats['o']\
    \ = 4;\n        beats['|'] = 2;\n        beats['.'] = 1;\n        var current_beat\
    \ = 0L;\n        foreach (var c in music_string) {\n            if (c == ' ')\
    \ {\n                result.Add(current_beat);\n                current_beat =\
    \ 0;\n            } else {\n                current_beat += beats[c];\n      \
    \      }\n        }\n        result.Add(current_beat);\n        return result;",
  "        List<long> result = new List<long>();\n        // TODO: implement this\
    \ function\n        return result;", "        var result = new List<long>();\n\
    \        var note = 0L;\n        foreach (var c in music_string) {\n         \
    \   switch (c) {\n                case 'o':\n                    note = 4L;\n\
    \                    break;\n                case '|':\n                    result.Add(note);\n\
    \                    note = 0L;\n                    break;\n                case\
    \ '.':\n                    note /= 2L;\n                    break;\n        \
    \    }\n        }\n        return result;", "        var result = new List<long>();\n\
    \        var beats = new Dictionary<char, long>();\n        beats['o'] = 4;\n\
    \        beats['|'] = 2;\n        beats['.'] = 1;\n        var current_beat =\
    \ 0L;\n        foreach (var c in music_string) {\n            if (c == ' ') {\n\
    \                result.Add(current_beat);\n                current_beat = 0;\n\
    \            } else {\n                current_beat += beats[c];\n           \
    \ }\n        }\n        result.Add(current_beat);\n        return result;", " \
    \       List<long> result = new List<long>();\n        long[] beats = new long[]{(long)4L,\
    \ (long)2L, (long)1L};\n        string[] notes = music_string.Split(' ');\n  \
    \      foreach (string note in notes) {\n            if (note.Length == 1) {\n\
    \                result.Add(beats[0]);\n            } else {\n               \
    \ result.Add(beats[note.Length - 2]);\n            }\n        }\n        return\
    \ result;", "        List<long> result = new List<long>();\n        long beats\
    \ = 0;\n        for (int i = 0; i < music_string.Length; i++) {\n            if\
    \ (music_string[i] == 'o') {\n                if (i + 1 < music_string.Length\
    \ && music_string[i + 1] == '|') {\n                    beats = 2;\n         \
    \           i++;\n                }\n                else {\n                \
    \    beats = 4;\n                }\n            }\n            else if (music_string[i]\
    \ == '.') {\n                beats = 1;\n            }\n            else if (music_string[i]\
    \ == '|') {\n                continue;\n            }\n            result.Add(beats);\n\
    \        }\n        return result;", "        // Your code goes here\n       \
    \ List<long> list = new List<long>();\n        int count = 0;\n        for (int\
    \ i = 0; i < music_string.Length; i++) {\n            if (music_string[i] == 'o')\
    \ {\n                if (i + 1 < music_string.Length && music_string[i + 1] ==\
    \ '|') {\n                    list.Add(2);\n                    i++;\n       \
    \         } else {\n                    list.Add(4);\n                }\n    \
    \        } else if (music_string[i] == '.') {\n                list.Add(1);\n\
    \                i++;\n            }\n        }\n        return list;", "    \
    \    List<long> result = new List<long>();\n        // Your code goes here\n \
    \       return result;", "        // Your code goes here\n        return new List<long>();",
  "        List<long> result = new List<long>();\n        for (int i = 0; i < music_string.Length;\
    \ i++) {\n            if (music_string[i] == 'o') {\n                if (i + 1\
    \ < music_string.Length && music_string[i + 1] == '|') {\n                   \
    \ result.Add(2);\n                    i++;\n                } else {\n       \
    \             result.Add(4);\n                }\n            } else if (music_string[i]\
    \ == '.') {\n                result.Add(1);\n                i++;\n          \
    \  }\n        }\n        return result;", "        var result = new List<long>();\n\
    \        var current_note = 0L;\n        foreach (var c in music_string) {\n \
    \           switch (c) {\n                case 'o':\n                    result.Add(current_note);\n\
    \                    current_note = 4L;\n                    break;\n        \
    \        case '|':\n                    current_note /= 2L;\n                \
    \    break;\n                case '.':\n                    break;\n         \
    \       default:\n                    throw new Exception(\"Invalid character\"\
    );\n            }\n        }\n        result.Add(current_note);\n        return\
    \ result;", "        var result = new List<long>();\n        var note = new List<char>();\n\
    \        foreach (var c in music_string) {\n            if (c == ' ') {\n    \
    \            if (note.Count > 0) {\n                    result.Add(ParseNote(note));\n\
    \                    note.Clear();\n                }\n            } else {\n\
    \                note.Add(c);\n            }\n        }\n        if (note.Count\
    \ > 0) {\n            result.Add(ParseNote(note));\n        }\n        return\
    \ result;", "        var result = new List<long>();\n        var notes = music_string.Split('\
    \ ');\n        foreach (var note in notes) {\n            switch (note) {\n  \
    \              case \"o\":\n                    result.Add(4);\n             \
    \       break;\n                case \"o|\":\n                    result.Add(2);\n\
    \                    break;\n                case \".|\":\n                  \
    \  result.Add(1);\n                    break;\n            }\n        }\n    \
    \    return result;", "        var result = new List<long>();\n        var beats\
    \ = new List<long>();\n        var notes = music_string.Split(' ');\n        foreach\
    \ (var note in notes) {\n            if (note == \"o\") {\n                beats.Add(4);\n\
    \            } else if (note == \"o|\") {\n                beats.Add(2);\n   \
    \         } else if (note == \".|\") {\n                beats.Add(1);\n      \
    \      }\n        }\n        return beats;", "        List<long> result = new\
    \ List<long>();\n        string[] notes = music_string.Split(' ');\n        foreach\
    \ (string note in notes) {\n            if (note == \"o\") {\n               \
    \ result.Add(4);\n            } else if (note == \"o|\") {\n                result.Add(2);\n\
    \            } else if (note == \".|\") {\n                result.Add(1);\n  \
    \          }\n        }\n        return result;", "        List<long> result =\
    \ new List<long>();\n        foreach (char c in music_string) {\n            if\
    \ (c == 'o') {\n                result.Add(4);\n            } else if (c == '|')\
    \ {\n                result[result.Count - 1] /= 2;\n            }\n        }\n\
    \        return result;", "        List<long> result = new List<long>();\n   \
    \     long beats = 0;\n        for (int i = 0; i < music_string.Length; i++) {\n\
    \            if (music_string[i] == 'o') {\n                beats = 4L;\n    \
    \        }\n            else if (music_string[i] == '|') {\n                beats\
    \ = 2L;\n            }\n            else if (music_string[i] == '.') {\n     \
    \           beats = 1L;\n            }\n            result.Add(beats);\n     \
    \   }\n        return result;", "        List<long> result = new List<long>();\n\
    \        // TODO: implement this function\n        return result;", "        List<long>\
    \ result = new List<long>();\n        int i = 0;\n        while (i < music_string.Length)\
    \ {\n            if (music_string[i] == 'o') {\n                if (i + 1 < music_string.Length\
    \ && music_string[i + 1] == '|') {\n                    result.Add(2);\n     \
    \               i += 2;\n                } else {\n                    result.Add(4);\n\
    \                    i += 1;\n                }\n            } else {\n      \
    \          result.Add(1);\n                i += 2;\n            }\n        }\n\
    \        return result;", "        List<long> result = new List<long>();\n   \
    \     for (int i = 0; i < music_string.Length; i++) {\n            if (music_string[i]\
    \ == 'o') {\n                result.Add(4);\n            }\n            else if\
    \ (music_string[i] == '.') {\n                result.Add(1);\n            }\n\
    \            else if (music_string[i] == '|') {\n                result.Add(2);\n\
    \            }\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        for (int i = 0; i < music_string.Length; i++) {\n\
    \            if (music_string[i] == 'o') {\n                result.Add(4);\n \
    \           }\n            else if (music_string[i] == '.') {\n              \
    \  result.Add(1);\n            }\n            else if (music_string[i] == '|')\
    \ {\n                result.Add(2);\n            }\n        }\n        return\
    \ result;", "        List<long> result = new List<long>();\n        for (int i\
    \ = 0; i < music_string.Length; i++) {\n            if (music_string[i] == 'o')\
    \ {\n                if (i + 1 < music_string.Length && music_string[i + 1] ==\
    \ '|') {\n                    result.Add(2);\n                    i++;\n     \
    \           } else {\n                    result.Add(4);\n                }\n\
    \            } else if (music_string[i] == '.') {\n                result.Add(1);\n\
    \                i++;\n            }\n        }\n        return result;", "  \
    \      List<long> result = new List<long>();\n        // TODO: Implement your\
    \ solution here.\n        return result;", "        var result = new List<long>();\n\
    \        var beats = new List<long>();\n        var beat = 0L;\n        foreach\
    \ (var c in music_string) {\n            if (c == 'o') {\n                beat\
    \ += 4;\n            } else if (c == '|') {\n                beats.Add(beat);\n\
    \                beat = 0;\n            } else if (c == '.') {\n             \
    \   beat += 1;\n            }\n        }\n        beats.Add(beat);\n        return\
    \ beats;", "        List<long> result = new List<long>();\n        for (int i\
    \ = 0; i < music_string.Length; i++) {\n            if (music_string[i] == 'o')\
    \ {\n                if (i + 1 < music_string.Length && music_string[i + 1] ==\
    \ '|') {\n                    result.Add(2);\n                    i++;\n     \
    \           } else {\n                    result.Add(4);\n                }\n\
    \            } else if (music_string[i] == '.') {\n                result.Add(1);\n\
    \                i++;\n            }\n        }\n        return result;", "  \
    \      var result = new List<long>();\n        var beat_count = 0L;\n        var\
    \ note_count = 0L;\n        var is_note = false;\n        var is_rest = false;\n\
    \        var is_half = false;\n        var is_quarter = false;\n        var is_whole\
    \ = false;\n        var is_double_whole = false;\n        foreach (var c in music_string)\
    \ {\n            if (c == ' ') {\n                if (is_note) {\n           \
    \         result.Add(note_count);\n                    beat_count += note_count;\n\
    \                    note_count = 0L;\n                    is_note = false;\n\
    \                    is_rest = false;\n                    is_half = false;\n\
    \                    is_quarter = false;\n                    is_whole = false;\n\
    \                    is_double_whole = false;\n                }\n           \
    \ } else if (c == 'o') {\n                if (is_note) {\n                   \
    \ result.Add(note_count);\n                    beat_count += note_count;\n   \
    \                 note_count = 0L;\n                    is_note = false;\n   \
    \                 is_rest = false;\n                    is_half = false;\n   \
    \                 is_quarter = false;\n                    is_whole = false;\n\
    \                    is_double_whole = false;\n                }\n           \
    \     is_note = true;\n                is_whole = true;\n            } else if\
    \ (c == '.') {\n                if (is_note) {\n                    result.Add(note_count);\n\
    \                    beat_count += note_count;\n                    note_count\
    \ = 0L;\n                    is_note = false;\n                    is_rest = false;\n\
    \                    is_half = false;\n                    is_quarter = false;\n\
    \                    is_whole = false;\n                    is_double_whole =\
    \ false;\n                }\n                is_note = true;\n               \
    \ is_quarter = true;\n            } else if (c == '|') {\n                if (is_note)\
    \ {\n                    result.Add(note_count);\n                    beat_count\
    \ += note_count;\n                    note_count = 0L;\n                    is_note\
    \ = false;\n                    is_rest =", "        List<long> result = new List<long>();\n\
    \        foreach (char c in music_string) {\n            if (c == 'o') {\n   \
    \             result.Add(4);\n            } else if (c == '|') {\n           \
    \     result[result.Count - 1] /= 2;\n            }\n        }\n        return\
    \ result;", "        var result = new List<long>();\n        var note = new List<char>();\n\
    \        foreach (var c in music_string) {\n            if (c == ' ') {\n    \
    \            if (note.Count == 2) {\n                    result.Add(2);\n    \
    \            } else if (note.Count == 3) {\n                    result.Add(1);\n\
    \                } else if (note.Count == 4) {\n                    result.Add(4);\n\
    \                }\n                note.Clear();\n            } else {\n    \
    \            note.Add(c);\n            }\n        }\n        if (note.Count ==\
    \ 2) {\n            result.Add(2);\n        } else if (note.Count == 3) {\n  \
    \          result.Add(1);\n        } else if (note.Count == 4) {\n           \
    \ result.Add(4);\n        }\n        return result;", "        List<long> result\
    \ = new List<long>();\n        foreach (char c in music_string) {\n          \
    \  if (c == 'o') {\n                result.Add(4);\n            } else if (c ==\
    \ '|') {\n                result[result.Count - 1] /= 2;\n            }\n    \
    \    }\n        return result;", "        List<long> result = new List<long>();\n\
    \        int i = 0;\n        while (i < music_string.Length) {\n            if\
    \ (music_string[i] == 'o') {\n                if (i + 1 < music_string.Length\
    \ && music_string[i + 1] == '|') {\n                    result.Add(2);\n     \
    \               i += 2;\n                } else {\n                    result.Add(4);\n\
    \                    i += 1;\n                }\n            } else {\n      \
    \          result.Add(1);\n                i += 2;\n            }\n        }\n\
    \        return result;", "        var beats = new List<long>();\n        var\
    \ notes = music_string.Split(' ');\n        foreach (var note in notes) {\n  \
    \          if (note == \"o\") {\n                beats.Add(4);\n            }\
    \ else if (note == \"o|\") {\n                beats.Add(2);\n            } else\
    \ if (note == \".|\") {\n                beats.Add(1);\n            }\n      \
    \  }\n        return beats;", "        List<long> result = new List<long>();\n\
    \        // Your code goes here\n        return result;", "        var beats =\
    \ new List<long>();\n        var notes = music_string.Split(' ');\n        foreach\
    \ (var note in notes) {\n            if (note == \"o\") {\n                beats.Add(4);\n\
    \            } else if (note == \"o|\") {\n                beats.Add(2);\n   \
    \         } else if (note == \".|\") {\n                beats.Add(1);\n      \
    \      }\n        }\n        return beats;", "        List<long> result = new\
    \ List<long>();\n        int i = 0;\n        while (i < music_string.Length) {\n\
    \            if (music_string[i] == 'o') {\n                if (i + 1 < music_string.Length\
    \ && music_string[i + 1] == '|') {\n                    result.Add(2);\n     \
    \               i += 2;\n                } else {\n                    result.Add(4);\n\
    \                    i += 1;\n                }\n            } else {\n      \
    \          result.Add(1);\n                i += 2;\n            }\n        }\n\
    \        return result;", "        List<long> result = new List<long>();\n   \
    \     foreach (char c in music_string) {\n            if (c == 'o') {\n      \
    \          result.Add(4);\n            } else if (c == '|') {\n              \
    \  result[result.Count - 1] /= 2;\n            }\n        }\n        return result;",
  "        List<long> result = new List<long>();\n        for (int i = 0; i < music_string.Length;\
    \ i++) {\n            if (music_string[i] == 'o') {\n                if (i + 1\
    \ < music_string.Length && music_string[i + 1] == '|') {\n                   \
    \ result.Add(2);\n                    i++;\n                } else {\n       \
    \             result.Add(4);\n                }\n            } else if (music_string[i]\
    \ == '.') {\n                result.Add(1);\n                i++;\n          \
    \  }\n        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        for (int i = 0; i < music_string.Length; i++) {\n            if (music_string[i]\
    \ == 'o') {\n                if (i + 1 < music_string.Length && music_string[i\
    \ + 1] == '|') {\n                    result.Add(2);\n                    i++;\n\
    \                } else {\n                    result.Add(4);\n              \
    \  }\n            } else if (music_string[i] == '.') {\n                result.Add(1);\n\
    \                i++;\n            }\n        }\n        return result;", "  \
    \      List<long> result = new List<long>();\n        string[] notes = music_string.Split('\
    \ ');\n        foreach (string note in notes) {\n            if (note == \"o\"\
    ) {\n                result.Add(4);\n            } else if (note == \"o|\") {\n\
    \                result.Add(2);\n            } else if (note == \".|\") {\n  \
    \              result.Add(1);\n            }\n        }\n        return result;",
  "        List<long> res = new List<long>();\n        for (int i = 0; i < music_string.Length;\
    \ i++) {\n            if (music_string[i] == 'o') {\n                if (i + 1\
    \ < music_string.Length && music_string[i + 1] == '|') {\n                   \
    \ res.Add(2);\n                    i++;\n                } else {\n          \
    \          res.Add(4);\n                }\n            } else if (music_string[i]\
    \ == '.') {\n                res.Add(1);\n                i++;\n            }\n\
    \        }\n        return res;", "        List<long> result = new List<long>();\n\
    \        for (int i = 0; i < music_string.Length; i++) {\n            if (music_string[i]\
    \ == 'o') {\n                if (i + 1 < music_string.Length && music_string[i\
    \ + 1] == '|') {\n                    result.Add(2);\n                    i++;\n\
    \                } else {\n                    result.Add(4);\n              \
    \  }\n            } else if (music_string[i] == '.') {\n                result.Add(1);\n\
    \                i++;\n            }\n        }\n        return result;", "  \
    \      List<long> result = new List<long>();\n        foreach (var c in music_string)\
    \ {\n            if (c == 'o') {\n                result.Add(4);\n           \
    \ } else if (c == '|') {\n                result[result.Count - 1] /= 2;\n   \
    \         }\n        }\n        return result;", "        List<long> result =\
    \ new List<long>();\n        // TODO: Implement this function\n        return\
    \ result;", "        List<long> result = new List<long>();\n        foreach (var\
    \ note in music_string.Split(' ')) {\n            switch (note) {\n          \
    \      case \"o\":\n                    result.Add(4);\n                    break;\n\
    \                case \"o|\":\n                    result.Add(2);\n          \
    \          break;\n                case \".|\":\n                    result.Add(1);\n\
    \                    break;\n            }\n        }\n        return result;",
  "        List<long> result = new List<long>();\n        foreach (char c in music_string)\
    \ {\n            if (c == 'o') {\n                result.Add(4);\n           \
    \ } else if (c == '|') {\n                result[result.Count - 1] /= 2;\n   \
    \         }\n        }\n        return result;", "        List<long> result =\
    \ new List<long>();\n        foreach (char c in music_string) {\n            if\
    \ (c == 'o') {\n                result.Add(4);\n            } else if (c == '|')\
    \ {\n                result[result.Count - 1] /= 2;\n            }\n        }\n\
    \        return result;", "        var result = new List<long>();\n        var\
    \ notes = music_string.Split(' ');\n        foreach (var note in notes) {\n  \
    \          if (note == \"o\") {\n                result.Add(4);\n            }\
    \ else if (note == \"o|\") {\n                result.Add(2);\n            } else\
    \ if (note == \".|\") {\n                result.Add(1);\n            }\n     \
    \   }\n        return result;", "        var result = new List<long>();\n    \
    \    var note = new List<char>();\n        foreach (var c in music_string) {\n\
    \            if (c == ' ') {\n                if (note.Count > 0) {\n        \
    \            result.Add(GetNoteLength(note));\n                    note.Clear();\n\
    \                }\n            } else {\n                note.Add(c);\n     \
    \       }\n        }\n        if (note.Count > 0) {\n            result.Add(GetNoteLength(note));\n\
    \        }\n        return result;", "        List<long> result = new List<long>();\n\
    \        return result;", "        List<long> result = new List<long>();\n   \
    \     int i = 0;\n        while (i < music_string.Length) {\n            if (music_string[i]\
    \ == 'o') {\n                if (i + 1 < music_string.Length && music_string[i\
    \ + 1] == '|') {\n                    result.Add(2);\n                    i +=\
    \ 2;\n                } else {\n                    result.Add(4);\n         \
    \           i += 1;\n                }\n            } else {\n               \
    \ result.Add(1);\n                i += 2;\n            }\n        }\n        return\
    \ result;", "        List<long> beats = new List<long>();\n        for (int i\
    \ = 0; i < music_string.Length; i++) {\n            if (music_string[i] == 'o')\
    \ {\n                beats.Add(4);\n            }\n            else if (music_string[i]\
    \ == '|') {\n                beats.Add(2);\n            }\n            else if\
    \ (music_string[i] == '.') {\n                beats.Add(1);\n            }\n \
    \       }\n        return beats;", "        List<long> result = new List<long>();\n\
    \        int i = 0;\n        while (i < music_string.Length) {\n            if\
    \ (music_string[i] == 'o') {\n                if (i + 1 < music_string.Length\
    \ && music_string[i + 1] == '|') {\n                    result.Add(2);\n     \
    \               i += 2;\n                } else {\n                    result.Add(4);\n\
    \                    i += 1;\n                }\n            } else {\n      \
    \          result.Add(1);\n                i += 2;\n            }\n        }\n\
    \        return result;", "        List<long> result = new List<long>();\n   \
    \     string[] notes = music_string.Split(' ');\n        foreach (string note\
    \ in notes) {\n            if (note == \"o\") {\n                result.Add(4);\n\
    \            } else if (note == \"o|\") {\n                result.Add(2);\n  \
    \          } else if (note == \".|\") {\n                result.Add(1);\n    \
    \        }\n        }\n        return result;", "        List<long> result = new\
    \ List<long>();\n        foreach (var c in music_string) {\n            if (c\
    \ == 'o') {\n                result.Add(4);\n            } else if (c == '|')\
    \ {\n                result[result.Count - 1] /= 2;\n            }\n        }\n\
    \        return result;", "        var result = new List<long>();\n        var\
    \ notes = music_string.Split(' ');\n        foreach (var note in notes) {\n  \
    \          if (note == \"o\") {\n                result.Add(4);\n            }\
    \ else if (note == \"o|\") {\n                result.Add(2);\n            } else\
    \ if (note == \".|\") {\n                result.Add(1);\n            }\n     \
    \   }\n        return result;", "        List<long> result = new List<long>();\n\
    \        long counter = 0;\n        for (int i = 0; i < music_string.Length; i++)\
    \ {\n            if (music_string[i] == 'o') {\n                if (i + 1 < music_string.Length\
    \ && music_string[i + 1] == '|') {\n                    result.Add(2);\n     \
    \               i++;\n                }\n                else {\n            \
    \        result.Add(4);\n                }\n            }\n            else if\
    \ (music_string[i] == '.') {\n                result.Add(1);\n               \
    \ i++;\n            }\n        }\n        return result;", "        List<long>\
    \ res = new List<long>();\n        for (int i = 0; i < music_string.Length; i++)\
    \ {\n            if (music_string[i] == 'o') {\n                res.Add(4);\n\
    \            }\n            else if (music_string[i] == '.') {\n             \
    \   res.Add(1);\n            }\n            else if (music_string[i] == '|') {\n\
    \                res.Add(2);\n            }\n        }\n        return res;",
  "        var result = new List<long>();\n        var beats = new List<string>();\n\
    \        var beat = new StringBuilder();\n        foreach (var ch in music_string)\
    \ {\n            if (ch == ' ') {\n                beats.Add(beat.ToString());\n\
    \                beat.Clear();\n            } else {\n                beat.Append(ch);\n\
    \            }\n        }\n        beats.Add(beat.ToString());\n        foreach\
    \ (var b in beats) {\n            switch (b) {\n                case \"o\":\n\
    \                    result.Add(4);\n                    break;\n            \
    \    case \"o|\":\n                    result.Add(2);\n                    break;\n\
    \                case \".|\":\n                    result.Add(1);\n          \
    \          break;\n                default:\n                    throw new Exception(\"\
    Invalid beat: \" + b);\n            }\n        }\n        return result;", " \
    \       var result = new List<long>();\n        var beats = new Dictionary<char,\
    \ long>() {\n            {'o', 4},\n            {'|', 2},\n            {'.', 1}\n\
    \        };\n        var current = 0L;\n        foreach (var c in music_string)\
    \ {\n            if (c == ' ') {\n                result.Add(current);\n     \
    \           current = 0;\n            } else {\n                current += beats[c];\n\
    \            }\n        }\n        result.Add(current);\n        return result;",
  "        List<long> result = new List<long>();\n        foreach (var c in music_string)\
    \ {\n            if (c == 'o') {\n                result.Add(4);\n           \
    \ } else if (c == '|') {\n                result[result.Count - 1] /= 2;\n   \
    \         }\n        }\n        return result;", "        List<long> result =\
    \ new List<long>();\n        string[] notes = music_string.Split(' ');\n     \
    \   foreach (string note in notes) {\n            if (note == \"o\") {\n     \
    \           result.Add(4);\n            } else if (note == \"o|\") {\n       \
    \         result.Add(2);\n            } else if (note == \".|\") {\n         \
    \       result.Add(1);\n            }\n        }\n        return result;", " \
    \       List<long> result = new List<long>();\n        // Your code goes here\n\
    \        return result;", "        var beats = new List<long>();\n        foreach\
    \ (var c in music_string) {\n            if (c == 'o') {\n                beats.Add(4);\n\
    \            } else if (c == '|') {\n                beats.Add(2);\n         \
    \   } else if (c == '.') {\n                beats.Add(1);\n            }\n   \
    \     }\n        return beats;", "        var result = new List<long>();\n   \
    \     var current_note = 0L;\n        foreach (var c in music_string) {\n    \
    \        if (c == 'o') {\n                current_note += 4;\n            } else\
    \ if (c == '|') {\n                result.Add(current_note);\n               \
    \ current_note = 0;\n            } else if (c == '.') {\n                current_note\
    \ += 1;\n            }\n        }\n        result.Add(current_note);\n       \
    \ return result;", "        List<long> result = new List<long>();\n        string[]\
    \ notes = music_string.Split(' ');\n        foreach (string note in notes) {\n\
    \            if (note == \"o\") {\n                result.Add(4);\n          \
    \  } else if (note == \"o|\") {\n                result.Add(2);\n            }\
    \ else if (note == \".|\") {\n                result.Add(1);\n            }\n\
    \        }\n        return result;", "        var beats = new List<long>();\n\
    \        foreach (var c in music_string) {\n            if (c == 'o') {\n    \
    \            beats.Add(4);\n            } else if (c == '|') {\n             \
    \   beats.Add(2);\n            } else if (c == '.') {\n                beats.Add(1);\n\
    \            }\n        }\n        return beats;", "        List<long> result\
    \ = new List<long>();\n        for (int i = 0; i < music_string.Length; i++) {\n\
    \            if (music_string[i] == 'o') {\n                if (i + 1 < music_string.Length\
    \ && music_string[i + 1] == '|') {\n                    result.Add(2);\n     \
    \               i++;\n                } else {\n                    result.Add(4);\n\
    \                }\n            } else if (music_string[i] == '.') {\n       \
    \         result.Add(1);\n                i++;\n            }\n        }\n   \
    \     return result;", "        var result = new List<long>();\n        var beats\
    \ = new Dictionary<char, long>() {\n            {'o', 4},\n            {'|', 2},\n\
    \            {'.', 1}\n        };\n        var current_beat = 0L;\n        foreach\
    \ (var c in music_string) {\n            if (beats.ContainsKey(c)) {\n       \
    \         result.Add(beats[c] - current_beat);\n                current_beat =\
    \ beats[c];\n            } else {\n                current_beat = 0;\n       \
    \     }\n        }\n        return result;", "        List<long> result = new\
    \ List<long>();\n        long beats = 0;\n        foreach (char c in music_string)\
    \ {\n            if (c == 'o') {\n                beats += 4;\n            } else\
    \ if (c == '|') {\n                result.Add(beats);\n                beats =\
    \ 0;\n            }\n        }\n        result.Add(beats);\n        return result;",
  "        var result = new List<long>();\n        var notes = music_string.Split('\
    \ ');\n        foreach (var note in notes) {\n            if (note == \"o\") {\n\
    \                result.Add(4);\n            } else if (note == \"o|\") {\n  \
    \              result.Add(2);\n            } else if (note == \".|\") {\n    \
    \            result.Add(1);\n            }\n        }\n        return result;",
  "        // Write your code here.\n        var result = new List<long>();\n    \
    \    var notes = music_string.Split(' ');\n        foreach (var note in notes)\
    \ {\n            if (note == \"o\") {\n                result.Add(4);\n      \
    \      } else if (note == \"o|\") {\n                result.Add(2);\n        \
    \    } else if (note == \".|\") {\n                result.Add(1);\n          \
    \  }\n        }\n        return result;", "        var beats = new List<long>();\n\
    \        var notes = music_string.Split(' ');\n        foreach (var note in notes)\
    \ {\n            if (note == \"o\") {\n                beats.Add(4);\n       \
    \     } else if (note == \"o|\") {\n                beats.Add(2);\n          \
    \  } else if (note == \".|\") {\n                beats.Add(1);\n            }\n\
    \        }\n        return beats;", "        List<long> result = new List<long>();\n\
    \        for (int i = 0; i < music_string.Length; i++) {\n            if (music_string[i]\
    \ == 'o') {\n                if (i + 1 < music_string.Length && music_string[i\
    \ + 1] == '|') {\n                    result.Add(2);\n                    i++;\n\
    \                } else {\n                    result.Add(4);\n              \
    \  }\n            } else if (music_string[i] == '.') {\n                result.Add(1);\n\
    \                i++;\n            }\n        }\n        return result;", "  \
    \      var res = new List<long>();\n        var notes = music_string.Split(' ');\n\
    \        foreach (var note in notes) {\n            if (note == \"o\") {\n   \
    \             res.Add(4);\n            } else if (note == \"o|\") {\n        \
    \        res.Add(2);\n            } else if (note == \".|\") {\n             \
    \   res.Add(1);\n            }\n        }\n        return res;", "        var\
    \ res = new List<long>();\n        var s = music_string.Replace(\" \", \"\");\n\
    \        for (int i = 0; i < s.Length; i++) {\n            if (s[i] == 'o') {\n\
    \                res.Add(4);\n            } else if (s[i] == '.') {\n        \
    \        res.Add(1);\n            } else if (s[i] == '|') {\n                res.Add(2);\n\
    \            }\n        }\n        return res;", "        var beats = new List<long>();\n\
    \        var notes = music_string.Split(' ');\n        foreach (var note in notes)\
    \ {\n            if (note == \"o\") {\n                beats.Add(4);\n       \
    \     } else if (note == \"o|\") {\n                beats.Add(2);\n          \
    \  } else if (note == \".|\") {\n                beats.Add(1);\n            }\n\
    \        }\n        return beats;", "        var result = new List<long>();\n\
    \        var note = \"\";\n        foreach (var c in music_string) {\n       \
    \     if (c == ' ') {\n                result.Add(GetNoteLength(note));\n    \
    \            note = \"\";\n            } else {\n                note += c;\n\
    \            }\n        }\n        result.Add(GetNoteLength(note));\n        return\
    \ result;", "        var result = new List<long>();\n        var beats = new List<long>();\n\
    \        var beat = 0L;\n        foreach (var c in music_string) {\n         \
    \   if (c == 'o') {\n                beats.Add(beat);\n                beat =\
    \ 0L;\n            } else if (c == '|') {\n                beat++;\n         \
    \   }\n        }\n        beats.Add(beat);\n        foreach (var b in beats) {\n\
    \            if (b == 0L) {\n                result.Add(4L);\n            } else\
    \ if (b == 1L) {\n                result.Add(2L);\n            } else {\n    \
    \            result.Add(1L);\n            }\n        }\n        return result;",
  "        List<long> result = new List<long>();\n        foreach (var c in music_string)\
    \ {\n            switch (c) {\n                case 'o':\n                   \
    \ result.Add(4);\n                    break;\n                case '|':\n    \
    \                result[result.Count - 1] /= 2;\n                    break;\n\
    \                case '.':\n                    result.Add(1);\n             \
    \       break;\n            }\n        }\n        return result;", "        var\
    \ result = new List<long>();\n        var note_lengths = new Dictionary<char,\
    \ long>();\n        note_lengths['o'] = 4;\n        note_lengths['|'] = 2;\n \
    \       note_lengths['.'] = 1;\n        var current_note = 0L;\n        foreach\
    \ (var c in music_string) {\n            if (note_lengths.ContainsKey(c)) {\n\
    \                current_note += note_lengths[c];\n            } else {\n    \
    \            result.Add(current_note);\n                current_note = 0;\n  \
    \          }\n        }\n        result.Add(current_note);\n        return result;",
  "        var result = new List<long>();\n        var note_lengths = new Dictionary<char,\
    \ long>();\n        note_lengths['o'] = 4;\n        note_lengths['|'] = 2;\n \
    \       note_lengths['.'] = 1;\n        var current_note = ' ';\n        var current_note_length\
    \ = 0L;\n        foreach (var c in music_string) {\n            if (note_lengths.ContainsKey(c))\
    \ {\n                if (c == '|') {\n                    current_note_length\
    \ += note_lengths[c];\n                } else {\n                    if (current_note\
    \ != ' ') {\n                        result.Add(current_note_length);\n      \
    \              }\n                    current_note = c;\n                    current_note_length\
    \ = note_lengths[c];\n                }\n            }\n        }\n        if\
    \ (current_note != ' ') {\n            result.Add(current_note_length);\n    \
    \    }\n        return result;", "        var beats = new List<long>();\n    \
    \    foreach (var c in music_string) {\n            switch (c) {\n           \
    \     case 'o':\n                    beats.Add(4);\n                    break;\n\
    \                case '|':\n                    beats[beats.Count - 1] /= 2;\n\
    \                    break;\n                case '.':\n                    beats.Add(1);\n\
    \                    break;\n            }\n        }\n        return beats;",
  "        var result = new List<long>();\n        foreach (var c in music_string)\
    \ {\n            if (c == 'o') {\n                result.Add(4);\n           \
    \ } else if (c == '|') {\n                result[result.Count - 1] /= 2;\n   \
    \         }\n        }\n        return result;", "        List<long> result =\
    \ new List<long>();\n        int i = 0;\n        while (i < music_string.Length)\
    \ {\n            if (music_string[i] == 'o') {\n                if (i + 1 < music_string.Length\
    \ && music_string[i + 1] == '|') {\n                    result.Add(2);\n     \
    \               i += 2;\n                } else {\n                    result.Add(4);\n\
    \                    i += 1;\n                }\n            } else {\n      \
    \          result.Add(1);\n                i += 2;\n            }\n        }\n\
    \        return result;"]
stop_tokens:
- "\n    }\n"

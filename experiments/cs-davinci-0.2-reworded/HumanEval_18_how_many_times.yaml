name: HumanEval_18_how_many_times
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // Find how many times a given substring can be found in the original\
  \ string. Count overlaping cases.\n    // >>> HowManyTimes((\"\"), (\"a\"))\n  \
  \  // (0L)\n    // >>> HowManyTimes((\"aaa\"), (\"a\"))\n    // (3L)\n    // >>>\
  \ HowManyTimes((\"aaaa\"), (\"aa\"))\n    // (3L)\n    public static long HowManyTimes(string\
  \ str, string substring) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(HowManyTimes((\"\
  \"), (\"x\")) == (0L));\n    Debug.Assert(HowManyTimes((\"xyxyxyx\"), (\"x\")) ==\
  \ (4L));\n    Debug.Assert(HowManyTimes((\"cacacacac\"), (\"cac\")) == (4L));\n\
  \    Debug.Assert(HowManyTimes((\"john doe\"), (\"john\")) == (1L));\n    }\n\n\
  }\n"
completions: ["        long count = 0;\n        for (int i = 0; i < str.Length; i++)\
    \ {\n            if (str.Substring(i, substring.Length) == substring) {\n    \
    \            count++;\n            }\n        }\n        return count;", "   \
    \     long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n      \
    \      if (str.Substring(i, substring.Length) == substring) {\n              \
    \  count++;\n            }\n        }\n        return count;", "        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;", "        long count = 0;\n        for (int\
    \ i = 0; i < str.Length; i++) {\n            if (str.Substring(i, substring.Length)\
    \ == substring) {\n                count++;\n            }\n        }\n      \
    \  return count;", "        long count = 0;\n        for (int i = 0; i < str.Length;\
    \ i++) {\n            if (str.Substring(i, substring.Length) == substring) {\n\
    \                count++;\n            }\n        }\n        return count;", " \
    \       long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n    \
    \        if (str.Substring(i, substring.Length) == substring) {\n            \
    \    count++;\n            }\n        }\n        return count;", "        long\
    \ count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;", "        long count = 0;\n        for (int\
    \ i = 0; i < str.Length; i++) {\n            if (str.Substring(i, substring.Length)\
    \ == substring) {\n                count++;\n            }\n        }\n      \
    \  return count;", "        long count = 0;\n        for (int i = 0; i < str.Length;\
    \ i++) {\n            if (str.Substring(i, substring.Length) == substring) {\n\
    \                count++;\n            }\n        }\n        return count;", " \
    \       long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n    \
    \        if (str.Substring(i, substring.Length) == substring) {\n            \
    \    count++;\n            }\n        }\n        return count;", "        long\
    \ count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;", "        long count = 0;\n        for (int\
    \ i = 0; i < str.Length; i++) {\n            if (str.Substring(i, substring.Length)\
    \ == substring) {\n                count++;\n            }\n        }\n      \
    \  return count;", "        long count = 0;\n        for (int i = 0; i < str.Length;\
    \ i++) {\n            if (str.Substring(i, substring.Length) == substring) {\n\
    \                count++;\n            }\n        }\n        return count;", " \
    \       long count = 0;\n        int str_len = str.Length;\n        int substr_len\
    \ = substring.Length;\n        for (int i = 0; i < str_len; i++) {\n         \
    \   if (str[i] == substring[0]) {\n                if (str_len - i >= substr_len)\
    \ {\n                    bool found = true;\n                    for (int j =\
    \ 1; j < substr_len; j++) {\n                        if (str[i + j] != substring[j])\
    \ {\n                            found = false;\n                            break;\n\
    \                        }\n                    }\n                    if (found)\
    \ {\n                        count++;\n                    }\n               \
    \ }\n            }\n        }\n        return count;", "        long count = 0;\n\
    \        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;", "        long count = 0;\n        for (int\
    \ i = 0; i < str.Length; i++) {\n            if (str.Substring(i, substring.Length)\
    \ == substring) {\n                count++;\n            }\n        }\n      \
    \  return count;", "        long result = 0;\n        for (int i = 0; i < str.Length;\
    \ i++) {\n            if (str.Substring(i, substring.Length) == substring) {\n\
    \                result++;\n            }\n        }\n        return result;",
  "        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n     \
    \       if (i + substring.Length > str.Length) {\n                break;\n   \
    \         }\n            if (str.Substring(i, substring.Length) == substring)\
    \ {\n                count++;\n            }\n        }\n        return count;",
  "        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n     \
    \       if (str.Substring(i, substring.Length) == substring) {\n             \
    \   count++;\n            }\n        }\n        return count;", "        long\
    \ count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;", "        long count = 0;\n        for (int\
    \ i = 0; i < str.Length; i++) {\n            if (str.Substring(i, substring.Length)\
    \ == substring) {\n                count++;\n            }\n        }\n      \
    \  return count;", "        long count = 0;\n        for (int i = 0; i < str.Length;\
    \ i++) {\n            if (str.Substring(i, substring.Length) == substring) {\n\
    \                count++;\n            }\n        }\n        return count;", " \
    \       long result = 0;\n        for (int i = 0; i < str.Length; i++) {\n   \
    \         if (str.Substring(i, substring.Length) == substring) {\n           \
    \     result++;\n            }\n        }\n        return result;", "        long\
    \ count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;", "        long count = 0;\n        for (int\
    \ i = 0; i < str.Length; i++) {\n            if (str.Substring(i, substring.Length)\
    \ == substring) {\n                count++;\n            }\n        }\n      \
    \  return count;", "        long count = 0;\n        for (int i = 0; i < str.Length;\
    \ i++) {\n            if (str.Substring(i, substring.Length) == substring) {\n\
    \                count++;\n            }\n        }\n        return count;", " \
    \       long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n    \
    \        if (str.Substring(i, substring.Length) == substring) {\n            \
    \    count++;\n            }\n        }\n        return count;", "        long\
    \ result = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if\
    \ (str.Substring(i, substring.Length) == substring) {\n                result++;\n\
    \            }\n        }\n        return result;", "        long count = 0;\n\
    \        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;", "        long result = 0;\n        for (int\
    \ i = 0; i < str.Length; i++) {\n            if (str.Substring(i, substring.Length)\
    \ == substring) {\n                result++;\n            }\n        }\n     \
    \   return result;", "        long count = 0;\n        for (int i = 0; i < str.Length;\
    \ i++) {\n            if (str.Substring(i, substring.Length) == substring) {\n\
    \                count++;\n            }\n        }\n        return count;", " \
    \       long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n    \
    \        if (str.Substring(i, substring.Length) == substring) {\n            \
    \    count++;\n            }\n        }\n        return count;", "        int\
    \ len = substring.Length;\n        long res = 0;\n        for (int i = 0; i <=\
    \ str.Length - len; i++) {\n            if (str.Substring(i, len) == substring)\
    \ {\n                res++;\n            }\n        }\n        return res;", " \
    \       long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n    \
    \        if (str.Substring(i, substring.Length) == substring) {\n            \
    \    count++;\n            }\n        }\n        return count;", "        long\
    \ count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;", "        long count = 0;\n        for (int\
    \ i = 0; i < str.Length; i++) {\n            if (str.Substring(i, substring.Length)\
    \ == substring) {\n                count++;\n            }\n        }\n      \
    \  return count;", "        long result = 0;\n        for (int i = 0; i < str.Length;\
    \ i++) {\n            if (str.Substring(i, substring.Length) == substring) {\n\
    \                result++;\n            }\n        }\n        return result;",
  "        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n     \
    \       if (str.Substring(i, substring.Length) == substring) {\n             \
    \   count++;\n            }\n        }\n        return count;", "        long\
    \ count = 0;\n        int index = 0;\n        while (true) {\n            index\
    \ = str.IndexOf(substring, index);\n            if (index == -1) {\n         \
    \       break;\n            }\n            count++;\n            index++;\n  \
    \      }\n        return count;", "        long count = 0;\n        for (int i\
    \ = 0; i < str.Length; i++) {\n            if (str.Substring(i, substring.Length)\
    \ == substring) {\n                count++;\n            }\n        }\n      \
    \  return count;", "        long count = 0;\n        for (int i = 0; i < str.Length;\
    \ i++) {\n            if (str.Substring(i, substring.Length) == substring) {\n\
    \                count++;\n            }\n        }\n        return count;", " \
    \       long result = 0;\n        for (int i = 0; i <= str.Length - substring.Length;\
    \ i++) {\n            if (str.Substring(i, substring.Length) == substring) {\n\
    \                result++;\n            }\n        }\n        return result;",
  "        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n     \
    \       if (str.Substring(i, substring.Length) == substring) {\n             \
    \   count++;\n            }\n        }\n        return count;", "        long\
    \ count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;", "        long count = 0;\n        for (int\
    \ i = 0; i < str.Length; i++) {\n            if (str.Substring(i, substring.Length)\
    \ == substring) {\n                count++;\n            }\n        }\n      \
    \  return count;", "        long count = 0;\n        for (int i = 0; i < str.Length;\
    \ i++) {\n            if (str.Substring(i, substring.Length) == substring) {\n\
    \                count++;\n            }\n        }\n        return count;", " \
    \       long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n    \
    \        if (str.Substring(i, substring.Length) == substring) {\n            \
    \    count++;\n            }\n        }\n        return count;", "        long\
    \ count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;", "        long count = 0;\n        for (int\
    \ i = 0; i < str.Length; i++) {\n            if (str.Substring(i, substring.Length)\
    \ == substring) {\n                count++;\n            }\n        }\n      \
    \  return count;", "        long count = 0;\n        for (int i = 0; i < str.Length;\
    \ i++) {\n            if (str.Substring(i, substring.Length) == substring) {\n\
    \                count++;\n            }\n        }\n        return count;", " \
    \       long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n    \
    \        if (str.Substring(i, substring.Length) == substring) {\n            \
    \    count++;\n            }\n        }\n        return count;", "        long\
    \ count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;", "        long count = 0;\n        for (int\
    \ i = 0; i < str.Length; i++) {\n            if (str.Substring(i, substring.Length)\
    \ == substring) {\n                count++;\n            }\n        }\n      \
    \  return count;", "        long count = 0;\n        for (int i = 0; i < str.Length;\
    \ i++) {\n            if (str.Substring(i, substring.Length) == substring) {\n\
    \                count++;\n            }\n        }\n        return count;", " \
    \       long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n    \
    \        if (str.Substring(i, substring.Length) == substring) {\n            \
    \    count++;\n            }\n        }\n        return count;", "        long\
    \ count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;", "        long count = 0;\n        for (int\
    \ i = 0; i < str.Length; i++) {\n            if (str.Substring(i, substring.Length)\
    \ == substring) {\n                count++;\n            }\n        }\n      \
    \  return count;", "        long count = 0;\n        for (int i = 0; i < str.Length;\
    \ i++) {\n            if (str.Substring(i, substring.Length) == substring) {\n\
    \                count++;\n            }\n        }\n        return count;", " \
    \       long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n    \
    \        if (str.Substring(i, substring.Length) == substring) {\n            \
    \    count++;\n            }\n        }\n        return count;", "        long\
    \ count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;", "        long count = 0;\n        for (int\
    \ i = 0; i < str.Length; i++) {\n            if (str.Substring(i, substring.Length)\
    \ == substring) {\n                count++;\n            }\n        }\n      \
    \  return count;", "        long count = 0;\n        for (int i = 0; i < str.Length;\
    \ i++) {\n            if (str.Substring(i, substring.Length) == substring) {\n\
    \                count++;\n            }\n        }\n        return count;", " \
    \       long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n    \
    \        if (str.Substring(i, substring.Length) == substring) {\n            \
    \    count++;\n            }\n        }\n        return count;", "        long\
    \ result = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if\
    \ (str.Substring(i, substring.Length) == substring) {\n                result++;\n\
    \            }\n        }\n        return result;", "        long count = 0;\n\
    \        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;", "        long count = 0;\n        for (int\
    \ i = 0; i < str.Length; i++) {\n            if (str.Substring(i, substring.Length)\
    \ == substring) {\n                count++;\n            }\n        }\n      \
    \  return count;", "        long count = 0;\n        for (int i = 0; i < str.Length;\
    \ i++) {\n            if (str.Substring(i, substring.Length) == substring) {\n\
    \                count++;\n            }\n        }\n        return count;", " \
    \       long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n    \
    \        if (str.Substring(i, substring.Length) == substring) {\n            \
    \    count++;\n            }\n        }\n        return count;", "        long\
    \ count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;", "        if (substring.Length == 0) return\
    \ 0;\n        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n\
    \            if (str[i] == substring[0]) {\n                bool found = true;\n\
    \                for (int j = 1; j < substring.Length; j++) {\n              \
    \      if (i + j >= str.Length || str[i + j] != substring[j]) {\n            \
    \            found = false;\n                        break;\n                \
    \    }\n                }\n                if (found) {\n                    count++;\n\
    \                }\n            }\n        }\n        return count;", "      \
    \  long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n         \
    \   if (str.Substring(i, substring.Length) == substring) {\n                count++;\n\
    \            }\n        }\n        return count;", "        long count = 0;\n\
    \        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;", "        long count = 0;\n        for (int\
    \ i = 0; i < str.Length; i++) {\n            if (str.Substring(i, substring.Length)\
    \ == substring) {\n                count++;\n            }\n        }\n      \
    \  return count;", "        long count = 0;\n        for (int i = 0; i < str.Length;\
    \ i++) {\n            if (str.Substring(i, substring.Length) == substring) {\n\
    \                count++;\n            }\n        }\n        return count;", " \
    \       long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n    \
    \        if (i + substring.Length > str.Length) {\n                break;\n  \
    \          }\n            if (str.Substring(i, substring.Length) == substring)\
    \ {\n                count++;\n            }\n        }\n        return count;",
  "        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n     \
    \       if (str.Substring(i, substring.Length) == substring) {\n             \
    \   count++;\n            }\n        }\n        return count;", "        long\
    \ count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;", "        long count = 0;\n        for (int\
    \ i = 0; i < str.Length; i++) {\n            if (str.Substring(i, substring.Length)\
    \ == substring) {\n                count++;\n            }\n        }\n      \
    \  return count;", "        long count = 0;\n        for (int i = 0; i < str.Length;\
    \ i++) {\n            if (str.Substring(i, substring.Length) == substring) {\n\
    \                count++;\n            }\n        }\n        return count;", " \
    \       long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n    \
    \        if (str.Substring(i, substring.Length) == substring) {\n            \
    \    count++;\n            }\n        }\n        return count;", "        long\
    \ count = 0;\n        for (int i = 0; i <= str.Length - substring.Length; i++)\
    \ {\n            if (str.Substring(i, substring.Length) == substring) {\n    \
    \            count++;\n            }\n        }\n        return count;", "   \
    \     long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n      \
    \      if (str.Substring(i, substring.Length) == substring) {\n              \
    \  count++;\n            }\n        }\n        return count;", "        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;", "        long count = 0;\n        for (int\
    \ i = 0; i < str.Length; i++) {\n            if (str.Substring(i, substring.Length)\
    \ == substring) {\n                count++;\n            }\n        }\n      \
    \  return count;", "        long count = 0;\n        for (int i = 0; i < str.Length;\
    \ i++) {\n            if (str.Substring(i, substring.Length) == substring) {\n\
    \                count++;\n            }\n        }\n        return count;", " \
    \       if (substring.Length == 0) return 0;\n        long count = 0;\n      \
    \  for (int i = 0; i < str.Length; i++) {\n            if (str[i] == substring[0])\
    \ {\n                bool found = true;\n                for (int j = 1; j < substring.Length;\
    \ j++) {\n                    if (i + j >= str.Length || str[i + j] != substring[j])\
    \ {\n                        found = false;\n                        break;\n\
    \                    }\n                }\n                if (found) {\n    \
    \                count++;\n                }\n            }\n        }\n     \
    \   return count;", "        long count = 0;\n        for (int i = 0; i < str.Length;\
    \ i++) {\n            if (str.Substring(i, substring.Length) == substring) {\n\
    \                count++;\n            }\n        }\n        return count;", " \
    \       long count = 0;\n        int pos = 0;\n        while (pos < str.Length)\
    \ {\n            int found = str.IndexOf(substring, pos);\n            if (found\
    \ == -1) {\n                break;\n            }\n            count++;\n    \
    \        pos = found + 1;\n        }\n        return count;", "        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;", "        long count = 0;\n        for (int\
    \ i = 0; i < str.Length; i++) {\n            if (str.Substring(i, substring.Length)\
    \ == substring) {\n                count++;\n            }\n        }\n      \
    \  return count;", "        long count = 0;\n        for (int i = 0; i < str.Length;\
    \ i++) {\n            if (str.Substring(i, substring.Length) == substring) {\n\
    \                count++;\n            }\n        }\n        return count;", " \
    \       long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n    \
    \        if (str.Substring(i, substring.Length) == substring) {\n            \
    \    count++;\n            }\n        }\n        return count;", "        int\
    \ n = str.Length;\n        int m = substring.Length;\n        long result = 0;\n\
    \        for (int i = 0; i < n; i++) {\n            if (str[i] == substring[0])\
    \ {\n                bool ok = true;\n                for (int j = 1; j < m; j++)\
    \ {\n                    if (i + j >= n || str[i + j] != substring[j]) {\n   \
    \                     ok = false;\n                        break;\n          \
    \          }\n                }\n                if (ok) {\n                 \
    \   result++;\n                }\n            }\n        }\n        return result;",
  "        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n     \
    \       if (str.Substring(i, substring.Length) == substring) {\n             \
    \   count++;\n            }\n        }\n        return count;", "        long\
    \ count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;", "        long count = 0;\n        for (int\
    \ i = 0; i < str.Length; i++) {\n            if (str.Substring(i, substring.Length)\
    \ == substring) {\n                count++;\n            }\n        }\n      \
    \  return count;", "        long count = 0;\n        for (int i = 0; i < str.Length;\
    \ i++) {\n            if (str.Substring(i, substring.Length) == substring) {\n\
    \                count++;\n            }\n        }\n        return count;", " \
    \       long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n    \
    \        if (str.Substring(i, substring.Length) == substring) {\n            \
    \    count++;\n            }\n        }\n        return count;", "        long\
    \ count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (substring.Length\
    \ + i <= str.Length && str.Substring(i, substring.Length) == substring) {\n  \
    \              count++;\n            }\n        }\n        return count;", " \
    \       long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n    \
    \        if (str.Substring(i, substring.Length) == substring) {\n            \
    \    count++;\n            }\n        }\n        return count;", "        long\
    \ count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;", "        long count = 0;\n        for (int\
    \ i = 0; i < str.Length; i++) {\n            if (str.Substring(i, substring.Length)\
    \ == substring) {\n                count++;\n            }\n        }\n      \
    \  return count;", "        long count = 0;\n        for (int i = 0; i < str.Length;\
    \ i++) {\n            if (str.Substring(i, substring.Length) == substring) {\n\
    \                count++;\n            }\n        }\n        return count;", " \
    \       long result = 0;\n        for (int i = 0; i < str.Length; i++) {\n   \
    \         if (str.Substring(i, substring.Length) == substring) {\n           \
    \     result++;\n            }\n        }\n        return result;", "        long\
    \ count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;", "        long count = 0;\n        for (int\
    \ i = 0; i < str.Length; i++) {\n            if (str.Substring(i, substring.Length)\
    \ == substring) {\n                count++;\n            }\n        }\n      \
    \  return count;", "        long count = 0;\n        for (int i = 0; i < str.Length;\
    \ i++) {\n            if (str.Substring(i, substring.Length) == substring) {\n\
    \                count++;\n            }\n        }\n        return count;", " \
    \       if (substring.Length == 0) {\n            return 0;\n        }\n     \
    \   long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n        \
    \    if (str[i] == substring[0]) {\n                bool found = true;\n     \
    \           for (int j = 1; j < substring.Length; j++) {\n                   \
    \ if (i + j >= str.Length || str[i + j] != substring[j]) {\n                 \
    \       found = false;\n                        break;\n                    }\n\
    \                }\n                if (found) {\n                    count++;\n\
    \                }\n            }\n        }\n        return count;", "      \
    \  long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n         \
    \   if (str.Substring(i, substring.Length) == substring) {\n                count++;\n\
    \            }\n        }\n        return count;", "        long count = 0;\n\
    \        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;", "        long count = 0;\n        for (int\
    \ i = 0; i < str.Length; i++) {\n            if (str.Substring(i, substring.Length)\
    \ == substring) {\n                count++;\n            }\n        }\n      \
    \  return count;", "        long result = 0;\n        for (int i = 0; i < str.Length;\
    \ i++) {\n            if (str.Substring(i, substring.Length) == substring) {\n\
    \                result++;\n            }\n        }\n        return result;",
  "        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n     \
    \       if (str.Substring(i, substring.Length) == substring) {\n             \
    \   count++;\n            }\n        }\n        return count;", "        long\
    \ count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;", "        long count = 0;\n        for (int\
    \ i = 0; i < str.Length; i++) {\n            if (str.Substring(i, substring.Length)\
    \ == substring) {\n                count++;\n            }\n        }\n      \
    \  return count;", "        long count = 0;\n        for (int i = 0; i < str.Length;\
    \ i++) {\n            if (str.Substring(i, substring.Length) == substring) {\n\
    \                count++;\n            }\n        }\n        return count;", " \
    \       long result = 0;\n        for (int i = 0; i < str.Length; i++) {\n   \
    \         if (str.Substring(i, substring.Length) == substring) {\n           \
    \     result++;\n            }\n        }\n        return result;", "        long\
    \ count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;", "        long count = 0;\n        for (int\
    \ i = 0; i < str.Length; i++) {\n            if (str.Substring(i, substring.Length)\
    \ == substring) {\n                count++;\n            }\n        }\n      \
    \  return count;", "        long count = 0;\n        for (int i = 0; i < str.Length;\
    \ i++) {\n            if (str.Substring(i, substring.Length) == substring) {\n\
    \                count++;\n            }\n        }\n        return count;", " \
    \       long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n    \
    \        if (str.Substring(i, substring.Length) == substring) {\n            \
    \    count++;\n            }\n        }\n        return count;", "        long\
    \ result = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if\
    \ (str.Substring(i, substring.Length) == substring) {\n                result++;\n\
    \            }\n        }\n        return result;", "        long count = 0;\n\
    \        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;", "        long count = 0;\n        for (int\
    \ i = 0; i < str.Length; i++) {\n            if (str.Substring(i, substring.Length)\
    \ == substring) {\n                count++;\n            }\n        }\n      \
    \  return count;", "        long count = 0;\n        for (int i = 0; i < str.Length;\
    \ i++) {\n            if (str.Substring(i, substring.Length) == substring) {\n\
    \                count++;\n            }\n        }\n        return count;", " \
    \       long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n    \
    \        if (str.Substring(i, substring.Length) == substring) {\n            \
    \    count++;\n            }\n        }\n        return count;", "        long\
    \ count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;", "        long count = 0;\n        for (int\
    \ i = 0; i < str.Length; i++) {\n            if (str.Substring(i, substring.Length)\
    \ == substring) {\n                count++;\n            }\n        }\n      \
    \  return count;", "        long count = 0;\n        for (int i = 0; i < str.Length;\
    \ i++) {\n            if (str.Substring(i, substring.Length) == substring) {\n\
    \                count++;\n            }\n        }\n        return count;", " \
    \       long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n    \
    \        if (str.Substring(i, substring.Length) == substring) {\n            \
    \    count++;\n            }\n        }\n        return count;", "        long\
    \ count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;", "        long count = 0;\n        for (int\
    \ i = 0; i < str.Length; i++) {\n            if (str.Substring(i, substring.Length)\
    \ == substring) {\n                count++;\n            }\n        }\n      \
    \  return count;", "        long count = 0;\n        for (int i = 0; i < str.Length;\
    \ i++) {\n            if (str.Substring(i, substring.Length) == substring) {\n\
    \                count++;\n            }\n        }\n        return count;", " \
    \       long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n    \
    \        if (str.Substring(i, substring.Length) == substring) {\n            \
    \    count++;\n            }\n        }\n        return count;", "        long\
    \ count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;", "        long count = 0;\n        for (int\
    \ i = 0; i < str.Length; i++) {\n            if (str.Substring(i, substring.Length)\
    \ == substring) {\n                count++;\n            }\n        }\n      \
    \  return count;", "        long count = 0;\n        for (int i = 0; i < str.Length;\
    \ i++) {\n            if (str.Substring(i, substring.Length) == substring) {\n\
    \                count++;\n            }\n        }\n        return count;", " \
    \       long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n    \
    \        if (str.Substring(i, substring.Length) == substring) {\n            \
    \    count++;\n            }\n        }\n        return count;", "        long\
    \ count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;", "        long count = 0;\n        for (int\
    \ i = 0; i < str.Length; i++) {\n            if (str.Substring(i, substring.Length)\
    \ == substring) {\n                count++;\n            }\n        }\n      \
    \  return count;", "        long count = 0;\n        for (int i = 0; i < str.Length;\
    \ i++) {\n            if (str.Substring(i, substring.Length) == substring) {\n\
    \                count++;\n            }\n        }\n        return count;", " \
    \       long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n    \
    \        if (str.Substring(i, substring.Length) == substring) {\n            \
    \    count++;\n            }\n        }\n        return count;", "        long\
    \ count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;", "        long count = 0;\n        for (int\
    \ i = 0; i < str.Length; i++) {\n            if (str.Substring(i, substring.Length)\
    \ == substring) {\n                count++;\n            }\n        }\n      \
    \  return count;", "        long count = 0;\n        for (int i = 0; i < str.Length;\
    \ i++) {\n            if (str.Substring(i, substring.Length) == substring) {\n\
    \                count++;\n            }\n        }\n        return count;", " \
    \       long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n    \
    \        if (str.Substring(i, substring.Length) == substring) {\n            \
    \    count++;\n            }\n        }\n        return count;", "        long\
    \ count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;", "        long count = 0;\n        for (int\
    \ i = 0; i < str.Length; i++) {\n            if (str.Substring(i, substring.Length)\
    \ == substring) {\n                count++;\n            }\n        }\n      \
    \  return count;", "        long count = 0;\n        for (int i = 0; i < str.Length;\
    \ i++) {\n            if (str.Substring(i, substring.Length) == substring) {\n\
    \                count++;\n            }\n        }\n        return count;", " \
    \       long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n    \
    \        if (str.Substring(i, substring.Length) == substring) {\n            \
    \    count++;\n            }\n        }\n        return count;", "        long\
    \ count = 0;\n        for (int i = 0; i <= str.Length - substring.Length; i++)\
    \ {\n            if (str.Substring(i, substring.Length) == substring) {\n    \
    \            count++;\n            }\n        }\n        return count;", "   \
    \     long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n      \
    \      if (str.Substring(i, substring.Length) == substring) {\n              \
    \  count++;\n            }\n        }\n        return count;", "        long count\
    \ = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;", "        long count = 0;\n        for (int\
    \ i = 0; i < str.Length; i++) {\n            if (str.Substring(i, substring.Length)\
    \ == substring) {\n                count++;\n            }\n        }\n      \
    \  return count;", "        long count = 0;\n        for (int i = 0; i < str.Length;\
    \ i++) {\n            if (str.Substring(i, substring.Length) == substring) {\n\
    \                count++;\n            }\n        }\n        return count;", " \
    \       long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n    \
    \        if (str.Substring(i, substring.Length) == substring) {\n            \
    \    count++;\n            }\n        }\n        return count;", "        long\
    \ count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;", "        long count = 0;\n        for (int\
    \ i = 0; i < str.Length; i++) {\n            if (str.Substring(i, substring.Length)\
    \ == substring) {\n                count++;\n            }\n        }\n      \
    \  return count;", "        long count = 0;\n        for (int i = 0; i < str.Length;\
    \ i++) {\n            if (str.Substring(i, substring.Length) == substring) {\n\
    \                count++;\n            }\n        }\n        return count;", " \
    \       long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n    \
    \        if (str.Substring(i, substring.Length) == substring) {\n            \
    \    count++;\n            }\n        }\n        return count;", "        long\
    \ count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;", "        long count = 0;\n        for (int\
    \ i = 0; i < str.Length; i++) {\n            if (str.Substring(i, substring.Length)\
    \ == substring) {\n                count++;\n            }\n        }\n      \
    \  return count;", "        long count = 0;\n        for (int i = 0; i < str.Length;\
    \ i++) {\n            if (str.Substring(i, substring.Length) == substring) {\n\
    \                count++;\n            }\n        }\n        return count;", " \
    \       long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n    \
    \        if (str.Substring(i, substring.Length) == substring) {\n            \
    \    count++;\n            }\n        }\n        return count;", "        int\
    \ len = substring.Length;\n        long count = 0;\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (str.Substring(i, len) == substring) {\n\
    \                count++;\n            }\n        }\n        return count;", " \
    \       long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n    \
    \        if (str.Substring(i, substring.Length) == substring) {\n            \
    \    count++;\n            }\n        }\n        return count;", "        long\
    \ count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;", "        long result = 0;\n        for (int\
    \ i = 0; i < str.Length; i++) {\n            if (str.Substring(i, substring.Length)\
    \ == substring) {\n                result++;\n            }\n        }\n     \
    \   return result;", "        long count = 0;\n        for (int i = 0; i < str.Length;\
    \ i++) {\n            if (str.Substring(i, substring.Length) == substring) {\n\
    \                count++;\n            }\n        }\n        return count;", " \
    \       long result = 0;\n        for (int i = 0; i < str.Length; i++) {\n   \
    \         if (str.Substring(i, substring.Length) == substring) {\n           \
    \     result++;\n            }\n        }\n        return result;", "        long\
    \ count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;", "        long result = 0;\n        for (int\
    \ i = 0; i < str.Length; i++) {\n            if (str.Substring(i, substring.Length)\
    \ == substring) {\n                result++;\n            }\n        }\n     \
    \   return result;", "        long count = 0;\n        for (int i = 0; i < str.Length;\
    \ i++) {\n            if (str.Substring(i, substring.Length) == substring) {\n\
    \                count++;\n            }\n        }\n        return count;", " \
    \       long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n    \
    \        if (str.Substring(i, substring.Length) == substring) {\n            \
    \    count++;\n            }\n        }\n        return count;", "        long\
    \ count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;", "        long count = 0;\n        for (int\
    \ i = 0; i < str.Length; i++) {\n            if (str.Substring(i, substring.Length)\
    \ == substring) {\n                count++;\n            }\n        }\n      \
    \  return count;", "        long count = 0;\n        for (int i = 0; i < str.Length;\
    \ i++) {\n            if (str.Substring(i, substring.Length) == substring) {\n\
    \                count++;\n            }\n        }\n        return count;", " \
    \       long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n    \
    \        if (str.Substring(i, substring.Length) == substring) {\n            \
    \    count++;\n            }\n        }\n        return count;", "        long\
    \ count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;", "        long count = 0;\n        for (int\
    \ i = 0; i < str.Length; i++) {\n            if (str.Substring(i, substring.Length)\
    \ == substring) {\n                count++;\n            }\n        }\n      \
    \  return count;", "        long result = 0;\n        for (int i = 0; i < str.Length;\
    \ i++) {\n            if (str.Substring(i, substring.Length) == substring) {\n\
    \                result++;\n            }\n        }\n        return result;",
  "        long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n     \
    \       if (str.Substring(i, substring.Length) == substring) {\n             \
    \   count++;\n            }\n        }\n        return count;", "        long\
    \ count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;", "        long count = 0;\n        for (int\
    \ i = 0; i < str.Length; i++) {\n            if (str.Substring(i, substring.Length)\
    \ == substring) {\n                count++;\n            }\n        }\n      \
    \  return count;", "        long count = 0;\n        for (int i = 0; i < str.Length;\
    \ i++) {\n            if (str.Substring(i, substring.Length) == substring) {\n\
    \                count++;\n            }\n        }\n        return count;", " \
    \       long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n    \
    \        if (str.Substring(i, substring.Length) == substring) {\n            \
    \    count++;\n            }\n        }\n        return count;", "        long\
    \ count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;", "        long count = 0;\n        for (int\
    \ i = 0; i < str.Length; i++) {\n            if (str.Substring(i, substring.Length)\
    \ == substring) {\n                count++;\n            }\n        }\n      \
    \  return count;", "        long count = 0;\n        for (int i = 0; i < str.Length;\
    \ i++) {\n            if (str.Substring(i, substring.Length) == substring) {\n\
    \                count++;\n            }\n        }\n        return count;", " \
    \       long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n    \
    \        if (str.Substring(i, substring.Length) == substring) {\n            \
    \    count++;\n            }\n        }\n        return count;", "        long\
    \ count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;", "        long count = 0;\n        for (int\
    \ i = 0; i < str.Length; i++) {\n            if (str.Substring(i, substring.Length)\
    \ == substring) {\n                count++;\n            }\n        }\n      \
    \  return count;", "        long count = 0;\n        for (int i = 0; i < str.Length;\
    \ i++) {\n            if (str.Substring(i, substring.Length) == substring) {\n\
    \                count++;\n            }\n        }\n        return count;", " \
    \       long count = 0;\n        for (int i = 0; i < str.Length; i++) {\n    \
    \        if (str.Substring(i, substring.Length) == substring) {\n            \
    \    count++;\n            }\n        }\n        return count;", "        long\
    \ count = 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;", "        long result = 0;\n        for (int\
    \ i = 0; i < str.Length; i++) {\n            if (str.Substring(i, substring.Length)\
    \ == substring) {\n                result++;\n            }\n        }\n     \
    \   return result;", "        long count = 0;\n        for (int i = 0; i < str.Length;\
    \ i++) {\n            if (str.Substring(i, substring.Length) == substring) {\n\
    \                count++;\n            }\n        }\n        return count;", " \
    \       int n = str.Length;\n        int m = substring.Length;\n        long result\
    \ = 0;\n        for (int i = 0; i < n; i++) {\n            if (str[i] == substring[0])\
    \ {\n                int j = 0;\n                while (j < m && i + j < n &&\
    \ str[i + j] == substring[j]) {\n                    j++;\n                }\n\
    \                if (j == m) {\n                    result++;\n              \
    \  }\n            }\n        }\n        return result;", "        long count =\
    \ 0;\n        for (int i = 0; i < str.Length; i++) {\n            if (str.Substring(i,\
    \ substring.Length) == substring) {\n                count++;\n            }\n\
    \        }\n        return count;", "        if (str.Length < substring.Length)\
    \ return 0;\n        if (str.Length == substring.Length) return str == substring\
    \ ? 1 : 0;\n        long count = 0;\n        for (int i = 0; i < str.Length -\
    \ substring.Length + 1; i++) {\n            if (str.Substring(i, substring.Length)\
    \ == substring) count++;\n        }\n        return count;"]
stop_tokens:
- "\n    }\n"

name: HumanEval_91_is_bored
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // You'll be given a string of words, and your task is to count\
  \ the number\n    // of boredoms. A boredom is a sentence that starts with the word\
  \ \"I\".\n    // Sentences are delimited by '.', '?' or '!'.\n    // For example:\n\
  \    // >>> IsBored((\"Hello world\"))\n    // (0L)\n    // >>> IsBored((\"The sky\
  \ is blue. The sun is shining. I love this weather\"))\n    // (1L)\n    public\
  \ static long IsBored(string S) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(IsBored((\"\
  Hello world\")) == (0L));\n    Debug.Assert(IsBored((\"Is the sky blue?\")) == (0L));\n\
  \    Debug.Assert(IsBored((\"I love It !\")) == (1L));\n    Debug.Assert(IsBored((\"\
  bIt\")) == (0L));\n    Debug.Assert(IsBored((\"I feel good today. I will be productive.\
  \ will kill It\")) == (2L));\n    Debug.Assert(IsBored((\"You and I are going for\
  \ a walk\")) == (0L));\n    }\n\n}\n"
completions: ["        int count = 0;\n        string[] sentences = S.Split(new char[]\
    \ { '.', '?', '!' });\n        foreach (string sentence in sentences) {\n    \
    \        if (sentence.Trim().StartsWith(\"I\")) {\n                count++;\n\
    \            }\n        }\n        return count;", "        // Your code here\n\
    \        return 0;", "        var boredoms = 0L;\n        var sentences = S.Split(new\
    \ char[] { '.', '?', '!' });\n        foreach (var sentence in sentences) {\n\
    \            var words = sentence.Split(new char[] { ' ' });\n            if (words.Length\
    \ > 0 && words[0] == \"I\") {\n                boredoms++;\n            }\n  \
    \      }\n        return boredoms;", "        // Your code goes here.\n      \
    \  return 0L;", "        long count = 0;\n        string[] sentences = S.Split(new\
    \ char[] { '.', '?', '!' }, StringSplitOptions.RemoveEmptyEntries);\n        foreach\
    \ (string sentence in sentences) {\n            if (sentence.TrimStart().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;",
  "        return S.Split(new char[] { '.', '?', '!' }).Count(x => x.Trim().StartsWith(\"\
    I\"));", "        long count = 0;\n        string[] sentences = S.Split(new char[]\
    \ { '.', '?', '!' });\n        foreach (string sentence in sentences) {\n    \
    \        if (sentence.Trim().StartsWith(\"I\")) {\n                count++;\n\
    \            }\n        }\n        return count;", "        var boredoms = 0L;\n\
    \        var sentences = S.Split(new char[] { '.', '?', '!' });\n        foreach\
    \ (var sentence in sentences) {\n            var words = sentence.Split(new char[]\
    \ { ' ' });\n            if (words.Length > 0 && words[0] == \"I\") {\n      \
    \          boredoms++;\n            }\n        }\n        return boredoms;", " \
    \       // Your code here\n        return 0;", "        // Your code here.\n \
    \       return 0L;", "        return S.Split(new char[] { '.', '?', '!' }).Count(s\
    \ => s.Trim().StartsWith(\"I\"));", "        long count = 0;\n        string[]\
    \ sentences = S.Split(new char[] { '.', '?', '!' });\n        foreach (string\
    \ sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"I\"))\
    \ {\n                count++;\n            }\n        }\n        return count;",
  "        long count = 0;\n        string[] sentences = S.Split(new char[] { '.',\
    \ '?', '!' });\n        foreach (string sentence in sentences) {\n           \
    \ if (sentence.Trim().StartsWith(\"I\")) {\n                count++;\n       \
    \     }\n        }\n        return count;", "        // Your code goes here.\n\
    \        return 0L;", "        long count = 0;\n        string[] sentences = S.Split(new\
    \ char[] { '.', '?', '!' });\n        foreach (string sentence in sentences) {\n\
    \            if (sentence.StartsWith(\"I\")) {\n                count++;\n   \
    \         }\n        }\n        return count;", "        long boredoms = 0;\n\
    \        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n       \
    \ foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;", "        var boredoms = 0L;\n        var words = S.Split(' ', '.',\
    \ '?', '!');\n        foreach (var word in words) {\n            if (word == \"\
    I\") {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;", "        return S.Split(new char[] { '.', '?', '!' }).Count(s =>\
    \ s.Trim().StartsWith(\"I\"));", "        long boredoms = 0;\n        string[]\
    \ sentences = S.Split(new char[] { '.', '?', '!' });\n        foreach (string\
    \ sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"I\"))\
    \ {\n                boredoms++;\n            }\n        }\n        return boredoms;",
  "        return S.Split(new char[] { '.', '?', '!' }).Count(s => s.Trim().StartsWith(\"\
    I\"));", "        long boredoms = 0;\n        string[] sentences = S.Split(new\
    \ char[] { '.', '?', '!' });\n        foreach (string sentence in sentences) {\n\
    \            if (sentence.Trim().StartsWith(\"I\")) {\n                boredoms++;\n\
    \            }\n        }\n        return boredoms;", "        long boredoms =\
    \ 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n  \
    \      foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;", "        return S.Split(new char[] { '.', '?', '!' }).Count(x =>\
    \ x.Trim().StartsWith(\"I\"));", "        long count = 0;\n        string[] sentences\
    \ = S.Split(new char[] { '.', '?', '!' });\n        foreach (string sentence in\
    \ sentences) {\n            if (sentence.Trim().StartsWith(\"I\")) {\n       \
    \         count++;\n            }\n        }\n        return count;", "      \
    \  // TODO: Implement this function\n        return 0;", "        long count =\
    \ 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n  \
    \      foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;",
  "        long boredoms = 0;\n        string[] sentences = S.Split(new char[] { '.',\
    \ '?', '!' });\n        foreach (string sentence in sentences) {\n           \
    \ if (sentence.Trim().StartsWith(\"I\")) {\n                boredoms++;\n    \
    \        }\n        }\n        return boredoms;", "        // Your code here\n\
    \        return 0;", "        long boredoms = 0;\n        string[] sentences =\
    \ S.Split(new char[] { '.', '?', '!' });\n        foreach (string sentence in\
    \ sentences) {\n            if (sentence.Trim().StartsWith(\"I\")) {\n       \
    \         boredoms++;\n            }\n        }\n        return boredoms;", " \
    \       long boredoms = 0;\n        string[] sentences = S.Split(new char[] {\
    \ '.', '?', '!' });\n        foreach (string sentence in sentences) {\n      \
    \      if (sentence.Trim().StartsWith(\"I\")) {\n                boredoms++;\n\
    \            }\n        }\n        return boredoms;", "        long count = 0;\n\
    \        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n       \
    \ foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;",
  "        return S.Split(new char[] { '.', '?', '!' }).Count(x => x.Trim().StartsWith(\"\
    I\"));", "        return S.Split(new char[] { '.', '?', '!' }).Count(s => s.Trim().StartsWith(\"\
    I\"));", "        long boredoms = 0;\n        string[] sentences = S.Split(new\
    \ char[] { '.', '?', '!' });\n        foreach (string sentence in sentences) {\n\
    \            if (sentence.Trim().StartsWith(\"I\")) {\n                boredoms++;\n\
    \            }\n        }\n        return boredoms;", "        long boredoms =\
    \ 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n  \
    \      foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;", "        long boredoms = 0;\n        string[] sentences = S.Split(new\
    \ char[] { '.', '?', '!' });\n        foreach (string sentence in sentences) {\n\
    \            if (sentence.Trim().StartsWith(\"I\")) {\n                boredoms++;\n\
    \            }\n        }\n        return boredoms;", "        return S.Split(new\
    \ char[] { '.', '?', '!' }, StringSplitOptions.RemoveEmptyEntries).Where(s =>\
    \ s.Trim().StartsWith(\"I\")).Count();", "        var boredoms = 0L;\n       \
    \ var sentences = S.Split(new char[] { '.', '?', '!' });\n        foreach (var\
    \ sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"I\"))\
    \ {\n                boredoms++;\n            }\n        }\n        return boredoms;",
  "        // TODO: Implement this function.\n        return 0;", "        // Your\
    \ code goes here.\n        return 0L;", "        return S.Split('.', '?', '!').Count(x\
    \ => x.Trim().StartsWith(\"I\"));", "        // Your code here\n        return\
    \ 0;", "        long boredoms = 0;\n        var sentences = S.Split(new char[]\
    \ { '.', '?', '!' });\n        foreach (var sentence in sentences) {\n       \
    \     var words = sentence.Split(' ');\n            if (words.Length > 0 && words[0]\
    \ == \"I\") {\n                boredoms++;\n            }\n        }\n       \
    \ return boredoms;", "        return S.Split(new char[] { '.', '?', '!' }).Count(s\
    \ => s.Trim().StartsWith(\"I\"));", "        // Your code here\n        return\
    \ 0;", "        long boredoms = 0;\n        string[] sentences = S.Split(new char[]\
    \ { '.', '?', '!' });\n        foreach (string sentence in sentences) {\n    \
    \        if (sentence.Trim().StartsWith(\"I\")) {\n                boredoms++;\n\
    \            }\n        }\n        return boredoms;", "        long boredoms =\
    \ 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n  \
    \      foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;", "        // Your code here\n        return 0;", "        long boredoms\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;", "        long boredoms = 0;\n        string[] sentences = S.Split(new\
    \ char[] { '.', '?', '!' });\n        foreach (string sentence in sentences) {\n\
    \            if (sentence.Trim().StartsWith(\"I\")) {\n                boredoms++;\n\
    \            }\n        }\n        return boredoms;", "        long boredoms =\
    \ 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n  \
    \      foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;", "        long boredoms = 0;\n        string[] sentences = S.Split(new\
    \ char[] { '.', '?', '!' });\n        foreach (string sentence in sentences) {\n\
    \            if (sentence.Trim().StartsWith(\"I\")) {\n                boredoms++;\n\
    \            }\n        }\n        return boredoms;", "        long boredoms =\
    \ 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n  \
    \      foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;", "        long count = 0;\n        string[] words = S.Split('.',\
    \ '?', '!');\n        foreach (string word in words) {\n            if (word.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;",
  "        return S.Split(new char[] { '.', '?', '!' }).Where(s => s.Trim().StartsWith(\"\
    I\")).Count();", "        // Your code here\n        return 0;", "        long\
    \ count = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!'\
    \ });\n        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;",
  "        long boredoms = 0;\n        string[] sentences = S.Split(new char[] { '.',\
    \ '?', '!' });\n        foreach (string sentence in sentences) {\n           \
    \ if (sentence.Trim().StartsWith(\"I\")) {\n                boredoms++;\n    \
    \        }\n        }\n        return boredoms;", "        // Your code goes here.\n\
    \        return 0L;", "        // TODO: Implement this function.\n        return\
    \ 0;", "        return S.Split('.', '?', '!').Count(s => s.Trim().StartsWith(\"\
    I\"));", "        // Your code here\n        return 0;", "        long boredoms\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;", "        return S.Split(new char[] { '.', '?', '!' }).Count(s =>\
    \ s.Trim().StartsWith(\"I\"));", "        long count = 0;\n        string[] sentences\
    \ = S.Split(new char[] { '.', '?', '!' });\n        foreach (string sentence in\
    \ sentences) {\n            if (sentence.Trim().StartsWith(\"I\")) {\n       \
    \         count++;\n            }\n        }\n        return count;", "      \
    \  // Your code goes here.\n        return 0L;", "        long boredoms = 0;\n\
    \        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n       \
    \ foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;", "        var boredoms = 0L;\n        var sentences = S.Split(new[]\
    \ { '.', '?', '!' }, StringSplitOptions.RemoveEmptyEntries);\n        foreach\
    \ (var sentence in sentences) {\n            if (sentence.StartsWith(\"I\")) {\n\
    \                boredoms++;\n            }\n        }\n        return boredoms;",
  "        long count = 0;\n        string[] sentences = S.Split(new char[] { '.',\
    \ '?', '!' });\n        foreach (string sentence in sentences) {\n           \
    \ if (sentence.Trim().StartsWith(\"I\")) {\n                count++;\n       \
    \     }\n        }\n        return count;", "        long boredoms = 0;\n    \
    \    string[] sentences = S.Split(new char[] { '.', '?', '!' });\n        foreach\
    \ (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;", "        long count = 0;\n        string[] sentences = S.Split(new\
    \ char[] { '.', '?', '!' });\n        foreach (string sentence in sentences) {\n\
    \            if (sentence.Trim().StartsWith(\"I\")) {\n                count++;\n\
    \            }\n        }\n        return count;", "        // TODO: Implement\
    \ this function.\n        return 0;", "        // Your code here\n        return\
    \ 0;", "        var boredoms = 0L;\n        var sentences = S.Split(new char[]\
    \ { '.', '?', '!' });\n        foreach (var sentence in sentences) {\n       \
    \     if (sentence.Trim().StartsWith(\"I\")) {\n                boredoms++;\n\
    \            }\n        }\n        return boredoms;", "        var boredoms =\
    \ 0L;\n        var sentences = S.Split(new char[] { '.', '?', '!' });\n      \
    \  foreach (var sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;", "        long boredoms = 0;\n        string[] sentences = S.Split(new\
    \ char[] { '.', '?', '!' });\n        foreach (string sentence in sentences) {\n\
    \            if (sentence.Trim().StartsWith(\"I\")) {\n                boredoms++;\n\
    \            }\n        }\n        return boredoms;", "        long boredoms =\
    \ 0;\n        int i = 0;\n        while (i < S.Length) {\n            if (S[i]\
    \ == 'I') {\n                boredoms++;\n            }\n            while (i\
    \ < S.Length && S[i] != '.' && S[i] != '?' && S[i] != '!') {\n               \
    \ i++;\n            }\n            i++;\n        }\n        return boredoms;",
  "        // TODO: Implement this function\n        return 0;", "        return S.Split(new\
    \ char[] { '.', '?', '!' }).Count(s => s.Trim().StartsWith(\"I\"));", "      \
    \  // Your code goes here.\n        return 0L;", "        return S.Split(new char[]\
    \ { '.', '?', '!' }).Where(s => s.Trim().StartsWith(\"I\")).Count();", "     \
    \   long boredoms = 0;\n        string[] sentences = S.Split(new char[] { '.',\
    \ '?', '!' });\n        foreach (string sentence in sentences) {\n           \
    \ if (sentence.Trim().StartsWith(\"I\")) {\n                boredoms++;\n    \
    \        }\n        }\n        return boredoms;", "        return S.Split(new\
    \ char[] { '.', '?', '!' }).Where(s => s.Trim().StartsWith(\"I\")).Count();",
  "        long boredoms = 0;\n        string[] sentences = S.Split(new char[] { '.',\
    \ '?', '!' });\n        foreach (string sentence in sentences) {\n           \
    \ string[] words = sentence.Split(new char[] { ' ' });\n            if (words.Length\
    \ > 0 && words[0] == \"I\") {\n                boredoms++;\n            }\n  \
    \      }\n        return boredoms;", "        return S.Split(new char[] { '.',\
    \ '?', '!' }).Count(s => s.Trim().StartsWith(\"I\"));", "        var boredoms\
    \ = 0L;\n        var words = S.Split(' ', '.', '?', '!');\n        for (var i\
    \ = 0; i < words.Length; i++) {\n            if (words[i] == \"I\") {\n      \
    \          boredoms++;\n            }\n        }\n        return boredoms;", " \
    \       return S.Split('.', '?', '!').Where(s => s.Trim().StartsWith(\"I\")).Count();",
  "        long boredoms = 0;\n        int i = 0;\n        while (i < S.Length) {\n\
    \            if (S[i] == 'I') {\n                boredoms++;\n            }\n\
    \            while (i < S.Length && S[i] != '.' && S[i] != '?' && S[i] != '!')\
    \ {\n                i++;\n            }\n            i++;\n        }\n      \
    \  return boredoms;", "        return S.Split(new char[] { '.', '?', '!' }).Count(s\
    \ => s.Trim().StartsWith(\"I\"));", "        long count = 0;\n        string[]\
    \ sentences = S.Split(new char[] { '.', '?', '!' });\n        foreach (string\
    \ sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"I\"))\
    \ {\n                count++;\n            }\n        }\n        return count;",
  "        long boredoms = 0;\n        string[] sentences = S.Split(new char[] { '.',\
    \ '?', '!' });\n        foreach (string sentence in sentences) {\n           \
    \ if (sentence.Trim().StartsWith(\"I\")) {\n                boredoms++;\n    \
    \        }\n        }\n        return boredoms;", "        int boredoms = 0;\n\
    \        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n       \
    \ foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;", "        long boredoms = 0;\n        string[] sentences = S.Split(new\
    \ char[] { '.', '?', '!' });\n        foreach (string sentence in sentences) {\n\
    \            if (sentence.Trim().StartsWith(\"I\")) {\n                boredoms++;\n\
    \            }\n        }\n        return boredoms;", "        return S.Split(new\
    \ char[] { '.', '?', '!' }).Count(s => s.Trim().StartsWith(\"I\"));", "      \
    \  long count = 0;\n        string[] sentences = S.Split(new char[] { '.', '?',\
    \ '!' });\n        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;",
  "        return S.Split(new char[] { '.', '?', '!' }).Count(s => s.Trim().StartsWith(\"\
    I\"));", "        return S.Split(new char[] { '.', '?', '!' }).Count(x => x.StartsWith(\"\
    I\"));", "        long count = 0;\n        string[] words = S.Split(new char[]\
    \ { '.', '?', '!' });\n        foreach (string word in words) {\n            if\
    \ (word.Trim().StartsWith(\"I\")) {\n                count++;\n            }\n\
    \        }\n        return count;", "        var boredoms = 0L;\n        var sentences\
    \ = S.Split(new char[] { '.', '?', '!' });\n        foreach (var sentence in sentences)\
    \ {\n            if (sentence.Trim().StartsWith(\"I\")) {\n                boredoms++;\n\
    \            }\n        }\n        return boredoms;", "        long count = 0;\n\
    \        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n       \
    \ foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;",
  "        long boredoms = 0;\n        var sentences = S.Split(new char[] { '.', '?',\
    \ '!' });\n        foreach (var sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;", "        long boredoms = 0;\n        string[] sentences = S.Split(new\
    \ char[] { '.', '?', '!' });\n        foreach (string sentence in sentences) {\n\
    \            if (sentence.Trim().StartsWith(\"I\")) {\n                boredoms++;\n\
    \            }\n        }\n        return boredoms;", "        long boredoms =\
    \ 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n  \
    \      foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;", "        // Your code here\n        return 0;", "        long boredoms\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;", "        long count = 0;\n        string[] sentences = S.Split(new\
    \ char[] { '.', '?', '!' });\n        foreach (string sentence in sentences) {\n\
    \            if (sentence.Trim().StartsWith(\"I\")) {\n                count++;\n\
    \            }\n        }\n        return count;", "        long count = 0;\n\
    \        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n       \
    \ foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;",
  "        var boredoms = 0L;\n        var sentences = S.Split(new char[] { '.', '?',\
    \ '!' });\n        foreach (var sentence in sentences) {\n            if (sentence.StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;", "        return S.Split(new char[] { '.', '?', '!' }).Count(x =>\
    \ x.Trim().StartsWith(\"I\"));", "        long boredoms = 0;\n        string[]\
    \ sentences = S.Split(new char[] { '.', '?', '!' });\n        foreach (string\
    \ sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"I\"))\
    \ {\n                boredoms++;\n            }\n        }\n        return boredoms;",
  "        long count = 0;\n        string[] sentences = S.Split(new char[] { '.',\
    \ '?', '!' });\n        foreach (string sentence in sentences) {\n           \
    \ if (sentence.Trim().StartsWith(\"I\")) {\n                count++;\n       \
    \     }\n        }\n        return count;", "        // Your code here\n     \
    \   return 0;", "        // Your code here\n        return 0;", "        long\
    \ boredoms = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!'\
    \ });\n        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;", "        // Your code goes here\n        return 0;", "        //\
    \ TODO: Implement this function\n        return 0;", "        long boredoms =\
    \ 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n  \
    \      foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;", "        // Your code goes here.\n        return 0L;", "       \
    \ // Your code here\n        return 0;", "        var boredoms = 0L;\n       \
    \ var sentences = S.Split(new char[] { '.', '?', '!' });\n        foreach (var\
    \ sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"I\"))\
    \ {\n                boredoms++;\n            }\n        }\n        return boredoms;",
  "        // Your code here.\n        return 0L;", "        // Your code here\n \
    \       return 0;", "        return S.Split(new char[] { '.', '?', '!' }).Count(s\
    \ => s.Trim().StartsWith(\"I\"));", "        var words = S.Split(new char[] {\
    \ '.', '?', '!' }, StringSplitOptions.RemoveEmptyEntries);\n        long boredoms\
    \ = 0;\n        foreach (var word in words) {\n            if (word.StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;", "        long boredoms = 0;\n        string[] sentences = S.Split(new\
    \ char[] { '.', '?', '!' });\n        foreach (string sentence in sentences) {\n\
    \            if (sentence.Trim().StartsWith(\"I\")) {\n                boredoms++;\n\
    \            }\n        }\n        return boredoms;", "        // Your code goes\
    \ here.\n        return 0L;", "        long boredoms = 0;\n        string[] sentences\
    \ = S.Split(new char[] { '.', '?', '!' });\n        foreach (string sentence in\
    \ sentences) {\n            if (sentence.Trim().StartsWith(\"I\")) {\n       \
    \         boredoms++;\n            }\n        }\n        return boredoms;", " \
    \       long boredoms = 0;\n        for (int i = 0; i < S.Length; i++) {\n   \
    \         if (S[i] == 'I') {\n                boredoms++;\n            }\n   \
    \     }\n        return boredoms;", "        return S.Split(new char[] { '.',\
    \ '?', '!' }).Count(s => s.Trim().StartsWith(\"I\"));", "        long count =\
    \ 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n  \
    \      foreach (string sentence in sentences) {\n            if (sentence.StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;",
  "        long boredoms = 0;\n        string[] sentences = S.Split(new char[] { '.',\
    \ '?', '!' });\n        foreach (string sentence in sentences) {\n           \
    \ if (sentence.Trim().StartsWith(\"I\")) {\n                boredoms++;\n    \
    \        }\n        }\n        return boredoms;", "        long count = 0;\n \
    \       string[] sentences = S.Split(new char[] { '.', '?', '!' });\n        foreach\
    \ (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;",
  "        long boredoms = 0;\n        string[] sentences = S.Split(new char[] { '.',\
    \ '?', '!' });\n        foreach (string sentence in sentences) {\n           \
    \ if (sentence.Trim().StartsWith(\"I\")) {\n                boredoms++;\n    \
    \        }\n        }\n        return boredoms;", "        long boredoms = 0;\n\
    \        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n       \
    \ foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;", "        return S.Split(new char[] { '.', '?', '!' }).Count(s =>\
    \ s.Trim().StartsWith(\"I\"));", "        return S.Split(new char[] { '.', '?',\
    \ '!' }).Where(s => s.Trim().StartsWith(\"I\")).Count();", "        long boredoms\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;", "        long boredoms = 0;\n        string[] sentences = S.Split(new\
    \ char[] { '.', '?', '!' });\n        foreach (string sentence in sentences) {\n\
    \            if (sentence.Trim().StartsWith(\"I\")) {\n                boredoms++;\n\
    \            }\n        }\n        return boredoms;", "        long boredoms =\
    \ 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n  \
    \      foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;", "        return S.Split(new char[] { '.', '?', '!' }).Count(x =>\
    \ x.Trim().StartsWith(\"I\"));", "        long boredoms = 0;\n        string[]\
    \ sentences = S.Split(new char[] { '.', '?', '!' });\n        foreach (string\
    \ sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"I\"))\
    \ {\n                boredoms++;\n            }\n        }\n        return boredoms;",
  "        long count = 0;\n        string[] sentences = S.Split(new char[] { '.',\
    \ '?', '!' });\n        foreach (string sentence in sentences) {\n           \
    \ if (sentence.Trim().StartsWith(\"I\")) {\n                count++;\n       \
    \     }\n        }\n        return count;", "        long boredoms = 0;\n    \
    \    string[] sentences = S.Split(new char[] { '.', '?', '!' });\n        foreach\
    \ (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;", "        long boredoms = 0;\n        string[] sentences = S.Split(new\
    \ char[] { '.', '?', '!' });\n        foreach (string sentence in sentences) {\n\
    \            if (sentence.Trim().StartsWith(\"I\")) {\n                boredoms++;\n\
    \            }\n        }\n        return boredoms;", "        long count = 0;\n\
    \        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n       \
    \ foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;",
  "        // TODO: Implement me\n        return 0;", "        // Your code goes here\n\
    \        return 0;", "        // Your code goes here.\n        return 0L;", " \
    \       long boredoms = 0;\n        string[] sentences = S.Split(new char[] {\
    \ '.', '?', '!' });\n        foreach (string sentence in sentences) {\n      \
    \      if (sentence.Trim().StartsWith(\"I\")) {\n                boredoms++;\n\
    \            }\n        }\n        return boredoms;", "        long boredoms =\
    \ 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n  \
    \      foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;", "        // Your code here\n        return 0;", "        long boredoms\
    \ = 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;", "        long boredoms = 0;\n        string[] sentences = S.Split(new\
    \ char[] { '.', '?', '!' });\n        foreach (string sentence in sentences) {\n\
    \            if (sentence.Trim().StartsWith(\"I\")) {\n                boredoms++;\n\
    \            }\n        }\n        return boredoms;", "        long boredoms =\
    \ 0;\n        // TODO: Implement this function\n        return boredoms;", " \
    \       // Your code here\n        return 0;", "        // Write your code here\n\
    \        return 0L;", "        long boredoms = 0;\n        string[] sentences\
    \ = S.Split(new char[] { '.', '?', '!' });\n        foreach (string sentence in\
    \ sentences) {\n            if (sentence.Trim().StartsWith(\"I\")) {\n       \
    \         boredoms++;\n            }\n        }\n        return boredoms;", " \
    \       long boredoms = 0;\n        string[] sentences = S.Split(new char[] {\
    \ '.', '?', '!' });\n        foreach (string sentence in sentences) {\n      \
    \      string[] words = sentence.Split(' ');\n            if (words.Length > 0\
    \ && words[0] == \"I\") {\n                boredoms++;\n            }\n      \
    \  }\n        return boredoms;", "        long boredoms = 0;\n        string[]\
    \ sentences = S.Split(new char[] { '.', '?', '!' });\n        foreach (string\
    \ sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"I\"))\
    \ {\n                boredoms++;\n            }\n        }\n        return boredoms;",
  "        // TODO: Implement me\n        return 0;", "        long count = 0;\n \
    \       string[] sentences = S.Split(new char[] { '.', '?', '!' });\n        foreach\
    \ (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;",
  "        long count = 0;\n        string[] sentences = S.Split(new char[] { '.',\
    \ '?', '!' });\n        foreach (string sentence in sentences) {\n           \
    \ if (sentence.Trim().StartsWith(\"I\")) {\n                count++;\n       \
    \     }\n        }\n        return count;", "        // Your code goes here.\n\
    \        return 0L;", "        // Your code goes here.\n        return 0L;", " \
    \       long boredoms = 0;\n        string[] sentences = S.Split(new char[] {\
    \ '.', '?', '!' });\n        foreach (string sentence in sentences) {\n      \
    \      if (sentence.Trim().StartsWith(\"I\")) {\n                boredoms++;\n\
    \            }\n        }\n        return boredoms;", "        long count = 0;\n\
    \        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n       \
    \ foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;",
  "        long count = 0;\n        string[] sentences = S.Split(new char[] { '.',\
    \ '?', '!' });\n        foreach (string sentence in sentences) {\n           \
    \ if (sentence.Trim().StartsWith(\"I\")) {\n                count++;\n       \
    \     }\n        }\n        return count;", "        // TODO: Implement this function\n\
    \        return 0;", "        long boredoms = 0;\n        string[] sentences =\
    \ S.Split(new char[] { '.', '?', '!' });\n        foreach (string sentence in\
    \ sentences) {\n            if (sentence.Trim().StartsWith(\"I\")) {\n       \
    \         boredoms++;\n            }\n        }\n        return boredoms;", " \
    \       var boredoms = 0L;\n        var words = S.Split(' ', '.', '?', '!');\n\
    \        foreach (var word in words) {\n            if (word == \"I\") {\n   \
    \             boredoms++;\n            }\n        }\n        return boredoms;",
  "        return S.Split(new char[] { '.', '?', '!' }).Count(x => x.Trim().StartsWith(\"\
    I\"));", "        long boredoms = 0;\n        string[] sentences = S.Split(new\
    \ char[] { '.', '?', '!' });\n        foreach (string sentence in sentences) {\n\
    \            if (sentence.Trim().StartsWith(\"I\")) {\n                boredoms++;\n\
    \            }\n        }\n        return boredoms;", "        long count = 0;\n\
    \        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n       \
    \ foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;",
  "        long count = 0;\n        string[] words = S.Split(new char[] { '.', '?',\
    \ '!' });\n        foreach (string word in words) {\n            if (word.StartsWith(\"\
    I\")) {\n                count++;\n            }\n        }\n        return count;",
  "        long count = 0;\n        string[] sentences = S.Split(new char[] { '.',\
    \ '?', '!' });\n        foreach (string sentence in sentences) {\n           \
    \ if (sentence.Trim().StartsWith(\"I\")) {\n                count++;\n       \
    \     }\n        }\n        return count;", "        var boredoms = 0L;\n    \
    \    var words = S.Split(' ', '.', '?', '!');\n        for (var i = 0; i < words.Length;\
    \ i++) {\n            if (words[i] == \"I\") {\n                boredoms++;\n\
    \            }\n        }\n        return boredoms;", "        long boredoms =\
    \ 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n  \
    \      foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;", "        long boredoms = 0;\n        string[] sentences = S.Split(new\
    \ char[] { '.', '?', '!' });\n        foreach (string sentence in sentences) {\n\
    \            if (sentence.Trim().StartsWith(\"I\")) {\n                boredoms++;\n\
    \            }\n        }\n        return boredoms;", "        // Your code here\n\
    \        return 0;", "        long boredoms = 0;\n        string[] sentences =\
    \ S.Split(new char[] { '.', '?', '!' });\n        foreach (string sentence in\
    \ sentences) {\n            if (sentence.StartsWith(\"I\")) {\n              \
    \  boredoms++;\n            }\n        }\n        return boredoms;", "       \
    \ long boredoms = 0;\n        string[] sentences = S.Split(new char[] { '.', '?',\
    \ '!' });\n        foreach (string sentence in sentences) {\n            string[]\
    \ words = sentence.Split(new char[] { ' ' });\n            if (words.Length >\
    \ 0 && words[0] == \"I\") {\n                boredoms++;\n            }\n    \
    \    }\n        return boredoms;", "        return S.Split(new char[] { '.', '?',\
    \ '!' }).Count(s => s.Trim().StartsWith(\"I\"));", "        long boredoms = 0;\n\
    \        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n       \
    \ foreach (string sentence in sentences) {\n            if (sentence.StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;", "        long boredoms = 0;\n        string[] sentences = S.Split(new\
    \ char[] { '.', '?', '!' });\n        foreach (string sentence in sentences) {\n\
    \            if (sentence.StartsWith(\"I\")) {\n                boredoms++;\n\
    \            }\n        }\n        return boredoms;", "        long boredoms =\
    \ 0;\n        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n  \
    \      foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;", "        long count = 0;\n        string[] sentences = S.Split(new\
    \ char[] { '.', '?', '!' });\n        foreach (string sentence in sentences) {\n\
    \            if (sentence.Trim().StartsWith(\"I\")) {\n                count++;\n\
    \            }\n        }\n        return count;", "        long boredoms = 0;\n\
    \        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n       \
    \ foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;", "        long count = 0;\n        string[] sentences = S.Split(new\
    \ char[] { '.', '?', '!' });\n        foreach (string sentence in sentences) {\n\
    \            if (sentence.Trim().StartsWith(\"I\")) {\n                count++;\n\
    \            }\n        }\n        return count;", "        long boredoms = 0;\n\
    \        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n       \
    \ foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;", "        long count = 0;\n        string[] sentences = S.Split(new\
    \ char[] { '.', '?', '!' });\n        foreach (string sentence in sentences) {\n\
    \            if (sentence.Trim().StartsWith(\"I\")) {\n                count++;\n\
    \            }\n        }\n        return count;", "        long boredoms = 0;\n\
    \        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n       \
    \ foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;", "        long boredoms = 0;\n        string[] sentences = S.Split(new\
    \ char[] { '.', '?', '!' }, StringSplitOptions.RemoveEmptyEntries);\n        foreach\
    \ (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;", "        // Your code goes here\n        return 0;", "        var\
    \ boredoms = 0L;\n        var sentences = S.Split(new char[] { '.', '?', '!' });\n\
    \        foreach (var sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;", "        long boredoms = 0;\n        string[] sentences = S.Split(new\
    \ char[] { '.', '?', '!' });\n        foreach (string sentence in sentences) {\n\
    \            if (sentence.Trim().StartsWith(\"I\")) {\n                boredoms++;\n\
    \            }\n        }\n        return boredoms;", "        // Your code here\n\
    \        return 0;", "        // Your code goes here.\n        return 0L;", " \
    \       // Your code goes here\n        return 0;", "        long boredoms = 0;\n\
    \        string[] sentences = S.Split(new char[] { '.', '?', '!' });\n       \
    \ foreach (string sentence in sentences) {\n            if (sentence.Trim().StartsWith(\"\
    I\")) {\n                boredoms++;\n            }\n        }\n        return\
    \ boredoms;", "        long boredoms = 0;\n        string[] sentences = S.Split(new\
    \ char[] { '.', '?', '!' });\n        foreach (string sentence in sentences) {\n\
    \            if (sentence.Trim().StartsWith(\"I\")) {\n                boredoms++;\n\
    \            }\n        }\n        return boredoms;"]
stop_tokens:
- "\n    }\n"

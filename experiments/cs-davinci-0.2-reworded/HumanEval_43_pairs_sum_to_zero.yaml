name: HumanEval_43_pairs_sum_to_zero
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // pairs_sum_to_zero takes a list of integers as an input.\n  \
  \  // it returns true if there are two distinct elements in the list that\n    //\
  \ sum to zero, and false otherwise.\n    // >>> PairsSumToZero((new List<long>(new\
  \ long[]{(long)1L, (long)3L, (long)5L, (long)0L})))\n    // (false)\n    // >>>\
  \ PairsSumToZero((new List<long>(new long[]{(long)1L, (long)3L, (long)-2L, (long)1L})))\n\
  \    // (false)\n    // >>> PairsSumToZero((new List<long>(new long[]{(long)1L,\
  \ (long)2L, (long)3L, (long)7L})))\n    // (false)\n    // >>> PairsSumToZero((new\
  \ List<long>(new long[]{(long)2L, (long)4L, (long)-5L, (long)3L, (long)5L, (long)7L})))\n\
  \    // (true)\n    // >>> PairsSumToZero((new List<long>(new long[]{(long)1L})))\n\
  \    // (false)\n    public static bool PairsSumToZero(List<long> l) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(PairsSumToZero((new\
  \ List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)0L}))) == (false));\n\
  \    Debug.Assert(PairsSumToZero((new List<long>(new long[]{(long)1L, (long)3L,\
  \ (long)-2L, (long)1L}))) == (false));\n    Debug.Assert(PairsSumToZero((new List<long>(new\
  \ long[]{(long)1L, (long)2L, (long)3L, (long)7L}))) == (false));\n    Debug.Assert(PairsSumToZero((new\
  \ List<long>(new long[]{(long)2L, (long)4L, (long)-5L, (long)3L, (long)5L, (long)7L})))\
  \ == (true));\n    Debug.Assert(PairsSumToZero((new List<long>(new long[]{(long)1L})))\
  \ == (false));\n    Debug.Assert(PairsSumToZero((new List<long>(new long[]{(long)-3L,\
  \ (long)9L, (long)-1L, (long)3L, (long)2L, (long)30L}))) == (true));\n    Debug.Assert(PairsSumToZero((new\
  \ List<long>(new long[]{(long)-3L, (long)9L, (long)-1L, (long)3L, (long)2L, (long)31L})))\
  \ == (true));\n    Debug.Assert(PairsSumToZero((new List<long>(new long[]{(long)-3L,\
  \ (long)9L, (long)-1L, (long)4L, (long)2L, (long)30L}))) == (false));\n    Debug.Assert(PairsSumToZero((new\
  \ List<long>(new long[]{(long)-3L, (long)9L, (long)-1L, (long)4L, (long)2L, (long)31L})))\
  \ == (false));\n    }\n\n}\n"
completions: ["        var s = new HashSet<long>();\n        foreach (var x in l)\
    \ {\n            if (s.Contains(0L - x)) {\n                return true;\n   \
    \         }\n            s.Add(x);\n        }\n        return false;", "     \
    \   // your code here\n        return false;", "        var seen = new HashSet<long>();\n\
    \        foreach (var x in l) {\n            if (seen.Contains(-x)) {\n      \
    \          return true;\n            }\n            seen.Add(x);\n        }\n\
    \        return false;", "        // your code here\n        return false;", " \
    \       // your code here\n        return false;", "        // your code here\n\
    \        return false;", "        // Your code here.\n        return false;",
  "        // your code here\n        return false;", "        // Your code here.\n\
    \        return false;", "        // your code here\n        return false;", " \
    \       // your code here\n        return false;", "        // your code here\n\
    \        return false;", "        // Your code here\n        return false;", " \
    \       var s = new HashSet<long>();\n        foreach (var x in l) {\n       \
    \     if (s.Contains(x)) {\n                return true;\n            }\n\n  \
    \          s.Add(-x);\n        }\n\n        return false;\n", "        // Your\
    \ code here\n        return false;", "        // your code here\n        return\
    \ false;", "        // your code here\n        return false;", "        var s\
    \ = new HashSet<long>();\n        foreach (var x in l) {\n            if (s.Contains(-x))\
    \ {\n                return true;\n            }\n            s.Add(x);\n    \
    \    }\n        return false;", "        // your code here\n        return false;",
  "        // your code here\n        return false;", "        // your code here\n\
    \        return false;", "        // your code here\n        return false;", " \
    \       // your code here\n        return false;", "        // your code here\n\
    \        return false;", "        // Your code here.\n        return false;",
  "        // Your code here\n        return false;", "        // your code here\n\
    \        return false;", "        // your code here\n        return false;", " \
    \       // your code here\n        return false;", "        // Your code here\n\
    \        return false;", "        if (l.Count < 2) {\n            return false;\n\
    \        }\n        var s = new HashSet<long>();\n        foreach (var x in l)\
    \ {\n            if (s.Contains(-x)) {\n                return true;\n       \
    \     }\n            s.Add(x);\n        }\n        return false;", "        //\
    \ Your code here.\n        return false;", "        // Your code here.\n     \
    \   return false;", "        var s = new HashSet<long>();\n        foreach (var\
    \ x in l) {\n            if (s.Contains(0L - x)) {\n                return true;\n\
    \            }\n\n            s.Add(x);\n        }\n\n        return false;\n",
  "        // your code here\n        return false;", "        // Your code here.\n\
    \        return false;", "        // your code here\n        return false;", " \
    \       // Your code here.\n        return false;", "        // your code here\n\
    \        return false;", "        var s = new HashSet<long>();\n        foreach\
    \ (var x in l) {\n            if (s.Contains(x)) {\n                return true;\n\
    \            }\n\n            s.Add(-x);\n        }\n\n        return false;\n",
  "        // your code here\n        return false;", "        // Your code here\n\
    \        return false;", "        // your code here\n        return false;", " \
    \       // Your code here.\n        return false;", "        // your code here\n\
    \        return false;", "        // your code here\n        return false;", " \
    \       // your code here\n        return false;", "        bool[] seen = new\
    \ bool[l.Count];\n        for (int i = 0; i < l.Count; i++) {\n            if\
    \ (seen[i]) {\n                continue;\n            }\n            for (int\
    \ j = i + 1; j < l.Count; j++) {\n                if (seen[j]) {\n           \
    \         continue;\n                }\n                if (l[i] + l[j] == 0L)\
    \ {\n                    return true;\n                }\n            }\n    \
    \    }\n        return false;", "        // your code here\n        return false;",
  "        // your code here\n        return false;", "        // Your code here.\n\
    \        return false;", "        long[] a = l.ToArray();\n        Array.Sort(a);\n\
    \        for (int i = 0; i < a.Length; i++) {\n            for (int j = i + 1;\
    \ j < a.Length; j++) {\n                if (a[i] + a[j] == 0) {\n            \
    \        return true;\n                }\n            }\n        }\n        return\
    \ false;", "        // your code here\n        return false;", "        var s\
    \ = new HashSet<long>();\n        foreach (var x in l) {\n            if (s.Contains(x))\
    \ {\n                return true;\n            }\n\n            s.Add(-x);\n \
    \       }\n\n        return false;\n", "        // your code here\n        return\
    \ false;", "        // insert your code here\n        return false;", "      \
    \  // your code here\n        return false;", "        // your code here\n   \
    \     return false;", "        // YOUR CODE HERE\n        return false;", "  \
    \      // your code here\n        return false;", "        // your code here\n\
    \        return false;", "        // your code here\n        return false;", " \
    \       // Your code here.\n        return false;", "        // your code here\n\
    \        return false;", "        // Your code here.\n        return false;",
  "        var s = new HashSet<long>();\n        foreach (var x in l) {\n        \
    \    if (s.Contains(x)) {\n                return true;\n            }\n\n   \
    \         s.Add(-x);\n        }\n\n        return false;\n", "        // Your\
    \ code here.\n        return false;", "        var seen = new HashSet<long>();\n\
    \        foreach (var x in l) {\n            if (seen.Contains(-(x))) {\n    \
    \            return true;\n            }\n            seen.Add(x);\n        }\n\
    \        return false;", "        if (l.Count == 0) {\n            return false;\n\
    \        }\n        if (l.Count == 1) {\n            return false;\n        }\n\
    \        if (l.Count == 2) {\n            return l[0] + l[1] == 0;\n        }\n\
    \        if (l.Count == 3) {\n            return l[0] + l[1] == 0 || l[0] + l[2]\
    \ == 0 || l[1] + l[2] == 0;\n        }\n        if (l.Count == 4) {\n        \
    \    return l[0] + l[1] == 0 || l[0] + l[2] == 0 || l[0] + l[3] == 0 || l[1] +\
    \ l[2] == 0 || l[1] + l[3] == 0 || l[2] + l[3] == 0;\n        }\n        if (l.Count\
    \ == 5) {\n            return l[0] + l[1] == 0 || l[0] + l[2] == 0 || l[0] + l[3]\
    \ == 0 || l[0] + l[4] == 0 || l[1] + l[2] == 0 || l[1] + l[3] == 0 || l[1] + l[4]\
    \ == 0 || l[2] + l[3] == 0 || l[2] + l[4] == 0 || l[3] + l[4] == 0;\n        }\n\
    \        if (l.Count == 6) {\n            return l[0] + l[1] == 0 || l[0] + l[2]\
    \ == 0 || l[0] + l[3] == 0 || l[0] + l[4] == 0 || l[0] + l[5] == 0 || l[1] + l[2]\
    \ == 0 || l[1] + l[3] == 0 || l[1] + l[4] == 0 || l[1] + l[5] == 0 || l[2] + l[3]\
    \ == 0 || l[2] + l[4] == 0 || l[2] + l[5] == 0 || l[3] + l[4", "        // Your\
    \ code here.\n        return false;", "        // your code here\n        return\
    \ false;", "        // Your code here\n        return false;", "        // your\
    \ code here\n        return false;", "        // your code here\n        return\
    \ false;", "        // Your code here.\n        return false;", "        // Your\
    \ code here.\n        return false;", "        // your code here\n        return\
    \ false;", "        // your code here\n        return false;", "        // your\
    \ code here\n        return false;", "        // TODO: implement this function\n\
    \        return false;", "        // your code here\n        return false;", " \
    \       // your code here\n        return false;", "        // Your code here\n\
    \        return false;", "        // Your code here\n        return false;", " \
    \       // Your code here\n        return false;", "        // Your code here.\n\
    \        return false;", "        // your code here\n        return false;", " \
    \       var s = new HashSet<long>();\n        foreach (var x in l) {\n       \
    \     if (s.Contains(x)) {\n                return true;\n            }\n    \
    \        s.Add(-x);\n        }\n        return false;", "        var s = new HashSet<long>();\n\
    \        foreach (var x in l) {\n            if (s.Contains(-x)) {\n         \
    \       return true;\n            }\n\n            s.Add(x);\n        }\n\n  \
    \      return false;\n", "        // Your code goes here.\n        return false;",
  "        // your code here\n        return false;", "        // Your code here\n\
    \        return false;", "        // your code here\n        return false;", " \
    \       // Your code here\n        return false;", "        // your code here\n\
    \        return false;", "        var s = new HashSet<long>();\n        foreach\
    \ (var x in l) {\n            if (s.Contains(x)) {\n                return true;\n\
    \            }\n\n            s.Add(-x);\n        }\n\n        return false;\n",
  "        // your code here\n        return false;", "        // your code here\n\
    \        return false;", "        // your code here\n        return false;", " \
    \       // Your code here.\n        return false;", "        // Your code here\n\
    \        return false;", "        // your code here\n        return false;", " \
    \       if (l.Count < 2) {\n            return false;\n        }\n        Dictionary<long,\
    \ bool> seen = new Dictionary<long, bool>();\n        foreach (long x in l) {\n\
    \            if (seen.ContainsKey(-x)) {\n                return true;\n     \
    \       }\n            seen[x] = true;\n        }\n        return false;", " \
    \       // your code here\n        return false;", "        // Your code here\n\
    \        return false;", "        // REPLACE THIS LINE WITH YOUR CODE\n      \
    \  return false;", "        // your code here\n        return false;", "     \
    \   // your code here\n        return false;", "        // your code here\n  \
    \      return false;", "        // your code here\n        return false;", " \
    \       // your code here\n        return false;", "        // your code here\n\
    \        return false;", "        // your code here\n        return false;", " \
    \       // your code here\n        return false;", "        // your code here\n\
    \        return false;", "        // Your code here\n        return false;", " \
    \       // your code here\n        return false;", "        // your code here\n\
    \        return false;", "        // your code here\n        return false;", " \
    \       // your code here\n        return false;", "        // REPLACE THIS LINE\
    \ WITH YOUR CODE\n        return false;", "        // your code here\n       \
    \ return false;", "        // your code here\n        return false;", "      \
    \  // your code here\n        return false;", "        // Your code here.\n  \
    \      return false;", "        // Your code here\n        return false;", " \
    \       // your code here\n        return false;", "        // your code here\n\
    \        return false;", "        // your code here\n        return false;", " \
    \       // Your code here.\n        return false;", "        // REPLACE THE BODY\
    \ OF THIS FUNCTION WITH YOUR PAIRS_SUM_TO_ZERO SOLUTION\n        return false;",
  "        // Your code here\n        return false;", "        // your code goes here\n\
    \        return false;", "        // Your code here.\n        return false;",
  "        // replace the following line with your code\n        return false;", " \
    \       // your code here\n        return false;", "        // REPLACE THIS LINE\
    \ WITH YOUR CODE\n        return false;", "        // your code here\n       \
    \ return false;", "        // Your code here.\n        return false;", "     \
    \   // your code goes here\n        return false;", "        // your code here\n\
    \        return false;", "        if (l.Count == 0) {\n            return false;\n\
    \        }\n        if (l.Count == 1) {\n            return false;\n        }\n\
    \        if (l.Count == 2) {\n            return l[0] + l[1] == 0;\n        }\n\
    \        if (l.Count == 3) {\n            return l[0] + l[1] == 0 || l[0] + l[2]\
    \ == 0 || l[1] + l[2] == 0;\n        }\n        if (l.Count == 4) {\n        \
    \    return l[0] + l[1] == 0 || l[0] + l[2] == 0 || l[0] + l[3] == 0 || l[1] +\
    \ l[2] == 0 || l[1] + l[3] == 0 || l[2] + l[3] == 0;\n        }\n        if (l.Count\
    \ == 5) {\n            return l[0] + l[1] == 0 || l[0] + l[2] == 0 || l[0] + l[3]\
    \ == 0 || l[0] + l[4] == 0 || l[1] + l[2] == 0 || l[1] + l[3] == 0 || l[1] + l[4]\
    \ == 0 || l[2] + l[3] == 0 || l[2] + l[4] == 0 || l[3] + l[4] == 0;\n        }\n\
    \        if (l.Count == 6) {\n            return l[0] + l[1] == 0 || l[0] + l[2]\
    \ == 0 || l[0] + l[3] == 0 || l[0] + l[4] == 0 || l[0] + l[5] == 0 || l[1] + l[2]\
    \ == 0 || l[1] + l[3] == 0 || l[1] + l[4] == 0 || l[1] + l[5] == 0 || l[2] + l[3]\
    \ == 0 || l[2] + l[4] == 0 || l[2] + l[5] == 0 || l[3] + l[4", "        // Your\
    \ code goes here.\n        return false;", "        // input: a list of integers\
    \ l\n        // output: true if there are two distinct elements in l that sum\
    \ to zero,\n        // and false otherwise.\n        // >>> PairsSumToZero((new\
    \ List<long>(new long[]{(long)1L, (long)3L, (long)5L, (long)0L})))\n        //\
    \ (false)\n        // >>> PairsSumToZero((new List<long>(new long[]{(long)1L,\
    \ (long)3L, (long)-2L, (long)1L})))\n        // (false)\n        // >>> PairsSumToZero((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)7L})))\n        //\
    \ (false)\n        // >>> PairsSumToZero((new List<long>(new long[]{(long)2L,\
    \ (long)4L, (long)-5L, (long)3L, (long)5L, (long)7L})))\n        // (true)\n \
    \       // >>> PairsSumToZero((new List<long>(new long[]{(long)1L})))\n      \
    \  // (false)\n        // your code here\n        return false;", "        //\
    \ Your code here.\n        return false;", "        // your code here\n      \
    \  return false;", "        var s = new HashSet<long>();\n        foreach (var\
    \ x in l) {\n            if (s.Contains(-x)) {\n                return true;\n\
    \            }\n\n            s.Add(x);\n        }\n\n        return false;\n",
  "        // your code here\n        return false;", "        // your code here\n\
    \        return false;", "        // your code here\n        return false;", " \
    \       // your code here\n        return false;", "        // Insert your code\
    \ here.\n        return false;", "        // your code here\n        return false;",
  "        var h = new HashSet<long>();\n        foreach (var x in l) {\n        \
    \    if (h.Contains(x)) {\n                return true;\n            }\n     \
    \       h.Add(-x);\n        }\n        return false;", "        // input: a list\
    \ of integers\n        // output: true if there are two distinct elements in the\
    \ list that\n        // sum to zero, and false otherwise.\n        // Your code\
    \ here.\n        return false;", "        // TODO: implement this function\n \
    \       return false;", "        // your code here\n        return false;", " \
    \       var seen = new HashSet<long>();\n        foreach (var x in l) {\n    \
    \        if (seen.Contains(-(x))) {\n                return true;\n          \
    \  }\n\n            seen.Add(x);\n        }\n\n        return false;\n", "   \
    \     // your code here\n        return false;", "        // Your code here.\n\
    \        return false;", "        // Your code here\n        return false;", " \
    \       // your code here\n        return false;", "        // your code here\n\
    \        return false;", "        var s = new HashSet<long>();\n        foreach\
    \ (var x in l) {\n            if (s.Contains(-x)) {\n                return true;\n\
    \            }\n\n            s.Add(x);\n        }\n\n        return false;\n",
  "        var s = new HashSet<long>();\n        foreach (var x in l) {\n        \
    \    if (s.Contains(x)) {\n                return true;\n            }\n     \
    \       s.Add((long)(-x));\n        }\n        return false;", "        // your\
    \ code here\n        return false;", "        // your code here\n        return\
    \ false;", "        // your code here\n        return false;", "        // your\
    \ code here\n        return false;", "        // your code here\n        return\
    \ false;", "        // your code here\n        return false;", "        // your\
    \ code here\n        return false;", "        // your code here\n        return\
    \ false;", "        // Your code here.\n        return false;", "        // your\
    \ code here\n        return false;", "        var s = new HashSet<long>();\n \
    \       foreach (var x in l) {\n            if (s.Contains(x)) {\n           \
    \     return true;\n            }\n            s.Add(-x);\n        }\n       \
    \ return false;", "        // your code here\n        return false;", "      \
    \  // Your code here\n        return false;", "        // your code here\n   \
    \     return false;", "        // your code here\n        return false;", "  \
    \      // your code here\n        return false;", "        // your code here\n\
    \        return false;", "        var h = new HashSet<long>();\n        foreach\
    \ (var x in l) {\n            if (h.Contains(-x)) {\n                return true;\n\
    \            }\n            h.Add(x);\n        }\n        return false;", "  \
    \      // your code here\n        return false;", "        // your code here\n\
    \        return false;", "        // Replace the following line with your code.\n\
    \        return false;", "        // your code here\n        return false;", " \
    \       // your code here\n        return false;", "        // your code here\n\
    \        return false;", "        // your code here\n        return false;", " \
    \       // your code here\n        return false;", "        HashSet<long> h =\
    \ new HashSet<long>();\n        foreach (long x in l) {\n            if (h.Contains(-x))\
    \ {\n                return true;\n            }\n            h.Add(x);\n    \
    \    }\n        return false;", "        var s = new HashSet<long>();\n      \
    \  foreach (var x in l) {\n            if (s.Contains(-x)) {\n               \
    \ return true;\n            }\n            s.Add(x);\n        }\n        return\
    \ false;", "        var s = new HashSet<long>();\n        foreach (var i in l)\
    \ {\n            if (s.Contains(-i)) {\n                return true;\n       \
    \     }\n            s.Add(i);\n        }\n        return false;", "        //\
    \ your code here\n        return false;", "        // your code here\n       \
    \ return false;", "        // your code here\n        return false;", "      \
    \  // your code goes here\n        return false;", "        // your code here\n\
    \        return false;", "        // Your code here.\n        return false;"]
stop_tokens:
- "\n    }\n"

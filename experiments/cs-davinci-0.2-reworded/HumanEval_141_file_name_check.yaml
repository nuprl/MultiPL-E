name: HumanEval_141_file_name_check
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // Create a function which takes a string representing a file's\
  \ name, and returns\n    // 'Yes' if the the file's name is valid, and returns 'No'\
  \ otherwise.\n    // A file's name is considered to be valid if and only if all\
  \ the following conditions \n    // are met:\n    // - There should not be more\
  \ than three digits ('0'-'9') in the file's name.\n    // - The file's name contains\
  \ exactly one dot '.'\n    // - The substring before the dot should not be empty,\
  \ and it starts with a letter from \n    // the latin alphapet ('a'-'z' and 'A'-'Z').\n\
  \    // - The substring after the dot should be one of these: ['txt', 'exe', 'dll']\n\
  \    // Examples:\n    // >>> FileNameCheck((\"example.txt\"))\n    // (\"Yes\"\
  )\n    // >>> FileNameCheck((\"1example.dll\"))\n    // (\"No\")\n    public static\
  \ string FileNameCheck(string file_name) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(FileNameCheck((\"\
  example.txt\")).Equals((\"Yes\")));\n    Debug.Assert(FileNameCheck((\"1example.dll\"\
  )).Equals((\"No\")));\n    Debug.Assert(FileNameCheck((\"s1sdf3.asd\")).Equals((\"\
  No\")));\n    Debug.Assert(FileNameCheck((\"K.dll\")).Equals((\"Yes\")));\n    Debug.Assert(FileNameCheck((\"\
  MY16FILE3.exe\")).Equals((\"Yes\")));\n    Debug.Assert(FileNameCheck((\"His12FILE94.exe\"\
  )).Equals((\"No\")));\n    Debug.Assert(FileNameCheck((\"_Y.txt\")).Equals((\"No\"\
  )));\n    Debug.Assert(FileNameCheck((\"?aREYA.exe\")).Equals((\"No\")));\n    Debug.Assert(FileNameCheck((\"\
  /this_is_valid.dll\")).Equals((\"No\")));\n    Debug.Assert(FileNameCheck((\"this_is_valid.wow\"\
  )).Equals((\"No\")));\n    Debug.Assert(FileNameCheck((\"this_is_valid.txt\")).Equals((\"\
  Yes\")));\n    Debug.Assert(FileNameCheck((\"this_is_valid.txtexe\")).Equals((\"\
  No\")));\n    Debug.Assert(FileNameCheck((\"#this2_i4s_5valid.ten\")).Equals((\"\
  No\")));\n    Debug.Assert(FileNameCheck((\"@this1_is6_valid.exe\")).Equals((\"\
  No\")));\n    Debug.Assert(FileNameCheck((\"this_is_12valid.6exe4.txt\")).Equals((\"\
  No\")));\n    Debug.Assert(FileNameCheck((\"all.exe.txt\")).Equals((\"No\")));\n\
  \    Debug.Assert(FileNameCheck((\"I563_No.exe\")).Equals((\"Yes\")));\n    Debug.Assert(FileNameCheck((\"\
  Is3youfault.txt\")).Equals((\"Yes\")));\n    Debug.Assert(FileNameCheck((\"no_one#knows.dll\"\
  )).Equals((\"Yes\")));\n    Debug.Assert(FileNameCheck((\"1I563_Yes3.exe\")).Equals((\"\
  No\")));\n    Debug.Assert(FileNameCheck((\"I563_Yes3.txtt\")).Equals((\"No\")));\n\
  \    Debug.Assert(FileNameCheck((\"final..txt\")).Equals((\"No\")));\n    Debug.Assert(FileNameCheck((\"\
  final132\")).Equals((\"No\")));\n    Debug.Assert(FileNameCheck((\"_f4indsartal132.\"\
  )).Equals((\"No\")));\n    Debug.Assert(FileNameCheck((\".txt\")).Equals((\"No\"\
  )));\n    Debug.Assert(FileNameCheck((\"s.\")).Equals((\"No\")));\n    }\n\n}\n"
completions: ["        // Your code here\n        return \"\";", "        // Your\
    \ code here\n        return \"\";", "        // Write your code here\n       \
    \ return \"\";", "        // Your code goes here\n        return \"\";", "   \
    \     // Your code goes here\n        return \"\";", "        // Your code here\n\
    \        return \"\";", "        // Write your code here\n        return \"\";",
  "        // Write your code here\n        return \"\";", "        // Your code goes\
    \ here.\n        return \"\";", "        // Your code here\n        return \"\"\
    ;", "        // Your code here\n        return \"\";", "        // Your code here\n\
    \        return \"\";", "        // Write your code here\n        return \"\";",
  "        // Your code here\n        return \"\";", "        // Your code goes here\n\
    \        return \"\";", "        // Your code goes here.\n        return \"\";",
  "        // Your code goes here\n        return \"\";", "        // Write your code\
    \ here\n        return \"\";", "        // Write your code here\n        return\
    \ \"\";", "        // Your code here\n        return \"\";", "        // Your\
    \ code goes here\n        return \"\";", "        // Your code goes here\n   \
    \     return \"\";", "        // Your code goes here.\n        return \"\";",
  "        // Your code goes here\n        return \"\";", "        // Your code goes\
    \ here.\n        return \"\";", "        // Your code goes here\n        return\
    \ \"\";", "        // Your code goes here\n        return \"\";", "        string[]\
    \ parts = file_name.Split('.');\n        if (parts.Length != 2) {\n          \
    \  return \"No\";\n        }\n        if (parts[0].Length == 0 || parts[1].Length\
    \ == 0) {\n            return \"No\";\n        }\n        if (parts[0].Count(c\
    \ => c >= '0' && c <= '9') > 3) {\n            return \"No\";\n        }\n   \
    \     if (parts[0][0] < 'a' || parts[0][0] > 'z') {\n            return \"No\"\
    ;\n        }\n        if (parts[1] != \"txt\" && parts[1] != \"exe\" && parts[1]\
    \ != \"dll\") {\n            return \"No\";\n        }\n        return \"Yes\"\
    ;", "        // Your code goes here\n        return \"\";", "        // Your code\
    \ goes here\n        return \"\";", "        // Your code goes here.\n       \
    \ return \"\";", "        // Your code goes here\n        return \"\";", "   \
    \     // Write your code here\n        return \"\";", "        // your code here\n\
    \        return \"\";", "        // Your code goes here.\n        return \"\";",
  "        // Write your code here\n        return \"\";", "        // Your code goes\
    \ here\n        return \"\";", "        // Your code goes here.\n        return\
    \ \"\";", "        // Your code goes here\n        return \"\";", "        //\
    \ Your code here\n        return \"\";", "        // Your code goes here.\n  \
    \      return \"\";", "        // Your code goes here\n        return \"\";",
  "        // Your code goes here.\n        return \"\";", "        // Your code goes\
    \ here\n        return \"\";", "        // Write your code here\n        return\
    \ \"\";", "        // Your code goes here.\n        return \"\";", "        //\
    \ Your code goes here\n        return \"\";", "        // Write your code here\n\
    \        return \"\";", "        // Your code here\n        return \"\";", " \
    \       // Your code goes here.\n        return \"\";", "        // Your code\
    \ goes here\n        return \"\";", "        // Your code here\n        return\
    \ \"\";", "        // Your code goes here.\n        return \"\";", "        //\
    \ Your code goes here\n        return \"\";", "        // Your code goes here\n\
    \        return \"\";", "        // Your code goes here\n        return \"\";",
  "        // Your code goes here\n        return \"\";", "        // Your code goes\
    \ here.\n        return \"\";", "        // Your code goes here.\n        return\
    \ \"\";", "        // Your code goes here.\n        return \"\";", "        //\
    \ Your code here\n        return \"\";", "        // Write your code here\n  \
    \      return \"\";", "        // Your code goes here.\n        return \"\";",
  "        // Your code goes here\n        return \"\";", "        // Your code here\n\
    \        return \"\";", "        // Your code goes here\n        return \"\";",
  "        // Your code goes here\n        return \"\";", "        // Your code goes\
    \ here\n        return \"\";", "        // Your code goes here\n        return\
    \ \"\";", "        // Your code goes here.\n        return \"\";", "        //\
    \ Your code here\n        return \"\";", "        // Your code goes here\n   \
    \     return \"\";", "        // TODO: Implement your solution here\n        return\
    \ \"\";", "        // Your code goes here\n        return \"\";", "        //\
    \ Your code goes here.\n        return \"\";", "        // Your code goes here\n\
    \        return \"\";", "        // TODO: Implement this function\n        return\
    \ \"\";", "        // Your code goes here\n        return \"\";", "        //\
    \ Your code goes here\n        return \"\";", "        string[] parts = file_name.Split('.');\n\
    \        if (parts.Length != 2) {\n            return \"No\";\n        }\n   \
    \     if (parts[0].Length == 0 || !Char.IsLetter(parts[0][0])) {\n           \
    \ return \"No\";\n        }\n        if (parts[1] != \"txt\" && parts[1] != \"\
    exe\" && parts[1] != \"dll\") {\n            return \"No\";\n        }\n     \
    \   if (parts[0].Count(c => Char.IsDigit(c)) > 3) {\n            return \"No\"\
    ;\n        }\n        return \"Yes\";", "        // Your code goes here\n    \
    \    return \"\";", "        // Your code goes here\n        return \"\";", " \
    \       // Write your code here\n        return \"\";", "        // Your code\
    \ goes here\n        return \"\";", "        // Write your code here\n       \
    \ return \"\";", "        // Your code goes here\n        return \"\";", "   \
    \     // Write your code here\n        return \"\";", "        // Your code goes\
    \ here\n        return \"\";", "        // Your code goes here\n        return\
    \ \"\";", "        // Write your code here\n        return \"\";", "        //\
    \ Your code here\n        return \"\";", "        // Your code goes here\n   \
    \     return \"\";", "        // Your code goes here.\n        return \"\";",
  "        // Your code goes here\n        return \"\";", "        // Your code goes\
    \ here.\n        return \"\";", "        // Your code goes here.\n        return\
    \ \"\";", "        // Your code goes here.\n        return \"\";", "        //\
    \ Your code goes here.\n        return \"\";", "        // Your code here\n  \
    \      return \"\";", "        // Write your code here.\n        return \"\";",
  "        // Your code goes here\n        return \"\";", "        // Your code here\n\
    \        return \"\";", "        // Your code goes here\n        return \"\";",
  "        // Your code goes here.\n        return \"\";", "        // Your code goes\
    \ here\n        return \"\";", "        // Write your code here\n        return\
    \ \"\";", "        var dot = file_name.IndexOf('.');\n        if (dot == -1) {\n\
    \            return \"No\";\n        }\n        var name = file_name.Substring(0,\
    \ dot);\n        var ext = file_name.Substring(dot + 1);\n        if (name.Length\
    \ == 0 || !Char.IsLetter(name[0])) {\n            return \"No\";\n        }\n\
    \        if (name.Count(c => c >= '0' && c <= '9') > 3) {\n            return\
    \ \"No\";\n        }\n        if (ext != \"txt\" && ext != \"exe\" && ext != \"\
    dll\") {\n            return \"No\";\n        }\n        return \"Yes\";", " \
    \       // Your code goes here\n        return \"\";", "        // Write your\
    \ code here\n        return \"\";", "        // Your code goes here\n        return\
    \ \"\";", "        // Your code goes here\n        return \"\";", "        //\
    \ Your code here\n        return \"\";", "        // Your code goes here\n   \
    \     return \"\";", "        // Your code goes here.\n        return \"\";",
  "        // Your code here\n        return \"\";", "        // Write your code here\n\
    \        return \"\";", "        // Your code goes here\n        return \"\";",
  "        // Your code goes here\n        return \"\";", "        // Write your code\
    \ here\n        return \"\";", "        // Your code here\n        return \"\"\
    ;", "        // Your code here\n        return \"\";", "        // Your code goes\
    \ here.\n        return \"\";", "        // Write your code here\n        return\
    \ \"\";", "        // Your code goes here\n        return \"\";", "        //\
    \ Your code goes here\n        return \"\";", "        // Your code goes here\n\
    \        return \"\";", "        // Your code goes here\n        return \"\";",
  "        // Your code goes here.\n        return \"\";", "        // Your code goes\
    \ here.\n        return \"\";", "        var parts = file_name.Split('.');\n \
    \       if (parts.Length != 2) {\n            return \"No\";\n        }\n    \
    \    if (parts[0].Length == 0 || parts[1].Length == 0) {\n            return \"\
    No\";\n        }\n        if (parts[0].Count(c => c >= '0' && c <= '9') > 3) {\n\
    \            return \"No\";\n        }\n        if (parts[0][0] < 'a' || parts[0][0]\
    \ > 'z') {\n            return \"No\";\n        }\n        if (parts[1] != \"\
    txt\" && parts[1] != \"exe\" && parts[1] != \"dll\") {\n            return \"\
    No\";\n        }\n        return \"Yes\";", "        // Your code goes here\n\
    \        return \"\";", "        // Your code goes here.\n        return \"\";",
  "        // Your code goes here\n        return \"\";", "        // Your code here\n\
    \        return \"\";", "        // Your code goes here\n        return \"\";",
  "        int count = 0;\n        int dot = 0;\n        int dot_index = 0;\n    \
    \    int i = 0;\n        while (i < file_name.Length) {\n            if (file_name[i]\
    \ == '.') {\n                dot++;\n                dot_index = i;\n        \
    \    }\n            if (file_name[i] >= '0' && file_name[i] <= '9') {\n      \
    \          count++;\n            }\n            i++;\n        }\n        if (count\
    \ > 3) {\n            return \"No\";\n        }\n        if (dot != 1) {\n   \
    \         return \"No\";\n        }\n        if (dot_index == 0) {\n         \
    \   return \"No\";\n        }\n        if (file_name[dot_index + 1] == 't' &&\
    \ file_name[dot_index + 2] == 'x' && file_name[dot_index + 3] == 't') {\n    \
    \        return \"Yes\";\n        }\n        if (file_name[dot_index + 1] == 'e'\
    \ && file_name[dot_index + 2] == 'x' && file_name[dot_index + 3] == 'e') {\n \
    \           return \"Yes\";\n        }\n        if (file_name[dot_index + 1] ==\
    \ 'd' && file_name[dot_index + 2] == 'l' && file_name[dot_index + 3] == 'l') {\n\
    \            return \"Yes\";\n        }\n        return \"No\";", "        //\
    \ Your code goes here.\n        return \"\";", "        // Your code goes here\n\
    \        return \"\";", "        // Write your code here\n        return \"\";",
  "        // Your code goes here\n        return \"\";", "        // Your code goes\
    \ here.\n        return \"\";", "        // Your code goes here\n        return\
    \ \"\";", "        // Your code goes here\n        return \"\";", "        //\
    \ Your code goes here\n        return \"\";", "        // Write your code here\n\
    \        return \"\";", "        // Your code goes here\n        return \"\";",
  "        // Your code goes here\n        return \"\";", "        // Your code goes\
    \ here\n        return \"\";", "        // Write your code here\n        return\
    \ \"\";", "        // Your code goes here\n        return \"\";", "        //\
    \ Your code goes here\n        return \"\";", "        // Write your code here\n\
    \        return \"\";", "        // Your code goes here.\n        return \"\";",
  "        // Your code goes here\n        return \"\";", "        // Your code goes\
    \ here\n        return \"\";", "        // Write your code here.\n        return\
    \ \"\";", "        string[] parts = file_name.Split('.');\n        if (parts.Length\
    \ != 2) {\n            return \"No\";\n        }\n        if (parts[0].Length\
    \ == 0 || parts[1].Length == 0) {\n            return \"No\";\n        }\n   \
    \     if (parts[0].Count(c => c >= '0' && c <= '9') > 3) {\n            return\
    \ \"No\";\n        }\n        if (parts[0][0] < 'a' || parts[0][0] > 'z') {\n\
    \            return \"No\";\n        }\n        if (parts[1] != \"txt\" && parts[1]\
    \ != \"exe\" && parts[1] != \"dll\") {\n            return \"No\";\n        }\n\
    \        return \"Yes\";", "        // Write your code here\n        return \"\
    \";", "        // Your code goes here\n        return \"\";", "        // Your\
    \ code goes here\n        return \"\";", "        // Your code goes here.\n  \
    \      return \"\";", "        // Write your code here\n        return \"\";",
  "        // Write your code here\n        return \"\";", "        // Your code goes\
    \ here\n        return \"\";", "        // Your code here\n        return \"\"\
    ;", "        // TODO: Implement this function.\n        return \"\";", "     \
    \   // Your code goes here\n        return \"\";", "        // Your code goes\
    \ here.\n        return \"\";", "        // Your code goes here.\n        return\
    \ \"\";", "        // Your code goes here\n        return \"\";", "        //\
    \ Your code goes here\n        return \"\";", "        // Your code goes here\n\
    \        return \"\";", "        // Your code goes here\n        return \"\";",
  "        // Your code goes here.\n        return \"\";", "        // Your code goes\
    \ here\n        return \"\";", "        // Write your code here\n        return\
    \ \"\";", "        // Write your code here\n        return \"\";", "        //\
    \ Write your code here\n        return \"\";", "        // Write your code here\n\
    \        return \"\";", "        // Your code here\n        return \"\";", " \
    \       // Your code goes here\n        return \"\";", "        // Your code goes\
    \ here.\n        return \"\";", "        // Your code goes here\n        return\
    \ \"\";", "        // Your code goes here\n        return \"\";", "        //\
    \ Your code goes here\n        return \"\";", "        // Your code here\n   \
    \     return \"\";", "        // Your code goes here\n        return \"\";", " \
    \       // Your code goes here\n        return \"\";", "        // Your code here\n\
    \        return \"\";", "        // Your code goes here\n        return \"\";",
  "        // Your code here\n        return \"\";", "        // Your code goes here\n\
    \        return \"\";", "        // Your code goes here\n        return \"\";",
  "        // Write your code here\n        return \"\";", "        // Your code here\n\
    \        return \"\";", "        // Your code goes here\n        return \"\";",
  "        // Your code goes here\n        return \"\";", "        // Your code goes\
    \ here\n        return \"\";", "        // Your code goes here\n        return\
    \ \"\";", "        // Write your code here\n        return \"\";"]
stop_tokens:
- "\n    }\n"

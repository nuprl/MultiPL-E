language: cs
name: HumanEval_65_circular_shift
results:
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ x_str = x.ToString();\n        if (shift > x_str.Length) {\n            return\
    \ new string(x_str.Reverse().ToArray());\n        }\n        return x_str.Substring((int)shift)\
    \ + x_str.Substring(0, (int)shift);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"001\")));\n\
    \    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n    Debug.Assert(CircularShift((97L),\
    \ (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L), (1L)).Equals((\"\
    21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"11\")));\n \
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <52d6be3366e24f88b65b138e796b4d02>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        var digits\
    \ = new List<long>();\n        while (x > 0) {\n            digits.Add(x % 10);\n\
    \            x /= 10;\n        }\n        if (shift > digits.Count) {\n      \
    \      digits.Reverse();\n        } else {\n            var temp = digits.GetRange((int)shift,\
    \ (int)(digits.Count - shift));\n            digits.RemoveRange((int)shift, (int)(digits.Count\
    \ - shift));\n            temp.AddRange(digits);\n            digits = temp;\n\
    \        }\n        var sb = new StringBuilder();\n        foreach (var digit\
    \ in digits) {\n            sb.Append(digit);\n        }\n        return sb.ToString();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0c70b8a6f5d64ac19ea72f7904a1bb00>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0c70b8a6f5d64ac19ea72f7904a1bb00>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        if (shift\
    \ == 0) {\n            return x.ToString();\n        }\n        string s = x.ToString();\n\
    \        if (shift >= s.Length) {\n            s = new string(s.Reverse().ToArray());\n\
    \        } else {\n            s = s.Substring(s.Length - (int)shift) + s.Substring(0,\
    \ s.Length - (int)shift);\n        }\n        return s;\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <8815252d336f4fbca44f2ceb948f63b1>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 1
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(shift)\
    \ + s.Substring(0, shift);\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L),\
    \ (2L)).Equals((\"12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"\
    79\")));\n    Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n   \
    \ Debug.Assert(CircularShift((11L), (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: SyntaxError
  stderr: ''
  stdout: 'Microsoft (R) Visual C# Compiler version 3.6.0-4.20224.5 (ec77c100)

    Copyright (C) Microsoft Corporation. All rights reserved.


    /tmp/tmps3disncc.cs(21,28): error CS1503: Argument 1: cannot convert from ''long''
    to ''int''

    /tmp/tmps3disncc.cs(21,52): error CS1503: Argument 2: cannot convert from ''long''
    to ''int''

    '
  timestamp: 1659799426
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ digits = x.ToString();\n        if (shift > digits.Length) {\n            return\
    \ new string(digits.Reverse().ToArray());\n        }\n        return digits.Substring((int)shift)\
    \ + digits.Substring(0, (int)shift);\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"001\")));\n\
    \    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n    Debug.Assert(CircularShift((97L),\
    \ (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L), (1L)).Equals((\"\
    21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"11\")));\n \
    \   }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b8071abb87e94332bb600809bac3986f>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        var digits\
    \ = new List<int>();\n        while (x > 0) {\n            digits.Add((int)(x\
    \ % 10));\n            x /= 10;\n        }\n        if (shift > digits.Count)\
    \ {\n            digits.Reverse();\n        } else {\n            var temp = digits.GetRange((int)shift,\
    \ (int)(digits.Count - shift));\n            temp.AddRange(digits.GetRange(0,\
    \ (int)shift));\n            digits = temp;\n        }\n        var sb = new StringBuilder();\n\
    \        foreach (var d in digits) {\n            sb.Append(d);\n        }\n \
    \       return sb.ToString();\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L),\
    \ (2L)).Equals((\"12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"\
    79\")));\n    Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n   \
    \ Debug.Assert(CircularShift((11L), (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b021210a04814de596695679adb0998c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <b021210a04814de596695679adb0998c>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        shift = shift % s.Length;\n        if (shift == 0)\
    \ {\n            return s;\n        }\n        return s.Substring((int)shift)\
    \ + s.Substring(0, (int)shift);\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L),\
    \ (2L)).Equals((\"12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"\
    79\")));\n    Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n   \
    \ Debug.Assert(CircularShift((11L), (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <90f642778f3a46d68993dfe4fff9c492>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <90f642778f3a46d68993dfe4fff9c492>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        if (shift\
    \ == 0) {\n            return x.ToString();\n        }\n        string s = x.ToString();\n\
    \        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring(s.Length - (int)shift) + s.Substring(0,\
    \ s.Length - (int)shift);\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CircularShift((100L), (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L),\
    \ (2L)).Equals((\"12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"\
    79\")));\n    Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n   \
    \ Debug.Assert(CircularShift((11L), (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length)\n            return new string(s.Reverse().ToArray());\n\
    \        return s.Substring(s.Length - (int)shift) + s.Substring(0, s.Length -\
    \ (int)shift);\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <f5c4e112b2dd4dd798e9cd179b705636>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift > s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring((int)shift) + s.Substring(0, (int)shift);\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(CircularShift((100L),\
    \ (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"\
    12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n   \
    \ Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L),\
    \ (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c2759bbce4914a0a8e902bae5f8721ea>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        string\
    \ s = x.ToString();\n        if (shift >= s.Length) {\n            return new\
    \ string(s.Reverse().ToArray());\n        }\n        return s.Substring(s.Length\
    \ - (int)shift) + s.Substring(0, s.Length - (int)shift);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(CircularShift((100L), (2L)).Equals((\"\
    001\")));\n    Debug.Assert(CircularShift((12L), (2L)).Equals((\"12\")));\n  \
    \  Debug.Assert(CircularShift((97L), (8L)).Equals((\"79\")));\n    Debug.Assert(CircularShift((12L),\
    \ (1L)).Equals((\"21\")));\n    Debug.Assert(CircularShift((11L), (101L)).Equals((\"\
    11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <cc39ff15a70043e7ac2441cc610190f7>:0 \n"
  stdout: ''
  timestamp: 1659799427
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Circular shift the digits of the integer x, shift the\
    \ digits right by shift\n    // and return the result as a string.\n    // If\
    \ shift > number of digits, return digits reversed.\n    // >>> CircularShift((12L),\
    \ (1L))\n    // (\"21\")\n    // >>> CircularShift((12L), (2L))\n    // (\"12\"\
    )\n    public static string CircularShift(long x, long shift) {\n        var s\
    \ = x.ToString();\n        if (shift >= s.Length) {\n            return new string(s.Reverse().ToArray());\n\
    \        }\n        return s.Substring(s.Length - (int)shift) + s.Substring(0,\
    \ s.Length - (int)shift);\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(CircularShift((100L), (2L)).Equals((\"001\")));\n    Debug.Assert(CircularShift((12L),\
    \ (2L)).Equals((\"12\")));\n    Debug.Assert(CircularShift((97L), (8L)).Equals((\"\
    79\")));\n    Debug.Assert(CircularShift((12L), (1L)).Equals((\"21\")));\n   \
    \ Debug.Assert(CircularShift((11L), (101L)).Equals((\"11\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9071be447a6c4e5faffef2fe6c8b306d>:0 \n"
  stdout: ''
  timestamp: 1659799427

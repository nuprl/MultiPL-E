name: HumanEval_25_factorize
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // Return list of prime factors of given integer in the order from\
  \ smallest to largest.\n    // Each of the factors should be listed number of times\
  \ corresponding to how many times it appeares in factorization.\n    // Input number\
  \ should be equal to the product of all factors\n    // >>> Factorize((8L))\n  \
  \  // (new List<long>(new long[]{(long)2L, (long)2L, (long)2L}))\n    // >>> Factorize((25L))\n\
  \    // (new List<long>(new long[]{(long)5L, (long)5L}))\n    // >>> Factorize((70L))\n\
  \    // (new List<long>(new long[]{(long)2L, (long)5L, (long)7L}))\n    public static\
  \ List<long> Factorize(long n) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(Factorize((2L)).Equals((new\
  \ List<long>(new long[]{(long)2L}))));\n    Debug.Assert(Factorize((4L)).Equals((new\
  \ List<long>(new long[]{(long)2L, (long)2L}))));\n    Debug.Assert(Factorize((8L)).Equals((new\
  \ List<long>(new long[]{(long)2L, (long)2L, (long)2L}))));\n    Debug.Assert(Factorize((57L)).Equals((new\
  \ List<long>(new long[]{(long)3L, (long)19L}))));\n    Debug.Assert(Factorize((3249L)).Equals((new\
  \ List<long>(new long[]{(long)3L, (long)3L, (long)19L, (long)19L}))));\n    Debug.Assert(Factorize((185193L)).Equals((new\
  \ List<long>(new long[]{(long)3L, (long)3L, (long)3L, (long)19L, (long)19L, (long)19L}))));\n\
  \    Debug.Assert(Factorize((20577L)).Equals((new List<long>(new long[]{(long)3L,\
  \ (long)19L, (long)19L, (long)19L}))));\n    Debug.Assert(Factorize((18L)).Equals((new\
  \ List<long>(new long[]{(long)2L, (long)3L, (long)3L}))));\n    }\n\n}\n"
completions: ["        List<long> factors = new List<long>();\n        if (n == 1)\
    \ {\n            return factors;\n        }\n        long p = 2;\n        while\
    \ (n != 1) {\n            while (n % p == 0) {\n                factors.Add(p);\n\
    \                n /= p;\n            }\n            p++;\n        }\n       \
    \ return factors;", "        List<long> factors = new List<long>();\n        long\
    \ d = 2;\n        while (n > 1) {\n            while (n % d == 0) {\n        \
    \        factors.Add(d);\n                n /= d;\n            }\n           \
    \ d += 1;\n        }\n        return factors;", "        var factors = new List<long>();\n\
    \        for (long i = 2; i * i <= n; i++) {\n            while (n % i == 0) {\n\
    \                factors.Add(i);\n                n /= i;\n            }\n   \
    \     }\n        if (n > 1) {\n            factors.Add(n);\n        }\n      \
    \  return factors;", "        List<long> factors = new List<long>();\n       \
    \ long d = 2;\n        while (n > 1) {\n            while (n % d == 0) {\n   \
    \             factors.Add(d);\n                n /= d;\n            }\n      \
    \      d += 1;\n        }\n        return factors;", "        List<long> factors\
    \ = new List<long>();\n        while (n % 2 == 0) {\n            factors.Add(2);\n\
    \            n /= 2;\n        }\n        for (long i = 3; i * i <= n; i += 2)\
    \ {\n            while (n % i == 0) {\n                factors.Add(i);\n     \
    \           n /= i;\n            }\n        }\n        if (n > 2) {\n        \
    \    factors.Add(n);\n        }\n        return factors;", "        List<long>\
    \ factors = new List<long>();\n        for (long i = 2; i * i <= n; i++) {\n \
    \           while (n % i == 0) {\n                factors.Add(i);\n          \
    \      n /= i;\n            }\n        }\n        if (n > 1) {\n            factors.Add(n);\n\
    \        }\n        return factors;", "        List<long> factors = new List<long>();\n\
    \        while (n % 2 == 0) {\n            factors.Add(2);\n            n /= 2;\n\
    \        }\n        for (long i = 3; i * i <= n; i += 2) {\n            while\
    \ (n % i == 0) {\n                factors.Add(i);\n                n /= i;\n \
    \           }\n        }\n        if (n > 2) {\n            factors.Add(n);\n\
    \        }\n        return factors;", "        List<long> factors = new List<long>();\n\
    \        while (n % 2 == 0) {\n            factors.Add(2);\n            n /= 2;\n\
    \        }\n        for (long i = 3; i * i <= n; i += 2) {\n            while\
    \ (n % i == 0) {\n                factors.Add(i);\n                n /= i;\n \
    \           }\n        }\n        if (n > 2) {\n            factors.Add(n);\n\
    \        }\n        return factors;", "        List<long> factors = new List<long>();\n\
    \        for (long i = 2; i * i <= n; i++) {\n            while (n % i == 0) {\n\
    \                factors.Add(i);\n                n /= i;\n            }\n   \
    \     }\n        if (n > 1) {\n            factors.Add(n);\n        }\n      \
    \  return factors;", "        List<long> factors = new List<long>();\n       \
    \ long i = 2;\n        while (n > 1) {\n            while (n % i == 0) {\n   \
    \             factors.Add(i);\n                n /= i;\n            }\n      \
    \      i++;\n        }\n        return factors;", "        List<long> factors\
    \ = new List<long>();\n        long d = 2;\n        while (n > 1) {\n        \
    \    while (n % d == 0) {\n                factors.Add(d);\n                n\
    \ /= d;\n            }\n            d += 1;\n        }\n        return factors;",
  "        List<long> factors = new List<long>();\n        long d = 2;\n        while\
    \ (n > 1) {\n            while (n % d == 0) {\n                factors.Add(d);\n\
    \                n /= d;\n            }\n            d += 1;\n        }\n    \
    \    return factors;", "        List<long> factors = new List<long>();\n     \
    \   for (long i = 2; i * i <= n; i++) {\n            while (n % i == 0) {\n  \
    \              factors.Add(i);\n                n /= i;\n            }\n     \
    \   }\n        if (n > 1) {\n            factors.Add(n);\n        }\n        return\
    \ factors;", "        List<long> factors = new List<long>();\n        while (n\
    \ % 2 == 0) {\n            factors.Add(2);\n            n /= 2;\n        }\n \
    \       for (long i = 3; i * i <= n; i += 2) {\n            while (n % i == 0)\
    \ {\n                factors.Add(i);\n                n /= i;\n            }\n\
    \        }\n        if (n > 2) {\n            factors.Add(n);\n        }\n   \
    \     return factors;", "        List<long> factors = new List<long>();\n    \
    \    for (long i = 2; i * i <= n; i++) {\n            while (n % i == 0) {\n \
    \               factors.Add(i);\n                n /= i;\n            }\n    \
    \    }\n        if (n > 1) {\n            factors.Add(n);\n        }\n       \
    \ return factors;", "        List<long> factors = new List<long>();\n        long\
    \ d = 2;\n        while (n > 1) {\n            while (n % d == 0) {\n        \
    \        factors.Add(d);\n                n /= d;\n            }\n           \
    \ d += 1;\n        }\n        return factors;", "        List<long> factors =\
    \ new List<long>();\n        while (n % 2 == 0) {\n            factors.Add(2);\n\
    \            n /= 2;\n        }\n        for (long i = 3; i * i <= n; i += 2)\
    \ {\n            while (n % i == 0) {\n                factors.Add(i);\n     \
    \           n /= i;\n            }\n        }\n        if (n > 2) {\n        \
    \    factors.Add(n);\n        }\n        return factors;", "        List<long>\
    \ factors = new List<long>();\n        long d = 2;\n        while (n > 1) {\n\
    \            while (n % d == 0) {\n                factors.Add(d);\n         \
    \       n /= d;\n            }\n            d += 1;\n        }\n        return\
    \ factors;", "        List<long> factors = new List<long>();\n        for (long\
    \ d = 2; d * d <= n; d++) {\n            while (n % d == 0) {\n              \
    \  factors.Add(d);\n                n /= d;\n            }\n        }\n      \
    \  if (n > 1) {\n            factors.Add(n);\n        }\n        return factors;",
  "        List<long> factors = new List<long>();\n        for (long i = 2; i * i\
    \ <= n; i++) {\n            while (n % i == 0) {\n                factors.Add(i);\n\
    \                n /= i;\n            }\n        }\n        if (n > 1) {\n   \
    \         factors.Add(n);\n        }\n        return factors;", "        List<long>\
    \ factors = new List<long>();\n        for (long i = 2; i * i <= n; i++) {\n \
    \           while (n % i == 0) {\n                factors.Add(i);\n          \
    \      n /= i;\n            }\n        }\n        if (n > 1) {\n            factors.Add(n);\n\
    \        }\n        return factors;", "        List<long> factors = new List<long>();\n\
    \        for (long i = 2; i * i <= n; i++) {\n            while (n % i == 0) {\n\
    \                factors.Add(i);\n                n /= i;\n            }\n   \
    \     }\n        if (n > 1) {\n            factors.Add(n);\n        }\n      \
    \  return factors;", "        List<long> factors = new List<long>();\n       \
    \ for (long i = 2; i * i <= n; i++) {\n            while (n % i == 0) {\n    \
    \            factors.Add(i);\n                n /= i;\n            }\n       \
    \ }\n        if (n > 1) {\n            factors.Add(n);\n        }\n        return\
    \ factors;", "        List<long> factors = new List<long>();\n        long d =\
    \ 2;\n        while (n > 1) {\n            while (n % d == 0) {\n            \
    \    factors.Add(d);\n                n /= d;\n            }\n            d +=\
    \ 1;\n        }\n        return factors;", "        List<long> factors = new List<long>();\n\
    \        long d = 2;\n        while (n > 1) {\n            while (n % d == 0)\
    \ {\n                factors.Add(d);\n                n /= d;\n            }\n\
    \            d += 1;\n        }\n        return factors;", "        List<long>\
    \ res = new List<long>();\n        for (long i = 2; i * i <= n; i++) {\n     \
    \       while (n % i == 0) {\n                res.Add(i);\n                n /=\
    \ i;\n            }\n        }\n        if (n > 1) {\n            res.Add(n);\n\
    \        }\n        return res;", "        List<long> factors = new List<long>();\n\
    \        for (long i = 2; i * i <= n; i++) {\n            while (n % i == 0) {\n\
    \                factors.Add(i);\n                n /= i;\n            }\n   \
    \     }\n        if (n > 1) {\n            factors.Add(n);\n        }\n      \
    \  return factors;", "        List<long> factors = new List<long>();\n       \
    \ for (long i = 2; i * i <= n; i++) {\n            while (n % i == 0) {\n    \
    \            factors.Add(i);\n                n /= i;\n            }\n       \
    \ }\n        if (n > 1) {\n            factors.Add(n);\n        }\n        return\
    \ factors;", "        List<long> factors = new List<long>();\n        for (long\
    \ i = 2; i * i <= n; i++) {\n            while (n % i == 0) {\n              \
    \  factors.Add(i);\n                n /= i;\n            }\n        }\n      \
    \  if (n > 1) {\n            factors.Add(n);\n        }\n        return factors;",
  "        List<long> factors = new List<long>();\n        long d = 2;\n        while\
    \ (n > 1) {\n            while (n % d == 0) {\n                factors.Add(d);\n\
    \                n /= d;\n            }\n            d += 1;\n        }\n    \
    \    return factors;", "        List<long> factors = new List<long>();\n     \
    \   for (long i = 2; i * i <= n; i++) {\n            while (n % i == 0) {\n  \
    \              factors.Add(i);\n                n /= i;\n            }\n     \
    \   }\n        if (n > 1) {\n            factors.Add(n);\n        }\n        return\
    \ factors;", "        List<long> factors = new List<long>();\n        long d =\
    \ 2;\n        while (n > 1) {\n            while (n % d == 0) {\n            \
    \    factors.Add(d);\n                n /= d;\n            }\n            d +=\
    \ 1;\n        }\n        return factors;", "        List<long> factors = new List<long>();\n\
    \        for (long i = 2; i * i <= n; i++) {\n            while (n % i == 0) {\n\
    \                factors.Add(i);\n                n /= i;\n            }\n   \
    \     }\n        if (n > 1) {\n            factors.Add(n);\n        }\n      \
    \  return factors;", "        List<long> factors = new List<long>();\n       \
    \ for (long d = 2; d * d <= n; d++) {\n            while (n % d == 0) {\n    \
    \            factors.Add(d);\n                n /= d;\n            }\n       \
    \ }\n        if (n > 1) {\n            factors.Add(n);\n        }\n        return\
    \ factors;", "        List<long> factors = new List<long>();\n        for (long\
    \ i = 2; i * i <= n; i++) {\n            while (n % i == 0) {\n              \
    \  factors.Add(i);\n                n /= i;\n            }\n        }\n      \
    \  if (n > 1) {\n            factors.Add(n);\n        }\n        return factors;",
  "        List<long> factors = new List<long>();\n        for (long i = 2; i * i\
    \ <= n; i++) {\n            while (n % i == 0) {\n                factors.Add(i);\n\
    \                n /= i;\n            }\n        }\n        if (n > 1) {\n   \
    \         factors.Add(n);\n        }\n        return factors;", "        var factors\
    \ = new List<long>();\n        for (long i = 2; i * i <= n; i++) {\n         \
    \   while (n % i == 0) {\n                factors.Add(i);\n                n /=\
    \ i;\n            }\n        }\n        if (n > 1) {\n            factors.Add(n);\n\
    \        }\n        return factors;", "        List<long> factors = new List<long>();\n\
    \        for (long i = 2; i * i <= n; i++) {\n            while (n % i == 0) {\n\
    \                factors.Add(i);\n                n /= i;\n            }\n   \
    \     }\n        if (n > 1) {\n            factors.Add(n);\n        }\n      \
    \  return factors;", "        var factors = new List<long>();\n        for (long\
    \ i = 2; i * i <= n; i++) {\n            while (n % i == 0) {\n              \
    \  factors.Add(i);\n                n /= i;\n            }\n        }\n      \
    \  if (n > 1) {\n            factors.Add(n);\n        }\n        return factors;",
  "        List<long> factors = new List<long>();\n        for (long i = 2; i * i\
    \ <= n; i++) {\n            while (n % i == 0) {\n                factors.Add(i);\n\
    \                n /= i;\n            }\n        }\n        if (n > 1) {\n   \
    \         factors.Add(n);\n        }\n        return factors;", "        List<long>\
    \ factors = new List<long>();\n        long d = 2;\n        while (n > 1) {\n\
    \            while (n % d == 0) {\n                factors.Add(d);\n         \
    \       n /= d;\n            }\n            d += 1;\n        }\n        return\
    \ factors;", "        var factors = new List<long>();\n        for (long i = 2;\
    \ i * i <= n; i++) {\n            while (n % i == 0) {\n                factors.Add(i);\n\
    \                n /= i;\n            }\n        }\n        if (n > 1) {\n   \
    \         factors.Add(n);\n        }\n        return factors;", "        List<long>\
    \ factors = new List<long>();\n        for (long i = 2; i * i <= n; i++) {\n \
    \           while (n % i == 0) {\n                factors.Add(i);\n          \
    \      n /= i;\n            }\n        }\n        if (n > 1) {\n            factors.Add(n);\n\
    \        }\n        return factors;", "        List<long> factors = new List<long>();\n\
    \        long d = 2;\n        while (n > 1) {\n            while (n % d == 0)\
    \ {\n                factors.Add(d);\n                n /= d;\n            }\n\
    \            d += 1;\n        }\n        return factors;", "        List<long>\
    \ factors = new List<long>();\n        long d = 2;\n        while (n > 1) {\n\
    \            while (n % d == 0) {\n                factors.Add(d);\n         \
    \       n /= d;\n            }\n            d += 1;\n        }\n        return\
    \ factors;", "        List<long> factors = new List<long>();\n        while (n\
    \ % 2 == 0) {\n            factors.Add(2);\n            n /= 2;\n        }\n \
    \       for (long i = 3; i * i <= n; i += 2) {\n            while (n % i == 0)\
    \ {\n                factors.Add(i);\n                n /= i;\n            }\n\
    \        }\n        if (n > 2) {\n            factors.Add(n);\n        }\n   \
    \     return factors;", "        List<long> factors = new List<long>();\n    \
    \    for (long i = 2; i * i <= n; i++) {\n            while (n % i == 0) {\n \
    \               factors.Add(i);\n                n /= i;\n            }\n    \
    \    }\n        if (n > 1) {\n            factors.Add(n);\n        }\n       \
    \ return factors;", "        var factors = new List<long>();\n        for (long\
    \ i = 2; i * i <= n; i++) {\n            while (n % i == 0) {\n              \
    \  factors.Add(i);\n                n /= i;\n            }\n        }\n      \
    \  if (n > 1) {\n            factors.Add(n);\n        }\n        return factors;",
  "        List<long> factors = new List<long>();\n        while (n % 2 == 0) {\n\
    \            factors.Add(2);\n            n /= 2;\n        }\n        for (long\
    \ i = 3; i * i <= n; i += 2) {\n            while (n % i == 0) {\n           \
    \     factors.Add(i);\n                n /= i;\n            }\n        }\n   \
    \     if (n > 2) {\n            factors.Add(n);\n        }\n        return factors;",
  "        List<long> factors = new List<long>();\n        for (long i = 2; i * i\
    \ <= n; i++) {\n            while (n % i == 0) {\n                factors.Add(i);\n\
    \                n /= i;\n            }\n        }\n        if (n > 1) {\n   \
    \         factors.Add(n);\n        }\n        return factors;", "        List<long>\
    \ factors = new List<long>();\n        long d = 2;\n        while (n > 1) {\n\
    \            while (n % d == 0) {\n                factors.Add(d);\n         \
    \       n /= d;\n            }\n            d += 1;\n        }\n        return\
    \ factors;", "        List<long> factors = new List<long>();\n        long d =\
    \ 2;\n        while (n > 1) {\n            while (n % d == 0) {\n            \
    \    factors.Add(d);\n                n /= d;\n            }\n            d +=\
    \ 1;\n        }\n        return factors;", "        List<long> factors = new List<long>();\n\
    \        for (long i = 2; i * i <= n; i++) {\n            while (n % i == 0) {\n\
    \                factors.Add(i);\n                n /= i;\n            }\n   \
    \     }\n        if (n > 1) {\n            factors.Add(n);\n        }\n      \
    \  return factors;", "        List<long> factors = new List<long>();\n       \
    \ for (long i = 2; i * i <= n; i++) {\n            while (n % i == 0) {\n    \
    \            factors.Add(i);\n                n /= i;\n            }\n       \
    \ }\n        if (n > 1) {\n            factors.Add(n);\n        }\n        return\
    \ factors;", "        var factors = new List<long>();\n        for (long i = 2;\
    \ i * i <= n; i++) {\n            while (n % i == 0) {\n                factors.Add(i);\n\
    \                n /= i;\n            }\n        }\n        if (n > 1) {\n   \
    \         factors.Add(n);\n        }\n        return factors;", "        List<long>\
    \ factors = new List<long>();\n        while (n % 2 == 0) {\n            factors.Add(2);\n\
    \            n /= 2;\n        }\n        for (long i = 3; i * i <= n; i += 2)\
    \ {\n            while (n % i == 0) {\n                factors.Add(i);\n     \
    \           n /= i;\n            }\n        }\n        if (n > 2) {\n        \
    \    factors.Add(n);\n        }\n        return factors;", "        List<long>\
    \ factors = new List<long>();\n        long d = 2;\n        while (n > 1) {\n\
    \            while (n % d == 0) {\n                factors.Add(d);\n         \
    \       n /= d;\n            }\n            d += 1;\n        }\n        return\
    \ factors;", "        List<long> factors = new List<long>();\n        for (long\
    \ i = 2; i * i <= n; i++) {\n            while (n % i == 0) {\n              \
    \  factors.Add(i);\n                n /= i;\n            }\n        }\n      \
    \  if (n > 1) {\n            factors.Add(n);\n        }\n        return factors;",
  "        List<long> factors = new List<long>();\n        for (long i = 2; i * i\
    \ <= n; i++) {\n            while (n % i == 0) {\n                factors.Add(i);\n\
    \                n /= i;\n            }\n        }\n        if (n > 1) {\n   \
    \         factors.Add(n);\n        }\n        return factors;", "        List<long>\
    \ factors = new List<long>();\n        for (long i = 2; i * i <= n; i++) {\n \
    \           while (n % i == 0) {\n                factors.Add(i);\n          \
    \      n /= i;\n            }\n        }\n        if (n > 1) {\n            factors.Add(n);\n\
    \        }\n        return factors;", "        List<long> factors = new List<long>();\n\
    \        for (long i = 2; i * i <= n; i++) {\n            while (n % i == 0) {\n\
    \                factors.Add(i);\n                n /= i;\n            }\n   \
    \     }\n        if (n > 1) {\n            factors.Add(n);\n        }\n      \
    \  return factors;", "        List<long> factors = new List<long>();\n       \
    \ for (long i = 2; i <= n; i++) {\n            while (n % i == 0) {\n        \
    \        factors.Add(i);\n                n /= i;\n            }\n        }\n\
    \        return factors;", "        List<long> factors = new List<long>();\n \
    \       for (long i = 2; i * i <= n; i++) {\n            while (n % i == 0) {\n\
    \                factors.Add(i);\n                n /= i;\n            }\n   \
    \     }\n        if (n > 1) {\n            factors.Add(n);\n        }\n      \
    \  return factors;", "        List<long> factors = new List<long>();\n       \
    \ long d = 2;\n        while (n > 1) {\n            while (n % d == 0) {\n   \
    \             factors.Add(d);\n                n /= d;\n            }\n      \
    \      d += 1;\n        }\n        return factors;", "        List<long> factors\
    \ = new List<long>();\n        long d = 2;\n        while (n > 1) {\n        \
    \    while (n % d == 0) {\n                factors.Add(d);\n                n\
    \ /= d;\n            }\n            d += 1;\n        }\n        return factors;",
  "        List<long> factors = new List<long>();\n        for (long i = 2; i * i\
    \ <= n; i++) {\n            while (n % i == 0) {\n                factors.Add(i);\n\
    \                n /= i;\n            }\n        }\n        if (n > 1) {\n   \
    \         factors.Add(n);\n        }\n        return factors;", "        List<long>\
    \ factors = new List<long>();\n        long d = 2;\n        while (n > 1) {\n\
    \            while (n % d == 0) {\n                factors.Add(d);\n         \
    \       n /= d;\n            }\n            d += 1;\n        }\n        return\
    \ factors;", "        List<long> factors = new List<long>();\n        for (long\
    \ i = 2; i <= n; i++) {\n            while (n % i == 0) {\n                factors.Add(i);\n\
    \                n /= i;\n            }\n        }\n        return factors;",
  "        List<long> factors = new List<long>();\n        for (long d = 2; d * d\
    \ <= n; d++) {\n            while (n % d == 0) {\n                factors.Add(d);\n\
    \                n /= d;\n            }\n        }\n        if (n > 1) {\n   \
    \         factors.Add(n);\n        }\n        return factors;", "        List<long>\
    \ factors = new List<long>();\n        for (long i = 2; i * i <= n; i++) {\n \
    \           while (n % i == 0) {\n                factors.Add(i);\n          \
    \      n /= i;\n            }\n        }\n        if (n > 1) {\n            factors.Add(n);\n\
    \        }\n        return factors;", "        List<long> res = new List<long>();\n\
    \        for (long i = 2; i * i <= n; i++) {\n            while (n % i == 0) {\n\
    \                res.Add(i);\n                n /= i;\n            }\n       \
    \ }\n        if (n > 1) {\n            res.Add(n);\n        }\n        return\
    \ res;", "        List<long> factors = new List<long>();\n        while (n % 2\
    \ == 0) {\n            factors.Add(2);\n            n /= 2;\n        }\n     \
    \   long sqrt = (long)Math.Sqrt(n);\n        for (long i = 3; i <= sqrt; i +=\
    \ 2) {\n            while (n % i == 0) {\n                factors.Add(i);\n  \
    \              n /= i;\n            }\n        }\n        if (n > 2) {\n     \
    \       factors.Add(n);\n        }\n        return factors;", "        List<long>\
    \ factors = new List<long>();\n        for (long i = 2; i * i <= n; i++) {\n \
    \           while (n % i == 0) {\n                factors.Add(i);\n          \
    \      n /= i;\n            }\n        }\n        if (n > 1) {\n            factors.Add(n);\n\
    \        }\n        return factors;", "        List<long> factors = new List<long>();\n\
    \        for (long i = 2; i * i <= n; i++) {\n            while (n % i == 0) {\n\
    \                factors.Add(i);\n                n /= i;\n            }\n   \
    \     }\n        if (n > 1) {\n            factors.Add(n);\n        }\n      \
    \  return factors;", "        List<long> factors = new List<long>();\n       \
    \ for (long i = 2; i * i <= n; i++) {\n            while (n % i == 0) {\n    \
    \            factors.Add(i);\n                n /= i;\n            }\n       \
    \ }\n        if (n > 1) {\n            factors.Add(n);\n        }\n        return\
    \ factors;", "        List<long> factors = new List<long>();\n        long d =\
    \ 2;\n        while (n > 1) {\n            while (n % d == 0) {\n            \
    \    factors.Add(d);\n                n /= d;\n            }\n            d +=\
    \ 1;\n        }\n        return factors;", "        List<long> factors = new List<long>();\n\
    \        long d = 2;\n        while (n > 1) {\n            while (n % d == 0)\
    \ {\n                factors.Add(d);\n                n /= d;\n            }\n\
    \            d += 1;\n        }\n        return factors;", "        List<long>\
    \ factors = new List<long>();\n        for (long i = 2; i * i <= n; i++) {\n \
    \           while (n % i == 0) {\n                factors.Add(i);\n          \
    \      n /= i;\n            }\n        }\n        if (n > 1) {\n            factors.Add(n);\n\
    \        }\n        return factors;", "        List<long> factors = new List<long>();\n\
    \        for (long i = 2; i * i <= n; i++) {\n            while (n % i == 0) {\n\
    \                factors.Add(i);\n                n /= i;\n            }\n   \
    \     }\n        if (n > 1) {\n            factors.Add(n);\n        }\n      \
    \  return factors;", "        List<long> factors = new List<long>();\n       \
    \ for (long i = 2; i * i <= n; i++) {\n            while (n % i == 0) {\n    \
    \            factors.Add(i);\n                n /= i;\n            }\n       \
    \ }\n        if (n > 1) {\n            factors.Add(n);\n        }\n        return\
    \ factors;", "        List<long> factors = new List<long>();\n        for (long\
    \ i = 2; i * i <= n; i++) {\n            while (n % i == 0) {\n              \
    \  factors.Add(i);\n                n /= i;\n            }\n        }\n      \
    \  if (n > 1) {\n            factors.Add(n);\n        }\n        return factors;",
  "        List<long> factors = new List<long>();\n        for (long i = 2; i * i\
    \ <= n; i++) {\n            while (n % i == 0) {\n                factors.Add(i);\n\
    \                n /= i;\n            }\n        }\n        if (n > 1) {\n   \
    \         factors.Add(n);\n        }\n        return factors;", "        List<long>\
    \ factors = new List<long>();\n        for (long i = 2; i * i <= n; i++) {\n \
    \           while (n % i == 0) {\n                factors.Add(i);\n          \
    \      n /= i;\n            }\n        }\n        if (n > 1) {\n            factors.Add(n);\n\
    \        }\n        return factors;", "        List<long> factors = new List<long>();\n\
    \        for (long i = 2; i * i <= n; i++) {\n            while (n % i == 0) {\n\
    \                factors.Add(i);\n                n /= i;\n            }\n   \
    \     }\n        if (n > 1) {\n            factors.Add(n);\n        }\n      \
    \  return factors;", "        List<long> factors = new List<long>();\n       \
    \ long d = 2;\n        while (n > 1) {\n            while (n % d == 0) {\n   \
    \             factors.Add(d);\n                n /= d;\n            }\n      \
    \      d += 1;\n        }\n        return factors;", "        List<long> factors\
    \ = new List<long>();\n        for (long i = 2; i * i <= n; i++) {\n         \
    \   while (n % i == 0) {\n                factors.Add(i);\n                n /=\
    \ i;\n            }\n        }\n        if (n > 1) {\n            factors.Add(n);\n\
    \        }\n        return factors;", "        List<long> factors = new List<long>();\n\
    \        for (long i = 2; i * i <= n; i++) {\n            while (n % i == 0) {\n\
    \                factors.Add(i);\n                n /= i;\n            }\n   \
    \     }\n        if (n > 1) {\n            factors.Add(n);\n        }\n      \
    \  return factors;", "        List<long> factors = new List<long>();\n       \
    \ long d = 2;\n        while (n > 1) {\n            while (n % d == 0) {\n   \
    \             factors.Add(d);\n                n /= d;\n            }\n      \
    \      d += 1;\n        }\n        return factors;", "        List<long> factors\
    \ = new List<long>();\n        for (long i = 2; i * i <= n; i++) {\n         \
    \   while (n % i == 0) {\n                factors.Add(i);\n                n /=\
    \ i;\n            }\n        }\n        if (n > 1) {\n            factors.Add(n);\n\
    \        }\n        return factors;", "        List<long> factors = new List<long>();\n\
    \        for (long i = 2; i * i <= n; i++) {\n            while (n % i == 0) {\n\
    \                factors.Add(i);\n                n /= i;\n            }\n   \
    \     }\n        if (n > 1) {\n            factors.Add(n);\n        }\n      \
    \  return factors;", "        var factors = new List<long>();\n        for (long\
    \ i = 2; i * i <= n; i++) {\n            while (n % i == 0) {\n              \
    \  factors.Add(i);\n                n /= i;\n            }\n        }\n      \
    \  if (n > 1) {\n            factors.Add(n);\n        }\n        return factors;",
  "        List<long> factors = new List<long>();\n        for (long i = 2; i * i\
    \ <= n; i++) {\n            while (n % i == 0) {\n                factors.Add(i);\n\
    \                n /= i;\n            }\n        }\n        if (n > 1) {\n   \
    \         factors.Add(n);\n        }\n        return factors;", "        List<long>\
    \ factors = new List<long>();\n        for (long i = 2; i * i <= n; i++) {\n \
    \           while (n % i == 0) {\n                factors.Add(i);\n          \
    \      n /= i;\n            }\n        }\n        if (n > 1) {\n            factors.Add(n);\n\
    \        }\n        return factors;", "        List<long> factors = new List<long>();\n\
    \        while (n % 2 == 0) {\n            factors.Add(2);\n            n /= 2;\n\
    \        }\n        for (long i = 3; i * i <= n; i += 2) {\n            while\
    \ (n % i == 0) {\n                factors.Add(i);\n                n /= i;\n \
    \           }\n        }\n        if (n > 2) {\n            factors.Add(n);\n\
    \        }\n        return factors;", "        List<long> factors = new List<long>();\n\
    \        long d = 2;\n        while (n > 1) {\n            while (n % d == 0)\
    \ {\n                factors.Add(d);\n                n /= d;\n            }\n\
    \            d += 1;\n        }\n        return factors;", "        List<long>\
    \ factors = new List<long>();\n        for (long i = 2; i * i <= n; i++) {\n \
    \           while (n % i == 0) {\n                factors.Add(i);\n          \
    \      n /= i;\n            }\n        }\n        if (n > 1) {\n            factors.Add(n);\n\
    \        }\n        return factors;", "        List<long> factors = new List<long>();\n\
    \        long d = 2;\n        while (n > 1) {\n            while (n % d == 0)\
    \ {\n                factors.Add(d);\n                n /= d;\n            }\n\
    \            d += 1;\n        }\n        return factors;", "        List<long>\
    \ factors = new List<long>();\n        for (long i = 2; i * i <= n; i++) {\n \
    \           while (n % i == 0) {\n                factors.Add(i);\n          \
    \      n /= i;\n            }\n        }\n        if (n > 1) {\n            factors.Add(n);\n\
    \        }\n        return factors;", "        List<long> factors = new List<long>();\n\
    \        for (long i = 2; i * i <= n; i++) {\n            while (n % i == 0) {\n\
    \                factors.Add(i);\n                n /= i;\n            }\n   \
    \     }\n        if (n > 1) {\n            factors.Add(n);\n        }\n      \
    \  return factors;", "        List<long> factors = new List<long>();\n       \
    \ while (n % 2 == 0) {\n            factors.Add(2);\n            n /= 2;\n   \
    \     }\n        for (long i = 3; i * i <= n; i += 2) {\n            while (n\
    \ % i == 0) {\n                factors.Add(i);\n                n /= i;\n    \
    \        }\n        }\n        if (n > 2) {\n            factors.Add(n);\n   \
    \     }\n        return factors;", "        List<long> factors = new List<long>();\n\
    \        long d = 2;\n        while (n > 1) {\n            while (n % d == 0)\
    \ {\n                factors.Add(d);\n                n /= d;\n            }\n\
    \            d += 1;\n        }\n        return factors;", "        List<long>\
    \ factors = new List<long>();\n        for (long i = 2; i * i <= n; i++) {\n \
    \           while (n % i == 0) {\n                factors.Add(i);\n          \
    \      n /= i;\n            }\n        }\n        if (n > 1) {\n            factors.Add(n);\n\
    \        }\n        return factors;", "        List<long> factors = new List<long>();\n\
    \        for (long i = 2; i * i <= n; i++) {\n            while (n % i == 0) {\n\
    \                factors.Add(i);\n                n /= i;\n            }\n   \
    \     }\n        if (n > 1) {\n            factors.Add(n);\n        }\n      \
    \  return factors;", "        var factors = new List<long>();\n        for (long\
    \ i = 2; i * i <= n; i++) {\n            while (n % i == 0) {\n              \
    \  factors.Add(i);\n                n /= i;\n            }\n        }\n      \
    \  if (n > 1) {\n            factors.Add(n);\n        }\n        return factors;",
  "        List<long> factors = new List<long>();\n        for (long i = 2; i * i\
    \ <= n; i++) {\n            while (n % i == 0) {\n                factors.Add(i);\n\
    \                n /= i;\n            }\n        }\n        if (n > 1) {\n   \
    \         factors.Add(n);\n        }\n        return factors;", "        List<long>\
    \ factors = new List<long>();\n        if (n <= 1) {\n            return factors;\n\
    \        }\n        while (n % 2 == 0) {\n            factors.Add(2);\n      \
    \      n /= 2;\n        }\n        for (long i = 3; i * i <= n; i += 2) {\n  \
    \          while (n % i == 0) {\n                factors.Add(i);\n           \
    \     n /= i;\n            }\n        }\n        if (n > 1) {\n            factors.Add(n);\n\
    \        }\n        return factors;", "        List<long> factors = new List<long>();\n\
    \        for (long i = 2; i * i <= n; i++) {\n            while (n % i == 0) {\n\
    \                factors.Add(i);\n                n /= i;\n            }\n   \
    \     }\n        if (n > 1) {\n            factors.Add(n);\n        }\n      \
    \  return factors;", "        List<long> factors = new List<long>();\n       \
    \ for (long i = 2; i * i <= n; i++) {\n            while (n % i == 0) {\n    \
    \            factors.Add(i);\n                n /= i;\n            }\n       \
    \ }\n        if (n > 1) {\n            factors.Add(n);\n        }\n        return\
    \ factors;", "        List<long> factors = new List<long>();\n        for (long\
    \ i = 2; i * i <= n; i++) {\n            while (n % i == 0) {\n              \
    \  factors.Add(i);\n                n /= i;\n            }\n        }\n      \
    \  if (n > 1) {\n            factors.Add(n);\n        }\n        return factors;",
  "        List<long> factors = new List<long>();\n        long d = 2;\n        while\
    \ (n > 1) {\n            while (n % d == 0) {\n                factors.Add(d);\n\
    \                n /= d;\n            }\n            d += 1;\n        }\n    \
    \    return factors;", "        List<long> factors = new List<long>();\n     \
    \   for (long i = 2; i * i <= n; i++) {\n            while (n % i == 0) {\n  \
    \              factors.Add(i);\n                n /= i;\n            }\n     \
    \   }\n        if (n > 1) {\n            factors.Add(n);\n        }\n        return\
    \ factors;", "        List<long> factors = new List<long>();\n        long d =\
    \ 2;\n        while (n > 1) {\n            while (n % d == 0) {\n            \
    \    factors.Add(d);\n                n /= d;\n            }\n            d +=\
    \ 1;\n        }\n        return factors;", "        List<long> factors = new List<long>();\n\
    \        for (long i = 2; i * i <= n; i++) {\n            while (n % i == 0) {\n\
    \                factors.Add(i);\n                n /= i;\n            }\n   \
    \     }\n        if (n > 1) {\n            factors.Add(n);\n        }\n      \
    \  return factors;", "        var factors = new List<long>();\n        for (long\
    \ i = 2; i * i <= n; i++) {\n            while (n % i == 0) {\n              \
    \  factors.Add(i);\n                n /= i;\n            }\n        }\n      \
    \  if (n > 1) {\n            factors.Add(n);\n        }\n        return factors;",
  "        List<long> factors = new List<long>();\n        long d = 2;\n        while\
    \ (n > 1) {\n            while (n % d == 0) {\n                factors.Add(d);\n\
    \                n /= d;\n            }\n            d++;\n        }\n       \
    \ return factors;", "        List<long> factors = new List<long>();\n        while\
    \ (n % 2 == 0) {\n            factors.Add(2);\n            n /= 2;\n        }\n\
    \        long p = 3;\n        while (n > 1) {\n            if (n % p == 0) {\n\
    \                factors.Add(p);\n                n /= p;\n            }\n   \
    \         else {\n                p += 2;\n            }\n        }\n        return\
    \ factors;", "        List<long> factors = new List<long>();\n        long d =\
    \ 2;\n        while (n > 1) {\n            while (n % d == 0) {\n            \
    \    factors.Add(d);\n                n /= d;\n            }\n            d +=\
    \ 1;\n        }\n        return factors;", "        List<long> factors = new List<long>();\n\
    \        for (long i = 2; i * i <= n; i++) {\n            while (n % i == 0) {\n\
    \                factors.Add(i);\n                n /= i;\n            }\n   \
    \     }\n        if (n > 1) {\n            factors.Add(n);\n        }\n      \
    \  return factors;", "        List<long> factors = new List<long>();\n       \
    \ long d = 2;\n        while (n > 1) {\n            while (n % d == 0) {\n   \
    \             factors.Add(d);\n                n /= d;\n            }\n      \
    \      d += 1;\n        }\n        return factors;", "        List<long> factors\
    \ = new List<long>();\n        long d = 2;\n        while (n > 1) {\n        \
    \    while (n % d == 0) {\n                factors.Add(d);\n                n\
    \ /= d;\n            }\n            d += 1;\n        }\n        return factors;",
  "        List<long> factors = new List<long>();\n        for (long i = 2; i * i\
    \ <= n; i++) {\n            while (n % i == 0) {\n                factors.Add(i);\n\
    \                n /= i;\n            }\n        }\n        if (n > 1) {\n   \
    \         factors.Add(n);\n        }\n        return factors;", "        List<long>\
    \ factors = new List<long>();\n        long d = 2;\n        while (n > 1) {\n\
    \            while (n % d == 0) {\n                factors.Add(d);\n         \
    \       n /= d;\n            }\n            d += 1;\n        }\n        return\
    \ factors;", "        List<long> factors = new List<long>();\n        while (n\
    \ % 2 == 0) {\n            factors.Add(2);\n            n /= 2;\n        }\n \
    \       long i = 3;\n        while (i * i <= n) {\n            if (n % i == 0)\
    \ {\n                factors.Add(i);\n                n /= i;\n            }\n\
    \            else {\n                i += 2;\n            }\n        }\n     \
    \   if (n > 1) {\n            factors.Add(n);\n        }\n        return factors;",
  "        List<long> factors = new List<long>();\n        for (long i = 2; i * i\
    \ <= n; i++) {\n            while (n % i == 0) {\n                factors.Add(i);\n\
    \                n /= i;\n            }\n        }\n        if (n > 1) {\n   \
    \         factors.Add(n);\n        }\n        return factors;", "        List<long>\
    \ factors = new List<long>();\n        for (long i = 2; i * i <= n; i++) {\n \
    \           while (n % i == 0) {\n                factors.Add(i);\n          \
    \      n /= i;\n            }\n        }\n        if (n > 1) {\n            factors.Add(n);\n\
    \        }\n        return factors;", "        List<long> factors = new List<long>();\n\
    \        for (long i = 2; i * i <= n; i++) {\n            while (n % i == 0) {\n\
    \                factors.Add(i);\n                n /= i;\n            }\n   \
    \     }\n        if (n > 1) {\n            factors.Add(n);\n        }\n      \
    \  return factors;", "        List<long> factors = new List<long>();\n       \
    \ long d = 2;\n        while (n > 1) {\n            while (n % d == 0) {\n   \
    \             factors.Add(d);\n                n /= d;\n            }\n      \
    \      d += 1;\n        }\n        return factors;", "        List<long> factors\
    \ = new List<long>();\n        for (long i = 2; i * i <= n; i++) {\n         \
    \   while (n % i == 0) {\n                factors.Add(i);\n                n /=\
    \ i;\n            }\n        }\n        if (n > 1) {\n            factors.Add(n);\n\
    \        }\n        return factors;", "        List<long> factors = new List<long>();\n\
    \        long d = 2;\n        while (n > 1) {\n            while (n % d == 0)\
    \ {\n                factors.Add(d);\n                n /= d;\n            }\n\
    \            d += 1;\n        }\n        return factors;", "        List<long>\
    \ factors = new List<long>();\n        for (long i = 2; i * i <= n; i++) {\n \
    \           while (n % i == 0) {\n                factors.Add(i);\n          \
    \      n /= i;\n            }\n        }\n        if (n > 1) {\n            factors.Add(n);\n\
    \        }\n        return factors;", "        List<long> factors = new List<long>();\n\
    \        while (n % 2 == 0) {\n            factors.Add(2);\n            n /= 2;\n\
    \        }\n        for (long i = 3; i * i <= n; i += 2) {\n            while\
    \ (n % i == 0) {\n                factors.Add(i);\n                n /= i;\n \
    \           }\n        }\n        if (n > 2) {\n            factors.Add(n);\n\
    \        }\n        return factors;", "        List<long> factors = new List<long>();\n\
    \        for (long i = 2; i * i <= n; i++) {\n            while (n % i == 0) {\n\
    \                factors.Add(i);\n                n /= i;\n            }\n   \
    \     }\n        if (n > 1) {\n            factors.Add(n);\n        }\n      \
    \  return factors;", "        List<long> factors = new List<long>();\n       \
    \ while (n % 2 == 0) {\n            factors.Add(2);\n            n /= 2;\n   \
    \     }\n        for (long i = 3; i * i <= n; i += 2) {\n            while (n\
    \ % i == 0) {\n                factors.Add(i);\n                n /= i;\n    \
    \        }\n        }\n        if (n > 2) {\n            factors.Add(n);\n   \
    \     }\n        return factors;", "        List<long> factors = new List<long>();\n\
    \        while (n % 2 == 0) {\n            factors.Add(2);\n            n /= 2;\n\
    \        }\n        for (long i = 3; i * i <= n; i += 2) {\n            while\
    \ (n % i == 0) {\n                factors.Add(i);\n                n /= i;\n \
    \           }\n        }\n        if (n > 2) {\n            factors.Add(n);\n\
    \        }\n        return factors;", "        List<long> factors = new List<long>();\n\
    \        long d = 2;\n        while (n > 1) {\n            while (n % d == 0)\
    \ {\n                factors.Add(d);\n                n /= d;\n            }\n\
    \            d += 1;\n        }\n        return factors;", "        List<long>\
    \ factors = new List<long>();\n        for (long i = 2; i * i <= n; i++) {\n \
    \           while (n % i == 0) {\n                factors.Add(i);\n          \
    \      n /= i;\n            }\n        }\n        if (n > 1) {\n            factors.Add(n);\n\
    \        }\n        return factors;", "        List<long> res = new List<long>();\n\
    \        for (long i = 2; i * i <= n; i++) {\n            while (n % i == 0) {\n\
    \                res.Add(i);\n                n /= i;\n            }\n       \
    \ }\n        if (n > 1) {\n            res.Add(n);\n        }\n        return\
    \ res;", "        List<long> factors = new List<long>();\n        long d = 2;\n\
    \        while (n > 1) {\n            while (n % d == 0) {\n                factors.Add(d);\n\
    \                n /= d;\n            }\n            d += 1;\n        }\n    \
    \    return factors;", "        List<long> factors = new List<long>();\n     \
    \   for (long i = 2; i * i <= n; i++) {\n            while (n % i == 0) {\n  \
    \              factors.Add(i);\n                n /= i;\n            }\n     \
    \   }\n        if (n > 1) {\n            factors.Add(n);\n        }\n        return\
    \ factors;", "        List<long> factors = new List<long>();\n        for (long\
    \ i = 2; i * i <= n; i++) {\n            while (n % i == 0) {\n              \
    \  factors.Add(i);\n                n /= i;\n            }\n        }\n      \
    \  if (n > 1) {\n            factors.Add(n);\n        }\n        return factors;",
  "        List<long> factors = new List<long>();\n        for (long i = 2; i * i\
    \ <= n; i++) {\n            while (n % i == 0) {\n                factors.Add(i);\n\
    \                n /= i;\n            }\n        }\n        if (n > 1) {\n   \
    \         factors.Add(n);\n        }\n        return factors;", "        List<long>\
    \ factors = new List<long>();\n        for (long i = 2; i * i <= n; i++) {\n \
    \           while (n % i == 0) {\n                factors.Add(i);\n          \
    \      n /= i;\n            }\n        }\n        if (n > 1) {\n            factors.Add(n);\n\
    \        }\n        return factors;", "        List<long> factors = new List<long>();\n\
    \        long d = 2;\n        while (n > 1) {\n            while (n % d == 0)\
    \ {\n                factors.Add(d);\n                n /= d;\n            }\n\
    \            d += 1;\n        }\n        return factors;", "        List<long>\
    \ factors = new List<long>();\n        for (long i = 2; i * i <= n; i++) {\n \
    \           while (n % i == 0) {\n                factors.Add(i);\n          \
    \      n /= i;\n            }\n        }\n        if (n > 1) {\n            factors.Add(n);\n\
    \        }\n        return factors;", "        List<long> factors = new List<long>();\n\
    \        for (long i = 2; i * i <= n; i++) {\n            while (n % i == 0) {\n\
    \                factors.Add(i);\n                n /= i;\n            }\n   \
    \     }\n        if (n > 1) {\n            factors.Add(n);\n        }\n      \
    \  return factors;", "        List<long> factors = new List<long>();\n       \
    \ for (long i = 2; i * i <= n; i++) {\n            while (n % i == 0) {\n    \
    \            factors.Add(i);\n                n /= i;\n            }\n       \
    \ }\n        if (n > 1) {\n            factors.Add(n);\n        }\n        return\
    \ factors;", "        List<long> factors = new List<long>();\n        while (n\
    \ % 2 == 0) {\n            factors.Add(2);\n            n /= 2;\n        }\n \
    \       for (long i = 3; i * i <= n; i += 2) {\n            while (n % i == 0)\
    \ {\n                factors.Add(i);\n                n /= i;\n            }\n\
    \        }\n        if (n > 2) {\n            factors.Add(n);\n        }\n   \
    \     return factors;", "        var factors = new List<long>();\n        for\
    \ (long i = 2; i * i <= n; i++) {\n            while (n % i == 0) {\n        \
    \        factors.Add(i);\n                n /= i;\n            }\n        }\n\
    \        if (n > 1) {\n            factors.Add(n);\n        }\n        return\
    \ factors;", "        List<long> factors = new List<long>();\n        long d =\
    \ 2;\n        while (n > 1) {\n            while (n % d == 0) {\n            \
    \    factors.Add(d);\n                n /= d;\n            }\n            d +=\
    \ 1;\n        }\n        return factors;", "        List<long> factors = new List<long>();\n\
    \        for (long i = 2; i * i <= n; i++) {\n            while (n % i == 0) {\n\
    \                factors.Add(i);\n                n /= i;\n            }\n   \
    \     }\n        if (n > 1) {\n            factors.Add(n);\n        }\n      \
    \  return factors;", "        List<long> factors = new List<long>();\n       \
    \ long d = 2;\n        while (n > 1) {\n            while (n % d == 0) {\n   \
    \             factors.Add(d);\n                n /= d;\n            }\n      \
    \      d += 1;\n        }\n        return factors;", "        List<long> factors\
    \ = new List<long>();\n        long d = 2;\n        while (n > 1) {\n        \
    \    while (n % d == 0) {\n                factors.Add(d);\n                n\
    \ /= d;\n            }\n            d += 1;\n        }\n        return factors;",
  "        List<long> factors = new List<long>();\n        for (long i = 2; i * i\
    \ <= n; i++) {\n            while (n % i == 0) {\n                factors.Add(i);\n\
    \                n /= i;\n            }\n        }\n        if (n > 1) {\n   \
    \         factors.Add(n);\n        }\n        return factors;", "        List<long>\
    \ factors = new List<long>();\n        for (long i = 2; i * i <= n; i++) {\n \
    \           while (n % i == 0) {\n                factors.Add(i);\n          \
    \      n /= i;\n            }\n        }\n        if (n > 1) {\n            factors.Add(n);\n\
    \        }\n        return factors;", "        List<long> factors = new List<long>();\n\
    \        for (long i = 2; i * i <= n; i++) {\n            while (n % i == 0) {\n\
    \                factors.Add(i);\n                n /= i;\n            }\n   \
    \     }\n        if (n > 1) {\n            factors.Add(n);\n        }\n      \
    \  return factors;", "        List<long> factors = new List<long>();\n       \
    \ for (long i = 2; i * i <= n; i++) {\n            while (n % i == 0) {\n    \
    \            factors.Add(i);\n                n /= i;\n            }\n       \
    \ }\n        if (n > 1) {\n            factors.Add(n);\n        }\n        return\
    \ factors;", "        List<long> factors = new List<long>();\n        for (long\
    \ i = 2; i * i <= n; i++) {\n            while (n % i == 0) {\n              \
    \  factors.Add(i);\n                n /= i;\n            }\n        }\n      \
    \  if (n > 1) {\n            factors.Add(n);\n        }\n        return factors;",
  "        List<long> factors = new List<long>();\n        while (n % 2 == 0) {\n\
    \            factors.Add(2);\n            n /= 2;\n        }\n        for (long\
    \ i = 3; i * i <= n; i += 2) {\n            while (n % i == 0) {\n           \
    \     factors.Add(i);\n                n /= i;\n            }\n        }\n   \
    \     if (n > 2) {\n            factors.Add(n);\n        }\n        return factors;",
  "        List<long> factors = new List<long>();\n        for (long i = 2; i * i\
    \ <= n; i++) {\n            while (n % i == 0) {\n                factors.Add(i);\n\
    \                n /= i;\n            }\n        }\n        if (n > 1) {\n   \
    \         factors.Add(n);\n        }\n        return factors;", "        List<long>\
    \ factors = new List<long>();\n        long d = 2;\n        while (n > 1) {\n\
    \            while (n % d == 0) {\n                factors.Add(d);\n         \
    \       n /= d;\n            }\n            d += 1;\n        }\n        return\
    \ factors;", "        List<long> factors = new List<long>();\n        while (n\
    \ % 2 == 0) {\n            factors.Add(2);\n            n /= 2;\n        }\n \
    \       for (long i = 3; i * i <= n; i += 2) {\n            while (n % i == 0)\
    \ {\n                factors.Add(i);\n                n /= i;\n            }\n\
    \        }\n        if (n > 2) {\n            factors.Add(n);\n        }\n   \
    \     return factors;", "        List<long> factors = new List<long>();\n    \
    \    for (long i = 2; i * i <= n; i++) {\n            while (n % i == 0) {\n \
    \               factors.Add(i);\n                n /= i;\n            }\n    \
    \    }\n        if (n > 1) {\n            factors.Add(n);\n        }\n       \
    \ return factors;", "        List<long> factors = new List<long>();\n        for\
    \ (long i = 2; i * i <= n; i++) {\n            while (n % i == 0) {\n        \
    \        factors.Add(i);\n                n /= i;\n            }\n        }\n\
    \        if (n > 1) {\n            factors.Add(n);\n        }\n        return\
    \ factors;", "        var factors = new List<long>();\n        for (long i = 2;\
    \ i * i <= n; i++) {\n            while (n % i == 0) {\n                factors.Add(i);\n\
    \                n /= i;\n            }\n        }\n        if (n > 1) {\n   \
    \         factors.Add(n);\n        }\n        return factors;", "        List<long>\
    \ factors = new List<long>();\n        for (long i = 2; i * i <= n; i++) {\n \
    \           while (n % i == 0) {\n                factors.Add(i);\n          \
    \      n /= i;\n            }\n        }\n        if (n > 1) {\n            factors.Add(n);\n\
    \        }\n        return factors;", "        List<long> factors = new List<long>();\n\
    \        long d = 2;\n        while (n > 1) {\n            while (n % d == 0)\
    \ {\n                factors.Add(d);\n                n /= d;\n            }\n\
    \            d += 1;\n        }\n        return factors;", "        List<long>\
    \ res = new List<long>();\n        for (long i = 2; i * i <= n; i++) {\n     \
    \       while (n % i == 0) {\n                res.Add(i);\n                n /=\
    \ i;\n            }\n        }\n        if (n > 1) {\n            res.Add(n);\n\
    \        }\n        return res;", "        List<long> factors = new List<long>();\n\
    \        long d = 2;\n        while (n > 1) {\n            while (n % d == 0)\
    \ {\n                factors.Add(d);\n                n /= d;\n            }\n\
    \            d += 1;\n        }\n        return factors;", "        List<long>\
    \ factors = new List<long>();\n        long d = 2;\n        while (n > 1) {\n\
    \            while (n % d == 0) {\n                factors.Add(d);\n         \
    \       n /= d;\n            }\n            d += 1;\n        }\n        return\
    \ factors;", "        List<long> factors = new List<long>();\n        for (long\
    \ i = 2; i * i <= n; i++) {\n            while (n % i == 0) {\n              \
    \  factors.Add(i);\n                n /= i;\n            }\n        }\n      \
    \  if (n > 1) {\n            factors.Add(n);\n        }\n        return factors;",
  "        List<long> factors = new List<long>();\n        for (long i = 2; i * i\
    \ <= n; i++) {\n            while (n % i == 0) {\n                factors.Add(i);\n\
    \                n /= i;\n            }\n        }\n        if (n > 1) {\n   \
    \         factors.Add(n);\n        }\n        return factors;", "        List<long>\
    \ factors = new List<long>();\n        for (long i = 2; i * i <= n; i++) {\n \
    \           while (n % i == 0) {\n                factors.Add(i);\n          \
    \      n /= i;\n            }\n        }\n        if (n > 1) {\n            factors.Add(n);\n\
    \        }\n        return factors;", "        List<long> factors = new List<long>();\n\
    \        for (long i = 2; i * i <= n; i++) {\n            while (n % i == 0) {\n\
    \                factors.Add(i);\n                n /= i;\n            }\n   \
    \     }\n        if (n > 1) {\n            factors.Add(n);\n        }\n      \
    \  return factors;", "        var factors = new List<long>();\n        for (long\
    \ i = 2; i * i <= n; i++) {\n            while (n % i == 0) {\n              \
    \  factors.Add(i);\n                n /= i;\n            }\n        }\n      \
    \  if (n > 1) {\n            factors.Add(n);\n        }\n        return factors;",
  "        List<long> factors = new List<long>();\n        long d = 2;\n        while\
    \ (n > 1) {\n            while (n % d == 0) {\n                factors.Add(d);\n\
    \                n /= d;\n            }\n            d += 1;\n        }\n    \
    \    return factors;", "        List<long> factors = new List<long>();\n     \
    \   for (long i = 2; i * i <= n; i++) {\n            while (n % i == 0) {\n  \
    \              factors.Add(i);\n                n /= i;\n            }\n     \
    \   }\n        if (n > 1) {\n            factors.Add(n);\n        }\n        return\
    \ factors;", "        var factors = new List<long>();\n        for (long i = 2;\
    \ i * i <= n; i++) {\n            while (n % i == 0) {\n                factors.Add(i);\n\
    \                n /= i;\n            }\n        }\n        if (n > 1) {\n   \
    \         factors.Add(n);\n        }\n        return factors;", "        List<long>\
    \ factors = new List<long>();\n        for (long i = 2; i <= n; i++) {\n     \
    \       while (n % i == 0) {\n                factors.Add(i);\n              \
    \  n /= i;\n            }\n        }\n        return factors;", "        List<long>\
    \ factors = new List<long>();\n        for (long d = 2; d * d <= n; d++) {\n \
    \           while (n % d == 0) {\n                factors.Add(d);\n          \
    \      n /= d;\n            }\n        }\n        if (n > 1) {\n            factors.Add(n);\n\
    \        }\n        return factors;", "        List<long> factors = new List<long>();\n\
    \        for (long i = 2; i * i <= n; i++) {\n            while (n % i == 0) {\n\
    \                factors.Add(i);\n                n /= i;\n            }\n   \
    \     }\n        if (n > 1) {\n            factors.Add(n);\n        }\n      \
    \  return factors;", "        List<long> res = new List<long>();\n        for\
    \ (long i = 2; i * i <= n; i++) {\n            while (n % i == 0) {\n        \
    \        res.Add(i);\n                n /= i;\n            }\n        }\n    \
    \    if (n > 1) {\n            res.Add(n);\n        }\n        return res;", " \
    \       List<long> factors = new List<long>();\n        for (long i = 2; i * i\
    \ <= n; i++) {\n            while (n % i == 0) {\n                factors.Add(i);\n\
    \                n /= i;\n            }\n        }\n        if (n > 1) {\n   \
    \         factors.Add(n);\n        }\n        return factors;", "        List<long>\
    \ factors = new List<long>();\n        long d = 2;\n        while (n > 1) {\n\
    \            while (n % d == 0) {\n                factors.Add(d);\n         \
    \       n /= d;\n            }\n            d += 1;\n        }\n        return\
    \ factors;", "        List<long> factors = new List<long>();\n        for (long\
    \ i = 2; i * i <= n; i++) {\n            while (n % i == 0) {\n              \
    \  factors.Add(i);\n                n /= i;\n            }\n        }\n      \
    \  if (n > 1) {\n            factors.Add(n);\n        }\n        return factors;",
  "        List<long> factors = new List<long>();\n        long d = 2;\n        while\
    \ (n > 1) {\n            while (n % d == 0) {\n                factors.Add(d);\n\
    \                n /= d;\n            }\n            d += 1;\n        }\n    \
    \    return factors;", "        List<long> factors = new List<long>();\n     \
    \   for (long i = 2; i * i <= n; i++) {\n            while (n % i == 0) {\n  \
    \              factors.Add(i);\n                n /= i;\n            }\n     \
    \   }\n        if (n > 1) {\n            factors.Add(n);\n        }\n        return\
    \ factors;", "        List<long> factors = new List<long>();\n        for (long\
    \ i = 2; i * i <= n; i++) {\n            while (n % i == 0) {\n              \
    \  factors.Add(i);\n                n /= i;\n            }\n        }\n      \
    \  if (n > 1) {\n            factors.Add(n);\n        }\n        return factors;",
  "        List<long> factors = new List<long>();\n        long d = 2;\n        while\
    \ (n > 1) {\n            while (n % d == 0) {\n                factors.Add(d);\n\
    \                n /= d;\n            }\n            d += 1;\n        }\n    \
    \    return factors;", "        List<long> factors = new List<long>();\n     \
    \   for (long i = 2; i * i <= n; i++) {\n            while (n % i == 0) {\n  \
    \              factors.Add(i);\n                n /= i;\n            }\n     \
    \   }\n        if (n > 1) {\n            factors.Add(n);\n        }\n        return\
    \ factors;", "        List<long> factors = new List<long>();\n        long d =\
    \ 2;\n        while (n > 1) {\n            while (n % d == 0) {\n            \
    \    factors.Add(d);\n                n /= d;\n            }\n            d +=\
    \ 1;\n        }\n        return factors;", "        List<long> factors = new List<long>();\n\
    \        for (long i = 2; i * i <= n; i++) {\n            while (n % i == 0) {\n\
    \                factors.Add(i);\n                n /= i;\n            }\n   \
    \     }\n        if (n > 1) {\n            factors.Add(n);\n        }\n      \
    \  return factors;", "        List<long> factors = new List<long>();\n       \
    \ long d = 2;\n        while (n > 1) {\n            while (n % d == 0) {\n   \
    \             factors.Add(d);\n                n /= d;\n            }\n      \
    \      d += 1;\n        }\n        return factors;", "        List<long> res =\
    \ new List<long>();\n        for (long i = 2; i * i <= n; i++) {\n           \
    \ while (n % i == 0) {\n                res.Add(i);\n                n /= i;\n\
    \            }\n        }\n        if (n > 1) {\n            res.Add(n);\n   \
    \     }\n        return res;", "        var factors = new List<long>();\n    \
    \    for (long d = 2; d * d <= n; d++) {\n            while (n % d == 0) {\n \
    \               factors.Add(d);\n                n /= d;\n            }\n    \
    \    }\n        if (n > 1) {\n            factors.Add(n);\n        }\n       \
    \ return factors;", "        List<long> factors = new List<long>();\n        for\
    \ (long i = 2; i * i <= n; i++) {\n            while (n % i == 0) {\n        \
    \        factors.Add(i);\n                n /= i;\n            }\n        }\n\
    \        if (n > 1) {\n            factors.Add(n);\n        }\n        return\
    \ factors;", "        List<long> factors = new List<long>();\n        long d =\
    \ 2;\n        while (n > 1) {\n            while (n % d == 0) {\n            \
    \    factors.Add(d);\n                n /= d;\n            }\n            d +=\
    \ 1;\n        }\n        return factors;", "        var factors = new List<long>();\n\
    \        for (long i = 2; i * i <= n; i++) {\n            while (n % i == 0) {\n\
    \                factors.Add(i);\n                n /= i;\n            }\n   \
    \     }\n        if (n > 1) {\n            factors.Add(n);\n        }\n      \
    \  return factors;", "        List<long> factors = new List<long>();\n       \
    \ long d = 2;\n        while (n > 1) {\n            while (n % d == 0) {\n   \
    \             factors.Add(d);\n                n /= d;\n            }\n      \
    \      d += 1;\n        }\n        return factors;", "        List<long> factors\
    \ = new List<long>();\n        for (long i = 2; i * i <= n; i++) {\n         \
    \   while (n % i == 0) {\n                factors.Add(i);\n                n /=\
    \ i;\n            }\n        }\n        if (n > 1) {\n            factors.Add(n);\n\
    \        }\n        return factors;", "        List<long> factors = new List<long>();\n\
    \        for (long i = 2; i * i <= n; i++) {\n            while (n % i == 0) {\n\
    \                factors.Add(i);\n                n /= i;\n            }\n   \
    \     }\n        if (n > 1) {\n            factors.Add(n);\n        }\n      \
    \  return factors;"]
stop_tokens:
- "\n    }\n"

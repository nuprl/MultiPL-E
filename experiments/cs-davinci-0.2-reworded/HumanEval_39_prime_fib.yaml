name: HumanEval_39_prime_fib
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // prime_fib returns n-th number that is a Fibonacci number and\
  \ it's also prime.\n    // >>> PrimeFib((1L))\n    // (2L)\n    // >>> PrimeFib((2L))\n\
  \    // (3L)\n    // >>> PrimeFib((3L))\n    // (5L)\n    // >>> PrimeFib((4L))\n\
  \    // (13L)\n    // >>> PrimeFib((5L))\n    // (89L)\n    public static long PrimeFib(long\
  \ n) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(PrimeFib((1L))\
  \ == (2L));\n    Debug.Assert(PrimeFib((2L)) == (3L));\n    Debug.Assert(PrimeFib((3L))\
  \ == (5L));\n    Debug.Assert(PrimeFib((4L)) == (13L));\n    Debug.Assert(PrimeFib((5L))\
  \ == (89L));\n    Debug.Assert(PrimeFib((6L)) == (233L));\n    Debug.Assert(PrimeFib((7L))\
  \ == (1597L));\n    Debug.Assert(PrimeFib((8L)) == (28657L));\n    Debug.Assert(PrimeFib((9L))\
  \ == (514229L));\n    Debug.Assert(PrimeFib((10L)) == (433494437L));\n    }\n\n\
  }\n"
completions: ["        long a = 2;\n        long b = 3;\n        long c = 5;\n   \
    \     long i = 3;\n        while (i < n) {\n            a = b;\n            b\
    \ = c;\n            c = a + b;\n            if (IsPrime(c)) {\n              \
    \  i += 1;\n            }\n        }\n        return c;", "        long a = 2;\n\
    \        long b = 3;\n        long c = 5;\n        long i = 3;\n        while\
    \ (i < n) {\n            a = b;\n            b = c;\n            c = a + b;\n\
    \            if (IsPrime(c)) {\n                i += 1;\n            }\n     \
    \   }\n        return c;", "        long a = 2;\n        long b = 3;\n       \
    \ long c = 5;\n        long i = 3;\n        while (true) {\n            if (i\
    \ == n) {\n                return c;\n            }\n            a = b;\n    \
    \        b = c;\n            c = a + b;\n            i = i + 1;\n        }", " \
    \       long a = 2;\n        long b = 3;\n        long c = 5;\n        long i\
    \ = 3;\n        while (i < n) {\n            a = b;\n            b = c;\n    \
    \        c = a + b;\n            if (IsPrime(c)) {\n                i = i + 1;\n\
    \            }\n        }\n        return c;", "        long a = 2;\n        long\
    \ b = 3;\n        long c = 5;\n        long i = 3;\n        while (i < n) {\n\
    \            a = b;\n            b = c;\n            c = a + b;\n            i\
    \ = i + 1;\n        }\n        return c;", "        long a = 2;\n        long\
    \ b = 3;\n        long c = 5;\n        long i = 3;\n        while (i < n) {\n\
    \            a = b;\n            b = c;\n            c = a + b;\n            if\
    \ (IsPrime(c)) {\n                i += 1;\n            }\n        }\n        return\
    \ c;", "        long a = 2;\n        long b = 3;\n        long c = 5;\n      \
    \  long i = 3;\n        while (i < n) {\n            a = b;\n            b = c;\n\
    \            c = a + b;\n            if (IsPrime(c)) {\n                i = i\
    \ + 1;\n            }\n        }\n        return c;", "        long a = 2;\n \
    \       long b = 3;\n        long c = 5;\n        long i = 3;\n        while (true)\
    \ {\n            if (i == n) {\n                return c;\n            }\n   \
    \         a = b;\n            b = c;\n            c = a + b;\n            i =\
    \ i + 1;\n        }", "        long a = 2;\n        long b = 3;\n        long\
    \ c = 5;\n        long i = 3;\n        while (i < n) {\n            a = b;\n \
    \           b = c;\n            c = a + b;\n            if (IsPrime(c)) {\n  \
    \              i += 1;\n            }\n        }\n        return c;", "      \
    \  long a = 2;\n        long b = 3;\n        long c = 5;\n        long i = 3;\n\
    \        while (i < n) {\n            a = b;\n            b = c;\n           \
    \ c = a + b;\n            i = i + 1;\n        }\n        return c;", "       \
    \ long a = 2;\n        long b = 3;\n        long c = 5;\n        long i = 3;\n\
    \        while (i < n) {\n            a = b;\n            b = c;\n           \
    \ c = a + b;\n            if (IsPrime(c)) {\n                i = i + 1;\n    \
    \        }\n        }\n        return c;", "        long a = 2;\n        long\
    \ b = 3;\n        long c = 5;\n        long i = 3;\n        while (i < n) {\n\
    \            a = b;\n            b = c;\n            c = a + b;\n            if\
    \ (IsPrime(c)) {\n                i = i + 1;\n            }\n        }\n     \
    \   return c;", "        long a = 2;\n        long b = 3;\n        long c = 5;\n\
    \        long i = 3;\n        while (i < n) {\n            a = b;\n          \
    \  b = c;\n            c = a + b;\n            if (IsPrime(c)) {\n           \
    \     i = i + 1;\n            }\n        }\n        return c;", "        long\
    \ a = 1;\n        long b = 1;\n        long c = 2;\n        long i = 1;\n    \
    \    while (i < n) {\n            c = a + b;\n            a = b;\n           \
    \ b = c;\n            if (IsPrime(c)) {\n                i += 1;\n           \
    \ }\n        }\n        return c;", "        long a = 2;\n        long b = 3;\n\
    \        long c = 5;\n        long i = 3;\n        while (i < n) {\n         \
    \   a = b;\n            b = c;\n            c = a + b;\n            if (IsPrime(c))\
    \ {\n                i = i + 1;\n            }\n        }\n        return c;",
  "        long a = 2;\n        long b = 3;\n        long c = 5;\n        long i =\
    \ 3;\n        while (i < n) {\n            a = b;\n            b = c;\n      \
    \      c = a + b;\n            if (IsPrime(c)) {\n                i = i + 1;\n\
    \            }\n        }\n        return c;", "        long a = 2;\n        long\
    \ b = 3;\n        long c = 5;\n        long i = 3;\n        while (i < n) {\n\
    \            a = b;\n            b = c;\n            c = a + b;\n            if\
    \ (IsPrime(c)) {\n                i += 1;\n            }\n        }\n        return\
    \ c;", "        long a = 2;\n        long b = 3;\n        long c = 5;\n      \
    \  long i = 3;\n        while (i < n) {\n            a = b;\n            b = c;\n\
    \            c = a + b;\n            if (IsPrime(c)) {\n                i = i\
    \ + 1;\n            }\n        }\n        return c;", "        long a = 1;\n \
    \       long b = 1;\n        long c = 2;\n        long i = 1;\n        while (i\
    \ < n) {\n            c = a + b;\n            a = b;\n            b = c;\n   \
    \         if (IsPrime(c)) {\n                i++;\n            }\n        }\n\
    \        return c;", "        long a = 2;\n        long b = 3;\n        long c\
    \ = 5;\n        long i = 3;\n        while (i < n) {\n            a = b;\n   \
    \         b = c;\n            c = a + b;\n            if (IsPrime(c)) {\n    \
    \            i += 1;\n            }\n        }\n        return c;"]
stop_tokens:
- "\n    }\n"

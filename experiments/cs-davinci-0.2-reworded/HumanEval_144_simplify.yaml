name: HumanEval_144_simplify
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // Your task is to implement a function that will simplify the\
  \ expression\n    // x * n. The function returns true if x * n evaluates to a whole\
  \ number and false\n    // otherwise. Both x and n, are string representation of\
  \ a fraction, and have the following format,\n    // <numerator>/<denominator> where\
  \ both numerator and denominator are positive whole numbers.\n    // You can assume\
  \ that x, and n are valid fractions, and do not have zero as denominator.\n    //\
  \ >>> Simplify((\"1/5\"), (\"5/1\"))\n    // (true)\n    // >>> Simplify((\"1/6\"\
  ), (\"2/1\"))\n    // (false)\n    // >>> Simplify((\"7/10\"), (\"10/2\"))\n   \
  \ // (false)\n    public static bool Simplify(string x, string n) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(Simplify((\"\
  1/5\"), (\"5/1\")) == (true));\n    Debug.Assert(Simplify((\"1/6\"), (\"2/1\"))\
  \ == (false));\n    Debug.Assert(Simplify((\"5/1\"), (\"3/1\")) == (true));\n  \
  \  Debug.Assert(Simplify((\"7/10\"), (\"10/2\")) == (false));\n    Debug.Assert(Simplify((\"\
  2/10\"), (\"50/10\")) == (true));\n    Debug.Assert(Simplify((\"7/2\"), (\"4/2\"\
  )) == (true));\n    Debug.Assert(Simplify((\"11/6\"), (\"6/1\")) == (true));\n \
  \   Debug.Assert(Simplify((\"2/3\"), (\"5/2\")) == (false));\n    Debug.Assert(Simplify((\"\
  5/2\"), (\"3/5\")) == (false));\n    Debug.Assert(Simplify((\"2/4\"), (\"8/4\"))\
  \ == (true));\n    Debug.Assert(Simplify((\"2/4\"), (\"4/2\")) == (true));\n   \
  \ Debug.Assert(Simplify((\"1/5\"), (\"5/1\")) == (true));\n    Debug.Assert(Simplify((\"\
  1/5\"), (\"1/5\")) == (false));\n    }\n\n}\n"
completions: ["        var xParts = x.Split('/');\n        var nParts = n.Split('/');\n\
    \        var xNumerator = BigInteger.Parse(xParts[0]);\n        var xDenominator\
    \ = BigInteger.Parse(xParts[1]);\n        var nNumerator = BigInteger.Parse(nParts[0]);\n\
    \        var nDenominator = BigInteger.Parse(nParts[1]);\n        var numerator\
    \ = xNumerator * nDenominator;\n        var denominator = xDenominator * nNumerator;\n\
    \        var gcd = BigInteger.GreatestCommonDivisor(numerator, denominator);\n\
    \        numerator /= gcd;\n        denominator /= gcd;\n        return denominator\
    \ == 1;", "        var xSplit = x.Split('/');\n        var nSplit = n.Split('/');\n\
    \        var xNum = BigInteger.Parse(xSplit[0]);\n        var xDen = BigInteger.Parse(xSplit[1]);\n\
    \        var nNum = BigInteger.Parse(nSplit[0]);\n        var nDen = BigInteger.Parse(nSplit[1]);\n\
    \        var xNumN = xNum * nDen;\n        var nNumX = nNum * xDen;\n        var\
    \ xDenN = xDen * nDen;\n        var nDenX = nDen * xDen;\n        var xNumNMod\
    \ = xNumN % xDenN;\n        var nNumXMod = nNumX % nDenX;\n        return xNumNMod\
    \ == 0 && nNumXMod == 0;", "        var xParts = x.Split('/');\n        var nParts\
    \ = n.Split('/');\n        var xNumerator = BigInteger.Parse(xParts[0]);\n   \
    \     var xDenominator = BigInteger.Parse(xParts[1]);\n        var nNumerator\
    \ = BigInteger.Parse(nParts[0]);\n        var nDenominator = BigInteger.Parse(nParts[1]);\n\
    \        var result = xNumerator * nDenominator * nNumerator * xDenominator;\n\
    \        return result % (xDenominator * nDenominator) == 0;", "        var x_parts\
    \ = x.Split('/');\n        var n_parts = n.Split('/');\n        var x_num = BigInteger.Parse(x_parts[0]);\n\
    \        var x_den = BigInteger.Parse(x_parts[1]);\n        var n_num = BigInteger.Parse(n_parts[0]);\n\
    \        var n_den = BigInteger.Parse(n_parts[1]);\n        var x_num_n = x_num\
    \ * n_den;\n        var x_den_n = x_den * n_num;\n        var gcd = BigInteger.GreatestCommonDivisor(x_num_n,\
    \ x_den_n);\n        return x_num_n % gcd == 0 && x_den_n % gcd == 0;", "    \
    \    var xSplit = x.Split('/');\n        var nSplit = n.Split('/');\n        var\
    \ xNum = BigInteger.Parse(xSplit[0]);\n        var xDen = BigInteger.Parse(xSplit[1]);\n\
    \        var nNum = BigInteger.Parse(nSplit[0]);\n        var nDen = BigInteger.Parse(nSplit[1]);\n\
    \        var num = xNum * nNum;\n        var den = xDen * nDen;\n        return\
    \ num % den == 0;", "        var x_n = x.Split('/');\n        var n_n = n.Split('/');\n\
    \        var x_num = BigInteger.Parse(x_n[0]);\n        var x_den = BigInteger.Parse(x_n[1]);\n\
    \        var n_num = BigInteger.Parse(n_n[0]);\n        var n_den = BigInteger.Parse(n_n[1]);\n\
    \        var num = x_num * n_num;\n        var den = x_den * n_den;\n        return\
    \ num % den == 0;", "        var xParts = x.Split('/');\n        var nParts =\
    \ n.Split('/');\n        var xNumerator = BigInteger.Parse(xParts[0]);\n     \
    \   var xDenominator = BigInteger.Parse(xParts[1]);\n        var nNumerator =\
    \ BigInteger.Parse(nParts[0]);\n        var nDenominator = BigInteger.Parse(nParts[1]);\n\
    \        var result = xNumerator * nDenominator * nNumerator * xDenominator;\n\
    \        return result % (xDenominator * nDenominator) == 0;", "        var x_n\
    \ = x.Split('/');\n        var n_n = n.Split('/');\n        var x_num = BigInteger.Parse(x_n[0]);\n\
    \        var x_den = BigInteger.Parse(x_n[1]);\n        var n_num = BigInteger.Parse(n_n[0]);\n\
    \        var n_den = BigInteger.Parse(n_n[1]);\n        var num = x_num * n_num;\n\
    \        var den = x_den * n_den;\n        var gcd = BigInteger.GreatestCommonDivisor(num,\
    \ den);\n        num /= gcd;\n        den /= gcd;\n        return num % den ==\
    \ 0;", "        var x_n = x.Split('/');\n        var n_n = n.Split('/');\n   \
    \     var x_num = BigInteger.Parse(x_n[0]);\n        var x_den = BigInteger.Parse(x_n[1]);\n\
    \        var n_num = BigInteger.Parse(n_n[0]);\n        var n_den = BigInteger.Parse(n_n[1]);\n\
    \        var num = x_num * n_num;\n        var den = x_den * n_den;\n        var\
    \ gcd = BigInteger.GreatestCommonDivisor(num, den);\n        num /= gcd;\n   \
    \     den /= gcd;\n        return num % den == 0;", "        var xParts = x.Split('/');\n\
    \        var nParts = n.Split('/');\n        var xNumerator = BigInteger.Parse(xParts[0]);\n\
    \        var xDenominator = BigInteger.Parse(xParts[1]);\n        var nNumerator\
    \ = BigInteger.Parse(nParts[0]);\n        var nDenominator = BigInteger.Parse(nParts[1]);\n\
    \        var result = xNumerator * nDenominator * nNumerator * xDenominator;\n\
    \        return result % (xDenominator * nDenominator) == 0;", "        var xParts\
    \ = x.Split('/');\n        var nParts = n.Split('/');\n        var xNumerator\
    \ = BigInteger.Parse(xParts[0]);\n        var xDenominator = BigInteger.Parse(xParts[1]);\n\
    \        var nNumerator = BigInteger.Parse(nParts[0]);\n        var nDenominator\
    \ = BigInteger.Parse(nParts[1]);\n        var product = xNumerator * nNumerator;\n\
    \        var divisor = xDenominator * nDenominator;\n        return product %\
    \ divisor == 0;", "        var x_parts = x.Split('/');\n        var n_parts =\
    \ n.Split('/');\n        var x_num = BigInteger.Parse(x_parts[0]);\n        var\
    \ x_den = BigInteger.Parse(x_parts[1]);\n        var n_num = BigInteger.Parse(n_parts[0]);\n\
    \        var n_den = BigInteger.Parse(n_parts[1]);\n        var num = x_num *\
    \ n_num;\n        var den = x_den * n_den;\n        var gcd = BigInteger.GreatestCommonDivisor(num,\
    \ den);\n        num /= gcd;\n        den /= gcd;\n        return num % den ==\
    \ 0;", "        var xf = x.Split('/');\n        var nf = n.Split('/');\n     \
    \   var xn = BigInteger.Parse(xf[0]);\n        var xd = BigInteger.Parse(xf[1]);\n\
    \        var nn = BigInteger.Parse(nf[0]);\n        var nd = BigInteger.Parse(nf[1]);\n\
    \        var num = xn * nn;\n        var den = xd * nd;\n        var gcd = BigInteger.GreatestCommonDivisor(num,\
    \ den);\n        num /= gcd;\n        den /= gcd;\n        return num % den ==\
    \ 0;", "        var xParts = x.Split('/');\n        var nParts = n.Split('/');\n\
    \        var xNumerator = BigInteger.Parse(xParts[0]);\n        var xDenominator\
    \ = BigInteger.Parse(xParts[1]);\n        var nNumerator = BigInteger.Parse(nParts[0]);\n\
    \        var nDenominator = BigInteger.Parse(nParts[1]);\n        var numerator\
    \ = xNumerator * nDenominator;\n        var denominator = xDenominator * nNumerator;\n\
    \        var gcd = BigInteger.GreatestCommonDivisor(numerator, denominator);\n\
    \        return gcd == 1;", "        var x_parts = x.Split('/');\n        var\
    \ n_parts = n.Split('/');\n        var x_num = BigInteger.Parse(x_parts[0]);\n\
    \        var x_den = BigInteger.Parse(x_parts[1]);\n        var n_num = BigInteger.Parse(n_parts[0]);\n\
    \        var n_den = BigInteger.Parse(n_parts[1]);\n        var num = x_num *\
    \ n_num;\n        var den = x_den * n_den;\n        var gcd = BigInteger.GreatestCommonDivisor(num,\
    \ den);\n        num /= gcd;\n        den /= gcd;\n        return num % den ==\
    \ 0;", "        var x_parts = x.Split('/');\n        var n_parts = n.Split('/');\n\
    \        var x_num = BigInteger.Parse(x_parts[0]);\n        var x_den = BigInteger.Parse(x_parts[1]);\n\
    \        var n_num = BigInteger.Parse(n_parts[0]);\n        var n_den = BigInteger.Parse(n_parts[1]);\n\
    \        var num = x_num * n_num;\n        var den = x_den * n_den;\n        var\
    \ gcd = BigInteger.GreatestCommonDivisor(num, den);\n        num /= gcd;\n   \
    \     den /= gcd;\n        return num % den == 0;", "        var xn = x.Split('/');\n\
    \        var nn = n.Split('/');\n        var xnumerator = BigInteger.Parse(xn[0]);\n\
    \        var xdenominator = BigInteger.Parse(xn[1]);\n        var nnumerator =\
    \ BigInteger.Parse(nn[0]);\n        var ndenominator = BigInteger.Parse(nn[1]);\n\
    \        var xnumerator2 = xnumerator * ndenominator;\n        var xdenominator2\
    \ = xdenominator * nnumerator;\n        var gcd = BigInteger.GreatestCommonDivisor(xnumerator2,\
    \ xdenominator2);\n        return xnumerator2 % gcd == 0 && xdenominator2 % gcd\
    \ == 0;", "        var x_n = x.Split('/');\n        var n_n = n.Split('/');\n\
    \        var x_num = BigInteger.Parse(x_n[0]);\n        var x_den = BigInteger.Parse(x_n[1]);\n\
    \        var n_num = BigInteger.Parse(n_n[0]);\n        var n_den = BigInteger.Parse(n_n[1]);\n\
    \        var num = x_num * n_num;\n        var den = x_den * n_den;\n        var\
    \ gcd = BigInteger.GreatestCommonDivisor(num, den);\n        num /= gcd;\n   \
    \     den /= gcd;\n        return num % den == 0;", "        var xParts = x.Split('/');\n\
    \        var nParts = n.Split('/');\n        var xNumerator = BigInteger.Parse(xParts[0]);\n\
    \        var xDenominator = BigInteger.Parse(xParts[1]);\n        var nNumerator\
    \ = BigInteger.Parse(nParts[0]);\n        var nDenominator = BigInteger.Parse(nParts[1]);\n\
    \        var productNumerator = xNumerator * nNumerator;\n        var productDenominator\
    \ = xDenominator * nDenominator;\n        var gcd = BigInteger.GreatestCommonDivisor(productNumerator,\
    \ productDenominator);\n        return productNumerator % productDenominator ==\
    \ 0;", "        var x_numerator = int.Parse(x.Split('/')[0]);\n        var x_denominator\
    \ = int.Parse(x.Split('/')[1]);\n        var n_numerator = int.Parse(n.Split('/')[0]);\n\
    \        var n_denominator = int.Parse(n.Split('/')[1]);\n        var product_numerator\
    \ = x_numerator * n_numerator;\n        var product_denominator = x_denominator\
    \ * n_denominator;\n        var gcd = GCD(product_numerator, product_denominator);\n\
    \        product_numerator /= gcd;\n        product_denominator /= gcd;\n    \
    \    if (product_numerator % product_denominator == 0) {\n            return true;\n\
    \        }\n        return false;", "        var x_parts = x.Split('/');\n   \
    \     var n_parts = n.Split('/');\n        var x_numerator = BigInteger.Parse(x_parts[0]);\n\
    \        var x_denominator = BigInteger.Parse(x_parts[1]);\n        var n_numerator\
    \ = BigInteger.Parse(n_parts[0]);\n        var n_denominator = BigInteger.Parse(n_parts[1]);\n\
    \        var numerator = x_numerator * n_numerator;\n        var denominator =\
    \ x_denominator * n_denominator;\n        var gcd = BigInteger.GreatestCommonDivisor(numerator,\
    \ denominator);\n        numerator /= gcd;\n        denominator /= gcd;\n    \
    \    return denominator == 1;", "        var xParts = x.Split('/');\n        var\
    \ nParts = n.Split('/');\n        var xNumerator = BigInteger.Parse(xParts[0]);\n\
    \        var xDenominator = BigInteger.Parse(xParts[1]);\n        var nNumerator\
    \ = BigInteger.Parse(nParts[0]);\n        var nDenominator = BigInteger.Parse(nParts[1]);\n\
    \        var result = xNumerator * nDenominator * nNumerator * xDenominator;\n\
    \        return result % (xDenominator * nDenominator) == 0;", "        var xSplit\
    \ = x.Split('/');\n        var nSplit = n.Split('/');\n        var xNum = BigInteger.Parse(xSplit[0]);\n\
    \        var xDen = BigInteger.Parse(xSplit[1]);\n        var nNum = BigInteger.Parse(nSplit[0]);\n\
    \        var nDen = BigInteger.Parse(nSplit[1]);\n        var num = xNum * nNum;\n\
    \        var den = xDen * nDen;\n        var gcd = BigInteger.GreatestCommonDivisor(num,\
    \ den);\n        return num % den == 0;", "        var xSplit = x.Split('/');\n\
    \        var nSplit = n.Split('/');\n        var xNum = BigInteger.Parse(xSplit[0]);\n\
    \        var xDen = BigInteger.Parse(xSplit[1]);\n        var nNum = BigInteger.Parse(nSplit[0]);\n\
    \        var nDen = BigInteger.Parse(nSplit[1]);\n        var num = xNum * nNum;\n\
    \        var den = xDen * nDen;\n        var gcd = BigInteger.GreatestCommonDivisor(num,\
    \ den);\n        num /= gcd;\n        den /= gcd;\n        return num % den ==\
    \ 0;", "        var xParts = x.Split('/');\n        var nParts = n.Split('/');\n\
    \        var xNum = BigInteger.Parse(xParts[0]);\n        var xDen = BigInteger.Parse(xParts[1]);\n\
    \        var nNum = BigInteger.Parse(nParts[0]);\n        var nDen = BigInteger.Parse(nParts[1]);\n\
    \        var num = xNum * nDen;\n        var den = xDen * nNum;\n        var gcd\
    \ = BigInteger.GreatestCommonDivisor(num, den);\n        return num % gcd == 0\
    \ && den % gcd == 0;", "        var xParts = x.Split('/');\n        var nParts\
    \ = n.Split('/');\n        var xNumerator = BigInteger.Parse(xParts[0]);\n   \
    \     var xDenominator = BigInteger.Parse(xParts[1]);\n        var nNumerator\
    \ = BigInteger.Parse(nParts[0]);\n        var nDenominator = BigInteger.Parse(nParts[1]);\n\
    \        var numerator = xNumerator * nDenominator;\n        var denominator =\
    \ xDenominator * nNumerator;\n        return numerator % denominator == 0;", " \
    \       var x_numerator = int.Parse(x.Split('/')[0]);\n        var x_denominator\
    \ = int.Parse(x.Split('/')[1]);\n        var n_numerator = int.Parse(n.Split('/')[0]);\n\
    \        var n_denominator = int.Parse(n.Split('/')[1]);\n        var product_numerator\
    \ = x_numerator * n_numerator;\n        var product_denominator = x_denominator\
    \ * n_denominator;\n        var gcd = BigInteger.GreatestCommonDivisor(product_numerator,\
    \ product_denominator);\n        return product_numerator % gcd == 0 && product_denominator\
    \ % gcd == 0;", "        var x_parts = x.Split('/');\n        var n_parts = n.Split('/');\n\
    \        var x_num = BigInteger.Parse(x_parts[0]);\n        var x_den = BigInteger.Parse(x_parts[1]);\n\
    \        var n_num = BigInteger.Parse(n_parts[0]);\n        var n_den = BigInteger.Parse(n_parts[1]);\n\
    \        var num = x_num * n_num;\n        var den = x_den * n_den;\n        var\
    \ gcd = BigInteger.GreatestCommonDivisor(num, den);\n        num /= gcd;\n   \
    \     den /= gcd;\n        return num % den == 0;", "        var xSplit = x.Split('/');\n\
    \        var nSplit = n.Split('/');\n        var xNumerator = BigInteger.Parse(xSplit[0]);\n\
    \        var xDenominator = BigInteger.Parse(xSplit[1]);\n        var nNumerator\
    \ = BigInteger.Parse(nSplit[0]);\n        var nDenominator = BigInteger.Parse(nSplit[1]);\n\
    \        var result = xNumerator * nDenominator * nNumerator * xDenominator;\n\
    \        return result % (xDenominator * nDenominator) == 0;", "        var xSplit\
    \ = x.Split('/');\n        var nSplit = n.Split('/');\n        var xNumerator\
    \ = BigInteger.Parse(xSplit[0]);\n        var xDenominator = BigInteger.Parse(xSplit[1]);\n\
    \        var nNumerator = BigInteger.Parse(nSplit[0]);\n        var nDenominator\
    \ = BigInteger.Parse(nSplit[1]);\n        var result = xNumerator * nDenominator\
    \ * nNumerator * xDenominator;\n        return result % (xDenominator * nDenominator)\
    \ == 0;", "        // your code here\n        return false;", "        var xparts\
    \ = x.Split('/');\n        var nparts = n.Split('/');\n        var xnumerator\
    \ = BigInteger.Parse(xparts[0]);\n        var xdenominator = BigInteger.Parse(xparts[1]);\n\
    \        var nnumerator = BigInteger.Parse(nparts[0]);\n        var ndenominator\
    \ = BigInteger.Parse(nparts[1]);\n        var numerator = xnumerator * nnumerator;\n\
    \        var denominator = xdenominator * ndenominator;\n        var gcd = BigInteger.GreatestCommonDivisor(numerator,\
    \ denominator);\n        return gcd == denominator;", "        var x_parts = x.Split('/');\n\
    \        var n_parts = n.Split('/');\n        var x_numerator = BigInteger.Parse(x_parts[0]);\n\
    \        var x_denominator = BigInteger.Parse(x_parts[1]);\n        var n_numerator\
    \ = BigInteger.Parse(n_parts[0]);\n        var n_denominator = BigInteger.Parse(n_parts[1]);\n\
    \        var numerator = x_numerator * n_numerator;\n        var denominator =\
    \ x_denominator * n_denominator;\n        var gcd = BigInteger.GreatestCommonDivisor(numerator,\
    \ denominator);\n        return gcd == 1;", "        var x_n = x.Split('/');\n\
    \        var n_n = n.Split('/');\n        var x_numerator = BigInteger.Parse(x_n[0]);\n\
    \        var x_denominator = BigInteger.Parse(x_n[1]);\n        var n_numerator\
    \ = BigInteger.Parse(n_n[0]);\n        var n_denominator = BigInteger.Parse(n_n[1]);\n\
    \        var numerator = x_numerator * n_numerator;\n        var denominator =\
    \ x_denominator * n_denominator;\n        var gcd = BigInteger.GreatestCommonDivisor(numerator,\
    \ denominator);\n        numerator /= gcd;\n        denominator /= gcd;\n    \
    \    return numerator % denominator == 0;", "        var xSplit = x.Split('/');\n\
    \        var nSplit = n.Split('/');\n        var xNum = BigInteger.Parse(xSplit[0]);\n\
    \        var xDen = BigInteger.Parse(xSplit[1]);\n        var nNum = BigInteger.Parse(nSplit[0]);\n\
    \        var nDen = BigInteger.Parse(nSplit[1]);\n        var num = xNum * nNum;\n\
    \        var den = xDen * nDen;\n        var gcd = BigInteger.GreatestCommonDivisor(num,\
    \ den);\n        num /= gcd;\n        den /= gcd;\n        return num % den ==\
    \ 0;", "        var xParts = x.Split('/');\n        var nParts = n.Split('/');\n\
    \        var xNumerator = BigInteger.Parse(xParts[0]);\n        var xDenominator\
    \ = BigInteger.Parse(xParts[1]);\n        var nNumerator = BigInteger.Parse(nParts[0]);\n\
    \        var nDenominator = BigInteger.Parse(nParts[1]);\n        var result =\
    \ xNumerator * nDenominator * nNumerator * xDenominator;\n        return result\
    \ % (xDenominator * nDenominator) == 0;", "        var x_numerator = BigInteger.Parse(x.Split('/')[0]);\n\
    \        var x_denominator = BigInteger.Parse(x.Split('/')[1]);\n        var n_numerator\
    \ = BigInteger.Parse(n.Split('/')[0]);\n        var n_denominator = BigInteger.Parse(n.Split('/')[1]);\n\
    \        var result = x_numerator * n_numerator;\n        var result_denominator\
    \ = x_denominator * n_denominator;\n        return result % result_denominator\
    \ == 0;", "        var xParts = x.Split('/');\n        var nParts = n.Split('/');\n\
    \        var xNumerator = BigInteger.Parse(xParts[0]);\n        var xDenominator\
    \ = BigInteger.Parse(xParts[1]);\n        var nNumerator = BigInteger.Parse(nParts[0]);\n\
    \        var nDenominator = BigInteger.Parse(nParts[1]);\n        var result =\
    \ xNumerator * nDenominator * nNumerator * xDenominator;\n        return result\
    \ % (xDenominator * nDenominator) == 0;", "        var xSplit = x.Split('/');\n\
    \        var nSplit = n.Split('/');\n        var xNumerator = BigInteger.Parse(xSplit[0]);\n\
    \        var xDenominator = BigInteger.Parse(xSplit[1]);\n        var nNumerator\
    \ = BigInteger.Parse(nSplit[0]);\n        var nDenominator = BigInteger.Parse(nSplit[1]);\n\
    \        var result = xNumerator * nDenominator * nNumerator * xDenominator;\n\
    \        return result % (xDenominator * nDenominator) == 0;", "        var x_numerator\
    \ = BigInteger.Parse(x.Split('/')[0]);\n        var x_denominator = BigInteger.Parse(x.Split('/')[1]);\n\
    \        var n_numerator = BigInteger.Parse(n.Split('/')[0]);\n        var n_denominator\
    \ = BigInteger.Parse(n.Split('/')[1]);\n        var numerator = x_numerator *\
    \ n_numerator;\n        var denominator = x_denominator * n_denominator;\n   \
    \     var gcd = BigInteger.GreatestCommonDivisor(numerator, denominator);\n  \
    \      return gcd == 1;", "        // Your code goes here\n        var x_parts\
    \ = x.Split('/');\n        var n_parts = n.Split('/');\n        var x_num = BigInteger.Parse(x_parts[0]);\n\
    \        var x_den = BigInteger.Parse(x_parts[1]);\n        var n_num = BigInteger.Parse(n_parts[0]);\n\
    \        var n_den = BigInteger.Parse(n_parts[1]);\n        var x_num_n = x_num\
    \ * n_den;\n        var x_den_n = x_den * n_num;\n        return x_num_n % x_den_n\
    \ == 0;", "        var x_parts = x.Split('/');\n        var n_parts = n.Split('/');\n\
    \        var x_numerator = BigInteger.Parse(x_parts[0]);\n        var x_denominator\
    \ = BigInteger.Parse(x_parts[1]);\n        var n_numerator = BigInteger.Parse(n_parts[0]);\n\
    \        var n_denominator = BigInteger.Parse(n_parts[1]);\n        var numerator\
    \ = x_numerator * n_numerator;\n        var denominator = x_denominator * n_denominator;\n\
    \        var gcd = BigInteger.GreatestCommonDivisor(numerator, denominator);\n\
    \        numerator /= gcd;\n        denominator /= gcd;\n        return denominator\
    \ == 1;", "        var xParts = x.Split('/');\n        var nParts = n.Split('/');\n\
    \        var xNumerator = BigInteger.Parse(xParts[0]);\n        var xDenominator\
    \ = BigInteger.Parse(xParts[1]);\n        var nNumerator = BigInteger.Parse(nParts[0]);\n\
    \        var nDenominator = BigInteger.Parse(nParts[1]);\n        var result =\
    \ xNumerator * nDenominator * nNumerator * xDenominator;\n        return result\
    \ % (xDenominator * nDenominator) == 0;", "        // Your code goes here\n  \
    \      return false;", "        var x_parts = x.Split('/');\n        var n_parts\
    \ = n.Split('/');\n        var x_num = BigInteger.Parse(x_parts[0]);\n       \
    \ var x_den = BigInteger.Parse(x_parts[1]);\n        var n_num = BigInteger.Parse(n_parts[0]);\n\
    \        var n_den = BigInteger.Parse(n_parts[1]);\n        var x_num_n = x_num\
    \ * n_den;\n        var x_den_n = x_den * n_num;\n        var gcd = BigInteger.GreatestCommonDivisor(x_num_n,\
    \ x_den_n);\n        return x_num_n / gcd == x_den_n / gcd;", "        var xParts\
    \ = x.Split('/');\n        var nParts = n.Split('/');\n        var xNumerator\
    \ = BigInteger.Parse(xParts[0]);\n        var xDenominator = BigInteger.Parse(xParts[1]);\n\
    \        var nNumerator = BigInteger.Parse(nParts[0]);\n        var nDenominator\
    \ = BigInteger.Parse(nParts[1]);\n        var xFraction = xNumerator / xDenominator;\n\
    \        var nFraction = nNumerator / nDenominator;\n        var result = xFraction\
    \ * nFraction;\n        return result % 1 == 0;", "        var xParts = x.Split('/');\n\
    \        var nParts = n.Split('/');\n        var xNum = BigInteger.Parse(xParts[0]);\n\
    \        var xDen = BigInteger.Parse(xParts[1]);\n        var nNum = BigInteger.Parse(nParts[0]);\n\
    \        var nDen = BigInteger.Parse(nParts[1]);\n        var xNumTimesNDen =\
    \ xNum * nDen;\n        var xDenTimesNNum = xDen * nNum;\n        return xNumTimesNDen\
    \ % xDenTimesNNum == 0;", "        var x_split = x.Split('/');\n        var n_split\
    \ = n.Split('/');\n        var x_num = BigInteger.Parse(x_split[0]);\n       \
    \ var x_den = BigInteger.Parse(x_split[1]);\n        var n_num = BigInteger.Parse(n_split[0]);\n\
    \        var n_den = BigInteger.Parse(n_split[1]);\n        var x_num_n = x_num\
    \ * n_den;\n        var x_den_n = x_den * n_num;\n        return x_num_n % x_den_n\
    \ == 0;", "        var xParts = x.Split('/');\n        var nParts = n.Split('/');\n\
    \        var xNumerator = BigInteger.Parse(xParts[0]);\n        var xDenominator\
    \ = BigInteger.Parse(xParts[1]);\n        var nNumerator = BigInteger.Parse(nParts[0]);\n\
    \        var nDenominator = BigInteger.Parse(nParts[1]);\n        var product\
    \ = xNumerator * nNumerator;\n        var denominator = xDenominator * nDenominator;\n\
    \        var gcd = BigInteger.GreatestCommonDivisor(product, denominator);\n \
    \       return product % denominator == 0;", "        // Your code goes here\n\
    \        return false;", "        var xParts = x.Split('/');\n        var nParts\
    \ = n.Split('/');\n        var xNumerator = BigInteger.Parse(xParts[0]);\n   \
    \     var xDenominator = BigInteger.Parse(xParts[1]);\n        var nNumerator\
    \ = BigInteger.Parse(nParts[0]);\n        var nDenominator = BigInteger.Parse(nParts[1]);\n\
    \        var numerator = xNumerator * nDenominator;\n        var denominator =\
    \ xDenominator * nNumerator;\n        var gcd = BigInteger.GreatestCommonDivisor(numerator,\
    \ denominator);\n        numerator /= gcd;\n        denominator /= gcd;\n    \
    \    return numerator % denominator == 0;", "        var x_numerator = int.Parse(x.Split('/')[0]);\n\
    \        var x_denominator = int.Parse(x.Split('/')[1]);\n        var n_numerator\
    \ = int.Parse(n.Split('/')[0]);\n        var n_denominator = int.Parse(n.Split('/')[1]);\n\
    \        var result = x_numerator * n_numerator;\n        var result_denominator\
    \ = x_denominator * n_denominator;\n        return result % result_denominator\
    \ == 0;", "        var x_split = x.Split('/');\n        var n_split = n.Split('/');\n\
    \        var x_num = BigInteger.Parse(x_split[0]);\n        var x_den = BigInteger.Parse(x_split[1]);\n\
    \        var n_num = BigInteger.Parse(n_split[0]);\n        var n_den = BigInteger.Parse(n_split[1]);\n\
    \        var x_num_n = x_num * n_den;\n        var x_den_n = x_den * n_num;\n\
    \        var gcd = BigInteger.GreatestCommonDivisor(x_num_n, x_den_n);\n     \
    \   return x_num_n / gcd == x_den_n / gcd;", "        var x_numerator = int.Parse(x.Split('/')[0]);\n\
    \        var x_denominator = int.Parse(x.Split('/')[1]);\n        var n_numerator\
    \ = int.Parse(n.Split('/')[0]);\n        var n_denominator = int.Parse(n.Split('/')[1]);\n\
    \        var product = (x_numerator * n_numerator) / (x_denominator * n_denominator);\n\
    \        return product % 1 == 0;", "        var xSplit = x.Split('/');\n    \
    \    var nSplit = n.Split('/');\n        var xNum = BigInteger.Parse(xSplit[0]);\n\
    \        var xDen = BigInteger.Parse(xSplit[1]);\n        var nNum = BigInteger.Parse(nSplit[0]);\n\
    \        var nDen = BigInteger.Parse(nSplit[1]);\n        var xNumN = xNum * nDen;\n\
    \        var xDenN = xDen * nNum;\n        return xNumN % xDenN == 0;", "    \
    \    var x_n = x.Split('/');\n        var n_n = n.Split('/');\n        var x_numerator\
    \ = BigInteger.Parse(x_n[0]);\n        var x_denominator = BigInteger.Parse(x_n[1]);\n\
    \        var n_numerator = BigInteger.Parse(n_n[0]);\n        var n_denominator\
    \ = BigInteger.Parse(n_n[1]);\n        var result = x_numerator * n_denominator\
    \ * n_numerator * x_denominator;\n        return result % (x_denominator * n_denominator)\
    \ == 0;", "        var xParts = x.Split('/');\n        var nParts = n.Split('/');\n\
    \        var xNumerator = BigInteger.Parse(xParts[0]);\n        var xDenominator\
    \ = BigInteger.Parse(xParts[1]);\n        var nNumerator = BigInteger.Parse(nParts[0]);\n\
    \        var nDenominator = BigInteger.Parse(nParts[1]);\n        var result =\
    \ xNumerator * nDenominator * nNumerator * xDenominator;\n        return result\
    \ % (xDenominator * nDenominator) == 0;", "        var xSplit = x.Split('/');\n\
    \        var nSplit = n.Split('/');\n        var xNumerator = BigInteger.Parse(xSplit[0]);\n\
    \        var xDenominator = BigInteger.Parse(xSplit[1]);\n        var nNumerator\
    \ = BigInteger.Parse(nSplit[0]);\n        var nDenominator = BigInteger.Parse(nSplit[1]);\n\
    \        var result = xNumerator * nDenominator * nNumerator * xDenominator;\n\
    \        return result % (xDenominator * nDenominator) == 0;", "        var xSplit\
    \ = x.Split('/');\n        var nSplit = n.Split('/');\n        var xNumerator\
    \ = BigInteger.Parse(xSplit[0]);\n        var xDenominator = BigInteger.Parse(xSplit[1]);\n\
    \        var nNumerator = BigInteger.Parse(nSplit[0]);\n        var nDenominator\
    \ = BigInteger.Parse(nSplit[1]);\n        var numerator = xNumerator * nDenominator;\n\
    \        var denominator = xDenominator * nNumerator;\n        var gcd = BigInteger.GreatestCommonDivisor(numerator,\
    \ denominator);\n        numerator /= gcd;\n        denominator /= gcd;\n    \
    \    return numerator % denominator == 0;", "        var x_parts = x.Split('/');\n\
    \        var n_parts = n.Split('/');\n        var x_num = BigInteger.Parse(x_parts[0]);\n\
    \        var x_den = BigInteger.Parse(x_parts[1]);\n        var n_num = BigInteger.Parse(n_parts[0]);\n\
    \        var n_den = BigInteger.Parse(n_parts[1]);\n        var num = x_num *\
    \ n_num;\n        var den = x_den * n_den;\n        var gcd = BigInteger.GreatestCommonDivisor(num,\
    \ den);\n        return gcd == 1;", "        var x_split = x.Split('/');\n   \
    \     var n_split = n.Split('/');\n        var x_num = BigInteger.Parse(x_split[0]);\n\
    \        var x_den = BigInteger.Parse(x_split[1]);\n        var n_num = BigInteger.Parse(n_split[0]);\n\
    \        var n_den = BigInteger.Parse(n_split[1]);\n        var x_num_n = x_num\
    \ * n_den;\n        var x_den_n = x_den * n_num;\n        return x_num_n % x_den_n\
    \ == 0;", "        var x_numerator = BigInteger.Parse(x.Split('/')[0]);\n    \
    \    var x_denominator = BigInteger.Parse(x.Split('/')[1]);\n        var n_numerator\
    \ = BigInteger.Parse(n.Split('/')[0]);\n        var n_denominator = BigInteger.Parse(n.Split('/')[1]);\n\
    \        var result = x_numerator * n_numerator;\n        var result_denominator\
    \ = x_denominator * n_denominator;\n        var gcd = BigInteger.GreatestCommonDivisor(result,\
    \ result_denominator);\n        result /= gcd;\n        result_denominator /=\
    \ gcd;\n        return result % result_denominator == 0;", "        var x_parts\
    \ = x.Split('/');\n        var n_parts = n.Split('/');\n        var x_numerator\
    \ = BigInteger.Parse(x_parts[0]);\n        var x_denominator = BigInteger.Parse(x_parts[1]);\n\
    \        var n_numerator = BigInteger.Parse(n_parts[0]);\n        var n_denominator\
    \ = BigInteger.Parse(n_parts[1]);\n        var numerator = x_numerator * n_numerator;\n\
    \        var denominator = x_denominator * n_denominator;\n        var gcd = BigInteger.GreatestCommonDivisor(numerator,\
    \ denominator);\n        return gcd == 1;", "        var xParts = x.Split('/');\n\
    \        var nParts = n.Split('/');\n        var xNum = BigInteger.Parse(xParts[0]);\n\
    \        var xDen = BigInteger.Parse(xParts[1]);\n        var nNum = BigInteger.Parse(nParts[0]);\n\
    \        var nDen = BigInteger.Parse(nParts[1]);\n        var num = xNum * nDen;\n\
    \        var den = xDen * nNum;\n        return num % den == 0;", "        var\
    \ xParts = x.Split('/');\n        var nParts = n.Split('/');\n        var xNumerator\
    \ = BigInteger.Parse(xParts[0]);\n        var xDenominator = BigInteger.Parse(xParts[1]);\n\
    \        var nNumerator = BigInteger.Parse(nParts[0]);\n        var nDenominator\
    \ = BigInteger.Parse(nParts[1]);\n        var product = xNumerator * nNumerator;\n\
    \        var divisor = xDenominator * nDenominator;\n        var gcd = BigInteger.GreatestCommonDivisor(product,\
    \ divisor);\n        return product % divisor == 0;", "        var x_numerator\
    \ = int.Parse(x.Split('/')[0]);\n        var x_denominator = int.Parse(x.Split('/')[1]);\n\
    \        var n_numerator = int.Parse(n.Split('/')[0]);\n        var n_denominator\
    \ = int.Parse(n.Split('/')[1]);\n        var result = (x_numerator * n_numerator)\
    \ / (x_denominator * n_denominator);\n        return result % 1 == 0;", "    \
    \    var x_parts = x.Split('/');\n        var n_parts = n.Split('/');\n      \
    \  var x_num = BigInteger.Parse(x_parts[0]);\n        var x_den = BigInteger.Parse(x_parts[1]);\n\
    \        var n_num = BigInteger.Parse(n_parts[0]);\n        var n_den = BigInteger.Parse(n_parts[1]);\n\
    \        var num = x_num * n_num;\n        var den = x_den * n_den;\n        var\
    \ gcd = BigInteger.GreatestCommonDivisor(num, den);\n        num /= gcd;\n   \
    \     den /= gcd;\n        return num % den == 0;", "        var xn = x.Split('/');\n\
    \        var nn = n.Split('/');\n        var xnumerator = BigInteger.Parse(xn[0]);\n\
    \        var xdenominator = BigInteger.Parse(xn[1]);\n        var nnumerator =\
    \ BigInteger.Parse(nn[0]);\n        var ndenominator = BigInteger.Parse(nn[1]);\n\
    \        var result = xnumerator * nnumerator;\n        var resultdenominator\
    \ = xdenominator * ndenominator;\n        return result % resultdenominator ==\
    \ 0;", "        var xParts = x.Split('/');\n        var nParts = n.Split('/');\n\
    \        var xNumerator = BigInteger.Parse(xParts[0]);\n        var xDenominator\
    \ = BigInteger.Parse(xParts[1]);\n        var nNumerator = BigInteger.Parse(nParts[0]);\n\
    \        var nDenominator = BigInteger.Parse(nParts[1]);\n        var result =\
    \ xNumerator * nDenominator * nNumerator * xDenominator;\n        return result\
    \ % (xDenominator * nDenominator) == 0;", "        var x_numerator = BigInteger.Parse(x.Split('/')[0]);\n\
    \        var x_denominator = BigInteger.Parse(x.Split('/')[1]);\n        var n_numerator\
    \ = BigInteger.Parse(n.Split('/')[0]);\n        var n_denominator = BigInteger.Parse(n.Split('/')[1]);\n\
    \        var result = x_numerator * n_numerator;\n        var result_denominator\
    \ = x_denominator * n_denominator;\n        return result % result_denominator\
    \ == 0;", "        var x_numerator = int.Parse(x.Split('/')[0]);\n        var\
    \ x_denominator = int.Parse(x.Split('/')[1]);\n        var n_numerator = int.Parse(n.Split('/')[0]);\n\
    \        var n_denominator = int.Parse(n.Split('/')[1]);\n        var result =\
    \ (x_numerator * n_numerator) / (x_denominator * n_denominator);\n        return\
    \ result % 1 == 0;", "        var xParts = x.Split('/');\n        var nParts =\
    \ n.Split('/');\n        var xNumerator = BigInteger.Parse(xParts[0]);\n     \
    \   var xDenominator = BigInteger.Parse(xParts[1]);\n        var nNumerator =\
    \ BigInteger.Parse(nParts[0]);\n        var nDenominator = BigInteger.Parse(nParts[1]);\n\
    \        var numerator = xNumerator * nDenominator;\n        var denominator =\
    \ xDenominator * nNumerator;\n        var gcd = BigInteger.GreatestCommonDivisor(numerator,\
    \ denominator);\n        numerator /= gcd;\n        denominator /= gcd;\n    \
    \    return numerator % denominator == 0;", "        var x_numerator = BigInteger.Parse(x.Split('/')[0]);\n\
    \        var x_denominator = BigInteger.Parse(x.Split('/')[1]);\n        var n_numerator\
    \ = BigInteger.Parse(n.Split('/')[0]);\n        var n_denominator = BigInteger.Parse(n.Split('/')[1]);\n\
    \        var result = x_numerator * n_numerator;\n        var result_denominator\
    \ = x_denominator * n_denominator;\n        return result % result_denominator\
    \ == 0;", "        var xParts = x.Split('/');\n        var nParts = n.Split('/');\n\
    \        var xNumerator = BigInteger.Parse(xParts[0]);\n        var xDenominator\
    \ = BigInteger.Parse(xParts[1]);\n        var nNumerator = BigInteger.Parse(nParts[0]);\n\
    \        var nDenominator = BigInteger.Parse(nParts[1]);\n        var result =\
    \ xNumerator * nDenominator * nNumerator * xDenominator;\n        return result\
    \ % (xDenominator * nDenominator) == 0;", "        var xParts = x.Split('/');\n\
    \        var nParts = n.Split('/');\n        var xNumerator = BigInteger.Parse(xParts[0]);\n\
    \        var xDenominator = BigInteger.Parse(xParts[1]);\n        var nNumerator\
    \ = BigInteger.Parse(nParts[0]);\n        var nDenominator = BigInteger.Parse(nParts[1]);\n\
    \        var xNumeratorTimesNumerator = xNumerator * nNumerator;\n        var\
    \ xDenominatorTimesDenominator = xDenominator * nDenominator;\n        var gcd\
    \ = BigInteger.GreatestCommonDivisor(xNumeratorTimesNumerator, xDenominatorTimesDenominator);\n\
    \        return xNumeratorTimesNumerator % gcd == 0 && xDenominatorTimesDenominator\
    \ % gcd == 0;", "        var xparts = x.Split('/');\n        var nparts = n.Split('/');\n\
    \        var xn = BigInteger.Parse(xparts[0]) * BigInteger.Parse(nparts[1]);\n\
    \        var nd = BigInteger.Parse(nparts[0]) * BigInteger.Parse(xparts[1]);\n\
    \        return xn % nd == 0;", "        var x_parts = x.Split('/');\n       \
    \ var n_parts = n.Split('/');\n        var x_numerator = BigInteger.Parse(x_parts[0]);\n\
    \        var x_denominator = BigInteger.Parse(x_parts[1]);\n        var n_numerator\
    \ = BigInteger.Parse(n_parts[0]);\n        var n_denominator = BigInteger.Parse(n_parts[1]);\n\
    \        var result_numerator = x_numerator * n_numerator;\n        var result_denominator\
    \ = x_denominator * n_denominator;\n        var gcd = BigInteger.GreatestCommonDivisor(result_numerator,\
    \ result_denominator);\n        return result_numerator % gcd == 0 && result_denominator\
    \ % gcd == 0;", "        var x_parts = x.Split('/');\n        var n_parts = n.Split('/');\n\
    \        var x_numerator = BigInteger.Parse(x_parts[0]);\n        var x_denominator\
    \ = BigInteger.Parse(x_parts[1]);\n        var n_numerator = BigInteger.Parse(n_parts[0]);\n\
    \        var n_denominator = BigInteger.Parse(n_parts[1]);\n        var numerator\
    \ = x_numerator * n_numerator;\n        var denominator = x_denominator * n_denominator;\n\
    \        return numerator % denominator == 0;", "        var xSplit = x.Split('/');\n\
    \        var nSplit = n.Split('/');\n        var xNum = BigInteger.Parse(xSplit[0]);\n\
    \        var xDen = BigInteger.Parse(xSplit[1]);\n        var nNum = BigInteger.Parse(nSplit[0]);\n\
    \        var nDen = BigInteger.Parse(nSplit[1]);\n        var num = xNum * nNum;\n\
    \        var den = xDen * nDen;\n        var gcd = BigInteger.GreatestCommonDivisor(num,\
    \ den);\n        return num % den == 0;", "        var x_num = BigInteger.Parse(x.Split('/')[0]);\n\
    \        var x_den = BigInteger.Parse(x.Split('/')[1]);\n        var n_num = BigInteger.Parse(n.Split('/')[0]);\n\
    \        var n_den = BigInteger.Parse(n.Split('/')[1]);\n        return (x_num\
    \ * n_num) % (x_den * n_den) == 0;", "        var xSplit = x.Split('/');\n   \
    \     var nSplit = n.Split('/');\n        var xNumerator = BigInteger.Parse(xSplit[0]);\n\
    \        var xDenominator = BigInteger.Parse(xSplit[1]);\n        var nNumerator\
    \ = BigInteger.Parse(nSplit[0]);\n        var nDenominator = BigInteger.Parse(nSplit[1]);\n\
    \        var xNumeratorTimesNumerator = xNumerator * nNumerator;\n        var\
    \ xDenominatorTimesDenominator = xDenominator * nDenominator;\n        var gcd\
    \ = BigInteger.GreatestCommonDivisor(xNumeratorTimesNumerator, xDenominatorTimesDenominator);\n\
    \        var simplifiedNumerator = xNumeratorTimesNumerator / gcd;\n        var\
    \ simplifiedDenominator = xDenominatorTimesDenominator / gcd;\n        return\
    \ simplifiedNumerator % simplifiedDenominator == 0;", "        var x_parts = x.Split('/');\n\
    \        var n_parts = n.Split('/');\n        var x_num = BigInteger.Parse(x_parts[0]);\n\
    \        var x_den = BigInteger.Parse(x_parts[1]);\n        var n_num = BigInteger.Parse(n_parts[0]);\n\
    \        var n_den = BigInteger.Parse(n_parts[1]);\n        var num = x_num *\
    \ n_num;\n        var den = x_den * n_den;\n        var gcd = BigInteger.GreatestCommonDivisor(num,\
    \ den);\n        num /= gcd;\n        den /= gcd;\n        return num % den ==\
    \ 0;", "        var xParts = x.Split('/');\n        var nParts = n.Split('/');\n\
    \        var xNumerator = BigInteger.Parse(xParts[0]);\n        var xDenominator\
    \ = BigInteger.Parse(xParts[1]);\n        var nNumerator = BigInteger.Parse(nParts[0]);\n\
    \        var nDenominator = BigInteger.Parse(nParts[1]);\n        var result =\
    \ xNumerator * nDenominator * nNumerator * xDenominator;\n        return result\
    \ % (xDenominator * nDenominator) == 0;", "        var xParts = x.Split('/');\n\
    \        var nParts = n.Split('/');\n        var xNumerator = BigInteger.Parse(xParts[0]);\n\
    \        var xDenominator = BigInteger.Parse(xParts[1]);\n        var nNumerator\
    \ = BigInteger.Parse(nParts[0]);\n        var nDenominator = BigInteger.Parse(nParts[1]);\n\
    \        var numerator = xNumerator * nDenominator;\n        var denominator =\
    \ xDenominator * nNumerator;\n        var gcd = BigInteger.GreatestCommonDivisor(numerator,\
    \ denominator);\n        numerator /= gcd;\n        denominator /= gcd;\n    \
    \    return numerator % denominator == 0;", "        var x_parts = x.Split('/');\n\
    \        var n_parts = n.Split('/');\n        var x_num = BigInteger.Parse(x_parts[0]);\n\
    \        var x_den = BigInteger.Parse(x_parts[1]);\n        var n_num = BigInteger.Parse(n_parts[0]);\n\
    \        var n_den = BigInteger.Parse(n_parts[1]);\n        var x_num_n = x_num\
    \ * n_den;\n        var x_den_n = x_den * n_num;\n        var gcd = BigInteger.GreatestCommonDivisor(x_num_n,\
    \ x_den_n);\n        return x_num_n % gcd == 0 && x_den_n % gcd == 0;", "    \
    \    var xParts = x.Split('/');\n        var nParts = n.Split('/');\n        var\
    \ xNumerator = BigInteger.Parse(xParts[0]);\n        var xDenominator = BigInteger.Parse(xParts[1]);\n\
    \        var nNumerator = BigInteger.Parse(nParts[0]);\n        var nDenominator\
    \ = BigInteger.Parse(nParts[1]);\n        var xNumeratorTimesNumerator = xNumerator\
    \ * nNumerator;\n        var xDenominatorTimesDenominator = xDenominator * nDenominator;\n\
    \        var gcd = BigInteger.GreatestCommonDivisor(xNumeratorTimesNumerator,\
    \ xDenominatorTimesDenominator);\n        return xNumeratorTimesNumerator % gcd\
    \ == 0 && xDenominatorTimesDenominator % gcd == 0;", "        var xParts = x.Split('/');\n\
    \        var nParts = n.Split('/');\n        var xNumerator = BigInteger.Parse(xParts[0]);\n\
    \        var xDenominator = BigInteger.Parse(xParts[1]);\n        var nNumerator\
    \ = BigInteger.Parse(nParts[0]);\n        var nDenominator = BigInteger.Parse(nParts[1]);\n\
    \        var product = xNumerator * nNumerator;\n        var denominator = xDenominator\
    \ * nDenominator;\n        var gcd = BigInteger.GreatestCommonDivisor(product,\
    \ denominator);\n        return gcd == denominator;", "        var xParts = x.Split('/');\n\
    \        var nParts = n.Split('/');\n        var xNumerator = BigInteger.Parse(xParts[0]);\n\
    \        var xDenominator = BigInteger.Parse(xParts[1]);\n        var nNumerator\
    \ = BigInteger.Parse(nParts[0]);\n        var nDenominator = BigInteger.Parse(nParts[1]);\n\
    \        var result = xNumerator * nDenominator * nNumerator * xDenominator;\n\
    \        return result % (xDenominator * nDenominator) == 0;", "        var x_parts\
    \ = x.Split('/');\n        var n_parts = n.Split('/');\n        var x_numerator\
    \ = BigInteger.Parse(x_parts[0]);\n        var x_denominator = BigInteger.Parse(x_parts[1]);\n\
    \        var n_numerator = BigInteger.Parse(n_parts[0]);\n        var n_denominator\
    \ = BigInteger.Parse(n_parts[1]);\n        var result_numerator = x_numerator\
    \ * n_numerator;\n        var result_denominator = x_denominator * n_denominator;\n\
    \        return result_numerator % result_denominator == 0;", "        // Your\
    \ code goes here.\n        return false;", "        // Your code goes here\n \
    \       return false;", "        var x_n = x.Split('/');\n        var n_n = n.Split('/');\n\
    \        var x_num = BigInteger.Parse(x_n[0]);\n        var x_den = BigInteger.Parse(x_n[1]);\n\
    \        var n_num = BigInteger.Parse(n_n[0]);\n        var n_den = BigInteger.Parse(n_n[1]);\n\
    \        var num = x_num * n_num;\n        var den = x_den * n_den;\n        var\
    \ gcd = BigInteger.GreatestCommonDivisor(num, den);\n        num /= gcd;\n   \
    \     den /= gcd;\n        return num % den == 0;", "        string[] x_parts\
    \ = x.Split('/');\n        string[] n_parts = n.Split('/');\n        BigInteger\
    \ x_numerator = BigInteger.Parse(x_parts[0]);\n        BigInteger x_denominator\
    \ = BigInteger.Parse(x_parts[1]);\n        BigInteger n_numerator = BigInteger.Parse(n_parts[0]);\n\
    \        BigInteger n_denominator = BigInteger.Parse(n_parts[1]);\n        BigInteger\
    \ x_n = x_numerator * n_numerator;\n        BigInteger x_d = x_denominator * n_denominator;\n\
    \        BigInteger gcd = BigInteger.GreatestCommonDivisor(x_n, x_d);\n      \
    \  x_n /= gcd;\n        x_d /= gcd;\n        return x_n % x_d == 0;", "      \
    \  // Your code here\n        return false;", "        var x_parts = x.Split('/');\n\
    \        var n_parts = n.Split('/');\n        var x_numerator = BigInteger.Parse(x_parts[0]);\n\
    \        var x_denominator = BigInteger.Parse(x_parts[1]);\n        var n_numerator\
    \ = BigInteger.Parse(n_parts[0]);\n        var n_denominator = BigInteger.Parse(n_parts[1]);\n\
    \        var result_numerator = x_numerator * n_numerator;\n        var result_denominator\
    \ = x_denominator * n_denominator;\n        var gcd = BigInteger.GreatestCommonDivisor(result_numerator,\
    \ result_denominator);\n        return result_numerator % gcd == 0 && result_denominator\
    \ % gcd == 0;", "        var xParts = x.Split('/');\n        var nParts = n.Split('/');\n\
    \        var xNum = BigInteger.Parse(xParts[0]);\n        var xDen = BigInteger.Parse(xParts[1]);\n\
    \        var nNum = BigInteger.Parse(nParts[0]);\n        var nDen = BigInteger.Parse(nParts[1]);\n\
    \        var num = xNum * nNum;\n        var den = xDen * nDen;\n        var gcd\
    \ = BigInteger.GreatestCommonDivisor(num, den);\n        num /= gcd;\n       \
    \ den /= gcd;\n        return num % den == 0;", "        var x_numerator = BigInteger.Parse(x.Split('/')[0]);\n\
    \        var x_denominator = BigInteger.Parse(x.Split('/')[1]);\n        var n_numerator\
    \ = BigInteger.Parse(n.Split('/')[0]);\n        var n_denominator = BigInteger.Parse(n.Split('/')[1]);\n\
    \        var result = x_numerator * n_numerator;\n        var result_denominator\
    \ = x_denominator * n_denominator;\n        return result % result_denominator\
    \ == 0;", "        var xParts = x.Split('/');\n        var nParts = n.Split('/');\n\
    \        var xNumerator = BigInteger.Parse(xParts[0]);\n        var xDenominator\
    \ = BigInteger.Parse(xParts[1]);\n        var nNumerator = BigInteger.Parse(nParts[0]);\n\
    \        var nDenominator = BigInteger.Parse(nParts[1]);\n        var numerator\
    \ = xNumerator * nDenominator;\n        var denominator = xDenominator * nNumerator;\n\
    \        return numerator % denominator == 0;", "        var x_parts = x.Split('/');\n\
    \        var n_parts = n.Split('/');\n        var x_numerator = BigInteger.Parse(x_parts[0]);\n\
    \        var x_denominator = BigInteger.Parse(x_parts[1]);\n        var n_numerator\
    \ = BigInteger.Parse(n_parts[0]);\n        var n_denominator = BigInteger.Parse(n_parts[1]);\n\
    \        var numerator = x_numerator * n_numerator;\n        var denominator =\
    \ x_denominator * n_denominator;\n        var gcd = BigInteger.GreatestCommonDivisor(numerator,\
    \ denominator);\n        return gcd == denominator;", "        var xSplit = x.Split('/');\n\
    \        var nSplit = n.Split('/');\n        var xNum = BigInteger.Parse(xSplit[0]);\n\
    \        var xDen = BigInteger.Parse(xSplit[1]);\n        var nNum = BigInteger.Parse(nSplit[0]);\n\
    \        var nDen = BigInteger.Parse(nSplit[1]);\n        var num = xNum * nNum;\n\
    \        var den = xDen * nDen;\n        var gcd = BigInteger.GreatestCommonDivisor(num,\
    \ den);\n        num /= gcd;\n        den /= gcd;\n        return num % den ==\
    \ 0;", "        var xParts = x.Split('/');\n        var nParts = n.Split('/');\n\
    \        var xNumerator = BigInteger.Parse(xParts[0]);\n        var xDenominator\
    \ = BigInteger.Parse(xParts[1]);\n        var nNumerator = BigInteger.Parse(nParts[0]);\n\
    \        var nDenominator = BigInteger.Parse(nParts[1]);\n        var product\
    \ = xNumerator * nNumerator;\n        var productDenominator = xDenominator *\
    \ nDenominator;\n        var gcd = BigInteger.GreatestCommonDivisor(product, productDenominator);\n\
    \        return productDenominator / gcd == 1;", "        var x_n = x.Split('/');\n\
    \        var n_n = n.Split('/');\n        var x_num = BigInteger.Parse(x_n[0]);\n\
    \        var x_den = BigInteger.Parse(x_n[1]);\n        var n_num = BigInteger.Parse(n_n[0]);\n\
    \        var n_den = BigInteger.Parse(n_n[1]);\n        var num = x_num * n_num;\n\
    \        var den = x_den * n_den;\n        var gcd = BigInteger.GreatestCommonDivisor(num,\
    \ den);\n        num /= gcd;\n        den /= gcd;\n        return num % den ==\
    \ 0;", "        var x_parts = x.Split('/');\n        var n_parts = n.Split('/');\n\
    \        var x_numerator = BigInteger.Parse(x_parts[0]);\n        var x_denominator\
    \ = BigInteger.Parse(x_parts[1]);\n        var n_numerator = BigInteger.Parse(n_parts[0]);\n\
    \        var n_denominator = BigInteger.Parse(n_parts[1]);\n        var product_numerator\
    \ = x_numerator * n_numerator;\n        var product_denominator = x_denominator\
    \ * n_denominator;\n        var gcd = BigInteger.GreatestCommonDivisor(product_numerator,\
    \ product_denominator);\n        product_numerator /= gcd;\n        product_denominator\
    \ /= gcd;\n        return product_denominator == 1;", "        var xParts = x.Split('/');\n\
    \        var nParts = n.Split('/');\n        var xNumerator = BigInteger.Parse(xParts[0]);\n\
    \        var xDenominator = BigInteger.Parse(xParts[1]);\n        var nNumerator\
    \ = BigInteger.Parse(nParts[0]);\n        var nDenominator = BigInteger.Parse(nParts[1]);\n\
    \        var result = xNumerator * nDenominator * nNumerator * xDenominator;\n\
    \        return result % (xDenominator * nDenominator) == 0;", "        var xParts\
    \ = x.Split('/');\n        var nParts = n.Split('/');\n        var xNumerator\
    \ = BigInteger.Parse(xParts[0]);\n        var xDenominator = BigInteger.Parse(xParts[1]);\n\
    \        var nNumerator = BigInteger.Parse(nParts[0]);\n        var nDenominator\
    \ = BigInteger.Parse(nParts[1]);\n        var result = (xNumerator * nDenominator)\
    \ * (nNumerator * xDenominator);\n        return result % (xDenominator * nDenominator)\
    \ == 0;", "        var xParts = x.Split('/');\n        var nParts = n.Split('/');\n\
    \        var xNumerator = BigInteger.Parse(xParts[0]);\n        var xDenominator\
    \ = BigInteger.Parse(xParts[1]);\n        var nNumerator = BigInteger.Parse(nParts[0]);\n\
    \        var nDenominator = BigInteger.Parse(nParts[1]);\n        var result =\
    \ xNumerator * nDenominator * nNumerator * xDenominator;\n        return result\
    \ % (xDenominator * nDenominator) == 0;", "        var xParts = x.Split('/');\n\
    \        var nParts = n.Split('/');\n        var xNum = BigInteger.Parse(xParts[0]);\n\
    \        var xDen = BigInteger.Parse(xParts[1]);\n        var nNum = BigInteger.Parse(nParts[0]);\n\
    \        var nDen = BigInteger.Parse(nParts[1]);\n        var num = xNum * nNum;\n\
    \        var den = xDen * nDen;\n        var gcd = BigInteger.GreatestCommonDivisor(num,\
    \ den);\n        num /= gcd;\n        den /= gcd;\n        return num % den ==\
    \ 0;", "        var x_split = x.Split('/');\n        var n_split = n.Split('/');\n\
    \        var x_num = BigInteger.Parse(x_split[0]);\n        var x_den = BigInteger.Parse(x_split[1]);\n\
    \        var n_num = BigInteger.Parse(n_split[0]);\n        var n_den = BigInteger.Parse(n_split[1]);\n\
    \        var x_num_n = x_num * n_den;\n        var x_den_n = x_den * n_num;\n\
    \        var gcd = BigInteger.GreatestCommonDivisor(x_num_n, x_den_n);\n     \
    \   return x_num_n % gcd == 0 && x_den_n % gcd == 0;", "        var x_parts =\
    \ x.Split('/');\n        var n_parts = n.Split('/');\n        var x_numerator\
    \ = BigInteger.Parse(x_parts[0]);\n        var x_denominator = BigInteger.Parse(x_parts[1]);\n\
    \        var n_numerator = BigInteger.Parse(n_parts[0]);\n        var n_denominator\
    \ = BigInteger.Parse(n_parts[1]);\n        var result_numerator = x_numerator\
    \ * n_numerator;\n        var result_denominator = x_denominator * n_denominator;\n\
    \        var gcd = GCD(result_numerator, result_denominator);\n        result_numerator\
    \ /= gcd;\n        result_denominator /= gcd;\n        return result_numerator\
    \ % result_denominator == 0;", "        var x_num = BigInteger.Parse(x.Split('/')[0]);\n\
    \        var x_den = BigInteger.Parse(x.Split('/')[1]);\n        var n_num = BigInteger.Parse(n.Split('/')[0]);\n\
    \        var n_den = BigInteger.Parse(n.Split('/')[1]);\n        var num = x_num\
    \ * n_num;\n        var den = x_den * n_den;\n        return num % den == 0;",
  "        var x_numerator = BigInteger.Parse(x.Split('/')[0]);\n        var x_denominator\
    \ = BigInteger.Parse(x.Split('/')[1]);\n        var n_numerator = BigInteger.Parse(n.Split('/')[0]);\n\
    \        var n_denominator = BigInteger.Parse(n.Split('/')[1]);\n        var product_numerator\
    \ = x_numerator * n_numerator;\n        var product_denominator = x_denominator\
    \ * n_denominator;\n        var gcd = BigInteger.GreatestCommonDivisor(product_numerator,\
    \ product_denominator);\n        return product_numerator % gcd == 0 && product_denominator\
    \ % gcd == 0;", "        var xs = x.Split('/');\n        var ns = n.Split('/');\n\
    \        var xn = BigInteger.Parse(xs[0]) * BigInteger.Parse(ns[1]);\n       \
    \ var nx = BigInteger.Parse(ns[0]) * BigInteger.Parse(xs[1]);\n        return\
    \ xn == nx;", "        var xParts = x.Split('/');\n        var nParts = n.Split('/');\n\
    \        var xNumerator = BigInteger.Parse(xParts[0]);\n        var xDenominator\
    \ = BigInteger.Parse(xParts[1]);\n        var nNumerator = BigInteger.Parse(nParts[0]);\n\
    \        var nDenominator = BigInteger.Parse(nParts[1]);\n        var result =\
    \ xNumerator * nDenominator * nNumerator * xDenominator;\n        return result\
    \ % (xDenominator * nDenominator) == 0;", "        // Your code goes here\n  \
    \      var x_n = x.Split('/');\n        var n_n = n.Split('/');\n        var x_numerator\
    \ = BigInteger.Parse(x_n[0]);\n        var x_denominator = BigInteger.Parse(x_n[1]);\n\
    \        var n_numerator = BigInteger.Parse(n_n[0]);\n        var n_denominator\
    \ = BigInteger.Parse(n_n[1]);\n        var x_numerator_n = x_numerator * n_denominator;\n\
    \        var x_denominator_n = x_denominator * n_numerator;\n        var gcd =\
    \ BigInteger.GreatestCommonDivisor(x_numerator_n, x_denominator_n);\n        var\
    \ x_numerator_n_simplified = x_numerator_n / gcd;\n        var x_denominator_n_simplified\
    \ = x_denominator_n / gcd;\n        return x_numerator_n_simplified % x_denominator_n_simplified\
    \ == 0;", "        var xs = x.Split('/');\n        var ns = n.Split('/');\n  \
    \      var xn = BigInteger.Parse(xs[0]) * BigInteger.Parse(ns[1]);\n        var\
    \ nx = BigInteger.Parse(ns[0]) * BigInteger.Parse(xs[1]);\n        return xn ==\
    \ nx;", "        var xParts = x.Split('/');\n        var nParts = n.Split('/');\n\
    \        var xNumerator = BigInteger.Parse(xParts[0]);\n        var xDenominator\
    \ = BigInteger.Parse(xParts[1]);\n        var nNumerator = BigInteger.Parse(nParts[0]);\n\
    \        var nDenominator = BigInteger.Parse(nParts[1]);\n        var result =\
    \ xNumerator * nDenominator * nNumerator * xDenominator;\n        return result\
    \ % (xDenominator * nDenominator) == 0;", "        var xSplit = x.Split('/');\n\
    \        var nSplit = n.Split('/');\n        var xNumerator = BigInteger.Parse(xSplit[0]);\n\
    \        var xDenominator = BigInteger.Parse(xSplit[1]);\n        var nNumerator\
    \ = BigInteger.Parse(nSplit[0]);\n        var nDenominator = BigInteger.Parse(nSplit[1]);\n\
    \        var numerator = xNumerator * nDenominator;\n        var denominator =\
    \ xDenominator * nNumerator;\n        return numerator % denominator == 0;", " \
    \       var x_numerator = int.Parse(x.Split('/')[0]);\n        var x_denominator\
    \ = int.Parse(x.Split('/')[1]);\n        var n_numerator = int.Parse(n.Split('/')[0]);\n\
    \        var n_denominator = int.Parse(n.Split('/')[1]);\n        var result =\
    \ (x_numerator * n_numerator) / (x_denominator * n_denominator);\n        return\
    \ result % 1 == 0;", "        var xParts = x.Split('/');\n        var nParts =\
    \ n.Split('/');\n        var xNumerator = BigInteger.Parse(xParts[0]);\n     \
    \   var xDenominator = BigInteger.Parse(xParts[1]);\n        var nNumerator =\
    \ BigInteger.Parse(nParts[0]);\n        var nDenominator = BigInteger.Parse(nParts[1]);\n\
    \        var xNumeratorTimesNumerator = xNumerator * nNumerator;\n        var\
    \ xDenominatorTimesDenominator = xDenominator * nDenominator;\n        var gcd\
    \ = BigInteger.GreatestCommonDivisor(xNumeratorTimesNumerator, xDenominatorTimesDenominator);\n\
    \        var simplifiedNumerator = xNumeratorTimesNumerator / gcd;\n        var\
    \ simplifiedDenominator = xDenominatorTimesDenominator / gcd;\n        return\
    \ simplifiedNumerator % simplifiedDenominator == 0;", "        var xParts = x.Split('/');\n\
    \        var nParts = n.Split('/');\n        var xNumerator = BigInteger.Parse(xParts[0]);\n\
    \        var xDenominator = BigInteger.Parse(xParts[1]);\n        var nNumerator\
    \ = BigInteger.Parse(nParts[0]);\n        var nDenominator = BigInteger.Parse(nParts[1]);\n\
    \        var result = xNumerator * nDenominator * nNumerator * xDenominator;\n\
    \        return result % (xDenominator * nDenominator) == 0;", "        var xSplit\
    \ = x.Split('/');\n        var nSplit = n.Split('/');\n        var xNum = BigInteger.Parse(xSplit[0]);\n\
    \        var xDen = BigInteger.Parse(xSplit[1]);\n        var nNum = BigInteger.Parse(nSplit[0]);\n\
    \        var nDen = BigInteger.Parse(nSplit[1]);\n        var num = xNum * nNum;\n\
    \        var den = xDen * nDen;\n        var gcd = BigInteger.GreatestCommonDivisor(num,\
    \ den);\n        num /= gcd;\n        den /= gcd;\n        return num % den ==\
    \ 0;", "        var xParts = x.Split('/');\n        var nParts = n.Split('/');\n\
    \        var xNumerator = BigInteger.Parse(xParts[0]);\n        var xDenominator\
    \ = BigInteger.Parse(xParts[1]);\n        var nNumerator = BigInteger.Parse(nParts[0]);\n\
    \        var nDenominator = BigInteger.Parse(nParts[1]);\n        var numerator\
    \ = xNumerator * nDenominator;\n        var denominator = xDenominator * nNumerator;\n\
    \        var gcd = BigInteger.GreatestCommonDivisor(numerator, denominator);\n\
    \        numerator /= gcd;\n        denominator /= gcd;\n        return numerator\
    \ % denominator == 0;", "        var xParts = x.Split('/');\n        var nParts\
    \ = n.Split('/');\n        var xNumerator = BigInteger.Parse(xParts[0]);\n   \
    \     var xDenominator = BigInteger.Parse(xParts[1]);\n        var nNumerator\
    \ = BigInteger.Parse(nParts[0]);\n        var nDenominator = BigInteger.Parse(nParts[1]);\n\
    \        var xNumeratorTimesNumerator = xNumerator * nNumerator;\n        var\
    \ xDenominatorTimesDenominator = xDenominator * nDenominator;\n        var gcd\
    \ = BigInteger.GreatestCommonDivisor(xNumeratorTimesNumerator, xDenominatorTimesDenominator);\n\
    \        return xNumeratorTimesNumerator % gcd == 0 && xDenominatorTimesDenominator\
    \ % gcd == 0;", "        var xNumerator = int.Parse(x.Split('/')[0]);\n      \
    \  var xDenominator = int.Parse(x.Split('/')[1]);\n        var nNumerator = int.Parse(n.Split('/')[0]);\n\
    \        var nDenominator = int.Parse(n.Split('/')[1]);\n        var xProduct\
    \ = xNumerator * nDenominator;\n        var nProduct = nNumerator * xDenominator;\n\
    \        return xProduct % nProduct == 0;", "        var x_parts = x.Split('/');\n\
    \        var n_parts = n.Split('/');\n        var x_numerator = BigInteger.Parse(x_parts[0]);\n\
    \        var x_denominator = BigInteger.Parse(x_parts[1]);\n        var n_numerator\
    \ = BigInteger.Parse(n_parts[0]);\n        var n_denominator = BigInteger.Parse(n_parts[1]);\n\
    \        var x_n = x_numerator * n_denominator;\n        var n_n = n_numerator\
    \ * x_denominator;\n        return x_n % n_n == 0;", "        var xn = x.Split('/');\n\
    \        var nn = n.Split('/');\n        var xnumerator = BigInteger.Parse(xn[0]);\n\
    \        var xdenominator = BigInteger.Parse(xn[1]);\n        var nnumerator =\
    \ BigInteger.Parse(nn[0]);\n        var ndenominator = BigInteger.Parse(nn[1]);\n\
    \        var numerator = xnumerator * nnumerator;\n        var denominator = xdenominator\
    \ * ndenominator;\n        var gcd = BigInteger.GreatestCommonDivisor(numerator,\
    \ denominator);\n        numerator /= gcd;\n        denominator /= gcd;\n    \
    \    return denominator == 1;", "        var xSplit = x.Split('/');\n        var\
    \ nSplit = n.Split('/');\n        var xNum = BigInteger.Parse(xSplit[0]);\n  \
    \      var xDen = BigInteger.Parse(xSplit[1]);\n        var nNum = BigInteger.Parse(nSplit[0]);\n\
    \        var nDen = BigInteger.Parse(nSplit[1]);\n        var num = xNum * nNum;\n\
    \        var den = xDen * nDen;\n        var gcd = BigInteger.GreatestCommonDivisor(num,\
    \ den);\n        num /= gcd;\n        den /= gcd;\n        return num % den ==\
    \ 0;", "        var xSplit = x.Split('/');\n        var nSplit = n.Split('/');\n\
    \        var xNum = BigInteger.Parse(xSplit[0]);\n        var xDen = BigInteger.Parse(xSplit[1]);\n\
    \        var nNum = BigInteger.Parse(nSplit[0]);\n        var nDen = BigInteger.Parse(nSplit[1]);\n\
    \        var num = xNum * nNum;\n        var den = xDen * nDen;\n        var gcd\
    \ = BigInteger.GreatestCommonDivisor(num, den);\n        return num % den == 0;",
  "        var xParts = x.Split('/');\n        var nParts = n.Split('/');\n      \
    \  var xNumerator = BigInteger.Parse(xParts[0]);\n        var xDenominator = BigInteger.Parse(xParts[1]);\n\
    \        var nNumerator = BigInteger.Parse(nParts[0]);\n        var nDenominator\
    \ = BigInteger.Parse(nParts[1]);\n        var numerator = xNumerator * nDenominator;\n\
    \        var denominator = xDenominator * nNumerator;\n        var gcd = BigInteger.GreatestCommonDivisor(numerator,\
    \ denominator);\n        return gcd == 1;", "        var x_n = x.Split('/');\n\
    \        var x_n_n = x_n[0];\n        var x_n_d = x_n[1];\n        var n_n = n.Split('/');\n\
    \        var n_n_n = n_n[0];\n        var n_n_d = n_n[1];\n        var x_n_n_i\
    \ = int.Parse(x_n_n);\n        var x_n_d_i = int.Parse(x_n_d);\n        var n_n_n_i\
    \ = int.Parse(n_n_n);\n        var n_n_d_i = int.Parse(n_n_d);\n        var x_n_n_f\
    \ = (double)x_n_n_i;\n        var x_n_d_f = (double)x_n_d_i;\n        var n_n_n_f\
    \ = (double)n_n_n_i;\n        var n_n_d_f = (double)n_n_d_i;\n        var x_n_f\
    \ = x_n_n_f / x_n_d_f;\n        var n_n_f = n_n_n_f / n_n_d_f;\n        var x_n_n_f_i\
    \ = (int)x_n_f;\n        var n_n_n_f_i = (int)n_n_f;\n        var x_n_n_f_f =\
    \ x_n_f - x_n_n_f_i;\n        var n_n_n_f_f = n_n_f - n_n_n_f_i;\n        var\
    \ x_n_n_f_f_i = (int)(x_n_n_f_f * 100);\n        var n_n_n_f_f_i = (int)(n_n_n_f_f\
    \ * 100);\n        var x_n_n_f_f_i_s = x_n_n_f_f_i.ToString();\n        var n_n",
  "        var x_numerator = BigInteger.Parse(x.Split('/')[0]);\n        var x_denominator\
    \ = BigInteger.Parse(x.Split('/')[1]);\n        var n_numerator = BigInteger.Parse(n.Split('/')[0]);\n\
    \        var n_denominator = BigInteger.Parse(n.Split('/')[1]);\n        var result\
    \ = x_numerator * n_numerator;\n        var result_denominator = x_denominator\
    \ * n_denominator;\n        var gcd = BigInteger.GreatestCommonDivisor(result,\
    \ result_denominator);\n        result /= gcd;\n        result_denominator /=\
    \ gcd;\n        return result % result_denominator == 0;", "        var x_split\
    \ = x.Split('/');\n        var n_split = n.Split('/');\n        var x_num = BigInteger.Parse(x_split[0]);\n\
    \        var x_den = BigInteger.Parse(x_split[1]);\n        var n_num = BigInteger.Parse(n_split[0]);\n\
    \        var n_den = BigInteger.Parse(n_split[1]);\n        var num = x_num *\
    \ n_num;\n        var den = x_den * n_den;\n        var gcd = BigInteger.GreatestCommonDivisor(num,\
    \ den);\n        num /= gcd;\n        den /= gcd;\n        return num % den ==\
    \ 0;", "        var x_numerator = int.Parse(x.Split('/')[0]);\n        var x_denominator\
    \ = int.Parse(x.Split('/')[1]);\n        var n_numerator = int.Parse(n.Split('/')[0]);\n\
    \        var n_denominator = int.Parse(n.Split('/')[1]);\n        var result =\
    \ (x_numerator * n_numerator) / (x_denominator * n_denominator);\n        return\
    \ result % 1 == 0;", "        var xs = x.Split('/');\n        var ns = n.Split('/');\n\
    \        var xn = BigInteger.Parse(xs[0]) * BigInteger.Parse(ns[1]);\n       \
    \ var nx = BigInteger.Parse(ns[0]) * BigInteger.Parse(xs[1]);\n        return\
    \ xn == nx;", "        var x_parts = x.Split('/');\n        var n_parts = n.Split('/');\n\
    \        var x_numerator = BigInteger.Parse(x_parts[0]);\n        var x_denominator\
    \ = BigInteger.Parse(x_parts[1]);\n        var n_numerator = BigInteger.Parse(n_parts[0]);\n\
    \        var n_denominator = BigInteger.Parse(n_parts[1]);\n        var result_numerator\
    \ = x_numerator * n_numerator;\n        var result_denominator = x_denominator\
    \ * n_denominator;\n        var gcd = BigInteger.GreatestCommonDivisor(result_numerator,\
    \ result_denominator);\n        var simplified_numerator = result_numerator /\
    \ gcd;\n        var simplified_denominator = result_denominator / gcd;\n     \
    \   return simplified_numerator % simplified_denominator == 0;", "        // Your\
    \ code goes here\n        return false;", "        var xParts = x.Split('/');\n\
    \        var nParts = n.Split('/');\n        var xNumerator = BigInteger.Parse(xParts[0]);\n\
    \        var xDenominator = BigInteger.Parse(xParts[1]);\n        var nNumerator\
    \ = BigInteger.Parse(nParts[0]);\n        var nDenominator = BigInteger.Parse(nParts[1]);\n\
    \        var xNumeratorTimesNumerator = xNumerator * nNumerator;\n        var\
    \ xDenominatorTimesDenominator = xDenominator * nDenominator;\n        var gcd\
    \ = BigInteger.GreatestCommonDivisor(xNumeratorTimesNumerator, xDenominatorTimesDenominator);\n\
    \        return xNumeratorTimesNumerator % gcd == 0 && xDenominatorTimesDenominator\
    \ % gcd == 0;", "        var x_parts = x.Split('/');\n        var n_parts = n.Split('/');\n\
    \        var x_num = BigInteger.Parse(x_parts[0]);\n        var x_den = BigInteger.Parse(x_parts[1]);\n\
    \        var n_num = BigInteger.Parse(n_parts[0]);\n        var n_den = BigInteger.Parse(n_parts[1]);\n\
    \        var num = x_num * n_num;\n        var den = x_den * n_den;\n        var\
    \ gcd = BigInteger.GreatestCommonDivisor(num, den);\n        num /= gcd;\n   \
    \     den /= gcd;\n        return num % den == 0;", "        var xParts = x.Split('/');\n\
    \        var nParts = n.Split('/');\n        var xNumerator = BigInteger.Parse(xParts[0]);\n\
    \        var xDenominator = BigInteger.Parse(xParts[1]);\n        var nNumerator\
    \ = BigInteger.Parse(nParts[0]);\n        var nDenominator = BigInteger.Parse(nParts[1]);\n\
    \        var numerator = xNumerator * nDenominator;\n        var denominator =\
    \ xDenominator * nNumerator;\n        var gcd = BigInteger.GreatestCommonDivisor(numerator,\
    \ denominator);\n        return gcd == denominator;", "        var x_numerator\
    \ = BigInteger.Parse(x.Split('/')[0]);\n        var x_denominator = BigInteger.Parse(x.Split('/')[1]);\n\
    \        var n_numerator = BigInteger.Parse(n.Split('/')[0]);\n        var n_denominator\
    \ = BigInteger.Parse(n.Split('/')[1]);\n        var result = (x_numerator * n_numerator)\
    \ / (x_denominator * n_denominator);\n        return (result % 1 == 0);", "  \
    \      var x_parts = x.Split('/');\n        var n_parts = n.Split('/');\n    \
    \    var x_numerator = BigInteger.Parse(x_parts[0]);\n        var x_denominator\
    \ = BigInteger.Parse(x_parts[1]);\n        var n_numerator = BigInteger.Parse(n_parts[0]);\n\
    \        var n_denominator = BigInteger.Parse(n_parts[1]);\n        var numerator\
    \ = x_numerator * n_numerator;\n        var denominator = x_denominator * n_denominator;\n\
    \        return numerator % denominator == 0;", "        var xSplit = x.Split('/');\n\
    \        var nSplit = n.Split('/');\n        var xNum = BigInteger.Parse(xSplit[0]);\n\
    \        var xDen = BigInteger.Parse(xSplit[1]);\n        var nNum = BigInteger.Parse(nSplit[0]);\n\
    \        var nDen = BigInteger.Parse(nSplit[1]);\n        var xnNum = xNum * nNum;\n\
    \        var xnDen = xDen * nDen;\n        var gcd = BigInteger.GreatestCommonDivisor(xnNum,\
    \ xnDen);\n        return xnNum % xnDen == 0;", "        var x_numerator = BigInteger.Parse(x.Split('/')[0]);\n\
    \        var x_denominator = BigInteger.Parse(x.Split('/')[1]);\n        var n_numerator\
    \ = BigInteger.Parse(n.Split('/')[0]);\n        var n_denominator = BigInteger.Parse(n.Split('/')[1]);\n\
    \        var product_numerator = x_numerator * n_numerator;\n        var product_denominator\
    \ = x_denominator * n_denominator;\n        var gcd = BigInteger.GreatestCommonDivisor(product_numerator,\
    \ product_denominator);\n        product_numerator /= gcd;\n        product_denominator\
    \ /= gcd;\n        return product_denominator == 1;", "        var xSplit = x.Split('/');\n\
    \        var nSplit = n.Split('/');\n        var xNum = BigInteger.Parse(xSplit[0]);\n\
    \        var xDen = BigInteger.Parse(xSplit[1]);\n        var nNum = BigInteger.Parse(nSplit[0]);\n\
    \        var nDen = BigInteger.Parse(nSplit[1]);\n        var num = xNum * nNum;\n\
    \        var den = xDen * nDen;\n        var gcd = BigInteger.GreatestCommonDivisor(num,\
    \ den);\n        num /= gcd;\n        den /= gcd;\n        return num % den ==\
    \ 0;", "        var xs = x.Split('/');\n        var ns = n.Split('/');\n     \
    \   var xn = BigInteger.Parse(xs[0]) * BigInteger.Parse(ns[1]);\n        var nx\
    \ = BigInteger.Parse(ns[0]) * BigInteger.Parse(xs[1]);\n        return xn == nx;",
  "        var xParts = x.Split('/');\n        var nParts = n.Split('/');\n      \
    \  var xNumerator = BigInteger.Parse(xParts[0]);\n        var xDenominator = BigInteger.Parse(xParts[1]);\n\
    \        var nNumerator = BigInteger.Parse(nParts[0]);\n        var nDenominator\
    \ = BigInteger.Parse(nParts[1]);\n        var result = xNumerator * nDenominator\
    \ * nNumerator * xDenominator;\n        return result % (xDenominator * nDenominator)\
    \ == 0;", "        // Your code goes here.\n        return false;", "        var\
    \ x_parts = x.Split('/');\n        var n_parts = n.Split('/');\n        var x_numerator\
    \ = BigInteger.Parse(x_parts[0]);\n        var x_denominator = BigInteger.Parse(x_parts[1]);\n\
    \        var n_numerator = BigInteger.Parse(n_parts[0]);\n        var n_denominator\
    \ = BigInteger.Parse(n_parts[1]);\n        var numerator = x_numerator * n_numerator;\n\
    \        var denominator = x_denominator * n_denominator;\n        var gcd = BigInteger.GreatestCommonDivisor(numerator,\
    \ denominator);\n        numerator /= gcd;\n        denominator /= gcd;\n    \
    \    return numerator % denominator == 0;", "        var x_parts = x.Split('/');\n\
    \        var n_parts = n.Split('/');\n        var x_numerator = BigInteger.Parse(x_parts[0]);\n\
    \        var x_denominator = BigInteger.Parse(x_parts[1]);\n        var n_numerator\
    \ = BigInteger.Parse(n_parts[0]);\n        var n_denominator = BigInteger.Parse(n_parts[1]);\n\
    \        var x_n = x_numerator * n_denominator;\n        var n_n = n_numerator\
    \ * x_denominator;\n        return x_n % n_n == 0;", "        // Your code goes\
    \ here\n        return false;", "        var xParts = x.Split('/');\n        var\
    \ nParts = n.Split('/');\n        var xNumerator = BigInteger.Parse(xParts[0]);\n\
    \        var xDenominator = BigInteger.Parse(xParts[1]);\n        var nNumerator\
    \ = BigInteger.Parse(nParts[0]);\n        var nDenominator = BigInteger.Parse(nParts[1]);\n\
    \        var result = xNumerator * nDenominator * nNumerator * xDenominator;\n\
    \        return result % (xDenominator * nDenominator) == 0;", "        var xParts\
    \ = x.Split('/');\n        var nParts = n.Split('/');\n        var xNumerator\
    \ = BigInteger.Parse(xParts[0]);\n        var xDenominator = BigInteger.Parse(xParts[1]);\n\
    \        var nNumerator = BigInteger.Parse(nParts[0]);\n        var nDenominator\
    \ = BigInteger.Parse(nParts[1]);\n        var result = xNumerator * nDenominator\
    \ * nNumerator * xDenominator;\n        return result % (xDenominator * nDenominator)\
    \ == 0;", "        var xSplit = x.Split('/');\n        var nSplit = n.Split('/');\n\
    \        var xNum = BigInteger.Parse(xSplit[0]);\n        var xDen = BigInteger.Parse(xSplit[1]);\n\
    \        var nNum = BigInteger.Parse(nSplit[0]);\n        var nDen = BigInteger.Parse(nSplit[1]);\n\
    \        var num = xNum * nNum;\n        var den = xDen * nDen;\n        var gcd\
    \ = BigInteger.GreatestCommonDivisor(num, den);\n        num /= gcd;\n       \
    \ den /= gcd;\n        return num % den == 0;", "        var x_numerator = BigInteger.Parse(x.Split('/')[0]);\n\
    \        var x_denominator = BigInteger.Parse(x.Split('/')[1]);\n        var n_numerator\
    \ = BigInteger.Parse(n.Split('/')[0]);\n        var n_denominator = BigInteger.Parse(n.Split('/')[1]);\n\
    \        var product_numerator = x_numerator * n_numerator;\n        var product_denominator\
    \ = x_denominator * n_denominator;\n        var gcd = BigInteger.GreatestCommonDivisor(product_numerator,\
    \ product_denominator);\n        return product_numerator % gcd == 0 && product_denominator\
    \ % gcd == 0;", "        var x_n = x.Split('/');\n        var n_n = n.Split('/');\n\
    \        var x_num = BigInteger.Parse(x_n[0]);\n        var x_den = BigInteger.Parse(x_n[1]);\n\
    \        var n_num = BigInteger.Parse(n_n[0]);\n        var n_den = BigInteger.Parse(n_n[1]);\n\
    \        var num = x_num * n_num;\n        var den = x_den * n_den;\n        var\
    \ gcd = BigInteger.GreatestCommonDivisor(num, den);\n        num /= gcd;\n   \
    \     den /= gcd;\n        return num % den == 0;", "        var xParts = x.Split('/');\n\
    \        var nParts = n.Split('/');\n        var xNumerator = BigInteger.Parse(xParts[0]);\n\
    \        var xDenominator = BigInteger.Parse(xParts[1]);\n        var nNumerator\
    \ = BigInteger.Parse(nParts[0]);\n        var nDenominator = BigInteger.Parse(nParts[1]);\n\
    \        var result = xNumerator * nDenominator * nNumerator * xDenominator;\n\
    \        return result % (xDenominator * nDenominator) == 0;", "        var xParts\
    \ = x.Split('/');\n        var nParts = n.Split('/');\n        var xNumerator\
    \ = BigInteger.Parse(xParts[0]);\n        var xDenominator = BigInteger.Parse(xParts[1]);\n\
    \        var nNumerator = BigInteger.Parse(nParts[0]);\n        var nDenominator\
    \ = BigInteger.Parse(nParts[1]);\n        var result = xNumerator * nDenominator\
    \ * nNumerator * xDenominator;\n        var gcd = BigInteger.GreatestCommonDivisor(result,\
    \ xDenominator * nDenominator);\n        return result % gcd == 0;", "       \
    \ // Your code here\n        var x_split = x.Split('/');\n        var n_split\
    \ = n.Split('/');\n        var x_numerator = BigInteger.Parse(x_split[0]);\n \
    \       var x_denominator = BigInteger.Parse(x_split[1]);\n        var n_numerator\
    \ = BigInteger.Parse(n_split[0]);\n        var n_denominator = BigInteger.Parse(n_split[1]);\n\
    \        var result = x_numerator * n_denominator * n_numerator * x_denominator;\n\
    \        return result % (x_denominator * n_denominator) == 0;", "        var\
    \ x_n = x.Split('/');\n        var n_n = n.Split('/');\n        var x_num = BigInteger.Parse(x_n[0]);\n\
    \        var x_den = BigInteger.Parse(x_n[1]);\n        var n_num = BigInteger.Parse(n_n[0]);\n\
    \        var n_den = BigInteger.Parse(n_n[1]);\n        var num = x_num * n_num;\n\
    \        var den = x_den * n_den;\n        var gcd = BigInteger.GreatestCommonDivisor(num,\
    \ den);\n        num /= gcd;\n        den /= gcd;\n        return num % den ==\
    \ 0;", "        var xParts = x.Split('/');\n        var nParts = n.Split('/');\n\
    \        var xNumerator = BigInteger.Parse(xParts[0]);\n        var xDenominator\
    \ = BigInteger.Parse(xParts[1]);\n        var nNumerator = BigInteger.Parse(nParts[0]);\n\
    \        var nDenominator = BigInteger.Parse(nParts[1]);\n        var result =\
    \ xNumerator * nDenominator * nNumerator * xDenominator;\n        return result\
    \ % (xDenominator * nDenominator) == 0;", "        var xs = x.Split('/');\n  \
    \      var ns = n.Split('/');\n        var xn = BigInteger.Parse(xs[0]) * BigInteger.Parse(ns[1]);\n\
    \        var nx = BigInteger.Parse(ns[0]) * BigInteger.Parse(xs[1]);\n       \
    \ return xn % nx == 0;", "        var xParts = x.Split('/');\n        var nParts\
    \ = n.Split('/');\n        var xNumerator = BigInteger.Parse(xParts[0]);\n   \
    \     var xDenominator = BigInteger.Parse(xParts[1]);\n        var nNumerator\
    \ = BigInteger.Parse(nParts[0]);\n        var nDenominator = BigInteger.Parse(nParts[1]);\n\
    \        var xProduct = xNumerator * nDenominator;\n        var nProduct = nNumerator\
    \ * xDenominator;\n        return xProduct == nProduct;", "        var xParts\
    \ = x.Split('/');\n        var nParts = n.Split('/');\n        var xNumerator\
    \ = BigInteger.Parse(xParts[0]);\n        var xDenominator = BigInteger.Parse(xParts[1]);\n\
    \        var nNumerator = BigInteger.Parse(nParts[0]);\n        var nDenominator\
    \ = BigInteger.Parse(nParts[1]);\n        var result = xNumerator * nDenominator\
    \ * nNumerator * xDenominator;\n        return result % (xDenominator * nDenominator)\
    \ == 0;", "        var xParts = x.Split('/');\n        var nParts = n.Split('/');\n\
    \        var xNumerator = BigInteger.Parse(xParts[0]);\n        var xDenominator\
    \ = BigInteger.Parse(xParts[1]);\n        var nNumerator = BigInteger.Parse(nParts[0]);\n\
    \        var nDenominator = BigInteger.Parse(nParts[1]);\n        var xNumeratorTimesNumerator\
    \ = xNumerator * nNumerator;\n        var xDenominatorTimesDenominator = xDenominator\
    \ * nDenominator;\n        var gcd = BigInteger.GreatestCommonDivisor(xNumeratorTimesNumerator,\
    \ xDenominatorTimesDenominator);\n        return xNumeratorTimesNumerator % gcd\
    \ == 0 && xDenominatorTimesDenominator % gcd == 0;", "        var xParts = x.Split('/');\n\
    \        var nParts = n.Split('/');\n        var xNumerator = BigInteger.Parse(xParts[0]);\n\
    \        var xDenominator = BigInteger.Parse(xParts[1]);\n        var nNumerator\
    \ = BigInteger.Parse(nParts[0]);\n        var nDenominator = BigInteger.Parse(nParts[1]);\n\
    \        var result = xNumerator * nDenominator * nNumerator * xDenominator;\n\
    \        var gcd = BigInteger.GreatestCommonDivisor(result, xDenominator * nDenominator);\n\
    \        return result % gcd == 0;", "        var x_parts = x.Split('/');\n  \
    \      var n_parts = n.Split('/');\n        var x_numerator = BigInteger.Parse(x_parts[0]);\n\
    \        var x_denominator = BigInteger.Parse(x_parts[1]);\n        var n_numerator\
    \ = BigInteger.Parse(n_parts[0]);\n        var n_denominator = BigInteger.Parse(n_parts[1]);\n\
    \        var x_n = x_numerator * n_denominator;\n        var n_n = n_numerator\
    \ * x_denominator;\n        return x_n == n_n;", "        var x_numerator = int.Parse(x.Split('/')[0]);\n\
    \        var x_denominator = int.Parse(x.Split('/')[1]);\n        var n_numerator\
    \ = int.Parse(n.Split('/')[0]);\n        var n_denominator = int.Parse(n.Split('/')[1]);\n\
    \        var result = x_numerator * n_numerator;\n        var result_denominator\
    \ = x_denominator * n_denominator;\n        return result % result_denominator\
    \ == 0;", "        // Your code goes here\n        return false;", "        var\
    \ xParts = x.Split('/');\n        var nParts = n.Split('/');\n        var xNumerator\
    \ = BigInteger.Parse(xParts[0]);\n        var xDenominator = BigInteger.Parse(xParts[1]);\n\
    \        var nNumerator = BigInteger.Parse(nParts[0]);\n        var nDenominator\
    \ = BigInteger.Parse(nParts[1]);\n        var numerator = xNumerator * nDenominator;\n\
    \        var denominator = xDenominator * nNumerator;\n        var gcd = BigInteger.GreatestCommonDivisor(numerator,\
    \ denominator);\n        return gcd == denominator;", "        var xParts = x.Split('/');\n\
    \        var nParts = n.Split('/');\n        var xNumerator = BigInteger.Parse(xParts[0]);\n\
    \        var xDenominator = BigInteger.Parse(xParts[1]);\n        var nNumerator\
    \ = BigInteger.Parse(nParts[0]);\n        var nDenominator = BigInteger.Parse(nParts[1]);\n\
    \        var result = xNumerator * nDenominator * nNumerator * xDenominator;\n\
    \        return result % (xDenominator * nDenominator) == 0;", "        var x_parts\
    \ = x.Split('/');\n        var n_parts = n.Split('/');\n        var x_num = BigInteger.Parse(x_parts[0]);\n\
    \        var x_den = BigInteger.Parse(x_parts[1]);\n        var n_num = BigInteger.Parse(n_parts[0]);\n\
    \        var n_den = BigInteger.Parse(n_parts[1]);\n        var num = x_num *\
    \ n_num;\n        var den = x_den * n_den;\n        var gcd = BigInteger.GreatestCommonDivisor(num,\
    \ den);\n        num /= gcd;\n        den /= gcd;\n        return (num % den ==\
    \ 0);", "        // Your code goes here\n        return false;", "        string[]\
    \ x_parts = x.Split('/');\n        string[] n_parts = n.Split('/');\n        int\
    \ x_num = int.Parse(x_parts[0]);\n        int x_den = int.Parse(x_parts[1]);\n\
    \        int n_num = int.Parse(n_parts[0]);\n        int n_den = int.Parse(n_parts[1]);\n\
    \        int num = x_num * n_num;\n        int den = x_den * n_den;\n        return\
    \ num % den == 0;", "        var xParts = x.Split('/');\n        var nParts =\
    \ n.Split('/');\n        var xNum = BigInteger.Parse(xParts[0]);\n        var\
    \ xDen = BigInteger.Parse(xParts[1]);\n        var nNum = BigInteger.Parse(nParts[0]);\n\
    \        var nDen = BigInteger.Parse(nParts[1]);\n        var xnNum = xNum * nNum;\n\
    \        var xnDen = xDen * nDen;\n        var gcd = BigInteger.GreatestCommonDivisor(xnNum,\
    \ xnDen);\n        return xnNum % xnDen == 0;", "        var x_parts = x.Split('/');\n\
    \        var n_parts = n.Split('/');\n        var x_numerator = BigInteger.Parse(x_parts[0]);\n\
    \        var x_denominator = BigInteger.Parse(x_parts[1]);\n        var n_numerator\
    \ = BigInteger.Parse(n_parts[0]);\n        var n_denominator = BigInteger.Parse(n_parts[1]);\n\
    \        var result_numerator = x_numerator * n_numerator;\n        var result_denominator\
    \ = x_denominator * n_denominator;\n        var gcd = BigInteger.GreatestCommonDivisor(result_numerator,\
    \ result_denominator);\n        return result_numerator % gcd == 0 && result_denominator\
    \ % gcd == 0;", "        var x_parts = x.Split('/');\n        var n_parts = n.Split('/');\n\
    \        var x_num = BigInteger.Parse(x_parts[0]);\n        var x_den = BigInteger.Parse(x_parts[1]);\n\
    \        var n_num = BigInteger.Parse(n_parts[0]);\n        var n_den = BigInteger.Parse(n_parts[1]);\n\
    \        var num = x_num * n_num;\n        var den = x_den * n_den;\n        var\
    \ gcd = BigInteger.GreatestCommonDivisor(num, den);\n        num /= gcd;\n   \
    \     den /= gcd;\n        return num % den == 0;", "        var xParts = x.Split('/');\n\
    \        var nParts = n.Split('/');\n        var xNumerator = BigInteger.Parse(xParts[0]);\n\
    \        var xDenominator = BigInteger.Parse(xParts[1]);\n        var nNumerator\
    \ = BigInteger.Parse(nParts[0]);\n        var nDenominator = BigInteger.Parse(nParts[1]);\n\
    \        var result = xNumerator * nDenominator * nNumerator * xDenominator;\n\
    \        return result % (xDenominator * nDenominator) == 0;", "        var xParts\
    \ = x.Split('/');\n        var nParts = n.Split('/');\n        var xNumerator\
    \ = BigInteger.Parse(xParts[0]);\n        var xDenominator = BigInteger.Parse(xParts[1]);\n\
    \        var nNumerator = BigInteger.Parse(nParts[0]);\n        var nDenominator\
    \ = BigInteger.Parse(nParts[1]);\n        var result = xNumerator * nDenominator\
    \ * nNumerator * xDenominator;\n        return result % (xDenominator * nDenominator)\
    \ == 0;", "        var xNumerator = int.Parse(x.Split('/')[0]);\n        var xDenominator\
    \ = int.Parse(x.Split('/')[1]);\n        var nNumerator = int.Parse(n.Split('/')[0]);\n\
    \        var nDenominator = int.Parse(n.Split('/')[1]);\n        var result =\
    \ xNumerator * nDenominator * nNumerator * xDenominator;\n        return result\
    \ % (xDenominator * nDenominator) == 0;", "        var xn = x.Split('/');\n  \
    \      var nn = n.Split('/');\n        var xnumerator = BigInteger.Parse(xn[0]);\n\
    \        var xdenominator = BigInteger.Parse(xn[1]);\n        var nnumerator =\
    \ BigInteger.Parse(nn[0]);\n        var ndenominator = BigInteger.Parse(nn[1]);\n\
    \        var numerator = xnumerator * nnumerator;\n        var denominator = xdenominator\
    \ * ndenominator;\n        return numerator % denominator == 0;", "        var\
    \ xParts = x.Split('/');\n        var nParts = n.Split('/');\n        var xNumerator\
    \ = BigInteger.Parse(xParts[0]);\n        var xDenominator = BigInteger.Parse(xParts[1]);\n\
    \        var nNumerator = BigInteger.Parse(nParts[0]);\n        var nDenominator\
    \ = BigInteger.Parse(nParts[1]);\n        var xNumeratorTimesNumerator = xNumerator\
    \ * nNumerator;\n        var xDenominatorTimesDenominator = xDenominator * nDenominator;\n\
    \        var gcd = BigInteger.GreatestCommonDivisor(xNumeratorTimesNumerator,\
    \ xDenominatorTimesDenominator);\n        var xNumeratorTimesNumeratorSimplified\
    \ = xNumeratorTimesNumerator / gcd;\n        var xDenominatorTimesDenominatorSimplified\
    \ = xDenominatorTimesDenominator / gcd;\n        return xNumeratorTimesNumeratorSimplified\
    \ % xDenominatorTimesDenominatorSimplified == 0;", "        var xParts = x.Split('/');\n\
    \        var nParts = n.Split('/');\n        var xNumerator = BigInteger.Parse(xParts[0]);\n\
    \        var xDenominator = BigInteger.Parse(xParts[1]);\n        var nNumerator\
    \ = BigInteger.Parse(nParts[0]);\n        var nDenominator = BigInteger.Parse(nParts[1]);\n\
    \        var xNumeratorTimesNumerator = xNumerator * nNumerator;\n        var\
    \ xDenominatorTimesDenominator = xDenominator * nDenominator;\n        var gcd\
    \ = BigInteger.GreatestCommonDivisor(xNumeratorTimesNumerator, xDenominatorTimesDenominator);\n\
    \        return xNumeratorTimesNumerator % gcd == 0 && xDenominatorTimesDenominator\
    \ % gcd == 0;", "        var xParts = x.Split('/');\n        var nParts = n.Split('/');\n\
    \        var xNumerator = BigInteger.Parse(xParts[0]);\n        var xDenominator\
    \ = BigInteger.Parse(xParts[1]);\n        var nNumerator = BigInteger.Parse(nParts[0]);\n\
    \        var nDenominator = BigInteger.Parse(nParts[1]);\n        var result =\
    \ xNumerator * nDenominator * nNumerator * xDenominator;\n        return result\
    \ % (xDenominator * nDenominator) == 0;", "        var xSplit = x.Split('/');\n\
    \        var nSplit = n.Split('/');\n        var xNum = BigInteger.Parse(xSplit[0]);\n\
    \        var xDen = BigInteger.Parse(xSplit[1]);\n        var nNum = BigInteger.Parse(nSplit[0]);\n\
    \        var nDen = BigInteger.Parse(nSplit[1]);\n        var num = xNum * nNum;\n\
    \        var den = xDen * nDen;\n        return num % den == 0;", "        var\
    \ xs = x.Split('/');\n        var ns = n.Split('/');\n        var xn = BigInteger.Parse(xs[0])\
    \ * BigInteger.Parse(ns[1]);\n        var nx = BigInteger.Parse(ns[0]) * BigInteger.Parse(xs[1]);\n\
    \        return xn == nx;", "        var x_numerator = int.Parse(x.Split('/')[0]);\n\
    \        var x_denominator = int.Parse(x.Split('/')[1]);\n        var n_numerator\
    \ = int.Parse(n.Split('/')[0]);\n        var n_denominator = int.Parse(n.Split('/')[1]);\n\
    \        var result = (x_numerator * n_numerator) / (x_denominator * n_denominator);\n\
    \        return result % 1 == 0;", "        // Your code goes here\n        return\
    \ true;", "        var x_numerator = BigInteger.Parse(x.Split('/')[0]);\n    \
    \    var x_denominator = BigInteger.Parse(x.Split('/')[1]);\n        var n_numerator\
    \ = BigInteger.Parse(n.Split('/')[0]);\n        var n_denominator = BigInteger.Parse(n.Split('/')[1]);\n\
    \        var result = x_numerator * n_numerator;\n        var result_denominator\
    \ = x_denominator * n_denominator;\n        var gcd = BigInteger.GreatestCommonDivisor(result,\
    \ result_denominator);\n        result /= gcd;\n        result_denominator /=\
    \ gcd;\n        return result_denominator == 1;", "        var xParts = x.Split('/');\n\
    \        var nParts = n.Split('/');\n        var xNumerator = BigInteger.Parse(xParts[0]);\n\
    \        var xDenominator = BigInteger.Parse(xParts[1]);\n        var nNumerator\
    \ = BigInteger.Parse(nParts[0]);\n        var nDenominator = BigInteger.Parse(nParts[1]);\n\
    \        var result = xNumerator * nDenominator * nNumerator * xDenominator;\n\
    \        return result % (xDenominator * nDenominator) == 0;", "        var xParts\
    \ = x.Split('/');\n        var nParts = n.Split('/');\n        var xNum = BigInteger.Parse(xParts[0]);\n\
    \        var xDen = BigInteger.Parse(xParts[1]);\n        var nNum = BigInteger.Parse(nParts[0]);\n\
    \        var nDen = BigInteger.Parse(nParts[1]);\n        var num = xNum * nDen;\n\
    \        var den = xDen * nNum;\n        return num % den == 0;", "        var\
    \ xParts = x.Split('/');\n        var nParts = n.Split('/');\n        var xNumerator\
    \ = BigInteger.Parse(xParts[0]);\n        var xDenominator = BigInteger.Parse(xParts[1]);\n\
    \        var nNumerator = BigInteger.Parse(nParts[0]);\n        var nDenominator\
    \ = BigInteger.Parse(nParts[1]);\n        var result = xNumerator * nDenominator\
    \ * nNumerator * xDenominator;\n        return result % (xDenominator * nDenominator)\
    \ == 0;", "        var xParts = x.Split('/');\n        var nParts = n.Split('/');\n\
    \        var xNumerator = BigInteger.Parse(xParts[0]);\n        var xDenominator\
    \ = BigInteger.Parse(xParts[1]);\n        var nNumerator = BigInteger.Parse(nParts[0]);\n\
    \        var nDenominator = BigInteger.Parse(nParts[1]);\n        var result =\
    \ xNumerator * nDenominator * nNumerator * xDenominator;\n        return result\
    \ % (xDenominator * nDenominator) == 0;", "        var xSplit = x.Split('/');\n\
    \        var nSplit = n.Split('/');\n        var xNum = BigInteger.Parse(xSplit[0]);\n\
    \        var xDen = BigInteger.Parse(xSplit[1]);\n        var nNum = BigInteger.Parse(nSplit[0]);\n\
    \        var nDen = BigInteger.Parse(nSplit[1]);\n        var num = xNum * nNum;\n\
    \        var den = xDen * nDen;\n        var gcd = GCD(num, den);\n        num\
    \ /= gcd;\n        den /= gcd;\n        return num % den == 0;", "        var\
    \ xParts = x.Split('/');\n        var nParts = n.Split('/');\n        var xNumerator\
    \ = BigInteger.Parse(xParts[0]);\n        var xDenominator = BigInteger.Parse(xParts[1]);\n\
    \        var nNumerator = BigInteger.Parse(nParts[0]);\n        var nDenominator\
    \ = BigInteger.Parse(nParts[1]);\n        var xProduct = xNumerator * nDenominator;\n\
    \        var nProduct = nNumerator * xDenominator;\n        return xProduct ==\
    \ nProduct;", "        var x_n = x.Split('/');\n        var n_n = n.Split('/');\n\
    \        var x_num = BigInteger.Parse(x_n[0]);\n        var x_den = BigInteger.Parse(x_n[1]);\n\
    \        var n_num = BigInteger.Parse(n_n[0]);\n        var n_den = BigInteger.Parse(n_n[1]);\n\
    \        var x_num_n = x_num * n_den;\n        var x_den_n = x_den * n_num;\n\
    \        var gcd = BigInteger.GreatestCommonDivisor(x_num_n, x_den_n);\n     \
    \   return x_num_n % gcd == 0 && x_den_n % gcd == 0;", "        var xs = x.Split('/');\n\
    \        var ns = n.Split('/');\n        var xn = BigInteger.Parse(xs[0]) * BigInteger.Parse(ns[1]);\n\
    \        var nx = BigInteger.Parse(ns[0]) * BigInteger.Parse(xs[1]);\n       \
    \ return xn == nx;", "        var x_ = x.Split('/');\n        var n_ = n.Split('/');\n\
    \        var x_num = BigInteger.Parse(x_[0]);\n        var x_den = BigInteger.Parse(x_[1]);\n\
    \        var n_num = BigInteger.Parse(n_[0]);\n        var n_den = BigInteger.Parse(n_[1]);\n\
    \        var num = x_num * n_num;\n        var den = x_den * n_den;\n        var\
    \ gcd = BigInteger.GreatestCommonDivisor(num, den);\n        num /= gcd;\n   \
    \     den /= gcd;\n        return num % den == 0;", "        var x_numerator =\
    \ int.Parse(x.Split('/')[0]);\n        var x_denominator = int.Parse(x.Split('/')[1]);\n\
    \        var n_numerator = int.Parse(n.Split('/')[0]);\n        var n_denominator\
    \ = int.Parse(n.Split('/')[1]);\n        var result = x_numerator * n_numerator;\n\
    \        var result_denominator = x_denominator * n_denominator;\n        return\
    \ result % result_denominator == 0;", "        var x_parts = x.Split('/');\n \
    \       var n_parts = n.Split('/');\n        var x_numerator = BigInteger.Parse(x_parts[0]);\n\
    \        var x_denominator = BigInteger.Parse(x_parts[1]);\n        var n_numerator\
    \ = BigInteger.Parse(n_parts[0]);\n        var n_denominator = BigInteger.Parse(n_parts[1]);\n\
    \        var product_numerator = x_numerator * n_numerator;\n        var product_denominator\
    \ = x_denominator * n_denominator;\n        var gcd = BigInteger.GreatestCommonDivisor(product_numerator,\
    \ product_denominator);\n        return product_numerator % gcd == 0 && product_denominator\
    \ % gcd == 0;", "        var x_numerator = BigInteger.Parse(x.Split('/')[0]);\n\
    \        var x_denominator = BigInteger.Parse(x.Split('/')[1]);\n        var n_numerator\
    \ = BigInteger.Parse(n.Split('/')[0]);\n        var n_denominator = BigInteger.Parse(n.Split('/')[1]);\n\
    \        var result = x_numerator * n_numerator;\n        var result_denominator\
    \ = x_denominator * n_denominator;\n        var gcd = BigInteger.GreatestCommonDivisor(result,\
    \ result_denominator);\n        result /= gcd;\n        result_denominator /=\
    \ gcd;\n        return result % result_denominator == 0;"]
stop_tokens:
- "\n    }\n"

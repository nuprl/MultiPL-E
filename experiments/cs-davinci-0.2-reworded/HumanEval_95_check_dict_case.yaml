name: HumanEval_95_check_dict_case
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // Given a dictionary, return true if all keys are strings in lower\
  \ \n    // case or all keys are strings in upper case, else return false.\n    //\
  \ The function should return false is the given dictionary is empty.\n    // Examples:\n\
  \    // >>> CheckDictCase((new Dictionary<string,string>(){{\"a\", \"apple\"}, {\"\
  b\", \"banana\"}}))\n    // (true)\n    // >>> CheckDictCase((new Dictionary<string,string>(){{\"\
  a\", \"apple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}}))\n    // (false)\n \
  \   // >>> CheckDictCase((new Dictionary<string,string>(){{\"a\", \"apple\"}, {8L,\
  \ \"banana\"}, {\"a\", \"apple\"}}))\n    // (false)\n    // >>> CheckDictCase((new\
  \ Dictionary<string,string>(){{\"Name\", \"John\"}, {\"Age\", \"36\"}, {\"City\"\
  , \"Houston\"}}))\n    // (false)\n    // >>> CheckDictCase((new Dictionary<string,string>(){{\"\
  STATE\", \"NC\"}, {\"ZIP\", \"12345\"}}))\n    // (true)\n    public static bool\
  \ CheckDictCase(Dictionary<string,string> dict) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(CheckDictCase((new\
  \ Dictionary<string,string>(){{\"p\", \"pineapple\"}, {\"b\", \"banana\"}})) ==\
  \ (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"\
  p\", \"pineapple\"}, {\"A\", \"banana\"}, {\"B\", \"banana\"}})) == (false));\n\
  \    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"p\", \"pineapple\"\
  }, {\"5\", \"banana\"}, {\"a\", \"apple\"}})) == (false));\n    Debug.Assert(CheckDictCase((new\
  \ Dictionary<string,string>(){{\"Name\", \"John\"}, {\"Age\", \"36\"}, {\"City\"\
  , \"Houston\"}})) == (false));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>(){{\"\
  STATE\", \"NC\"}, {\"ZIP\", \"12345\"}})) == (true));\n    Debug.Assert(CheckDictCase((new\
  \ Dictionary<string,string>(){{\"fruit\", \"Orange\"}, {\"taste\", \"Sweet\"}}))\
  \ == (true));\n    Debug.Assert(CheckDictCase((new Dictionary<string,string>()))\
  \ == (false));\n    }\n\n}\n"
completions: ["        bool lower = true;\n        bool upper = true;\n        foreach\
    \ (var k in dict.Keys) {\n            if (k.ToLower() != k) {\n              \
    \  lower = false;\n            }\n            if (k.ToUpper() != k) {\n      \
    \          upper = false;\n            }\n        }\n        return lower || upper;",
  '        return dict.Keys.All(key => key.All(char.IsUpper)) || dict.Keys.All(key
    => key.All(char.IsLower));', '        return dict.Keys.All(k => k.ToUpper() ==
    k) || dict.Keys.All(k => k.ToLower() == k);', '        return dict.Keys.All(k
    => k.ToUpper() == k) || dict.Keys.All(k => k.ToLower() == k);', "        // TODO:\
    \ Implement this function\n        return false;", "        bool lower = true;\n\
    \        bool upper = true;\n        foreach (string key in dict.Keys) {\n   \
    \         lower = lower && key.ToLower() == key;\n            upper = upper &&\
    \ key.ToUpper() == key;\n        }\n        return lower || upper;", '        return
    dict.Keys.All(k => k.All(char.IsUpper)) || dict.Keys.All(k => k.All(char.IsLower));',
  "        // Your code here\n        return false;", "        bool lower = true;\n\
    \        bool upper = true;\n        foreach (string key in dict.Keys) {\n   \
    \         lower = lower && key.Equals(key.ToLower());\n            upper = upper\
    \ && key.Equals(key.ToUpper());\n        }\n        return lower || upper;", " \
    \       if (dict.Count == 0) {\n            return false;\n        }\n       \
    \ bool allLower = true;\n        bool allUpper = true;\n        foreach (string\
    \ key in dict.Keys) {\n            if (key.ToUpper() != key) {\n             \
    \   allUpper = false;\n            }\n            if (key.ToLower() != key) {\n\
    \                allLower = false;\n            }\n        }\n        return allLower\
    \ || allUpper;", "        // TODO: Implement this function\n        return false;",
  '        return dict.Keys.All(k => k.All(c => char.IsUpper(c))) || dict.Keys.All(k
    => k.All(c => char.IsLower(c)));', "        if (dict.Count == 0) {\n         \
    \   return false;\n        }\n        bool allLower = true;\n        bool allUpper\
    \ = true;\n        foreach (var key in dict.Keys) {\n            if (key.ToUpper()\
    \ != key) {\n                allUpper = false;\n            }\n            if\
    \ (key.ToLower() != key) {\n                allLower = false;\n            }\n\
    \        }\n        return allLower || allUpper;", "        bool lower = true;\n\
    \        bool upper = true;\n        foreach (var key in dict.Keys) {\n      \
    \      lower = lower && key.ToLower() == key;\n            upper = upper && key.ToUpper()\
    \ == key;\n        }\n        return lower || upper;", "        if (dict.Count\
    \ == 0) {\n            return false;\n        }\n        bool allLower = true;\n\
    \        bool allUpper = true;\n        foreach (string key in dict.Keys) {\n\
    \            if (key.ToUpper() != key) {\n                allUpper = false;\n\
    \            }\n            if (key.ToLower() != key) {\n                allLower\
    \ = false;\n            }\n        }\n        return allLower || allUpper;", " \
    \       // TODO: Implement your solution here.\n        return false;", "    \
    \    bool allLower = true;\n        bool allUpper = true;\n        foreach (string\
    \ key in dict.Keys) {\n            if (key.ToUpper() == key) {\n             \
    \   allLower = false;\n            } else if (key.ToLower() == key) {\n      \
    \          allUpper = false;\n            } else {\n                return false;\n\
    \            }\n        }\n        return !(allLower && allUpper);", "       \
    \ // TODO: Implement this function\n        return false;", "        bool lower\
    \ = true;\n        bool upper = true;\n        foreach (string key in dict.Keys)\
    \ {\n            lower = lower && key.ToLower() == key;\n            upper = upper\
    \ && key.ToUpper() == key;\n        }\n        return lower || upper;", '        return
    false;', "        // Your code here\n        return false;", "        bool lower\
    \ = true;\n        bool upper = true;\n        foreach (var key in dict.Keys)\
    \ {\n            if (key.ToLower() != key) {\n                lower = false;\n\
    \            }\n            if (key.ToUpper() != key) {\n                upper\
    \ = false;\n            }\n        }\n        return lower || upper;", "     \
    \   var lower = dict.Keys.All(k => k.ToLower() == k);\n        var upper = dict.Keys.All(k\
    \ => k.ToUpper() == k);\n        return lower || upper;", "        // TODO: Implement\
    \ this function\n        return false;", "        // TODO: Implement this function.\n\
    \        return false;", "        // TODO: Implement this function\n        return\
    \ false;", "        // TODO: Implement this function\n        return false;",
  "        bool lower = true;\n        bool upper = true;\n        foreach (string\
    \ key in dict.Keys) {\n            if (key.ToLower() != key) {\n             \
    \   lower = false;\n            }\n            if (key.ToUpper() != key) {\n \
    \               upper = false;\n            }\n        }\n        return lower\
    \ || upper;", '        return dict.Keys.All(x => x.ToUpper() == x) || dict.Keys.All(x
    => x.ToLower() == x);', "        if (dict.Count == 0) {\n            return false;\n\
    \        }\n        bool isLower = true;\n        bool isUpper = true;\n     \
    \   foreach (var key in dict.Keys) {\n            if (key.ToLower() != key) {\n\
    \                isLower = false;\n            }\n            if (key.ToUpper()\
    \ != key) {\n                isUpper = false;\n            }\n        }\n    \
    \    return isLower || isUpper;", "        // TODO: Implement this function\n\
    \        return false;", "        if (dict.Count == 0) {\n            return false;\n\
    \        }\n        bool lower = true;\n        bool upper = true;\n        foreach\
    \ (string key in dict.Keys) {\n            lower = lower && key.ToLower() == key;\n\
    \            upper = upper && key.ToUpper() == key;\n        }\n        return\
    \ lower || upper;", "        bool isUpper = false;\n        bool isLower = false;\n\
    \        foreach (string key in dict.Keys) {\n            if (key.ToUpper() ==\
    \ key) {\n                isUpper = true;\n            } else if (key.ToLower()\
    \ == key) {\n                isLower = true;\n            } else {\n         \
    \       return false;\n            }\n        }\n        return isUpper ^ isLower;",
  "        if (dict.Count == 0) {\n            return false;\n        }\n        bool\
    \ allLower = true;\n        bool allUpper = true;\n        foreach (var kvp in\
    \ dict) {\n            if (kvp.Key.ToLower() != kvp.Key) {\n                allLower\
    \ = false;\n            }\n            if (kvp.Key.ToUpper() != kvp.Key) {\n \
    \               allUpper = false;\n            }\n        }\n        return allLower\
    \ || allUpper;", '        return dict.Keys.All(k => k.ToUpper() == k) || dict.Keys.All(k
    => k.ToLower() == k);', "        // TODO: Implement this function\n        return\
    \ false;", "        // Your code goes here\n        return false;", '        return
    dict.Keys.All(key => key.All(char.IsUpper)) || dict.Keys.All(key => key.All(char.IsLower));',
  "        // Your code here\n        return false;", '        return false;', " \
    \       // TODO: Implement this function.\n        return false;", '        return
    dict.Keys.All(k => k.ToUpper() == k) || dict.Keys.All(k => k.ToLower() == k);',
  "        // TODO: Implement this function\n        return false;", "        // TODO:\
    \ Implement this function\n        return false;", "        // TODO: Implement\
    \ this function\n        return false;", "        // TODO: Implement this function\n\
    \        return false;", "        if (dict.Count == 0) {\n            return false;\n\
    \        }\n        bool allLower = true;\n        bool allUpper = true;\n   \
    \     foreach (string key in dict.Keys) {\n            if (key.ToUpper() != key)\
    \ {\n                allUpper = false;\n            }\n            if (key.ToLower()\
    \ != key) {\n                allLower = false;\n            }\n        }\n   \
    \     return allLower || allUpper;", "        // Your code here\n        return\
    \ false;", "        // Your code here\n        return false;", "        // TODO:\
    \ Implement this function.\n        return false;", "        // TODO: Implement\
    \ this function\n        return false;", "        // Your code here\n        return\
    \ false;", "        bool lower = true;\n        bool upper = true;\n        foreach\
    \ (string key in dict.Keys) {\n            if (key.ToLower() != key) {\n     \
    \           lower = false;\n            }\n            if (key.ToUpper() != key)\
    \ {\n                upper = false;\n            }\n        }\n        return\
    \ lower || upper;", "        bool lower = true;\n        bool upper = true;\n\
    \        foreach (string key in dict.Keys) {\n            if (key.ToLower() !=\
    \ key) {\n                lower = false;\n            }\n            if (key.ToUpper()\
    \ != key) {\n                upper = false;\n            }\n        }\n      \
    \  return lower || upper;", "        // TODO: Implement this function.\n     \
    \   return false;", "        bool isLower = false;\n        bool isUpper = false;\n\
    \        foreach (var key in dict.Keys) {\n            if (key.ToLower() == key)\
    \ {\n                isLower = true;\n            } else if (key.ToUpper() ==\
    \ key) {\n                isUpper = true;\n            } else {\n            \
    \    return false;\n            }\n        }\n        return isLower ^ isUpper;",
  '        return false;', "        // TODO: Implement this function\n        return\
    \ false;", "        // Write your code here\n        return false;", '        return
    dict.Keys.All(k => k.All(c => char.IsUpper(c))) || dict.Keys.All(k => k.All(c
    => char.IsLower(c)));', "        // TODO: Implement this function\n        return\
    \ false;", "        // TODO: Implement this function.\n        return false;",
  "        if (dict.Count == 0) {\n            return false;\n        }\n        bool\
    \ allLower = true;\n        bool allUpper = true;\n        foreach (var key in\
    \ dict.Keys) {\n            if (key.ToUpper() != key) {\n                allUpper\
    \ = false;\n            }\n            if (key.ToLower() != key) {\n         \
    \       allLower = false;\n            }\n        }\n        return allLower ||\
    \ allUpper;", '        return false;', "        // TODO: Implement this function.\n\
    \        return false;", "        // TODO: implement this function\n        return\
    \ false;", "        // TODO: Implement this function.\n        return false;",
  "        // TODO: Implement this function\n        return false;", "        bool\
    \ lower = false;\n        bool upper = false;\n        foreach (var item in dict)\
    \ {\n            if (item.Key.ToLower() == item.Key) {\n                lower\
    \ = true;\n            }\n            if (item.Key.ToUpper() == item.Key) {\n\
    \                upper = true;\n            }\n        }\n        if (lower &&\
    \ upper) {\n            return false;\n        }\n        return true;", "   \
    \     // Your code here\n        return false;", "        // TODO: Implement this\
    \ function\n        return false;", '        return dict.Keys.All(x => x.ToUpper()
    == x) || dict.Keys.All(x => x.ToLower() == x);', "        bool lower = true;\n\
    \        bool upper = true;\n        foreach (var key in dict.Keys) {\n      \
    \      if (key.ToLower() != key) {\n                lower = false;\n         \
    \   }\n            if (key.ToUpper() != key) {\n                upper = false;\n\
    \            }\n        }\n        return lower || upper;", "        // TODO:\
    \ Implement this function\n        return false;", "        // TODO: Implement\
    \ this function\n        return false;", '        return false;', "        bool\
    \ isLower = false;\n        bool isUpper = false;\n        foreach (var key in\
    \ dict.Keys) {\n            if (key.ToLower() == key) {\n                isLower\
    \ = true;\n            } else if (key.ToUpper() == key) {\n                isUpper\
    \ = true;\n            } else {\n                return false;\n            }\n\
    \        }\n        return isLower ^ isUpper;", "        bool lower = true;\n\
    \        bool upper = true;\n        foreach (var key in dict.Keys) {\n      \
    \      if (key.ToUpper() != key) {\n                upper = false;\n         \
    \   }\n            if (key.ToLower() != key) {\n                lower = false;\n\
    \            }\n        }\n        return lower || upper;", "        return dict.Keys.All(s\
    \ => s.All(c => char.IsUpper(c))) ||\n               dict.Keys.All(s => s.All(c\
    \ => char.IsLower(c)));", '        return dict.Keys.All(k => k.All(c => char.IsUpper(c)))
    || dict.Keys.All(k => k.All(c => char.IsLower(c)));', "        // TODO: Implement\
    \ this function\n        return false;", '        return false;', '        return
    dict.Keys.All(x => x.ToUpper() == x) || dict.Keys.All(x => x.ToLower() == x);',
  "        // TODO: Implement this function\n        return false;", "        // TODO:\
    \ Implement this function\n        return false;", "        var lower = dict.Keys.All(k\
    \ => k.All(c => char.IsLower(c)));\n        var upper = dict.Keys.All(k => k.All(c\
    \ => char.IsUpper(c)));\n        return lower || upper;", '        return dict.Keys.All(x
    => x.ToUpper() == x) || dict.Keys.All(x => x.ToLower() == x);', "        // Your\
    \ code here\n        return false;", "        // Your code here\n        return\
    \ false;", "        if (dict.Count == 0) {\n            return false;\n      \
    \  }\n        bool allLower = true;\n        bool allUpper = true;\n        foreach\
    \ (var kvp in dict) {\n            if (kvp.Key.ToUpper() != kvp.Key) {\n     \
    \           allUpper = false;\n            }\n            if (kvp.Key.ToLower()\
    \ != kvp.Key) {\n                allLower = false;\n            }\n        }\n\
    \        return allLower || allUpper;", "        // TODO: Implement this function.\n\
    \        return false;", '        return false;', "        if (dict.Count == 0)\
    \ {\n            return false;\n        }\n        bool allLower = true;\n   \
    \     bool allUpper = true;\n        foreach (string key in dict.Keys) {\n   \
    \         if (key.ToUpper() != key) {\n                allUpper = false;\n   \
    \         }\n            if (key.ToLower() != key) {\n                allLower\
    \ = false;\n            }\n        }\n        return allLower || allUpper;", " \
    \       // TODO: Implement this function\n        return false;", "        //\
    \ TODO: Implement this function\n        return false;", "        // TODO: implement\
    \ this function\n        return false;", "        // Your code here\n        return\
    \ false;", "        if (dict.Count == 0) {\n            return false;\n      \
    \  }\n        bool allLower = true;\n        bool allUpper = true;\n        foreach\
    \ (string key in dict.Keys) {\n            if (key.ToUpper() != key) {\n     \
    \           allUpper = false;\n            }\n            if (key.ToLower() !=\
    \ key) {\n                allLower = false;\n            }\n        }\n      \
    \  return allLower || allUpper;", "        if (dict.Count == 0) {\n          \
    \  return false;\n        }\n        bool allLower = true;\n        bool allUpper\
    \ = true;\n        foreach (var kvp in dict) {\n            if (kvp.Key.ToUpper()\
    \ != kvp.Key) {\n                allUpper = false;\n            }\n          \
    \  if (kvp.Key.ToLower() != kvp.Key) {\n                allLower = false;\n  \
    \          }\n        }\n        return allLower || allUpper;", "        if (dict.Count\
    \ == 0) {\n            return false;\n        }\n        bool allLower = true;\n\
    \        bool allUpper = true;\n        foreach (string key in dict.Keys) {\n\
    \            if (key.ToUpper() != key) {\n                allUpper = false;\n\
    \            }\n            if (key.ToLower() != key) {\n                allLower\
    \ = false;\n            }\n        }\n        return allLower || allUpper;", " \
    \       // TODO: Implement this function\n        return false;", "        //\
    \ Your code goes here\n        return false;", "        // TODO: Implement this\
    \ function\n        return false;", '        return dict.Keys.All(k => k.ToUpper()
    == k) || dict.Keys.All(k => k.ToLower() == k);', "        bool lower = true;\n\
    \        bool upper = true;\n        foreach (var key in dict.Keys) {\n      \
    \      lower = lower && key.ToLower() == key;\n            upper = upper && key.ToUpper()\
    \ == key;\n        }\n        return lower || upper;", "        // TODO: Implement\
    \ this function\n        return false;", "        if (dict.Count == 0) {\n   \
    \         return false;\n        }\n        bool isLower = dict.Keys.First().ToLower()\
    \ == dict.Keys.First();\n        foreach (var key in dict.Keys) {\n          \
    \  if (isLower && key.ToLower() != key) {\n                return false;\n   \
    \         }\n            if (!isLower && key.ToUpper() != key) {\n           \
    \     return false;\n            }\n        }\n        return true;", '        return
    false;', "        if (dict.Count == 0) {\n            return false;\n        }\n\
    \        bool allLower = true;\n        bool allUpper = true;\n        foreach\
    \ (var key in dict.Keys) {\n            if (key.ToUpper() != key) {\n        \
    \        allUpper = false;\n            }\n            if (key.ToLower() != key)\
    \ {\n                allLower = false;\n            }\n        }\n        return\
    \ allLower || allUpper;", '        return false;', "        if (dict.Count ==\
    \ 0) return false;\n        var isLower = dict.Keys.First().ToLower() == dict.Keys.First();\n\
    \        return dict.Keys.All(k => (k.ToLower() == k) == isLower);", "       \
    \ bool isLower = true;\n        bool isUpper = true;\n        foreach (string\
    \ key in dict.Keys) {\n            if (key.ToLower() != key) {\n             \
    \   isLower = false;\n            }\n            if (key.ToUpper() != key) {\n\
    \                isUpper = false;\n            }\n        }\n        return isLower\
    \ || isUpper;", "        bool lowerCase = true;\n        bool upperCase = true;\n\
    \        foreach (string key in dict.Keys) {\n            if (key.ToLower() !=\
    \ key) {\n                lowerCase = false;\n            }\n            if (key.ToUpper()\
    \ != key) {\n                upperCase = false;\n            }\n        }\n  \
    \      return lowerCase || upperCase;", "        bool lower = true;\n        bool\
    \ upper = true;\n        foreach (var key in dict.Keys) {\n            if (key.All(char.IsLower))\
    \ {\n                upper = false;\n            } else if (key.All(char.IsUpper))\
    \ {\n                lower = false;\n            } else {\n                return\
    \ false;\n            }\n        }\n        return lower || upper;", '        return
    false;', "        // TODO: Implement this function\n        return false;", " \
    \       // TODO: Implement this function.\n        return false;", "        bool\
    \ allLower = true;\n        bool allUpper = true;\n        foreach (var key in\
    \ dict.Keys) {\n            if (key.ToUpper() == key) {\n                allLower\
    \ = false;\n            } else if (key.ToLower() == key) {\n                allUpper\
    \ = false;\n            } else {\n                return false;\n            }\n\
    \        }\n        return allLower || allUpper;", "        if (dict.Count ==\
    \ 0) return false;\n        bool allLower = true;\n        bool allUpper = true;\n\
    \        foreach (var kvp in dict) {\n            if (kvp.Key.ToLower() != kvp.Key)\
    \ allLower = false;\n            if (kvp.Key.ToUpper() != kvp.Key) allUpper =\
    \ false;\n        }\n        return allLower || allUpper;", "        // TODO:\
    \ Implement this function\n        return false;", "        // Your code here\n\
    \        return false;", '        return dict.Keys.All(k => k.ToUpper() == k)
    || dict.Keys.All(k => k.ToLower() == k);', "        bool lower = true;\n     \
    \   bool upper = true;\n        foreach (var key in dict.Keys) {\n           \
    \ if (key.ToLower() != key) {\n                lower = false;\n            }\n\
    \            if (key.ToUpper() != key) {\n                upper = false;\n   \
    \         }\n        }\n        return lower || upper;", '        return dict.Keys.All(k
    => k.ToUpper() == k) || dict.Keys.All(k => k.ToLower() == k);', "        bool\
    \ lower = true;\n        bool upper = true;\n        foreach (var key in dict.Keys)\
    \ {\n            if (key.ToLower() != key) {\n                lower = false;\n\
    \            }\n            if (key.ToUpper() != key) {\n                upper\
    \ = false;\n            }\n        }\n        return lower || upper;", "     \
    \   // TODO: Implement this function\n        return false;", "        // Your\
    \ code here\n        return false;", "        // Your code here\n        return\
    \ false;", '        return false;', "        // TODO: Implement this function.\n\
    \        return false;", "        // your code here\n        return false;", '        return
    dict.Keys.All(k => k.ToUpper() == k) || dict.Keys.All(k => k.ToLower() == k);',
  "        return dict.Keys.All(k => k.All(c => c >= 'A' && c <= 'Z')) ||\n      \
    \         dict.Keys.All(k => k.All(c => c >= 'a' && c <= 'z'));", "        //\
    \ TODO: Implement this function\n        return false;", '        return dict.Keys.All(k
    => k.ToUpper() == k) || dict.Keys.All(k => k.ToLower() == k);', '        return
    false;', "        // TODO: Implement this function\n        return false;", " \
    \       bool lower = true;\n        bool upper = true;\n        foreach (var k\
    \ in dict.Keys) {\n            if (k.ToUpper() != k) {\n                upper\
    \ = false;\n            }\n            if (k.ToLower() != k) {\n             \
    \   lower = false;\n            }\n        }\n        return lower || upper;",
  "        // TODO: Implement this function\n        return false;", "        // TODO:\
    \ Implement this function\n        return false;", "        // TODO: Implement\
    \ this function\n        return false;", "        // TODO: Implement this function\n\
    \        return false;", "        if (dict.Count == 0) {\n            return false;\n\
    \        }\n        bool allLower = true;\n        bool allUpper = true;\n   \
    \     foreach (string key in dict.Keys) {\n            if (key.ToUpper() != key)\
    \ {\n                allUpper = false;\n            }\n            if (key.ToLower()\
    \ != key) {\n                allLower = false;\n            }\n        }\n   \
    \     return allLower || allUpper;", "        // TODO: Implement this function\n\
    \        return false;", '        return false;', '        return false;', " \
    \       // TODO: Implement this function\n        return false;", "        //\
    \ Your code here\n        return false;", "        // TODO: Implement this function\n\
    \        return false;", "        // TODO: Implement this function\n        return\
    \ false;", "        // TODO: Implement this function\n        return false;",
  '        return dict.Keys.All(k => k.ToUpper() == k) || dict.Keys.All(k => k.ToLower()
    == k);', '        return dict.Keys.All(k => k.ToUpper() == k) || dict.Keys.All(k
    => k.ToLower() == k);', '        return dict.Keys.All(k => k.All(c => char.IsUpper(c)))
    || dict.Keys.All(k => k.All(c => char.IsLower(c)));', "        bool lower = false;\n\
    \        bool upper = false;\n        foreach (var key in dict.Keys) {\n     \
    \       if (key.ToUpper() == key) {\n                upper = true;\n         \
    \   } else if (key.ToLower() == key) {\n                lower = true;\n      \
    \      } else {\n                return false;\n            }\n        }\n   \
    \     return (lower && !upper) || (!lower && upper);", "        // TODO: Implement\
    \ this function\n        return false;", "        return dict.Keys.All(k => k.All(c\
    \ => c >= 'a' && c <= 'z')) ||\n               dict.Keys.All(k => k.All(c => c\
    \ >= 'A' && c <= 'Z'));", "        if (dict.Count == 0) {\n            return\
    \ false;\n        }\n        bool allLower = true;\n        bool allUpper = true;\n\
    \        foreach (string key in dict.Keys) {\n            if (key.ToUpper() !=\
    \ key) {\n                allUpper = false;\n            }\n            if (key.ToLower()\
    \ != key) {\n                allLower = false;\n            }\n        }\n   \
    \     return allLower || allUpper;", "        // Your code goes here\n       \
    \ return false;", "        // TODO: Implement this function\n        return false;"]
stop_tokens:
- "\n    }\n"

name: HumanEval_64_vowels_count
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // Write a function vowels_count which takes a string representing\n\
  \    // a word as input and returns the number of vowels in the string.\n    //\
  \ Vowels in this case are 'a', 'e', 'i', 'o', 'u'. Here, 'y' is also a\n    // vowel,\
  \ but only when it is at the end of the given word.\n    // Example:\n    // >>>\
  \ VowelsCount((\"abcde\"))\n    // (2L)\n    // >>> VowelsCount((\"ACEDY\"))\n \
  \   // (3L)\n    public static long VowelsCount(string s) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(VowelsCount((\"\
  abcde\")) == (2L));\n    Debug.Assert(VowelsCount((\"Alone\")) == (3L));\n    Debug.Assert(VowelsCount((\"\
  key\")) == (2L));\n    Debug.Assert(VowelsCount((\"bye\")) == (1L));\n    Debug.Assert(VowelsCount((\"\
  keY\")) == (2L));\n    Debug.Assert(VowelsCount((\"bYe\")) == (1L));\n    Debug.Assert(VowelsCount((\"\
  ACEDY\")) == (3L));\n    }\n\n}\n"
completions: ["        long count = 0;\n        for (int i = 0; i < s.Length; i++)\
    \ {\n            if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o'\
    \ || s[i] == 'u') {\n                count++;\n            }\n        }\n    \
    \    if (s[s.Length - 1] == 'y') {\n            count++;\n        }\n        return\
    \ count;", "        long count = 0;\n        for (int i = 0; i < s.Length; i++)\
    \ {\n            if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o'\
    \ || s[i] == 'u') {\n                count++;\n            }\n        }\n    \
    \    if (s[s.Length - 1] == 'y') {\n            count++;\n        }\n        return\
    \ count;", "        // TODO: Implement this function\n        return 0;", "  \
    \      long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n       \
    \     if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] ==\
    \ 'u') {\n                count++;\n            }\n        }\n        if (s[s.Length\
    \ - 1] == 'y') {\n            count++;\n        }\n        return count;", " \
    \       long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n      \
    \      if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] ==\
    \ 'u') {\n                count++;\n            }\n        }\n        if (s[s.Length\
    \ - 1] == 'y') {\n            count++;\n        }\n        return count;", " \
    \       long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n      \
    \      if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] ==\
    \ 'u') {\n                count++;\n            }\n        }\n        if (s[s.Length\
    \ - 1] == 'y') {\n            count++;\n        }\n        return count;", " \
    \       long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n      \
    \      if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] ==\
    \ 'u') {\n                count++;\n            }\n        }\n        if (s[s.Length\
    \ - 1] == 'y') {\n            count++;\n        }\n        return count;", " \
    \       long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n      \
    \      if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] ==\
    \ 'u') {\n                count++;\n            }\n        }\n        if (s[s.Length\
    \ - 1] == 'y') {\n            count++;\n        }\n        return count;", " \
    \       long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n      \
    \      if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] ==\
    \ 'u') {\n                count++;\n            }\n        }\n        if (s[s.Length\
    \ - 1] == 'y') {\n            count++;\n        }\n        return count;", " \
    \       long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n      \
    \      if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] ==\
    \ 'u') {\n                count++;\n            }\n        }\n        if (s[s.Length\
    \ - 1] == 'y') {\n            count++;\n        }\n        return count;", " \
    \       long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n      \
    \      if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] ==\
    \ 'u') {\n                count++;\n            }\n        }\n        if (s[s.Length\
    \ - 1] == 'y') {\n            count++;\n        }\n        return count;", " \
    \       long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n      \
    \      if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] ==\
    \ 'u') {\n                count++;\n            }\n        }\n        if (s[s.Length\
    \ - 1] == 'y') {\n            count++;\n        }\n        return count;", " \
    \       long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n      \
    \      if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] ==\
    \ 'u') {\n                count++;\n            }\n        }\n        if (s[s.Length\
    \ - 1] == 'y') {\n            count++;\n        }\n        return count;", " \
    \       long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n      \
    \      if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] ==\
    \ 'u') {\n                count++;\n            }\n        }\n        if (s[s.Length\
    \ - 1] == 'y') {\n            count++;\n        }\n        return count;", " \
    \       long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n      \
    \      if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] ==\
    \ 'u') {\n                count++;\n            }\n        }\n        if (s[s.Length\
    \ - 1] == 'y') {\n            count++;\n        }\n        return count;", " \
    \       long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n      \
    \      if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] ==\
    \ 'u') {\n                count++;\n            }\n        }\n        if (s[s.Length\
    \ - 1] == 'y') {\n            count++;\n        }\n        return count;", " \
    \       long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n      \
    \      if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] ==\
    \ 'u') {\n                count++;\n            }\n        }\n        if (s[s.Length\
    \ - 1] == 'y') {\n            count++;\n        }\n        return count;", " \
    \       long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n      \
    \      if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] ==\
    \ 'u') {\n                count++;\n            }\n        }\n        if (s[s.Length\
    \ - 1] == 'y') {\n            count++;\n        }\n        return count;", " \
    \       long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n      \
    \      if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] ==\
    \ 'u') {\n                count++;\n            }\n        }\n        if (s[s.Length\
    \ - 1] == 'y') {\n            count++;\n        }\n        return count;", " \
    \       long count = 0;\n        for (int i = 0; i < s.Length; i++) {\n      \
    \      if (s[i] == 'a' || s[i] == 'e' || s[i] == 'i' || s[i] == 'o' || s[i] ==\
    \ 'u') {\n                count++;\n            }\n        }\n        if (s[s.Length\
    \ - 1] == 'y') {\n            count++;\n        }\n        return count;"]
stop_tokens:
- "\n    }\n"

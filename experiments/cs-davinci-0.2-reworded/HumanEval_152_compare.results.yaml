language: cs
name: HumanEval_152_compare
results:
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ ret = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n  \
    \          ret.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return ret;\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ef9c16173b74a079a7b7d130a6ab878>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <9ef9c16173b74a079a7b7d130a6ab878>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            long diff = Math.Abs(game[i] - guess[i]);\n            result.Add(diff);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n  \
    \  Debug.Assert(Compare((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)0L, (long)0L})), (new List<long>(new long[]{(long)0L, (long)0L,\
    \ (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L,\
    \ (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)-2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)2L, (long)4L,\
    \ (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L, (long)2L,\
    \ (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L,\
    \ (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <38f8b727bf1e44ed9f660fca72a326fb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <38f8b727bf1e44ed9f660fca72a326fb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        var\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c445c0cc2a72497090c8093d247a579b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <c445c0cc2a72497090c8093d247a579b>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            long diff = Math.Abs(game[i] - guess[i]);\n            result.Add(diff);\n\
    \        }\n        return result;\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L,\
    \ (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L}))).Equals((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L, (long)3L}))));\n  \
    \  Debug.Assert(Compare((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)0L, (long)0L})), (new List<long>(new long[]{(long)0L, (long)0L,\
    \ (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new List<long>(new long[]{(long)0L,\
    \ (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)-2L, (long)-3L}))).Equals((new List<long>(new long[]{(long)2L, (long)4L,\
    \ (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new long[]{(long)1L,\
    \ (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L, (long)2L,\
    \ (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L, (long)0L,\
    \ (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <38f8b727bf1e44ed9f660fca72a326fb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <38f8b727bf1e44ed9f660fca72a326fb>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // I think we all remember that feeling when the result of\
    \ some long-awaited\n    // event is finally known. The feelings and thoughts\
    \ you have at that moment are\n    // definitely worth noting down and comparing.\n\
    \    // Your task is to determine if a person correctly guessed the results of\
    \ a number of matches.\n    // You are given two lists of scores and guesses of\
    \ equal length, where each index shows a match. \n    // Return a list of the\
    \ same length denoting how far off each guess was. If they have guessed correctly,\n\
    \    // the value is 0, and if not, the value is the absolute difference between\
    \ the guess and the score.\n    // example:\n    // >>> Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})), (new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L, (long)-2L})))\n   \
    \ // (new List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)3L,\
    \ (long)3L}))\n    // >>> Compare((new List<long>(new long[]{(long)0L, (long)5L,\
    \ (long)0L, (long)0L, (long)0L, (long)4L})), (new List<long>(new long[]{(long)4L,\
    \ (long)1L, (long)1L, (long)0L, (long)0L, (long)-2L})))\n    // (new List<long>(new\
    \ long[]{(long)4L, (long)4L, (long)1L, (long)0L, (long)0L, (long)6L}))\n    public\
    \ static List<long> Compare(List<long> game, List<long> guess) {\n        List<long>\
    \ result = new List<long>();\n        for (int i = 0; i < game.Count; i++) {\n\
    \            result.Add(Math.Abs(game[i] - guess[i]));\n        }\n        return\
    \ result;\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(Compare((new\
    \ List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)5L, (long)1L})),\
    \ (new List<long>(new long[]{(long)1L, (long)2L, (long)3L, (long)4L, (long)2L,\
    \ (long)-2L}))).Equals((new List<long>(new long[]{(long)0L, (long)0L, (long)0L,\
    \ (long)0L, (long)3L, (long)3L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L})), (new List<long>(new\
    \ long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))).Equals((new\
    \ List<long>(new long[]{(long)0L, (long)0L, (long)0L, (long)0L, (long)0L, (long)0L}))));\n\
    \    Debug.Assert(Compare((new List<long>(new long[]{(long)1L, (long)2L, (long)3L})),\
    \ (new List<long>(new long[]{(long)-1L, (long)-2L, (long)-3L}))).Equals((new List<long>(new\
    \ long[]{(long)2L, (long)4L, (long)6L}))));\n    Debug.Assert(Compare((new List<long>(new\
    \ long[]{(long)1L, (long)2L, (long)3L, (long)5L})), (new List<long>(new long[]{(long)-1L,\
    \ (long)2L, (long)3L, (long)4L}))).Equals((new List<long>(new long[]{(long)2L,\
    \ (long)0L, (long)0L, (long)1L}))));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <350db2d96dad43cda9c95b1e14a5dfa5>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659797325

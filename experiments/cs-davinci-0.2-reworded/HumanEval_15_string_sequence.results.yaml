language: cs
name: HumanEval_15_string_sequence
results:
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        var sb = new StringBuilder();\n   \
    \     for (long i = 0; i <= n; i++) {\n            sb.Append(i);\n           \
    \ sb.Append(' ');\n        }\n        return sb.ToString().Trim();\n    }\n  \
    \  public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        return string.Join(\" \", Enumerable.Range(0,\
    \ (int)n + 1));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        string s = \"\";\n        for (int\
    \ i = 0; i <= n; i++) {\n            s += i.ToString() + \" \";\n        }\n \
    \       return s.Trim();\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"\
    0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0 1 2 3 4 5 6\
    \ 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        return string.Join(\" \", Enumerable.Range(0,\
    \ (int)n + 1));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        var sb = new StringBuilder();\n   \
    \     for (var i = 0L; i <= n; i++) {\n            if (i > 0) {\n            \
    \    sb.Append(\" \");\n            }\n            sb.Append(i);\n        }\n\
    \        return sb.ToString();\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"\
    0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0 1 2 3 4 5 6\
    \ 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        var sb = new StringBuilder();\n   \
    \     for (long i = 0; i <= n; i++) {\n            sb.Append(i);\n           \
    \ sb.Append(' ');\n        }\n        return sb.ToString();\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e47d0e4f7d9349feb6e0173448355cd7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e47d0e4f7d9349feb6e0173448355cd7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        var sb = new StringBuilder();\n   \
    \     for (var i = 0L; i <= n; i++) {\n            sb.Append(i);\n           \
    \ sb.Append(' ');\n        }\n        return sb.ToString().Trim();\n    }\n  \
    \  public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        return string.Join(\" \", Enumerable.Range(0,\
    \ (int)n + 1));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        string result = \"\";\n        for\
    \ (long i = 0; i <= n; i++) {\n            result += i.ToString() + \" \";\n \
    \       }\n        return result.Trim();\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"\
    0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0 1 2 3 4 5 6\
    \ 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        return string.Join(\" \", Enumerable.Range(0,\
    \ (int)n + 1));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        return string.Join(\" \", Enumerable.Range(0,\
    \ (int)n + 1));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i <= n; i++) {\n            sb.Append(i);\n         \
    \   sb.Append(' ');\n        }\n        sb.Length--;\n        return sb.ToString();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        var sb = new StringBuilder();\n   \
    \     for (long i = 0; i <= n; i++) {\n            sb.Append(i);\n           \
    \ sb.Append(' ');\n        }\n        return sb.ToString().Trim();\n    }\n  \
    \  public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        return string.Join(\" \", Enumerable.Range(0,\
    \ (int)n + 1));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        return string.Join(\" \", Enumerable.Range(0,\
    \ (int)n + 1));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        var sb = new StringBuilder();\n   \
    \     for (var i = 0L; i <= n; i++) {\n            sb.Append(i);\n           \
    \ sb.Append(' ');\n        }\n        return sb.ToString().Trim();\n    }\n  \
    \  public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        return string.Join(\" \", Enumerable.Range(0,\
    \ (int)n + 1));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        var sb = new StringBuilder();\n   \
    \     for (long i = 0; i <= n; i++) {\n            sb.Append(i);\n           \
    \ sb.Append(' ');\n        }\n        return sb.ToString().Trim();\n    }\n  \
    \  public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        return string.Join(\" \", Enumerable.Range(0,\
    \ (int)n + 1));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        string s = \"\";\n        for (long\
    \ i = 0; i <= n; i++) {\n            s += i.ToString() + \" \";\n        }\n \
    \       return s.Trim();\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"\
    0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0 1 2 3 4 5 6\
    \ 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        var sb = new StringBuilder();\n   \
    \     for (var i = 0L; i <= n; i++) {\n            if (i > 0) {\n            \
    \    sb.Append(\" \");\n            }\n            sb.Append(i);\n        }\n\
    \        return sb.ToString();\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"\
    0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0 1 2 3 4 5 6\
    \ 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        var sb = new StringBuilder();\n   \
    \     for (long i = 0; i <= n; i++) {\n            if (i > 0) sb.Append(' ');\n\
    \            sb.Append(i);\n        }\n        return sb.ToString();\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        return string.Join(\" \", Enumerable.Range(0,\
    \ (int)n + 1));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        var sb = new StringBuilder();\n   \
    \     for (var i = 0L; i <= n; i++) {\n            if (i > 0) {\n            \
    \    sb.Append(\" \");\n            }\n            sb.Append(i);\n        }\n\
    \        return sb.ToString();\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"\
    0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0 1 2 3 4 5 6\
    \ 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        return string.Join(\" \", Enumerable.Range(0,\
    \ (int)n + 1));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        var sb = new StringBuilder();\n   \
    \     for (var i = 0L; i <= n; i++) {\n            if (i > 0) sb.Append(' ');\n\
    \            sb.Append(i);\n        }\n        return sb.ToString();\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        var sb = new StringBuilder();\n   \
    \     for (long i = 0; i <= n; i++) {\n            if (i > 0) {\n            \
    \    sb.Append(\" \");\n            }\n            sb.Append(i);\n        }\n\
    \        return sb.ToString();\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"\
    0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0 1 2 3 4 5 6\
    \ 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        return string.Join(\" \", Enumerable.Range(0,\
    \ (int)n + 1));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        string result = \"\";\n        for\
    \ (int i = 0; i <= n; i++) {\n            result += i.ToString() + \" \";\n  \
    \      }\n        return result.Trim();\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"\
    0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0 1 2 3 4 5 6\
    \ 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        string result = \"\";\n        for\
    \ (long i = 0; i <= n; i++) {\n            result += i.ToString() + \" \";\n \
    \       }\n        return result.Trim();\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"\
    0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0 1 2 3 4 5 6\
    \ 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        return string.Join(\" \", Enumerable.Range(0,\
    \ (int)n + 1));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        var sb = new StringBuilder();\n   \
    \     for (long i = 0; i <= n; i++) {\n            if (i > 0) {\n            \
    \    sb.Append(\" \");\n            }\n            sb.Append(i);\n        }\n\
    \        return sb.ToString();\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"\
    0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0 1 2 3 4 5 6\
    \ 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        return string.Join(\" \", Enumerable.Range(0,\
    \ (int)n + 1));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        string result = \"\";\n        for\
    \ (long i = 0; i <= n; i++) {\n            result += i.ToString() + \" \";\n \
    \       }\n        return result.Trim();\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"\
    0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0 1 2 3 4 5 6\
    \ 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        return string.Join(\" \", Enumerable.Range(0,\
    \ (int)n + 1));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        return string.Join(\" \", Enumerable.Range(0,\
    \ (int)n + 1));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        string result = \"\";\n        for\
    \ (long i = 0; i <= n; i++) {\n            result += i.ToString() + \" \";\n \
    \       }\n        return result.Trim();\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"\
    0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0 1 2 3 4 5 6\
    \ 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        return string.Join(\" \", Enumerable.Range(0,\
    \ (int)n + 1));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        string result = \"\";\n        for\
    \ (long i = 0; i <= n; i++) {\n            result += i.ToString() + \" \";\n \
    \       }\n        return result.Trim();\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"\
    0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0 1 2 3 4 5 6\
    \ 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        var sb = new StringBuilder();\n   \
    \     for (long i = 0; i <= n; i++) {\n            if (i > 0) {\n            \
    \    sb.Append(\" \");\n            }\n            sb.Append(i);\n        }\n\
    \        return sb.ToString();\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"\
    0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0 1 2 3 4 5 6\
    \ 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        return string.Join(\" \", Enumerable.Range(0,\
    \ (int)n + 1));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        return string.Join(\" \", Enumerable.Range(0,\
    \ (int)n + 1));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        var sb = new StringBuilder();\n   \
    \     for (var i = 0L; i <= n; i++) {\n            if (i > 0) {\n            \
    \    sb.Append(\" \");\n            }\n            sb.Append(i);\n        }\n\
    \        return sb.ToString();\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"\
    0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0 1 2 3 4 5 6\
    \ 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        string s = \"\";\n        for (long\
    \ i = 0; i <= n; i++) {\n            s += i.ToString() + \" \";\n        }\n \
    \       return s.Trim();\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"\
    0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0 1 2 3 4 5 6\
    \ 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        return string.Join(\" \", Enumerable.Range(0,\
    \ (int)n + 1));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        if (n < 0) {\n            throw new\
    \ ArgumentException(\"n must be non-negative.\");\n        }\n        var sb =\
    \ new StringBuilder();\n        for (long i = 0; i <= n; i++) {\n            if\
    \ (i > 0) {\n                sb.Append(' ');\n            }\n            sb.Append(i);\n\
    \        }\n        return sb.ToString();\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"\
    0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0 1 2 3 4 5 6\
    \ 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        string result = \"\";\n        for\
    \ (long i = 0; i <= n; i++) {\n            result += i.ToString() + \" \";\n \
    \       }\n        return result.Trim();\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"\
    0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0 1 2 3 4 5 6\
    \ 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        var sb = new StringBuilder();\n   \
    \     for (long i = 0; i <= n; i++) {\n            if (i > 0) {\n            \
    \    sb.Append(\" \");\n            }\n            sb.Append(i);\n        }\n\
    \        return sb.ToString();\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"\
    0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0 1 2 3 4 5 6\
    \ 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        var sb = new StringBuilder();\n   \
    \     for (long i = 0; i <= n; i++) {\n            sb.Append(i);\n           \
    \ sb.Append(' ');\n        }\n        return sb.ToString();\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e47d0e4f7d9349feb6e0173448355cd7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e47d0e4f7d9349feb6e0173448355cd7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        if (n < 0) {\n            throw new\
    \ ArgumentException(\"n must be non-negative\");\n        }\n        var sb =\
    \ new StringBuilder();\n        for (var i = 0L; i <= n; i++) {\n            if\
    \ (i > 0) {\n                sb.Append(' ');\n            }\n            sb.Append(i);\n\
    \        }\n        return sb.ToString();\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"\
    0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0 1 2 3 4 5 6\
    \ 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        return string.Join(\" \", Enumerable.Range(0,\
    \ (int)n + 1));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        return string.Join(\" \", Enumerable.Range(0,\
    \ (int)n + 1));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        var sb = new StringBuilder();\n   \
    \     for (long i = 0; i <= n; i++) {\n            sb.Append(i);\n           \
    \ sb.Append(' ');\n        }\n        return sb.ToString();\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e47d0e4f7d9349feb6e0173448355cd7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e47d0e4f7d9349feb6e0173448355cd7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        var sb = new StringBuilder();\n   \
    \     for (long i = 0; i <= n; i++) {\n            sb.Append(i);\n           \
    \ sb.Append(' ');\n        }\n        return sb.ToString().Trim();\n    }\n  \
    \  public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        var sb = new StringBuilder();\n   \
    \     for (long i = 0; i <= n; i++) {\n            sb.Append(i);\n           \
    \ sb.Append(' ');\n        }\n        return sb.ToString();\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e47d0e4f7d9349feb6e0173448355cd7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e47d0e4f7d9349feb6e0173448355cd7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        var sb = new StringBuilder();\n   \
    \     for (var i = 0L; i <= n; i++) {\n            if (i > 0) {\n            \
    \    sb.Append(\" \");\n            }\n            sb.Append(i);\n        }\n\
    \        return sb.ToString();\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"\
    0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0 1 2 3 4 5 6\
    \ 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        var sb = new StringBuilder();\n   \
    \     for (var i = 0L; i <= n; i++) {\n            if (i > 0) {\n            \
    \    sb.Append(\" \");\n            }\n            sb.Append(i);\n        }\n\
    \        return sb.ToString();\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"\
    0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0 1 2 3 4 5 6\
    \ 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i <= n; i++) {\n            sb.Append(i);\n         \
    \   sb.Append(\" \");\n        }\n        return sb.ToString().Trim();\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        string[] result = new string[n + 1];\n\
    \        for (int i = 0; i <= n; i++) {\n            result[i] = i.ToString();\n\
    \        }\n        return string.Join(\" \", result);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        var sb = new StringBuilder();\n   \
    \     for (var i = 0L; i <= n; i++) {\n            if (i > 0) {\n            \
    \    sb.Append(\" \");\n            }\n            sb.Append(i);\n        }\n\
    \        return sb.ToString();\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"\
    0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0 1 2 3 4 5 6\
    \ 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        string result = \"\";\n        for\
    \ (long i = 0; i <= n; i++) {\n            result += i.ToString() + \" \";\n \
    \       }\n        return result.Trim();\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"\
    0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0 1 2 3 4 5 6\
    \ 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        var sb = new StringBuilder();\n   \
    \     for (var i = 0L; i <= n; i++) {\n            if (i > 0) {\n            \
    \    sb.Append(\" \");\n            }\n            sb.Append(i);\n        }\n\
    \        return sb.ToString();\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"\
    0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0 1 2 3 4 5 6\
    \ 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        var sb = new StringBuilder();\n   \
    \     for (long i = 0; i <= n; i++) {\n            sb.Append(i);\n           \
    \ sb.Append(' ');\n        }\n        return sb.ToString();\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e47d0e4f7d9349feb6e0173448355cd7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e47d0e4f7d9349feb6e0173448355cd7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        return string.Join(\" \", Enumerable.Range(0,\
    \ (int)n + 1));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i <= n; i++) {\n            sb.Append(i);\n         \
    \   sb.Append(\" \");\n        }\n        return sb.ToString().Trim();\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        var sb = new StringBuilder();\n   \
    \     for (var i = 0L; i <= n; i++) {\n            if (i > 0) {\n            \
    \    sb.Append(\" \");\n            }\n            sb.Append(i);\n        }\n\
    \        return sb.ToString();\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"\
    0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0 1 2 3 4 5 6\
    \ 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        var sb = new StringBuilder();\n   \
    \     for (var i = 0L; i <= n; i++) {\n            if (i > 0) {\n            \
    \    sb.Append(\" \");\n            }\n            sb.Append(i);\n        }\n\
    \        return sb.ToString();\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"\
    0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0 1 2 3 4 5 6\
    \ 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        string s = \"\";\n        for (int\
    \ i = 0; i <= n; i++) {\n            s += i.ToString() + \" \";\n        }\n \
    \       return s.Trim();\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"\
    0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0 1 2 3 4 5 6\
    \ 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        return string.Join(\" \", Enumerable.Range(0,\
    \ (int)n + 1));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        var sb = new StringBuilder();\n   \
    \     for (var i = 0L; i <= n; i++) {\n            if (i > 0) {\n            \
    \    sb.Append(\" \");\n            }\n            sb.Append(i);\n        }\n\
    \        return sb.ToString();\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"\
    0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0 1 2 3 4 5 6\
    \ 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        string result = \"\";\n        for\
    \ (long i = 0; i <= n; i++) {\n            result += i.ToString() + \" \";\n \
    \       }\n        return result.Trim();\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"\
    0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0 1 2 3 4 5 6\
    \ 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i <= n; i++) {\n            sb.Append(i);\n         \
    \   sb.Append(\" \");\n        }\n        return sb.ToString().Trim();\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        var sb = new StringBuilder();\n   \
    \     for (var i = 0L; i <= n; i++) {\n            if (i > 0) {\n            \
    \    sb.Append(\" \");\n            }\n            sb.Append(i);\n        }\n\
    \        return sb.ToString();\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"\
    0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0 1 2 3 4 5 6\
    \ 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i <= n; i++) {\n            sb.Append(i);\n         \
    \   sb.Append(\" \");\n        }\n        return sb.ToString();\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6615efb0ae404710b1eb5c53c63e6347>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6615efb0ae404710b1eb5c53c63e6347>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        return string.Join(\" \", Enumerable.Range(0,\
    \ (int)n + 1));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        return string.Join(\" \", Enumerable.Range(0,\
    \ (int)n + 1));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        return string.Join(\" \", Enumerable.Range(0,\
    \ (int)n + 1));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        var sb = new StringBuilder();\n   \
    \     for (long i = 0; i <= n; i++) {\n            sb.Append(i);\n           \
    \ sb.Append(' ');\n        }\n        return sb.ToString().Trim();\n    }\n  \
    \  public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        var sb = new StringBuilder();\n   \
    \     for (long i = 0; i <= n; i++) {\n            sb.Append(i);\n           \
    \ sb.Append(' ');\n        }\n        return sb.ToString().Trim();\n    }\n  \
    \  public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        string result = \"\";\n        for\
    \ (long i = 0; i <= n; i++) {\n            result += i.ToString() + \" \";\n \
    \       }\n        return result.Trim();\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"\
    0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0 1 2 3 4 5 6\
    \ 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        var sb = new StringBuilder();\n   \
    \     for (long i = 0; i <= n; i++) {\n            sb.Append(i);\n           \
    \ sb.Append(' ');\n        }\n        return sb.ToString();\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e47d0e4f7d9349feb6e0173448355cd7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e47d0e4f7d9349feb6e0173448355cd7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        return string.Join(\" \", Enumerable.Range(0,\
    \ (int)n + 1));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        return string.Join(\" \", Enumerable.Range(0,\
    \ (int)n + 1));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        return string.Join(\" \", Enumerable.Range(0,\
    \ (int)n + 1));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        return string.Join(\" \", Enumerable.Range(0,\
    \ (int)n + 1));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        return string.Join(\" \", Enumerable.Range(0,\
    \ (int)n + 1));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        var sb = new StringBuilder();\n   \
    \     for (var i = 0L; i <= n; i++) {\n            if (i > 0) {\n            \
    \    sb.Append(\" \");\n            }\n            sb.Append(i);\n        }\n\
    \        return sb.ToString();\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"\
    0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0 1 2 3 4 5 6\
    \ 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        string result = \"\";\n        for\
    \ (int i = 0; i <= n; i++) {\n            result += i.ToString() + \" \";\n  \
    \      }\n        return result.Trim();\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"\
    0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0 1 2 3 4 5 6\
    \ 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        string s = \"\";\n        for (long\
    \ i = 0; i <= n; i++) {\n            s += i + \" \";\n        }\n        return\
    \ s.Trim();\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        return string.Join(\" \", Enumerable.Range(0,\
    \ (int)n + 1));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        return string.Join(\" \", Enumerable.Range(0,\
    \ (int)n + 1));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        return string.Join(\" \", Enumerable.Range(0,\
    \ (int)n + 1));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        var sb = new StringBuilder();\n   \
    \     for (long i = 0; i <= n; i++) {\n            sb.Append(i);\n           \
    \ sb.Append(' ');\n        }\n        return sb.ToString();\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e47d0e4f7d9349feb6e0173448355cd7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e47d0e4f7d9349feb6e0173448355cd7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        string result = \"\";\n        for\
    \ (long i = 0; i <= n; i++) {\n            result += i.ToString() + \" \";\n \
    \       }\n        return result.Trim();\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"\
    0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0 1 2 3 4 5 6\
    \ 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        string result = \"\";\n        for\
    \ (long i = 0; i <= n; i++) {\n            result += i.ToString() + \" \";\n \
    \       }\n        return result.Trim();\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"\
    0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0 1 2 3 4 5 6\
    \ 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        var sb = new StringBuilder();\n   \
    \     for (long i = 0; i <= n; i++) {\n            sb.Append(i);\n           \
    \ sb.Append(' ');\n        }\n        return sb.ToString();\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e47d0e4f7d9349feb6e0173448355cd7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e47d0e4f7d9349feb6e0173448355cd7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        var sb = new StringBuilder();\n   \
    \     for (long i = 0; i <= n; i++) {\n            sb.Append(i);\n           \
    \ sb.Append(' ');\n        }\n        return sb.ToString();\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e47d0e4f7d9349feb6e0173448355cd7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e47d0e4f7d9349feb6e0173448355cd7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        return string.Join(\" \", Enumerable.Range(0,\
    \ (int)n + 1));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        string s = \"\";\n        for (int\
    \ i = 0; i <= n; i++) {\n            s += i.ToString() + \" \";\n        }\n \
    \       return s.Trim();\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"\
    0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0 1 2 3 4 5 6\
    \ 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        return Enumerable.Range(0, (int)n +\
    \ 1).Select(x => x.ToString()).Aggregate((x, y) => x + \" \" + y);\n    }\n  \
    \  public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        return string.Join(\" \", Enumerable.Range(0,\
    \ (int)n + 1));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        string s = \"\";\n        for (long\
    \ i = 0; i <= n; i++) {\n            s += i.ToString() + \" \";\n        }\n \
    \       return s.Trim();\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"\
    0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0 1 2 3 4 5 6\
    \ 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        string[] result = new string[n + 1];\n\
    \        for (int i = 0; i <= n; i++) {\n            result[i] = i.ToString();\n\
    \        }\n        return string.Join(\" \", result);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        string s = \"\";\n        for (long\
    \ i = 0; i <= n; i++) {\n            s += i.ToString() + \" \";\n        }\n \
    \       return s.Trim();\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"\
    0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0 1 2 3 4 5 6\
    \ 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        string result = \"\";\n        for\
    \ (long i = 0; i <= n; i++) {\n            result += i.ToString() + \" \";\n \
    \       }\n        return result.Trim();\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"\
    0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0 1 2 3 4 5 6\
    \ 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        return string.Join(\" \", Enumerable.Range(0,\
    \ (int)n + 1));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        var sb = new StringBuilder();\n   \
    \     for (long i = 0; i <= n; i++) {\n            sb.Append(i);\n           \
    \ sb.Append(' ');\n        }\n        return sb.ToString();\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e47d0e4f7d9349feb6e0173448355cd7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e47d0e4f7d9349feb6e0173448355cd7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        return string.Join(\" \", Enumerable.Range(0,\
    \ (int)n + 1));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        return string.Join(\" \", Enumerable.Range(0,\
    \ (int)n + 1));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        return string.Join(\" \", Enumerable.Range(0,\
    \ (int)n + 1));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        return string.Join(\" \", Enumerable.Range(0,\
    \ (int)n + 1));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        string s = \"\";\n        for (long\
    \ i = 0; i <= n; i++) {\n            s += i.ToString() + \" \";\n        }\n \
    \       return s.Trim();\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"\
    0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0 1 2 3 4 5 6\
    \ 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        var sb = new StringBuilder();\n   \
    \     for (long i = 0; i <= n; i++) {\n            sb.Append(i);\n           \
    \ sb.Append(' ');\n        }\n        return sb.ToString();\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e47d0e4f7d9349feb6e0173448355cd7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e47d0e4f7d9349feb6e0173448355cd7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        return string.Join(\" \", Enumerable.Range(0,\
    \ (int)n + 1));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        return string.Join(\" \", Enumerable.Range(0,\
    \ (int)n + 1));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        return string.Join(\" \", Enumerable.Range(0,\
    \ (int)n + 1));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        string s = \"\";\n        for (long\
    \ i = 0; i <= n; i++) {\n            s += i.ToString() + \" \";\n        }\n \
    \       return s.Trim();\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"\
    0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0 1 2 3 4 5 6\
    \ 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        return string.Join(\" \", Enumerable.Range(0,\
    \ (int)n + 1));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        return string.Join(\" \", Enumerable.Range(0,\
    \ (int)n + 1));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        return string.Join(\" \", Enumerable.Range(0,\
    \ (int)n + 1));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        return string.Join(\" \", Enumerable.Range(0,\
    \ (int)n + 1));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        var sb = new StringBuilder();\n   \
    \     for (long i = 0; i <= n; i++) {\n            sb.Append(i);\n           \
    \ sb.Append(' ');\n        }\n        return sb.ToString();\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e47d0e4f7d9349feb6e0173448355cd7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e47d0e4f7d9349feb6e0173448355cd7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        return string.Join(\" \", Enumerable.Range(0,\
    \ (int)n + 1));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        string s = \"\";\n        for (long\
    \ i = 0; i <= n; i++) {\n            s += i.ToString() + \" \";\n        }\n \
    \       return s.Trim();\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"\
    0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0 1 2 3 4 5 6\
    \ 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        string s = \"\";\n        for (int\
    \ i = 0; i <= n; i++) {\n            s += i.ToString() + \" \";\n        }\n \
    \       return s.Trim();\n    }\n    public static void Main(string[] args) {\n\
    \    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"\
    0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0 1 2 3 4 5 6\
    \ 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        return string.Join(\" \", Enumerable.Range(0,\
    \ (int)n + 1));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        string result = \"\";\n        for\
    \ (long i = 0; i <= n; i++) {\n            result += i.ToString() + \" \";\n \
    \       }\n        return result.Trim();\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"\
    0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0 1 2 3 4 5 6\
    \ 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        return string.Join(\" \", Enumerable.Range(0,\
    \ (int)n + 1));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        return string.Join(\" \", Enumerable.Range(0,\
    \ (int)n + 1));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        string result = \"\";\n        for\
    \ (long i = 0; i <= n; i++) {\n            result += i.ToString() + \" \";\n \
    \       }\n        return result.Trim();\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"\
    0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0 1 2 3 4 5 6\
    \ 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        var sb = new StringBuilder();\n   \
    \     for (long i = 0; i <= n; i++) {\n            sb.Append(i);\n           \
    \ sb.Append(' ');\n        }\n        return sb.ToString().Trim();\n    }\n  \
    \  public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        var sb = new StringBuilder();\n   \
    \     for (long i = 0; i <= n; i++) {\n            sb.Append(i.ToString());\n\
    \            sb.Append(' ');\n        }\n        return sb.ToString().Trim();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        return string.Join(\" \", Enumerable.Range(0,\
    \ (int)n + 1));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        return string.Join(\" \", Enumerable.Range(0,\
    \ (int)n + 1));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        var sb = new StringBuilder();\n   \
    \     for (var i = 0L; i <= n; i++) {\n            sb.Append(i);\n           \
    \ sb.Append(' ');\n        }\n        return sb.ToString();\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0188fe306c544819a26d80921996fc2e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <0188fe306c544819a26d80921996fc2e>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        return string.Join(\" \", Enumerable.Range(0,\
    \ (int)n + 1));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        var sb = new StringBuilder();\n   \
    \     for (long i = 0; i <= n; i++) {\n            sb.Append(i + \" \");\n   \
    \     }\n        return sb.ToString().Trim();\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"\
    0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0 1 2 3 4 5 6\
    \ 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        return string.Join(\" \", Enumerable.Range(0,\
    \ (int)n + 1));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        return string.Join(\" \", Enumerable.Range(0,\
    \ (int)n + 1));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        var sb = new StringBuilder();\n   \
    \     for (long i = 0; i <= n; i++) {\n            sb.Append(i);\n           \
    \ sb.Append(' ');\n        }\n        return sb.ToString().Trim();\n    }\n  \
    \  public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        return string.Join(\" \", Enumerable.Range(0,\
    \ (int)n + 1));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        return string.Join(\" \", Enumerable.Range(0,\
    \ (int)n + 1));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        return string.Join(\" \", Enumerable.Range(0,\
    \ (int)n + 1));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        var sb = new StringBuilder();\n   \
    \     for (long i = 0; i <= n; i++) {\n            sb.Append(i);\n           \
    \ sb.Append(' ');\n        }\n        return sb.ToString();\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e47d0e4f7d9349feb6e0173448355cd7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e47d0e4f7d9349feb6e0173448355cd7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        var sb = new StringBuilder();\n   \
    \     for (long i = 0; i <= n; i++) {\n            sb.Append(i);\n           \
    \ sb.Append(' ');\n        }\n        return sb.ToString().Trim();\n    }\n  \
    \  public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        var sb = new StringBuilder();\n   \
    \     for (long i = 0; i <= n; i++) {\n            sb.Append(i);\n           \
    \ sb.Append(' ');\n        }\n        return sb.ToString().Trim();\n    }\n  \
    \  public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        string result = \"\";\n        for\
    \ (long i = 0; i <= n; i++) {\n            result += i.ToString() + \" \";\n \
    \       }\n        return result.Trim();\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"\
    0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0 1 2 3 4 5 6\
    \ 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        return string.Join(\" \", Enumerable.Range(0,\
    \ (int)n + 1));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        string result = \"\";\n        for\
    \ (long i = 0; i <= n; i++) {\n            result += i.ToString() + \" \";\n \
    \       }\n        return result.Trim();\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"\
    0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0 1 2 3 4 5 6\
    \ 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        string result = \"\";\n        for\
    \ (long i = 0; i <= n; i++) {\n            result += i.ToString() + \" \";\n \
    \       }\n        return result.Trim();\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"\
    0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0 1 2 3 4 5 6\
    \ 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        return string.Join(\" \", Enumerable.Range(0,\
    \ (int)n + 1));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        return string.Join(\" \", Enumerable.Range(0,\
    \ (int)n + 1));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        return string.Join(\" \", Enumerable.Range(0,\
    \ (int)n + 1));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        return string.Join(\" \", Enumerable.Range(0,\
    \ (int)n + 1));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        var sb = new StringBuilder();\n   \
    \     for (long i = 0; i <= n; i++) {\n            sb.Append(i);\n           \
    \ sb.Append(' ');\n        }\n        return sb.ToString();\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e47d0e4f7d9349feb6e0173448355cd7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e47d0e4f7d9349feb6e0173448355cd7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        return string.Join(\" \", Enumerable.Range(0,\
    \ (int)n + 1));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        string result = \"\";\n        for\
    \ (long i = 0; i <= n; i++) {\n            result += i.ToString() + \" \";\n \
    \       }\n        return result.Trim();\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"\
    0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0 1 2 3 4 5 6\
    \ 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        var sb = new StringBuilder();\n   \
    \     for (var i = 0L; i <= n; i++) {\n            sb.Append(i);\n           \
    \ sb.Append(' ');\n        }\n        return sb.ToString().Trim();\n    }\n  \
    \  public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        string[] result = new string[n + 1];\n\
    \        for (int i = 0; i <= n; i++) {\n            result[i] = i.ToString();\n\
    \        }\n        return string.Join(\" \", result);\n    }\n    public static\
    \ void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        return string.Join(\" \", Enumerable.Range(0,\
    \ (int)n + 1));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        return string.Join(\" \", Enumerable.Range(0,\
    \ (int)n + 1));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        string result = \"\";\n        for\
    \ (long i = 0; i <= n; i++) {\n            result += i.ToString() + \" \";\n \
    \       }\n        return result.Trim();\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"\
    0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0 1 2 3 4 5 6\
    \ 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        var sb = new StringBuilder();\n   \
    \     for (var i = 0L; i <= n; i++) {\n            if (i > 0) {\n            \
    \    sb.Append(\" \");\n            }\n            sb.Append(i);\n        }\n\
    \        return sb.ToString();\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"\
    0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0 1 2 3 4 5 6\
    \ 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        return string.Join(\" \", Enumerable.Range(0,\
    \ (int)n + 1));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        return string.Join(\" \", Enumerable.Range(0,\
    \ (int)n + 1));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i <= n; i++) {\n            sb.Append(i);\n         \
    \   sb.Append(\" \");\n        }\n        return sb.ToString().Trim();\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        return string.Join(\" \", Enumerable.Range(0,\
    \ (int)n + 1));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        var sb = new StringBuilder();\n   \
    \     for (var i = 0L; i <= n; i++) {\n            if (i > 0) {\n            \
    \    sb.Append(\" \");\n            }\n            sb.Append(i);\n        }\n\
    \        return sb.ToString();\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"\
    0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0 1 2 3 4 5 6\
    \ 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        var sb = new StringBuilder();\n   \
    \     for (long i = 0; i <= n; i++) {\n            sb.Append(i);\n           \
    \ sb.Append(' ');\n        }\n        return sb.ToString().Trim();\n    }\n  \
    \  public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        var sb = new StringBuilder();\n   \
    \     for (var i = 0L; i <= n; i++) {\n            if (i > 0) {\n            \
    \    sb.Append(\" \");\n            }\n            sb.Append(i);\n        }\n\
    \        return sb.ToString();\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"\
    0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0 1 2 3 4 5 6\
    \ 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        string result = \"\";\n        for\
    \ (long i = 0; i <= n; i++) {\n            result += i.ToString() + \" \";\n \
    \       }\n        return result.Trim();\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"\
    0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0 1 2 3 4 5 6\
    \ 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        var sb = new StringBuilder();\n   \
    \     for (long i = 0; i <= n; i++) {\n            sb.Append(i);\n           \
    \ sb.Append(' ');\n        }\n        return sb.ToString();\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e47d0e4f7d9349feb6e0173448355cd7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e47d0e4f7d9349feb6e0173448355cd7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        return string.Join(\" \", Enumerable.Range(0,\
    \ (int)n + 1));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        var sb = new StringBuilder();\n   \
    \     for (long i = 0; i <= n; i++) {\n            sb.Append(i);\n           \
    \ sb.Append(' ');\n        }\n        return sb.ToString();\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e47d0e4f7d9349feb6e0173448355cd7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e47d0e4f7d9349feb6e0173448355cd7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        var sb = new StringBuilder();\n   \
    \     for (var i = 0L; i <= n; i++) {\n            if (i > 0) {\n            \
    \    sb.Append(\" \");\n            }\n            sb.Append(i);\n        }\n\
    \        return sb.ToString();\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"\
    0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0 1 2 3 4 5 6\
    \ 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        var sb = new StringBuilder();\n   \
    \     for (var i = 0L; i <= n; i++) {\n            if (i > 0) {\n            \
    \    sb.Append(\" \");\n            }\n            sb.Append(i);\n        }\n\
    \        return sb.ToString();\n    }\n    public static void Main(string[] args)\
    \ {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"\
    0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0 1 2 3 4 5 6\
    \ 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        return string.Join(\" \", Enumerable.Range(0,\
    \ (int)n + 1));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        if (n < 0) {\n            throw new\
    \ ArgumentException(\"n must be non-negative\");\n        }\n        StringBuilder\
    \ sb = new StringBuilder();\n        for (long i = 0; i <= n; i++) {\n       \
    \     if (i > 0) {\n                sb.Append(' ');\n            }\n         \
    \   sb.Append(i);\n        }\n        return sb.ToString();\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793513
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        return string.Join(\" \", Enumerable.Range(0,\
    \ (int)n + 1));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i <= n; i++) {\n            sb.Append(i);\n         \
    \   sb.Append(\" \");\n        }\n        return sb.ToString();\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6615efb0ae404710b1eb5c53c63e6347>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <6615efb0ae404710b1eb5c53c63e6347>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        return string.Join(\" \", Enumerable.Range(0,\
    \ (int)n + 1));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        return string.Join(\" \", Enumerable.Range(0,\
    \ (int)n + 1));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        return string.Join(\" \", Enumerable.Range(0,\
    \ (int)n + 1));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        var sb = new StringBuilder();\n   \
    \     for (long i = 0; i <= n; i++) {\n            sb.Append(i);\n           \
    \ sb.Append(' ');\n        }\n        return sb.ToString();\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e47d0e4f7d9349feb6e0173448355cd7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e47d0e4f7d9349feb6e0173448355cd7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        string result = \"\";\n        for\
    \ (long i = 0; i <= n; i++) {\n            result += i.ToString() + \" \";\n \
    \       }\n        return result.Trim();\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"\
    0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0 1 2 3 4 5 6\
    \ 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        return string.Join(\" \", Enumerable.Range(0,\
    \ (int)n + 1));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        var sb = new StringBuilder();\n   \
    \     for (long i = 0; i <= n; i++) {\n            sb.Append(i);\n           \
    \ sb.Append(' ');\n        }\n        return sb.ToString().Trim();\n    }\n  \
    \  public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        string result = \"\";\n        for\
    \ (long i = 0; i <= n; i++) {\n            result += i.ToString() + \" \";\n \
    \       }\n        return result.Trim();\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"\
    0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0 1 2 3 4 5 6\
    \ 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        return string.Join(\" \", Enumerable.Range(0,\
    \ (int)n + 1));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        string result = \"\";\n        for\
    \ (long i = 0; i <= n; i++) {\n            result += i.ToString() + \" \";\n \
    \       }\n        return result.Trim();\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"\
    0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0 1 2 3 4 5 6\
    \ 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        var sb = new StringBuilder();\n   \
    \     for (long i = 0; i <= n; i++) {\n            sb.Append(i);\n           \
    \ sb.Append(' ');\n        }\n        return sb.ToString();\n    }\n    public\
    \ static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: Exception
  stderr: "Fail: \n  at System.Diagnostics.DefaultTraceListener.Fail (System.String\
    \ message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e47d0e4f7d9349feb6e0173448355cd7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0 \n\
    \  at System.Diagnostics.TraceInternal.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.TraceInternal.Assert\
    \ (System.Boolean condition) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.Debug.Assert (System.Boolean condition) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at Problem.Main (System.String[]\
    \ args) [0x00000] in <e47d0e4f7d9349feb6e0173448355cd7>:0 \nFail: \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String message, System.String detailMessage) [0x00000] in <4932fe0df07342e1823cac360f8a44f7>:0\
    \ \n  at System.Diagnostics.TraceListener.Fail (System.String message) [0x00000]\
    \ in <4932fe0df07342e1823cac360f8a44f7>:0 \n  at System.Diagnostics.DefaultTraceListener.Fail\
    \ (System.String "
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        var result = new StringBuilder();\n\
    \        for (var i = 0L; i <= n; i++) {\n            result.Append(i);\n    \
    \        result.Append(\" \");\n        }\n        return result.ToString().Trim();\n\
    \    }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793513
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        string result = \"\";\n        for\
    \ (long i = 0; i <= n; i++) {\n            result += i.ToString() + \" \";\n \
    \       }\n        return result.Trim();\n    }\n    public static void Main(string[]\
    \ args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"\
    0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"0 1 2 3 4 5 6\
    \ 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        StringBuilder sb = new StringBuilder();\n\
    \        for (int i = 0; i <= n; i++) {\n            sb.Append(i);\n         \
    \   sb.Append(\" \");\n        }\n        return sb.ToString().Trim();\n    }\n\
    \    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        return string.Join(\" \", Enumerable.Range(0,\
    \ (int)n + 1));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        var sb = new StringBuilder();\n   \
    \     for (var i = 0L; i <= n; i++) {\n            sb.Append(i);\n           \
    \ sb.Append(' ');\n        }\n        return sb.ToString().Trim();\n    }\n  \
    \  public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        var sb = new StringBuilder();\n   \
    \     for (long i = 0; i <= n; i++) {\n            sb.Append(i);\n           \
    \ sb.Append(' ');\n        }\n        return sb.ToString().Trim();\n    }\n  \
    \  public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        return string.Join(\" \", Enumerable.Range(0,\
    \ (int)n + 1));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        return string.Join(\" \", Enumerable.Range(0,\
    \ (int)n + 1));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512
- exit_code: 0
  program: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing\
    \ System.Collections.Generic;\nusing System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\n\
    class Problem {\n    // Return a string containing space-delimited numbers starting\
    \ from 0 upto n inclusive.\n    // >>> StringSequence((0L))\n    // (\"0\")\n\
    \    // >>> StringSequence((5L))\n    // (\"0 1 2 3 4 5\")\n    public static\
    \ string StringSequence(long n) {\n        return string.Join(\" \", Enumerable.Range(0,\
    \ (int)n + 1));\n    }\n    public static void Main(string[] args) {\n    Debug.Assert(StringSequence((0L)).Equals((\"\
    0\")));\n    Debug.Assert(StringSequence((3L)).Equals((\"0 1 2 3\")));\n    Debug.Assert(StringSequence((10L)).Equals((\"\
    0 1 2 3 4 5 6 7 8 9 10\")));\n    }\n\n}\n"
  status: OK
  stderr: None
  stdout: ''
  timestamp: 1659793512

name: HumanEval_27_flip_case
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // For a given string, flip lowercase characters to uppercase and\
  \ uppercase to lowercase.\n    // >>> FlipCase((\"Hello\"))\n    // (\"hELLO\")\n\
  \    public static string FlipCase(string str) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(FlipCase((\"\
  \")).Equals((\"\")));\n    Debug.Assert(FlipCase((\"Hello!\")).Equals((\"hELLO!\"\
  )));\n    Debug.Assert(FlipCase((\"These violent delights have violent ends\")).Equals((\"\
  tHESE VIOLENT DELIGHTS HAVE VIOLENT ENDS\")));\n    }\n\n}\n"
completions: ['        return new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c)
    : char.ToUpper(c)).ToArray());', '        return new string(str.Select(c => char.IsUpper(c)
    ? char.ToLower(c) : char.ToUpper(c)).ToArray());', '        return new string(str.Select(c
    => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());', '        return
    new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  '        return new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  '        return new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  '        return new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  '        return str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToString();',
  '        return new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  '        return new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  "        char[] charArray = str.ToCharArray();\n        for (int i = 0; i < charArray.Length;\
    \ i++) {\n            if (char.IsUpper(charArray[i])) {\n                charArray[i]\
    \ = char.ToLower(charArray[i]);\n            } else if (char.IsLower(charArray[i]))\
    \ {\n                charArray[i] = char.ToUpper(charArray[i]);\n            }\n\
    \        }\n        return new string(charArray);", '        return new string(str.Select(c
    => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());', '        return
    new string(str.Select(x => char.IsLower(x) ? char.ToUpper(x) : char.ToLower(x)).ToArray());',
  "        var sb = new StringBuilder();\n        foreach (var c in str) {\n     \
    \       if (char.IsLower(c)) {\n                sb.Append(char.ToUpper(c));\n\
    \            } else {\n                sb.Append(char.ToLower(c));\n         \
    \   }\n        }\n        return sb.ToString();", "        char[] chars = str.ToCharArray();\n\
    \        for (int i = 0; i < chars.Length; i++) {\n            if (char.IsLower(chars[i]))\
    \ {\n                chars[i] = char.ToUpper(chars[i]);\n            } else if\
    \ (char.IsUpper(chars[i])) {\n                chars[i] = char.ToLower(chars[i]);\n\
    \            }\n        }\n        return new string(chars);", '        return
    str.Select(x => char.IsLower(x) ? char.ToUpper(x) : char.ToLower(x)).ToArray().ToString();',
  "        string result = \"\";\n        for (int i = 0; i < str.Length; i++) {\n\
    \            if (char.IsUpper(str[i])) {\n                result += char.ToLower(str[i]);\n\
    \            } else {\n                result += char.ToUpper(str[i]);\n     \
    \       }\n        }\n        return result;", "        string result = \"\";\n\
    \        foreach (char c in str) {\n            if (char.IsUpper(c)) {\n     \
    \           result += char.ToLower(c);\n            } else {\n               \
    \ result += char.ToUpper(c);\n            }\n        }\n        return result;",
  '        return new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  '        return new string(str.Select(c => char.IsLower(c) ? char.ToUpper(c) : char.ToLower(c)).ToArray());',
  '        return new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  '        return new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  "        char[] chars = str.ToCharArray();\n        for (int i = 0; i < chars.Length;\
    \ i++) {\n            if (Char.IsLower(chars[i])) {\n                chars[i]\
    \ = Char.ToUpper(chars[i]);\n            } else if (Char.IsUpper(chars[i])) {\n\
    \                chars[i] = Char.ToLower(chars[i]);\n            }\n        }\n\
    \        return new string(chars);", "        // TODO: Implement this function.\n\
    \        return null;", '        return new string(str.Select(c => char.IsUpper(c)
    ? char.ToLower(c) : char.ToUpper(c)).ToArray());', '        return string.Concat(str.Select(c
    => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)));', '        return new
    string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  "        string result = \"\";\n        for (int i = 0; i < str.Length; i++) {\n\
    \            if (char.IsLower(str[i])) {\n                result += char.ToUpper(str[i]);\n\
    \            } else {\n                result += char.ToLower(str[i]);\n     \
    \       }\n        }\n        return result;", '        return new string(str.Select(x
    => char.IsLower(x) ? char.ToUpper(x) : char.ToLower(x)).ToArray());', '        return
    new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  "        string result = \"\";\n        for (int i = 0; i < str.Length; i++) {\n\
    \            if (char.IsUpper(str[i])) {\n                result += char.ToLower(str[i]);\n\
    \            } else {\n                result += char.ToUpper(str[i]);\n     \
    \       }\n        }\n        return result;", "        StringBuilder sb = new\
    \ StringBuilder();\n        foreach (char c in str) {\n            if (char.IsUpper(c))\
    \ {\n                sb.Append(char.ToLower(c));\n            } else {\n     \
    \           sb.Append(char.ToUpper(c));\n            }\n        }\n        return\
    \ sb.ToString();", '        return new string(str.Select(c => char.IsUpper(c)
    ? char.ToLower(c) : char.ToUpper(c)).ToArray());', "        string result = \"\
    \";\n        foreach (char c in str) {\n            if (Char.IsUpper(c)) {\n \
    \               result += Char.ToLower(c);\n            } else {\n           \
    \     result += Char.ToUpper(c);\n            }\n        }\n        return result;",
  '        return new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  '        return new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  '        return new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  '        return new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  '        return new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  '        return new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  '        return new string(str.Select(x => char.IsUpper(x) ? char.ToLower(x) : char.ToUpper(x)).ToArray());',
  '        return new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  '        return new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  '        return new string(str.Select(x => char.IsUpper(x) ? char.ToLower(x) : char.ToUpper(x)).ToArray());',
  '        return str.Select(c => char.IsLower(c) ? char.ToUpper(c) : char.ToLower(c)).Aggregate("",
    (a, b) => a + b);', "        string result = \"\";\n        for (int i = 0; i\
    \ < str.Length; i++) {\n            if (Char.IsUpper(str[i])) {\n            \
    \    result += Char.ToLower(str[i]);\n            } else {\n                result\
    \ += Char.ToUpper(str[i]);\n            }\n        }\n        return result;",
  '        return new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  "        string result = \"\";\n        for (int i = 0; i < str.Length; i++) {\n\
    \            if (Char.IsLower(str[i])) {\n                result += Char.ToUpper(str[i]);\n\
    \            } else {\n                result += Char.ToLower(str[i]);\n     \
    \       }\n        }\n        return result;", "        string result = \"\";\n\
    \        for (int i = 0; i < str.Length; i++) {\n            if (Char.IsUpper(str[i]))\
    \ {\n                result += Char.ToLower(str[i]);\n            } else {\n \
    \               result += Char.ToUpper(str[i]);\n            }\n        }\n  \
    \      return result;", '        return new string(str.Select(c => char.IsLower(c)
    ? char.ToUpper(c) : char.ToLower(c)).ToArray());', '        return new string(str.Select(c
    => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());', '        return
    new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  "        var sb = new StringBuilder();\n        foreach (var c in str) {\n     \
    \       if (char.IsUpper(c)) {\n                sb.Append(char.ToLower(c));\n\
    \            } else {\n                sb.Append(char.ToUpper(c));\n         \
    \   }\n        }\n        return sb.ToString();", "        string result = \"\"\
    ;\n        for (int i = 0; i < str.Length; i++) {\n            if (Char.IsUpper(str[i]))\
    \ {\n                result += Char.ToLower(str[i]);\n            } else {\n \
    \               result += Char.ToUpper(str[i]);\n            }\n        }\n  \
    \      return result;", "        char[] chars = str.ToCharArray();\n        for\
    \ (int i = 0; i < chars.Length; i++) {\n            if (Char.IsLower(chars[i]))\
    \ {\n                chars[i] = Char.ToUpper(chars[i]);\n            } else if\
    \ (Char.IsUpper(chars[i])) {\n                chars[i] = Char.ToLower(chars[i]);\n\
    \            }\n        }\n        return new string(chars);", '        return
    new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  '        return new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  '        return new string(str.Select(x => char.IsLower(x) ? char.ToUpper(x) : char.ToLower(x)).ToArray());',
  '        return new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  '        return new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  '        return new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  "        string result = \"\";\n        foreach (char c in str) {\n            if\
    \ (char.IsUpper(c)) {\n                result += char.ToLower(c);\n          \
    \  } else {\n                result += char.ToUpper(c);\n            }\n     \
    \   }\n        return result;", '        return new string(str.Select(c => char.IsUpper(c)
    ? char.ToLower(c) : char.ToUpper(c)).ToArray());', '        return new string(str.Select(c
    => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());', '        return
    new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  "        char[] chars = str.ToCharArray();\n        for (int i = 0; i < chars.Length;\
    \ i++) {\n            if (Char.IsLower(chars[i])) {\n                chars[i]\
    \ = Char.ToUpper(chars[i]);\n            } else if (Char.IsUpper(chars[i])) {\n\
    \                chars[i] = Char.ToLower(chars[i]);\n            }\n        }\n\
    \        return new string(chars);", '        return str.Select(x => char.IsUpper(x)
    ? char.ToLower(x) : char.ToUpper(x)).ToString();', '        return new string(str.Select(c
    => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());', "      \
    \  string result = \"\";\n        foreach (char c in str) {\n            if (char.IsUpper(c))\
    \ {\n                result += char.ToLower(c);\n            } else {\n      \
    \          result += char.ToUpper(c);\n            }\n        }\n        return\
    \ result;", '        return new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c)
    : char.ToUpper(c)).ToArray());', "        char[] chars = str.ToCharArray();\n\
    \        for (int i = 0; i < chars.Length; i++) {\n            if (Char.IsUpper(chars[i]))\
    \ {\n                chars[i] = Char.ToLower(chars[i]);\n            } else if\
    \ (Char.IsLower(chars[i])) {\n                chars[i] = Char.ToUpper(chars[i]);\n\
    \            }\n        }\n        return new string(chars);", "        var sb\
    \ = new StringBuilder();\n        foreach (var c in str) {\n            if (char.IsLower(c))\
    \ {\n                sb.Append(char.ToUpper(c));\n            } else {\n     \
    \           sb.Append(char.ToLower(c));\n            }\n        }\n        return\
    \ sb.ToString();", "        char[] chars = str.ToCharArray();\n        for (int\
    \ i = 0; i < chars.Length; i++) {\n            if (Char.IsUpper(chars[i])) {\n\
    \                chars[i] = Char.ToLower(chars[i]);\n            } else if (Char.IsLower(chars[i]))\
    \ {\n                chars[i] = Char.ToUpper(chars[i]);\n            }\n     \
    \   }\n        return new string(chars);", '        return new string(str.Select(c
    => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());', '        return
    new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  '        return new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  '        return new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  '        return new string(str.Select(x => char.IsUpper(x) ? char.ToLower(x) : char.ToUpper(x)).ToArray());',
  '        return str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToString();',
  "        char[] chars = str.ToCharArray();\n        for (int i = 0; i < chars.Length;\
    \ i++) {\n            if (char.IsLower(chars[i])) {\n                chars[i]\
    \ = char.ToUpper(chars[i]);\n            } else if (char.IsUpper(chars[i])) {\n\
    \                chars[i] = char.ToLower(chars[i]);\n            }\n        }\n\
    \        return new string(chars);", '        return new string(str.Select(c =>
    char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());', '        return
    new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  '        return new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  '        return new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  '        return new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  '        return new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  "        var sb = new StringBuilder();\n        foreach (var c in str) {\n     \
    \       if (c >= 'a' && c <= 'z') {\n                sb.Append((char)(c - 'a'\
    \ + 'A'));\n            } else if (c >= 'A' && c <= 'Z') {\n                sb.Append((char)(c\
    \ - 'A' + 'a'));\n            } else {\n                sb.Append(c);\n      \
    \      }\n        }\n        return sb.ToString();", '        return new string(str.Select(c
    => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());', '        return
    new string(str.Select(x => char.IsUpper(x) ? char.ToLower(x) : char.ToUpper(x)).ToArray());',
  '        return new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  "        string result = \"\";\n        for (int i = 0; i < str.Length; i++) {\n\
    \            if (char.IsUpper(str[i])) {\n                result += char.ToLower(str[i]);\n\
    \            } else {\n                result += char.ToUpper(str[i]);\n     \
    \       }\n        }\n        return result;", "        string result = \"\";\n\
    \        for (int i = 0; i < str.Length; i++) {\n            char c = str[i];\n\
    \            if (char.IsLower(c)) {\n                result += char.ToUpper(c);\n\
    \            } else {\n                result += char.ToLower(c);\n          \
    \  }\n        }\n        return result;", '        return new string(str.Select(c
    => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());', '        return
    new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  '        return new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  '        return new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  '        return str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToString();',
  "        string newStr = \"\";\n        for (int i = 0; i < str.Length; i++) {\n\
    \            if (str[i] >= 'a' && str[i] <= 'z') {\n                newStr +=\
    \ (char)(str[i] - 32);\n            } else if (str[i] >= 'A' && str[i] <= 'Z')\
    \ {\n                newStr += (char)(str[i] + 32);\n            } else {\n  \
    \              newStr += str[i];\n            }\n        }\n        return newStr;",
  '        return new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  '        return new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  "        char[] chars = str.ToCharArray();\n        for (int i = 0; i < chars.Length;\
    \ i++) {\n            if (Char.IsLower(chars[i])) {\n                chars[i]\
    \ = Char.ToUpper(chars[i]);\n            } else if (Char.IsUpper(chars[i])) {\n\
    \                chars[i] = Char.ToLower(chars[i]);\n            }\n        }\n\
    \        return new string(chars);", "        string result = \"\";\n        for\
    \ (int i = 0; i < str.Length; i++) {\n            if (Char.IsLower(str[i])) {\n\
    \                result += Char.ToUpper(str[i]);\n            } else {\n     \
    \           result += Char.ToLower(str[i]);\n            }\n        }\n      \
    \  return result;", '        return new string(str.Select(c => char.IsUpper(c)
    ? char.ToLower(c) : char.ToUpper(c)).ToArray());', '        return new string(str.Select(c
    => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());', '        return
    new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  "        string result = \"\";\n        foreach (char c in str) {\n            if\
    \ (Char.IsLower(c)) {\n                result += Char.ToUpper(c);\n          \
    \  } else {\n                result += Char.ToLower(c);\n            }\n     \
    \   }\n        return result;", '        return new string(str.Select(c => char.IsUpper(c)
    ? char.ToLower(c) : char.ToUpper(c)).ToArray());', '        return new string(str.Select(c
    => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());', '        return
    str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).Aggregate("",
    (s, c) => s + c);', "        char[] chars = str.ToCharArray();\n        for (int\
    \ i = 0; i < chars.Length; i++) {\n            if (Char.IsUpper(chars[i])) {\n\
    \                chars[i] = Char.ToLower(chars[i]);\n            } else if (Char.IsLower(chars[i]))\
    \ {\n                chars[i] = Char.ToUpper(chars[i]);\n            }\n     \
    \   }\n        return new string(chars);", '        return new string(str.Select(c
    => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());', "      \
    \  char[] chars = str.ToCharArray();\n        for (int i = 0; i < chars.Length;\
    \ i++) {\n            if (Char.IsLower(chars[i])) {\n                chars[i]\
    \ = Char.ToUpper(chars[i]);\n            } else if (Char.IsUpper(chars[i])) {\n\
    \                chars[i] = Char.ToLower(chars[i]);\n            }\n        }\n\
    \        return new string(chars);", '        return new string(str.Select(x =>
    char.IsUpper(x) ? char.ToLower(x) : char.ToUpper(x)).ToArray());', "        string\
    \ result = \"\";\n        foreach (char c in str) {\n            if (char.IsLower(c))\
    \ {\n                result += char.ToUpper(c);\n            } else {\n      \
    \          result += char.ToLower(c);\n            }\n        }\n        return\
    \ result;", '        return new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c)
    : char.ToUpper(c)).ToArray());', '        return new string(str.Select(c => char.IsUpper(c)
    ? char.ToLower(c) : char.ToUpper(c)).ToArray());', '        return str.Select(x
    => char.IsUpper(x) ? char.ToLower(x) : char.ToUpper(x)).ToString();', "      \
    \  string result = \"\";\n        for (int i = 0; i < str.Length; i++) {\n   \
    \         if (char.IsUpper(str[i])) {\n                result += char.ToLower(str[i]);\n\
    \            } else {\n                result += char.ToUpper(str[i]);\n     \
    \       }\n        }\n        return result;", "        string result = \"\";\n\
    \        for (int i = 0; i < str.Length; i++) {\n            if (char.IsUpper(str[i]))\
    \ {\n                result += char.ToLower(str[i]);\n            } else {\n \
    \               result += char.ToUpper(str[i]);\n            }\n        }\n  \
    \      return result;", "        string result = \"\";\n        foreach (char\
    \ c in str) {\n            if (char.IsUpper(c)) {\n                result += char.ToLower(c);\n\
    \            } else {\n                result += char.ToUpper(c);\n          \
    \  }\n        }\n        return result;", "        string result = \"\";\n   \
    \     for (int i = 0; i < str.Length; i++) {\n            if (char.IsUpper(str[i]))\
    \ {\n                result += char.ToLower(str[i]);\n            } else {\n \
    \               result += char.ToUpper(str[i]);\n            }\n        }\n  \
    \      return result;", '        return new string(str.Select(c => char.IsUpper(c)
    ? char.ToLower(c) : char.ToUpper(c)).ToArray());', "        string result = \"\
    \";\n        foreach (char c in str) {\n            if (char.IsUpper(c)) {\n \
    \               result += char.ToLower(c);\n            } else {\n           \
    \     result += char.ToUpper(c);\n            }\n        }\n        return result;",
  "        char[] chars = str.ToCharArray();\n        for (int i = 0; i < chars.Length;\
    \ i++) {\n            char c = chars[i];\n            if (char.IsUpper(c)) {\n\
    \                chars[i] = char.ToLower(c);\n            } else if (char.IsLower(c))\
    \ {\n                chars[i] = char.ToUpper(c);\n            }\n        }\n \
    \       return new string(chars);", '        return new string(str.Select(c =>
    char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());', '        return
    new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  '        return new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  '        return new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  '        return new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  '        return new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  '        return new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  '        return new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  "        char[] chars = str.ToCharArray();\n        for (int i = 0; i < chars.Length;\
    \ i++) {\n            if (Char.IsLower(chars[i])) {\n                chars[i]\
    \ = Char.ToUpper(chars[i]);\n            } else if (Char.IsUpper(chars[i])) {\n\
    \                chars[i] = Char.ToLower(chars[i]);\n            }\n        }\n\
    \        return new string(chars);", '        return new string(str.Select(c =>
    char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());', '        return
    new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  '        return String.Concat(str.Select(c => Char.IsUpper(c) ? Char.ToLower(c)
    : Char.ToUpper(c)));', '        return new string(str.Select(c => char.IsUpper(c)
    ? char.ToLower(c) : char.ToUpper(c)).ToArray());', '        return new string(str.Select(x
    => char.IsUpper(x) ? char.ToLower(x) : char.ToUpper(x)).ToArray());', '        return
    new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  '        return new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  '        return new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  "        string result = \"\";\n        foreach (char c in str) {\n            if\
    \ (char.IsUpper(c)) {\n                result += char.ToLower(c);\n          \
    \  } else {\n                result += char.ToUpper(c);\n            }\n     \
    \   }\n        return result;", "        string result = \"\";\n        foreach\
    \ (char c in str) {\n            if (char.IsLower(c)) {\n                result\
    \ += char.ToUpper(c);\n            } else {\n                result += char.ToLower(c);\n\
    \            }\n        }\n        return result;", '        return str.Select(c
    => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToString();', '        return
    string.Join("", str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)));',
  "        string result = \"\";\n        for (int i = 0; i < str.Length; i++) {\n\
    \            if (Char.IsUpper(str[i])) {\n                result += Char.ToLower(str[i]);\n\
    \            } else {\n                result += Char.ToUpper(str[i]);\n     \
    \       }\n        }\n        return result;", '        return new string(str.Select(c
    => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());', '        return
    new string(str.Select(c => char.IsLower(c) ? char.ToUpper(c) : char.ToLower(c)).ToArray());',
  '        return new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  '        return new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  '        return new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  "        string result = \"\";\n        foreach (char c in str) {\n            if\
    \ (char.IsUpper(c)) {\n                result += char.ToLower(c);\n          \
    \  } else {\n                result += char.ToUpper(c);\n            }\n     \
    \   }\n        return result;", '        return new string(str.Select(c => char.IsLower(c)
    ? char.ToUpper(c) : char.ToLower(c)).ToArray());', '        return new string(str.Select(c
    => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());', "      \
    \  char[] chars = str.ToCharArray();\n        for (int i = 0; i < chars.Length;\
    \ i++) {\n            if (char.IsUpper(chars[i])) {\n                chars[i]\
    \ = char.ToLower(chars[i]);\n            } else if (char.IsLower(chars[i])) {\n\
    \                chars[i] = char.ToUpper(chars[i]);\n            }\n        }\n\
    \        return new string(chars);", '        return new string(str.Select(c =>
    char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());', '        return
    new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  "        string result = \"\";\n        for (int i = 0; i < str.Length; i++) {\n\
    \            if (char.IsUpper(str[i])) {\n                result += char.ToLower(str[i]);\n\
    \            } else {\n                result += char.ToUpper(str[i]);\n     \
    \       }\n        }\n        return result;", "        // TODO: Implement this\
    \ function.\n        return null;", '        return new string(str.Select(c =>
    char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());', '        return
    new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  '        return str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToString();',
  "        string result = \"\";\n        for (int i = 0; i < str.Length; i++) {\n\
    \            if (Char.IsLower(str[i])) {\n                result += Char.ToUpper(str[i]);\n\
    \            } else {\n                result += Char.ToLower(str[i]);\n     \
    \       }\n        }\n        return result;", '        return str.Select(x =>
    char.IsLower(x) ? char.ToUpper(x) : char.ToLower(x)).ToArray().ToString();', " \
    \       // Your code goes here.\n        return \"\";", '        return new string(str.Select(c
    => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());', "      \
    \  string result = \"\";\n        foreach (char c in str) {\n            if (char.IsLower(c))\
    \ {\n                result += char.ToUpper(c);\n            } else {\n      \
    \          result += char.ToLower(c);\n            }\n        }\n        return\
    \ result;", "        string result = \"\";\n        foreach (char c in str) {\n\
    \            if (Char.IsUpper(c)) {\n                result += Char.ToLower(c);\n\
    \            } else {\n                result += Char.ToUpper(c);\n          \
    \  }\n        }\n        return result;", '        return new string(str.Select(c
    => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());', '        return
    new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  "        char[] chars = str.ToCharArray();\n        for (int i = 0; i < chars.Length;\
    \ i++) {\n            if (Char.IsLower(chars[i])) {\n                chars[i]\
    \ = Char.ToUpper(chars[i]);\n            } else if (Char.IsUpper(chars[i])) {\n\
    \                chars[i] = Char.ToLower(chars[i]);\n            }\n        }\n\
    \        return new string(chars);", '        return new string(str.Select(c =>
    char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());', "        string\
    \ result = \"\";\n        for (int i = 0; i < str.Length; i++) {\n           \
    \ if (char.IsUpper(str[i])) {\n                result += char.ToLower(str[i]);\n\
    \            } else {\n                result += char.ToUpper(str[i]);\n     \
    \       }\n        }\n        return result;", '        return new string(str.Select(c
    => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());', "      \
    \  string result = \"\";\n        foreach (char c in str) {\n            if (char.IsUpper(c))\
    \ {\n                result += char.ToLower(c);\n            } else {\n      \
    \          result += char.ToUpper(c);\n            }\n        }\n        return\
    \ result;", "        string result = \"\";\n        foreach (char c in str) {\n\
    \            if (char.IsUpper(c)) {\n                result += char.ToLower(c);\n\
    \            } else {\n                result += char.ToUpper(c);\n          \
    \  }\n        }\n        return result;", '        return new string(str.Select(c
    => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());', '        return
    new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  '        return new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  '        return new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  "        char[] chars = str.ToCharArray();\n        for (int i = 0; i < chars.Length;\
    \ i++) {\n            if (Char.IsLower(chars[i])) {\n                chars[i]\
    \ = Char.ToUpper(chars[i]);\n            } else if (Char.IsUpper(chars[i])) {\n\
    \                chars[i] = Char.ToLower(chars[i]);\n            }\n        }\n\
    \        return new string(chars);", '        return new string(str.Select(c =>
    char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());', '        return
    new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  '        return new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  '        return new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());',
  "        string result = \"\";\n        foreach (char c in str) {\n            if\
    \ (char.IsUpper(c)) {\n                result += char.ToLower(c);\n          \
    \  } else {\n                result += char.ToUpper(c);\n            }\n     \
    \   }\n        return result;", "        char[] chars = str.ToCharArray();\n \
    \       for (int i = 0; i < chars.Length; i++) {\n            if (Char.IsLower(chars[i]))\
    \ {\n                chars[i] = Char.ToUpper(chars[i]);\n            } else if\
    \ (Char.IsUpper(chars[i])) {\n                chars[i] = Char.ToLower(chars[i]);\n\
    \            }\n        }\n        return new string(chars);", '        return
    new string(str.Select(c => char.IsUpper(c) ? char.ToLower(c) : char.ToUpper(c)).ToArray());']
stop_tokens:
- "\n    }\n"

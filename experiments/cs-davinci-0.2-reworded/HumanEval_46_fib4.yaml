name: HumanEval_46_fib4
language: cs
prompt: "using System;\nusing System.Numerics;\nusing System.Diagnostics;\nusing System.Collections.Generic;\n\
  using System.Linq;\nusing System.Text;\nusing System.Security.Cryptography;\nclass\
  \ Problem {\n    // The Fib4 number sequence is a sequence similar to the Fibbonacci\
  \ sequnece that's defined as follows:\n    // fib4(0) -> 0\n    // fib4(1) -> 0\n\
  \    // fib4(2) -> 2\n    // fib4(3) -> 0\n    // fib4(n) -> fib4(n-1) + fib4(n-2)\
  \ + fib4(n-3) + fib4(n-4).\n    // Please write a function to efficiently compute\
  \ the n-th element of the fib4 number sequence.  Do not use recursion.\n    // >>>\
  \ Fib4((5L))\n    // (4L)\n    // >>> Fib4((6L))\n    // (8L)\n    // >>> Fib4((7L))\n\
  \    // (14L)\n    public static long Fib4(long n) {\n"
tests: "    }\n    public static void Main(string[] args) {\n    Debug.Assert(Fib4((5L))\
  \ == (4L));\n    Debug.Assert(Fib4((8L)) == (28L));\n    Debug.Assert(Fib4((10L))\
  \ == (104L));\n    Debug.Assert(Fib4((12L)) == (386L));\n    }\n\n}\n"
completions: ["        // TODO: Implement this function.\n        return 0;", "  \
    \      long[] fib4 = new long[4];\n        fib4[0] = 0;\n        fib4[1] = 0;\n\
    \        fib4[2] = 2;\n        fib4[3] = 0;\n        if (n < 4) {\n          \
    \  return fib4[n];\n        }\n        long[] fib4_new = new long[4];\n      \
    \  for (long i = 4; i <= n; i++) {\n            fib4_new[0] = fib4[1] + fib4[2]\
    \ + fib4[3];\n            fib4_new[1] = fib4[0];\n            fib4_new[2] = fib4[1];\n\
    \            fib4_new[3] = fib4[2];\n            fib4 = fib4_new;\n        }\n\
    \        return fib4[0];", "        long[] fib4 = new long[4];\n        fib4[0]\
    \ = 0;\n        fib4[1] = 0;\n        fib4[2] = 2;\n        fib4[3] = 0;\n   \
    \     if (n <= 3) {\n            return fib4[n];\n        }\n        long[] fib4_n\
    \ = new long[4];\n        fib4_n[0] = 1;\n        fib4_n[1] = 0;\n        fib4_n[2]\
    \ = 0;\n        fib4_n[3] = 0;\n        for (long i = 4; i <= n; i++) {\n    \
    \        long[] fib4_n_1 = new long[4];\n            fib4_n_1[0] = fib4_n[0];\n\
    \            fib4_n_1[1] = fib4_n[1];\n            fib4_n_1[2] = fib4_n[2];\n\
    \            fib4_n_1[3] = fib4_n[3];\n            fib4_n[0] = fib4_n_1[0] + fib4_n_1[1]\
    \ + fib4_n_1[2] + fib4_n_1[3];\n            fib4_n[1] = fib4_n_1[0];\n       \
    \     fib4_n[2] = fib4_n_1[1];\n            fib4_n[3] = fib4_n_1[2];\n       \
    \ }\n        return fib4_n[0];", "        // TODO: Implement this function.\n\
    \        return 0;", "        long[] fib = new long[4];\n        fib[0] = 0;\n\
    \        fib[1] = 0;\n        fib[2] = 2;\n        fib[3] = 0;\n        for (int\
    \ i = 4; i <= n; i++) {\n            long temp = fib[0] + fib[1] + fib[2] + fib[3];\n\
    \            fib[0] = fib[1];\n            fib[1] = fib[2];\n            fib[2]\
    \ = fib[3];\n            fib[3] = temp;\n        }\n        return fib[3];", " \
    \       if (n < 0) throw new ArgumentOutOfRangeException();\n        if (n ==\
    \ 0) return 0;\n        if (n == 1) return 0;\n        if (n == 2) return 2;\n\
    \        if (n == 3) return 0;\n        long a = 0;\n        long b = 0;\n   \
    \     long c = 2;\n        long d = 0;\n        for (long i = 4; i <= n; i++)\
    \ {\n            long e = a + b + c + d;\n            a = b;\n            b =\
    \ c;\n            c = d;\n            d = e;\n        }\n        return a + b\
    \ + c + d;", "        if (n == 0) return 0;\n        if (n == 1) return 0;\n \
    \       if (n == 2) return 2;\n        if (n == 3) return 0;\n        long a =\
    \ 0;\n        long b = 0;\n        long c = 2;\n        long d = 0;\n        for\
    \ (long i = 4; i <= n; i++) {\n            long temp = a + b + c + d;\n      \
    \      a = b;\n            b = c;\n            c = d;\n            d = temp;\n\
    \        }\n        return a + b + c + d;", "        if (n == 0) return 0;\n \
    \       if (n == 1) return 0;\n        if (n == 2) return 2;\n        if (n ==\
    \ 3) return 0;\n        long a = 0;\n        long b = 0;\n        long c = 2;\n\
    \        long d = 0;\n        for (long i = 4; i <= n; i++) {\n            long\
    \ e = a + b + c + d;\n            a = b;\n            b = c;\n            c =\
    \ d;\n            d = e;\n        }\n        return a + b + c + d;", "       \
    \ // TODO: Implement this function.\n        return 0;", "        long a = 0;\n\
    \        long b = 0;\n        long c = 2;\n        long d = 0;\n        long e\
    \ = 0;\n        for (int i = 3; i <= n; i++) {\n            e = a + b + c + d;\n\
    \            a = b;\n            b = c;\n            c = d;\n            d = e;\n\
    \        }\n        return e;", "        long a = 0;\n        long b = 0;\n  \
    \      long c = 2;\n        long d = 0;\n        long e = 0;\n        long f =\
    \ 0;\n        long g = 0;\n        long h = 0;\n        long i = 0;\n        long\
    \ j = 0;\n        long k = 0;\n        long l = 0;\n        long m = 0;\n    \
    \    long o = 0;\n        long p = 0;\n        long q = 0;\n        long r = 0;\n\
    \        long s = 0;\n        long t = 0;\n        long u = 0;\n        long v\
    \ = 0;\n        long w = 0;\n        long x = 0;\n        long y = 0;\n      \
    \  long z = 0;\n        long aa = 0;\n        long ab = 0;\n        long ac =\
    \ 0;\n        long ad = 0;\n        long ae = 0;\n        long af = 0;\n     \
    \   long ag = 0;\n        long ah = 0;\n        long ai = 0;\n        long aj\
    \ = 0;\n        long ak = 0;\n        long al = 0;\n        long am = 0;\n   \
    \     long an = 0;\n        long ao = 0;\n        long ap = 0;\n        long aq\
    \ = 0;\n        long ar = 0;\n        long as = 0;\n        long at = 0;\n   \
    \     long au = 0;\n        long av = 0;\n        long aw = 0;\n        long ax\
    \ = 0;\n        long ay = 0;\n        long az = 0;\n        long ba = 0;\n   \
    \     long bb = 0;\n        long bc = 0;\n        long bd = 0;\n        long be\
    \ = 0;\n        long bf = 0;\n        long bg = 0;\n        long bh = 0;\n   \
    \     long bi = 0;\n        long bj = 0;\n        long bk = 0;\n        long bl\
    \ = 0;\n        long bm = 0;\n        long bn = 0;\n        long bo = 0;\n   \
    \     long bp = 0;\n        long bq = 0;\n        long br = 0;\n        long bs\
    \ = 0;\n        long b", "        long[] fibs = new long[4];\n        fibs[0]\
    \ = 0;\n        fibs[1] = 0;\n        fibs[2] = 2;\n        fibs[3] = 0;\n   \
    \     for (int i = 4; i <= n; i++) {\n            long fib = fibs[0] + fibs[1]\
    \ + fibs[2] + fibs[3];\n            fibs[0] = fibs[1];\n            fibs[1] =\
    \ fibs[2];\n            fibs[2] = fibs[3];\n            fibs[3] = fib;\n     \
    \   }\n        return fibs[3];", "        long[] fib4 = new long[4];\n       \
    \ fib4[0] = 0;\n        fib4[1] = 0;\n        fib4[2] = 2;\n        fib4[3] =\
    \ 0;\n        if (n < 4) {\n            return fib4[n];\n        }\n        long[]\
    \ fib4_n = new long[4];\n        fib4_n[0] = 0;\n        fib4_n[1] = 0;\n    \
    \    fib4_n[2] = 2;\n        fib4_n[3] = 0;\n        long[] fib4_n_1 = new long[4];\n\
    \        fib4_n_1[0] = 0;\n        fib4_n_1[1] = 0;\n        fib4_n_1[2] = 2;\n\
    \        fib4_n_1[3] = 0;\n        long[] fib4_n_2 = new long[4];\n        fib4_n_2[0]\
    \ = 0;\n        fib4_n_2[1] = 0;\n        fib4_n_2[2] = 0;\n        fib4_n_2[3]\
    \ = 0;\n        long[] fib4_n_3 = new long[4];\n        fib4_n_3[0] = 0;\n   \
    \     fib4_n_3[1] = 0;\n        fib4_n_3[2] = 0;\n        fib4_n_3[3] = 0;\n \
    \       long[] fib4_n_4 = new long[4];\n        fib4_n_4[0] = 0;\n        fib4_n_4[1]\
    \ = 0;\n        fib4_n_4[2] = 0;\n        fib4_n_4[3] = 0;\n        long[] fib4_n_5\
    \ = new long[4];\n        fib4_n_5[0] = 0;\n        fib4_n_5[1] = 0;\n       \
    \ fib4_n_5[2] = 0;\n        fib4_n_5[3] = 0;\n        long[] fib4_n_6 = new long[4];\n\
    \       ", "        long[] fib = new long[4];\n        fib[0] = 0;\n        fib[1]\
    \ = 0;\n        fib[2] = 2;\n        fib[3] = 0;\n        long[] fib4 = new long[4];\n\
    \        fib4[0] = 1;\n        fib4[1] = 1;\n        fib4[2] = 1;\n        fib4[3]\
    \ = 1;\n        long[] result = new long[4];\n        result[0] = 0;\n       \
    \ result[1] = 0;\n        result[2] = 2;\n        result[3] = 0;\n        long[]\
    \ temp = new long[4];\n        temp[0] = 0;\n        temp[1] = 0;\n        temp[2]\
    \ = 2;\n        temp[3] = 0;\n        long[] temp2 = new long[4];\n        temp2[0]\
    \ = 0;\n        temp2[1] = 0;\n        temp2[2] = 2;\n        temp2[3] = 0;\n\
    \        long[] temp3 = new long[4];\n        temp3[0] = 0;\n        temp3[1]\
    \ = 0;\n        temp3[2] = 2;\n        temp3[3] = 0;\n        long[] temp4 = new\
    \ long[4];\n        temp4[0] = 0;\n        temp4[1] = 0;\n        temp4[2] = 2;\n\
    \        temp4[3] = 0;\n        long[] temp5 = new long[4];\n        temp5[0]\
    \ = 0;\n        temp5[1] = 0;\n        temp5[2] = 2;\n        temp5[3] = 0;\n\
    \        long[] temp6 = new long[4];\n        temp6[0] = 0;\n        temp6[1]\
    \ = 0;\n        temp6[2] = 2;\n        temp6[3] = 0;\n        long[] temp7 = new\
    \ long[4];\n        temp7[0] = 0;\n        temp7[1] = 0;\n        temp7[2] = 2;\n\
    \        temp7[3] = 0;\n        long[] temp8 =", "        // TODO: Implement this\
    \ function.\n        return 0;", "        // Your code goes here.\n        return\
    \ 0;", "        if (n == 0) return 0;\n        if (n == 1) return 0;\n       \
    \ if (n == 2) return 2;\n        if (n == 3) return 0;\n        long a = 0;\n\
    \        long b = 0;\n        long c = 2;\n        long d = 0;\n        long e\
    \ = 0;\n        for (long i = 4; i <= n; i++) {\n            e = a + b + c + d;\n\
    \            a = b;\n            b = c;\n            c = d;\n            d = e;\n\
    \        }\n        return e;", "        // TODO: Implement this function.\n \
    \       return 0;", "        // TODO: Implement this function.\n        return\
    \ 0;", "        long[] fib4 = new long[4];\n        fib4[0] = 0;\n        fib4[1]\
    \ = 0;\n        fib4[2] = 2;\n        fib4[3] = 0;\n        if (n < 4) {\n   \
    \         return fib4[n];\n        }\n        for (int i = 4; i <= n; i++) {\n\
    \            long temp = fib4[0] + fib4[1] + fib4[2] + fib4[3];\n            fib4[0]\
    \ = fib4[1];\n            fib4[1] = fib4[2];\n            fib4[2] = fib4[3];\n\
    \            fib4[3] = temp;\n        }\n        return fib4[3];"]
stop_tokens:
- "\n    }\n"

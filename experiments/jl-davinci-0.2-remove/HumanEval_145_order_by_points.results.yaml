language: jl
name: HumanEval_145_order_by_points
results:
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    return sort(nums,\
    \ by=x->(sum(digits(x)), x))\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ order_by_points;\n\t@test(candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11])\n\t@test(candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([1,\
    \ -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t\
    @test(candidate([0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpkb6jaouw.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmpkb6jaouw.jl:17\n  Expression: candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n   Evaluated: [-12, -11, -1, 1,\
    \ 11] == [-1, -11, 1, -12, 11]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkb6jaouw.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkb6jaouw.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpkb6jaouw.jl:18\n  Expression: candidate([1234, 423, 463, 145,\
    \ 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n   Evaluated: [0, 2, 3, 6, 53, 423, 423,\
    \ 423, 37, 46, 145, 1234, 56, 463, 3457] == [0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkb6jaouw.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkb6jaouw.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpkb6jaouw.jl:20\n  Expression: candidate([1, -11, -32, 43,\
    \ 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54]\n   Evaluated: [-98, -32,\
    \ -3, -11, 1, 2, 43, 54] == [-3, -32, -98, -11, 1, 2, 43, 54]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkb6jaouw.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkb6jaouw.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     3      6\n"
  timestamp: 1659748241
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    \"\"\"\n    >>> order_by_points([13,\
    \ 20, 18, 34])\n    [13, 34, 20, 18]\n    >>> order_by_points([9, 99, 999])\n\
    \    [9, 99, 999]\n    >>> order_by_points([12, 30, 34, 13, 9, 99, 999])\n   \
    \ [9, 12, 13, 30, 34, 99, 999]\n    \"\"\"\n    # your code here\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423, 463, 145,\
    \ 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([])) ==\
    \ Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3]) ==\
    \ [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpwlunl5k2.jl:22

    '
  stdout: "test set: Error During Test at /tmp/tmpwlunl5k2.jl:25\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type String to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpwlunl5k2.jl:10\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpwlunl5k2.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpwlunl5k2.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpwlunl5k2.jl:26\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type String to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpwlunl5k2.jl:10\n   [2] macro expansion\n"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    \    return nums\nend\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\
    \t@test(candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpdim3_lxt.jl:15

    '
  stdout: "test set: Test Failed at /tmp/tmpdim3_lxt.jl:18\n  Expression: candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n   Evaluated: [1, 11, -1, -11,\
    \ -12] == [-1, -11, 1, -12, 11]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdim3_lxt.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdim3_lxt.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpdim3_lxt.jl:19\n  Expression: candidate([1234, 423, 463, 145,\
    \ 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n   Evaluated: [1234, 423, 463, 145, 2, 423,\
    \ 423, 53, 6, 37, 3457, 3, 56, 0, 46] == [0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdim3_lxt.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdim3_lxt.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpdim3_lxt.jl:21\n  Expression: candidate([1, -11, -32, 43,\
    \ 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54]\n   Evaluated: [1, -11,\
    \ -32, 43, 54, -98, 2, -3] == [-3, -32, -98, -11, 1, 2, 43, 54]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdim3_lxt.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdim3_lxt.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpdim3_lxt.jl:22\n  Expression: candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n   Evaluated: [1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\nStacktrace:\n\
    \ [1] macro expa"
  timestamp: 1659748240
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    \"\"\"\n    >>> order_by_points([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10])\n    [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n    >>> order_by_points([2,\
    \ 34, 5, 9, 8, 90, 100])\n    [2, 5, 9, 8, 34, 90, 100]\n    >>> order_by_points([12,\
    \ 121])\n    [12, 121]\n    >>> order_by_points([])\n    []\n    \"\"\"\n    #\
    \ your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\
    \t@test(candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp4etaj56t.jl:24

    '
  stdout: "test set: Error During Test at /tmp/tmp4etaj56t.jl:27\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type String to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmp4etaj56t.jl:10\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp4etaj56t.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp4etaj56t.jl:26\ntest set:\
    \ Error During Test at /tmp/tmp4etaj56t.jl:28\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type String to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmp4etaj56t.jl:10\n   [2] macro expansion\n"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    \"\"\"\n    >>> order_by_points([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10])\n    [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n    >>> order_by_points([2,\
    \ 34, 1, 7, 8, 9])\n    [2, 1, 7, 8, 9, 34]\n    >>> order_by_points([])\n   \
    \ []\n    >>> order_by_points([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14,\
    \ 15, 16, 17, 18, 19, 20])\n    [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14,\
    \ 15, 16, 17, 18, 19, 20]\n    >>> order_by_points([1, 2, 3, 4, 5, 6, 7, 8, 9,\
    \ 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28,\
    \ 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47,\
    \ 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66,\
    \ 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85,\
    \ 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100])\n    [1, 2, 3,\
    \ 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24,\
    \ 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43,\
    \ 44, 45, 46, 47, 48, 49, 50, 51, 52,\nusing Test\n\n@testset begin\n\ncandidate\
    \ = order_by_points;\n\t@test(candidate([1, 11, -1, -11, -12]) == [-1, -11, 1,\
    \ -12, 11])\n\t@test(candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([1,\
    \ -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t\
    @test(candidate([0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpapwk6onj.jl:1\nin expression starting at /tmp/tmpapwk6onj.jl:1\n"
  stdout: ''
  timestamp: 1659748239
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    \"\"\"\n    >>> order_by_points([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10])\n    [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n    >>> order_by_points([2,\
    \ 34, 5, 9, 8, 90, 100])\n    [2, 5, 8, 9, 34, 90, 100]\n    >>> order_by_points([1,\
    \ 23, 2, 18, 10])\n    [1, 2, 10, 18, 23]\n    >>> order_by_points([1, 2, 3, 4,\
    \ 5, 6, 7, 8, 9, 10])\n    [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n    >>> order_by_points([2,\
    \ 34, 5, 9, 8, 90, 100])\n    [2, 5, 8, 9, 34, 90, 100]\n    >>> order_by_points([1,\
    \ 23, 2, 18, 10])\n    [1, 2, 10, 18, 23]\n    \"\"\"\n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmplprwlj3j.jl:28

    '
  stdout: "test set: Error During Test at /tmp/tmplprwlj3j.jl:31\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type String to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmplprwlj3j.jl:10\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmplprwlj3j.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmplprwlj3j.jl:30\ntest set:\
    \ Error During Test at /tmp/tmplprwlj3j.jl:32\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type String to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmplprwlj3j.jl:10\n   [2] macro expansion\n"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    \"\"\"\n    >>> order_by_points([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10])\n    [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n    >>> order_by_points([2,\
    \ 34, 1, 7, 8, 9])\n    [2, 1, 7, 8, 9, 34]\n    >>> order_by_points([12, 1234,\
    \ 43, 23, 2, 6, 8342])\n    [12, 43, 23, 2, 6, 1234, 8342]\n    >>> order_by_points([12,\
    \ 1234, 43, 23, 2, 6, 8342, 2345, 324, 123, 5, 6, 7, 8, 9, 12, 43, 67, 5, 434,\
    \ 54, 546, 548, 60])\n    [5, 6, 7, 9, 12, 23, 43, 67, 123, 324, 546, 548, 1234,\
    \ 2345, 434, 54, 60, 8342]\n    \"\"\"\n    # YOUR CODE HERE\n    #raise NotImplementedError()\n\
    \    #return nums\n    #return sort(nums, by=x->sum(digits(x)))\n    #return sort(nums,\
    \ by=x->sum(digits(x)))\n    #return sort(nums, by=x->sum(digits(x)))\n    #return\
    \ sort(nums, by=x->sum(digits(x)))\n    #return sort(nums, by=x->sum(digits(x)))\n\
    \    #return sort(nums, by=x->sum(digits(x)))\n    #return sort(nums, by=x->sum(digits(x)))\n\
    \    #return sort(nums, by=x->sum(digits(x)))\n    #return sort(nums, by=x->sum(digits(x)))\n\
    \    #return sort(nums, by=x->sum(digits(x)))\n    #return sort(nums, by=x->sum(digits(x)))\n\
    \    #return sort(nums, by=x->sum(digits(x)))\n    #return\nusing Test\n\n@testset\
    \ begin\n\ncandidate = order_by_points;\n\t@test(candidate([1, 11, -1, -11, -12])\
    \ == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1,\
    \ 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10,\
    \ 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0, 6, 6, -76, -21, 23, 4])\
    \ == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpl89p38cm.jl:9\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpl89p38cm.jl:1\n\
    in expression starting at /tmp/tmpl89p38cm.jl:1\n"
  stdout: ''
  timestamp: 1659748239
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    \"\"\"\n    >>> order_by_points([51,\
    \ 32, 43])\n    [32, 43, 51]\n    >>> order_by_points([])\n    []\n    >>> order_by_points([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10])\n    [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n    \"\"\"\
    \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\
    \t@test(candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpvq1ixpwh.jl:22

    '
  stdout: "test set: Error During Test at /tmp/tmpvq1ixpwh.jl:25\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type String to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpvq1ixpwh.jl:10\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpvq1ixpwh.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpvq1ixpwh.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpvq1ixpwh.jl:26\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type String to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpvq1ixpwh.jl:10\n   [2] macro expansion\n"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    \"\"\"\n    >>> order_by_points([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10])\n    [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n    >>> order_by_points([2,\
    \ 34, 1, 7, 8, 9])\n    [2, 1, 7, 8, 9, 34]\n    >>> order_by_points([12, 1234,\
    \ 43, 16, 1, 0])\n    [1, 0, 16, 12, 43, 1234]\n    >>> order_by_points([12, 1234,\
    \ 43, 16, 1, 0, 1234])\n    [1, 0, 16, 12, 43, 1234, 1234]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    # YOUR CODE HERE\n    return nums\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423, 463, 145,\
    \ 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([])) ==\
    \ Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3]) ==\
    \ [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpquk33zjr.jl:27

    '
  stdout: "test set: Test Failed at /tmp/tmpquk33zjr.jl:30\n  Expression: candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n   Evaluated: [1, 11, -1, -11,\
    \ -12] == [-1, -11, 1, -12, 11]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpquk33zjr.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpquk33zjr.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpquk33zjr.jl:31\n  Expression: candidate([1234, 423, 463, 145,\
    \ 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n   Evaluated: [1234, 423, 463, 145, 2, 423,\
    \ 423, 53, 6, 37, 3457, 3, 56, 0, 46] == [0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpquk33zjr.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpquk33zjr.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpquk33zjr.jl:33\n  Expression: candidate([1, -11, -32, 43,\
    \ 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54]\n   Evaluated: [1, -11,\
    \ -32, 43, 54, -98, 2, -3] == [-3, -32, -98, -11, 1, 2, 43, 54]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpquk33zjr.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpquk33zjr.jl:29\ntest set: Test\
    \ Failed at /tmp/tmpquk33zjr.jl:34\n  Expression: candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n   Evaluated: [1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\nStacktrace:\n\
    \ [1] macro expa"
  timestamp: 1659748240
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    \"\"\"\n    >>> order_by_points([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10])\n    [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n    >>> order_by_points([2,\
    \ 34, 1, 7, 8, 9])\n    [2, 1, 7, 8, 9, 34]\n    >>> order_by_points([12, 1234,\
    \ 43, 16, 1, 0])\n    [1, 0, 16, 12, 43, 1234]\n    >>> order_by_points([12, 1234,\
    \ 43, 16, 1, 0, 1234])\n    [1, 0, 16, 12, 43, 1234, 1234]\n    >>> order_by_points([5,\
    \ 9, 300, 3, 1, 0, 0, 1, 9, 0, 300, 9])\n    [1, 1, 0, 0, 0, 3, 5, 9, 9, 9, 300,\
    \ 300]\n    \"\"\"\n    # your code here\nend\nusing Test\n\n@testset begin\n\n\
    candidate = order_by_points;\n\t@test(candidate([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11])\n\t@test(candidate([1234, 423, 463, 145, 2, 423, 423, 53,\
    \ 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37,\
    \ 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1,\
    \ 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10,\
    \ 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0, 6, 6, -76, -21, 23, 4])\
    \ == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpgqhcu1ix.jl:26

    '
  stdout: "test set: Error During Test at /tmp/tmpgqhcu1ix.jl:29\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type String to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpgqhcu1ix.jl:10\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgqhcu1ix.jl:29 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpgqhcu1ix.jl:28\ntest set:\
    \ Error During Test at /tmp/tmpgqhcu1ix.jl:30\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type String to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpgqhcu1ix.jl:10\n   [2] macro expansion\n"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    \"\"\"\n    >>> order_by_points([51,\
    \ 32, 43])\n    [32, 43, 51]\n    >>> order_by_points([])\n    []\n    >>> order_by_points([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10])\n    [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n    \"\"\"\
    \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\
    \t@test(candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpvq1ixpwh.jl:22

    '
  stdout: "test set: Error During Test at /tmp/tmpvq1ixpwh.jl:25\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type String to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpvq1ixpwh.jl:10\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpvq1ixpwh.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpvq1ixpwh.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpvq1ixpwh.jl:26\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type String to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpvq1ixpwh.jl:10\n   [2] macro expansion\n"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    \"\"\"\n    >>> order_by_points([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10])\n    [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n    >>> order_by_points([2,\
    \ 34, 1, 7, 8, 9])\n    [2, 1, 7, 8, 9, 34]\n    >>> order_by_points([12, 1234,\
    \ 43, 16, 1, 0])\n    [1, 0, 16, 12, 43, 1234]\n    >>> order_by_points([12, 1234,\
    \ 43, 16, 1, 0, 1234])\n    [1, 0, 16, 12, 43, 1234, 1234]\n    >>> order_by_points([5,\
    \ 9, 300, 1])\n    [1, 5, 9, 300]\n    \"\"\"\n    # YOUR CODE HERE\n    #raise\
    \ NotImplementedError()\n    #return nums\n    #return sort(nums, by=x->sum(digits(x)))\n\
    \    return sort(nums, by=x->(sum(digits(x)), x))\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = order_by_points;\n\t@test(candidate([1, 11, -1, -11, -12])\
    \ == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423, 463, 145, 2, 423, 423,\
    \ 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145,\
    \ 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1,\
    \ 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10,\
    \ 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0, 6, 6, -76, -21, 23, 4])\
    \ == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpe0i0m0mg.jl:30

    '
  stdout: "test set: Test Failed at /tmp/tmpe0i0m0mg.jl:33\n  Expression: candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n   Evaluated: [-12, -11, -1, 1,\
    \ 11] == [-1, -11, 1, -12, 11]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpe0i0m0mg.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpe0i0m0mg.jl:32\ntest set: Test\
    \ Failed at /tmp/tmpe0i0m0mg.jl:34\n  Expression: candidate([1234, 423, 463, 145,\
    \ 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n   Evaluated: [0, 2, 3, 6, 53, 423, 423,\
    \ 423, 37, 46, 145, 1234, 56, 463, 3457] == [0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpe0i0m0mg.jl:34 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpe0i0m0mg.jl:32\ntest set: Test\
    \ Failed at /tmp/tmpe0i0m0mg.jl:36\n  Expression: candidate([1, -11, -32, 43,\
    \ 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54]\n   Evaluated: [-98, -32,\
    \ -3, -11, 1, 2, 43, 54] == [-3, -32, -98, -11, 1, 2, 43, 54]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpe0i0m0mg.jl:36 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpe0i0m0mg.jl:32\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     3      6\n"
  timestamp: 1659748240
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    \"\"\"\n    >>> order_by_points([51,\
    \ 32, 43])\n    [32, 43, 51]\n    >>> order_by_points([])\n    []\n    >>> order_by_points([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10])\n    [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n    \"\"\"\
    \n    # YOUR CODE HERE\n    return nums\nend\nusing Test\n\n@testset begin\n\n\
    candidate = order_by_points;\n\t@test(candidate([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11])\n\t@test(candidate([1234, 423, 463, 145, 2, 423, 423, 53,\
    \ 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37,\
    \ 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1,\
    \ 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10,\
    \ 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0, 6, 6, -76, -21, 23, 4])\
    \ == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpncryce9u.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmpncryce9u.jl:26\n  Expression: candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n   Evaluated: [1, 11, -1, -11,\
    \ -12] == [-1, -11, 1, -12, 11]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpncryce9u.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpncryce9u.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpncryce9u.jl:27\n  Expression: candidate([1234, 423, 463, 145,\
    \ 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n   Evaluated: [1234, 423, 463, 145, 2, 423,\
    \ 423, 53, 6, 37, 3457, 3, 56, 0, 46] == [0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpncryce9u.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpncryce9u.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpncryce9u.jl:29\n  Expression: candidate([1, -11, -32, 43,\
    \ 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54]\n   Evaluated: [1, -11,\
    \ -32, 43, 54, -98, 2, -3] == [-3, -32, -98, -11, 1, 2, 43, 54]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpncryce9u.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpncryce9u.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpncryce9u.jl:30\n  Expression: candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n   Evaluated: [1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\nStacktrace:\n\
    \ [1] macro expa"
  timestamp: 1659748240
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    \"\"\"\n    >>> order_by_points([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10])\n    [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n    >>> order_by_points([2,\
    \ 34, 5, 9, 8, 90, 100])\n    [2, 5, 9, 8, 34, 90, 100]\n    >>> order_by_points([1,\
    \ 23, 456, 78, 9, 0])\n    [0, 1, 9, 23, 78, 456]\n    \"\"\"\n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t\
    @test(candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpdh40k9td.jl:22

    '
  stdout: "test set: Error During Test at /tmp/tmpdh40k9td.jl:25\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type String to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpdh40k9td.jl:10\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpdh40k9td.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpdh40k9td.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpdh40k9td.jl:26\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type String to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpdh40k9td.jl:10\n   [2] macro expansion\n"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    \"\"\"\n    >>> order_by_points([51,\
    \ 32, 43])\n    [32, 43, 51]\n    >>> order_by_points([])\n    []\n    >>> order_by_points([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10])\n    [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n    \"\"\"\
    \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\
    \t@test(candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpvq1ixpwh.jl:22

    '
  stdout: "test set: Error During Test at /tmp/tmpvq1ixpwh.jl:25\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type String to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpvq1ixpwh.jl:10\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpvq1ixpwh.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpvq1ixpwh.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpvq1ixpwh.jl:26\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type String to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpvq1ixpwh.jl:10\n   [2] macro expansion\n"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    \"\"\"\n    >>> order_by_points([51,\
    \ 32, 43])\n    [32, 43, 51]\n    >>> order_by_points([])\n    []\n    >>> order_by_points([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10])\n    [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n    \"\"\"\
    \n    # YOUR CODE HERE\n    return nums\nend\nusing Test\n\n@testset begin\n\n\
    candidate = order_by_points;\n\t@test(candidate([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11])\n\t@test(candidate([1234, 423, 463, 145, 2, 423, 423, 53,\
    \ 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37,\
    \ 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1,\
    \ 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10,\
    \ 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0, 6, 6, -76, -21, 23, 4])\
    \ == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpncryce9u.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmpncryce9u.jl:26\n  Expression: candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n   Evaluated: [1, 11, -1, -11,\
    \ -12] == [-1, -11, 1, -12, 11]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpncryce9u.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpncryce9u.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpncryce9u.jl:27\n  Expression: candidate([1234, 423, 463, 145,\
    \ 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n   Evaluated: [1234, 423, 463, 145, 2, 423,\
    \ 423, 53, 6, 37, 3457, 3, 56, 0, 46] == [0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpncryce9u.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpncryce9u.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpncryce9u.jl:29\n  Expression: candidate([1, -11, -32, 43,\
    \ 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54]\n   Evaluated: [1, -11,\
    \ -32, 43, 54, -98, 2, -3] == [-3, -32, -98, -11, 1, 2, 43, 54]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpncryce9u.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpncryce9u.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpncryce9u.jl:30\n  Expression: candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n   Evaluated: [1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\nStacktrace:\n\
    \ [1] macro expa"
  timestamp: 1659748240
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    \    return nums\nend\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\
    \t@test(candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpdim3_lxt.jl:15

    '
  stdout: "test set: Test Failed at /tmp/tmpdim3_lxt.jl:18\n  Expression: candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n   Evaluated: [1, 11, -1, -11,\
    \ -12] == [-1, -11, 1, -12, 11]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdim3_lxt.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdim3_lxt.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpdim3_lxt.jl:19\n  Expression: candidate([1234, 423, 463, 145,\
    \ 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n   Evaluated: [1234, 423, 463, 145, 2, 423,\
    \ 423, 53, 6, 37, 3457, 3, 56, 0, 46] == [0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdim3_lxt.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdim3_lxt.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpdim3_lxt.jl:21\n  Expression: candidate([1, -11, -32, 43,\
    \ 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54]\n   Evaluated: [1, -11,\
    \ -32, 43, 54, -98, 2, -3] == [-3, -32, -98, -11, 1, 2, 43, 54]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdim3_lxt.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdim3_lxt.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpdim3_lxt.jl:22\n  Expression: candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n   Evaluated: [1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\nStacktrace:\n\
    \ [1] macro expa"
  timestamp: 1659748240
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    \"\"\"\n    >>> order_by_points([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10])\n    [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n    >>> order_by_points([2,\
    \ 34, 5, 9, 8, 90, 100])\n    [2, 5, 9, 8, 34, 90, 100]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    # your code here\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = order_by_points;\n\t@test(candidate([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11])\n\t@test(candidate([1234, 423, 463, 145, 2, 423, 423, 53,\
    \ 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37,\
    \ 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1,\
    \ 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10,\
    \ 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0, 6, 6, -76, -21, 23, 4])\
    \ == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmp0dtrd0by.jl:22

    '
  stdout: "test set: Error During Test at /tmp/tmp0dtrd0by.jl:25\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type String to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmp0dtrd0by.jl:10\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp0dtrd0by.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp0dtrd0by.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp0dtrd0by.jl:26\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type String to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmp0dtrd0by.jl:10\n   [2] macro expansion\n"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    return sort(nums,\
    \ by=x->sum(digits(x)))\nend\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\
    \t@test(candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmprgvna7b3.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmprgvna7b3.jl:17\n  Expression: candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n   Evaluated: [-12, -11, -1, 1,\
    \ 11] == [-1, -11, 1, -12, 11]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprgvna7b3.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprgvna7b3.jl:16\ntest set: Test\
    \ Failed at /tmp/tmprgvna7b3.jl:20\n  Expression: candidate([1, -11, -32, 43,\
    \ 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54]\n   Evaluated: [-98, -32,\
    \ -3, -11, 1, 2, 43, 54] == [-3, -32, -98, -11, 1, 2, 43, 54]\nStacktrace:\n [1]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprgvna7b3.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprgvna7b3.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    4     2      6\n"
  timestamp: 1659748240
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    \    return nums\nend\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\
    \t@test(candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpdim3_lxt.jl:15

    '
  stdout: "test set: Test Failed at /tmp/tmpdim3_lxt.jl:18\n  Expression: candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n   Evaluated: [1, 11, -1, -11,\
    \ -12] == [-1, -11, 1, -12, 11]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdim3_lxt.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdim3_lxt.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpdim3_lxt.jl:19\n  Expression: candidate([1234, 423, 463, 145,\
    \ 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n   Evaluated: [1234, 423, 463, 145, 2, 423,\
    \ 423, 53, 6, 37, 3457, 3, 56, 0, 46] == [0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdim3_lxt.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdim3_lxt.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpdim3_lxt.jl:21\n  Expression: candidate([1, -11, -32, 43,\
    \ 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54]\n   Evaluated: [1, -11,\
    \ -32, 43, 54, -98, 2, -3] == [-3, -32, -98, -11, 1, 2, 43, 54]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdim3_lxt.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdim3_lxt.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpdim3_lxt.jl:22\n  Expression: candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n   Evaluated: [1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\nStacktrace:\n\
    \ [1] macro expa"
  timestamp: 1659748240
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    \"\"\"\n    >>> order_by_points([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10])\n    [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n    >>> order_by_points([2,\
    \ 4, 6, 8, 10, 9, 7, 5, 3, 1])\n    [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n    >>> order_by_points([10,\
    \ 9, 8, 7, 6, 5, 4, 3, 2, 1])\n    [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n    >>> order_by_points([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11])\n    [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]\n\
    \    >>> order_by_points([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12])\n    [1, 2,\
    \ 3, 4, 5, 6, 7, 8, 9, 10, 11, 12]\n    >>> order_by_points([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11, 12, 13])\n    [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13]\n\
    \    >>> order_by_points([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14])\n  \
    \  [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14]\n    >>> order_by_points([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15])\n    [1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10, 11, 12, 13, 14, 15]\n    >>> order_by_points([1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10, 11, 12,\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\
    \t@test(candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp0zsvaf5s.jl:1\nin expression starting at /tmp/tmp0zsvaf5s.jl:1\n"
  stdout: ''
  timestamp: 1659748239
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    \"\"\"\n    >>> order_by_points([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10])\n    [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n    >>> order_by_points([2,\
    \ 34, 5, 9, 8, 90, 100])\n    [2, 5, 9, 8, 34, 90, 100]\n    >>> order_by_points([])\n\
    \    []\n    \"\"\"\n    # YOUR CODE HERE\n    return nums\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423, 463, 145,\
    \ 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([])) ==\
    \ Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3]) ==\
    \ [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpgd_6nsy9.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmpgd_6nsy9.jl:26\n  Expression: candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n   Evaluated: [1, 11, -1, -11,\
    \ -12] == [-1, -11, 1, -12, 11]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgd_6nsy9.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgd_6nsy9.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpgd_6nsy9.jl:27\n  Expression: candidate([1234, 423, 463, 145,\
    \ 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n   Evaluated: [1234, 423, 463, 145, 2, 423,\
    \ 423, 53, 6, 37, 3457, 3, 56, 0, 46] == [0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgd_6nsy9.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgd_6nsy9.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpgd_6nsy9.jl:29\n  Expression: candidate([1, -11, -32, 43,\
    \ 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54]\n   Evaluated: [1, -11,\
    \ -32, 43, 54, -98, 2, -3] == [-3, -32, -98, -11, 1, 2, 43, 54]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgd_6nsy9.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgd_6nsy9.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpgd_6nsy9.jl:30\n  Expression: candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n   Evaluated: [1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\nStacktrace:\n\
    \ [1] macro expa"
  timestamp: 1659748240
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    \"\"\"\n    >>> order_by_points([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10])\n    [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n    >>> order_by_points([2,\
    \ 34, 1, 7, 8, 9])\n    [2, 1, 7, 8, 9, 34]\n    >>> order_by_points([2, 34, 0,\
    \ 7, 8, 9])\n    [0, 2, 7, 8, 9, 34]\n    >>> order_by_points([0, 0, 0, 0])\n\
    \    [0, 0, 0, 0]\n    >>> order_by_points([])\n    []\n    \"\"\"\n    # YOUR\
    \ CODE HERE\n    return nums\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ order_by_points;\n\t@test(candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12,\
    \ 11])\n\t@test(candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457,\
    \ 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463,\
    \ 3457])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\t@test(candidate([1,\
    \ -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t\
    @test(candidate([0, 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp0w23m631.jl:27

    '
  stdout: "test set: Test Failed at /tmp/tmp0w23m631.jl:30\n  Expression: candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n   Evaluated: [1, 11, -1, -11,\
    \ -12] == [-1, -11, 1, -12, 11]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0w23m631.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0w23m631.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp0w23m631.jl:31\n  Expression: candidate([1234, 423, 463, 145,\
    \ 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n   Evaluated: [1234, 423, 463, 145, 2, 423,\
    \ 423, 53, 6, 37, 3457, 3, 56, 0, 46] == [0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0w23m631.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0w23m631.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp0w23m631.jl:33\n  Expression: candidate([1, -11, -32, 43,\
    \ 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54]\n   Evaluated: [1, -11,\
    \ -32, 43, 54, -98, 2, -3] == [-3, -32, -98, -11, 1, 2, 43, 54]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0w23m631.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0w23m631.jl:29\ntest set: Test\
    \ Failed at /tmp/tmp0w23m631.jl:34\n  Expression: candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n   Evaluated: [1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\nStacktrace:\n\
    \ [1] macro expa"
  timestamp: 1659748241
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    \    return nums\nend\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\
    \t@test(candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpdim3_lxt.jl:15

    '
  stdout: "test set: Test Failed at /tmp/tmpdim3_lxt.jl:18\n  Expression: candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n   Evaluated: [1, 11, -1, -11,\
    \ -12] == [-1, -11, 1, -12, 11]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdim3_lxt.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdim3_lxt.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpdim3_lxt.jl:19\n  Expression: candidate([1234, 423, 463, 145,\
    \ 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n   Evaluated: [1234, 423, 463, 145, 2, 423,\
    \ 423, 53, 6, 37, 3457, 3, 56, 0, 46] == [0, 2, 3, 6, 53, 423, 423, 423, 1234,\
    \ 145, 37, 46, 56, 463, 3457]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdim3_lxt.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdim3_lxt.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpdim3_lxt.jl:21\n  Expression: candidate([1, -11, -32, 43,\
    \ 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54]\n   Evaluated: [1, -11,\
    \ -32, 43, 54, -98, 2, -3] == [-3, -32, -98, -11, 1, 2, 43, 54]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdim3_lxt.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdim3_lxt.jl:17\ntest set: Test\
    \ Failed at /tmp/tmpdim3_lxt.jl:22\n  Expression: candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n   Evaluated: [1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11] == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\nStacktrace:\n\
    \ [1] macro expa"
  timestamp: 1659748240
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    \"\"\"\n    >>> order_by_points([13,\
    \ 20, 18, 34])\n    [13, 34, 20, 18]\n    >>> order_by_points([9, 99, 999])\n\
    \    [9, 99, 999]\n    >>> order_by_points([])\n    []\n    \"\"\"\n    return\
    \ sortperm(sum.(digits.(nums)), rev=true)\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = order_by_points;\n\t@test(candidate([1, 11, -1, -11, -12]) == [-1,\
    \ -11, 1, -12, 11])\n\t@test(candidate([1234, 423, 463, 145, 2, 423, 423, 53,\
    \ 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37,\
    \ 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([])) == Vector{Int64}([]))\n\
    \t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3]) == [-3, -32, -98, -11, 1,\
    \ 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11]) == [1, 10,\
    \ 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0, 6, 6, -76, -21, 23, 4])\
    \ == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpyj9zs5o7.jl:22

    '
  stdout: "test set: Test Failed at /tmp/tmpyj9zs5o7.jl:25\n  Expression: candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n   Evaluated: [2, 1, 3, 4, 5] ==\
    \ [-1, -11, 1, -12, 11]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyj9zs5o7.jl:25 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyj9zs5o7.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpyj9zs5o7.jl:26\n  Expression: candidate([1234, 423, 463, 145,\
    \ 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457]\n   Evaluated: [11, 3, 13, 1, 4, 10, 15, 2,\
    \ 6, 7, 8, 9, 12, 5, 14] == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46,\
    \ 56, 463, 3457]\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyj9zs5o7.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyj9zs5o7.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpyj9zs5o7.jl:28\n  Expression: candidate([1, -11, -32, 43,\
    \ 54, -98, 2, -3]) == [-3, -32, -98, -11, 1, 2, 43, 54]\n   Evaluated: [5, 4,\
    \ 7, 1, 2, 8, 3, 6] == [-3, -32, -98, -11, 1, 2, 43, 54]\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpyj9zs5o7.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpyj9zs5o7.jl:24\ntest set: Test\
    \ Failed at /tmp/tmpyj9zs5o7.jl:29\n  Expression: candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\n   Evaluated: [9,\
    \ 8, 7, 6, 5, 4, 3, 2, 11, 1, 10] == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9]\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/ju"
  timestamp: 1659748241
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    \"\"\"\n    >>> order_by_points([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10])\n    [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n    >>> order_by_points([2,\
    \ 34, 5, 9, 8, 90, 100])\n    [2, 5, 9, 8, 34, 90, 100]\n    >>> order_by_points([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20])\n    [1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]\n    >>>\
    \ order_by_points([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17,\
    \ 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36,\
    \ 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55,\
    \ 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74,\
    \ 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93,\
    \ 94, 95, 96, 97, 98, 99, 100])\n    [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13,\
    \ 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32,\
    \ 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51,\
    \ 52, 53, 54, 55, 56, 57\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\
    \t@test(candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpu9sfqx6r.jl:1\nin expression starting at /tmp/tmpu9sfqx6r.jl:1\n"
  stdout: ''
  timestamp: 1659748239
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    \"\"\"\n    >>> order_by_points([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10])\n    [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n    >>> order_by_points([2,\
    \ 4, 6, 8, 10, 12, 14, 16, 18, 20])\n    [2, 4, 6, 8, 10, 12, 14, 16, 18, 20]\n\
    \    >>> order_by_points([10, 20, 30, 40, 50, 60, 70, 80, 90, 100])\n    [10,\
    \ 20, 30, 40, 50, 60, 70, 80, 90, 100]\n    >>> order_by_points([1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20])\n    [1, 2, 3, 4, 5,\
    \ 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20]\n    >>> order_by_points([2,\
    \ 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38, 40])\n\
    \    [2, 4, 6, 8, 10, 12, 14, 16, 18, 20, 22, 24, 26, 28, 30, 32, 34, 36, 38,\
    \ 40]\n    >>> order_by_points([10, 20, 30, 40, 50, 60, 70, 80, 90, 100, 110,\
    \ 120, 130, 140, 150, 160, 170, 180, 190, 200])\n    [10, 20, 30, 40, 50, 60,\
    \ 70, 80, 90, 100, 110, 120, 130, 140, 150, 160, 170, 180, 190, 200]\n    >>>\
    \ order_by_points([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17,\
    \ 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34,\nusing Test\n\
    \n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1, 11, -1,\
    \ -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423, 463, 145,\
    \ 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423, 423, 423,\
    \ 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([])) ==\
    \ Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3]) ==\
    \ [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6, 7,\
    \ 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpmtbdjulb.jl:1\nin expression starting at /tmp/tmpmtbdjulb.jl:1\n"
  stdout: ''
  timestamp: 1659748239
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    \"\"\"\n    >>> order_by_points([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10])\n    [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n    >>> order_by_points([2,\
    \ 34, 1, 7, 8, 9])\n    [2, 1, 7, 8, 9, 34]\n    >>> order_by_points([12, 1234,\
    \ 43, 23, 2, 6, 8])\n    [12, 2, 6, 8, 23, 43, 1234]\n    >>> order_by_points([12,\
    \ 1234, 43, 23, 2, 6, 8, 23, 87])\n    [12, 2, 6, 8, 23, 23, 43, 87, 1234]\n \
    \   >>> order_by_points([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16,\
    \ 17, 18, 19, 20])\n    [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16,\
    \ 17, 18, 19, 20]\n    >>> order_by_points([1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11,\
    \ 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30,\
    \ 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49,\
    \ 50])\n    [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19,\
    \ 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38,\
    \ 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50]\n    >>> order_by_points([1,\
    \ 2, 3, 4, 5, 6, 7, 8,\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\
    \t@test(candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmp1xs5497h.jl:1\nin expression starting at /tmp/tmp1xs5497h.jl:1\n"
  stdout: ''
  timestamp: 1659748239
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    \"\"\"\n    >>> order_by_points([51,\
    \ 32, 43])\n    [32, 43, 51]\n    >>> order_by_points([])\n    []\n    >>> order_by_points([1,\
    \ 2, 3, 4, 5, 6, 7, 8, 9, 10])\n    [1, 2, 3, 4, 5, 6, 7, 8, 9, 10]\n    \"\"\"\
    \n    # your code here\nend\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\
    \t@test(candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234,\
    \ 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6,\
    \ 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpvq1ixpwh.jl:22

    '
  stdout: "test set: Error During Test at /tmp/tmpvq1ixpwh.jl:25\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type String to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpvq1ixpwh.jl:10\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpvq1ixpwh.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpvq1ixpwh.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpvq1ixpwh.jl:26\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type String to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpvq1ixpwh.jl:10\n   [2] macro expansion\n"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242
- exit_code: 1
  program: "\"\"\"\n    Write a function which sorts the given list of integers\n\
    \    in ascending order according to the sum of their digits.\n    Note: if there\
    \ are several items with similar sum of their digits,\n    order them based on\
    \ their index in original list.\n\n    For example:\n            \"\"\"\nfunction\
    \ order_by_points(nums::Vector{Int64})::Vector{Int64} \n    # your code here\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = order_by_points;\n\t@test(candidate([1,\
    \ 11, -1, -11, -12]) == [-1, -11, 1, -12, 11])\n\t@test(candidate([1234, 423,\
    \ 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46]) == [0, 2, 3, 6, 53, 423,\
    \ 423, 423, 1234, 145, 37, 46, 56, 463, 3457])\n\t@test(candidate(Vector{Int64}([]))\
    \ == Vector{Int64}([]))\n\t@test(candidate([1, -11, -32, 43, 54, -98, 2, -3])\
    \ == [-3, -32, -98, -11, 1, 2, 43, 54])\n\t@test(candidate([1, 2, 3, 4, 5, 6,\
    \ 7, 8, 9, 10, 11]) == [1, 10, 2, 11, 3, 4, 5, 6, 7, 8, 9])\n\t@test(candidate([0,\
    \ 6, 6, -76, -21, 23, 4]) == [-76, -21, 0, 4, 23, 6, 6])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 6 errored,
    0 broken.

    in expression starting at /tmp/tmpkkig3_os.jl:14

    '
  stdout: "test set: Error During Test at /tmp/tmpkkig3_os.jl:17\n  Test threw exception\n\
    \  Expression: candidate([1, 11, -1, -11, -12]) == [-1, -11, 1, -12, 11]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkkig3_os.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkkig3_os.jl:16\ntest set:\
    \ Error During Test at /tmp/tmpkkig3_os.jl:18\n  Test threw exception\n  Expression:\
    \ candidate([1234, 423, 463, 145, 2, 423, 423, 53, 6, 37, 3457, 3, 56, 0, 46])\
    \ == [0, 2, 3, 6, 53, 423, 423, 423, 1234, 145, 37, 46, 56, 463, 3457]\n  MethodError:\
    \ Cannot `convert` an object of type Nothing to an object of type Vector{Int64}\n\
    \  Closest candidates are:\n    convert(::Type{T}, !Matched::LinearAlgebra.Factorization)\
    \ where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:554\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractArray at /shared/centos7/julia/1.7.3/share/julia/base/abstractarray.jl:16\n\
    \    ...\n  Stacktrace:\n   [1] order_by_points(nums::Vector{Int64})\n     @ Main\
    \ /tmp/tmpkkig3_os.jl:11\n   [2] macro expansio"
  timestamp: 1659748242

language: jl
name: HumanEval_113_odd_count
results:
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ [string(count(x->x%2!=0,x)) for x in lst]\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the number of\
    \ odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"\
    11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpo1cxw_bi.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpo1cxw_bi.jl:15\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: no method matching rem(::Char, ::Int64)\n\
    \  Closest candidates are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero})\
    \ at ~/.conda/envs/polyglot/share/julia/base/div.jl:80\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:81\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:82\n\
    \    ...\n  Stacktrace:\n    [1] (::var\"#2#4\")(x::Char)\n      @ Main /tmp/tmpo1cxw_bi.jl:8\n\
    \    [2] _simple_count\n      @ ./reduce.jl:1206 [inlined]\n    [3] #count#271\n\
    \      @ ./reduce.jl:1201 [inlined]\n    [4] count\n      @ ./reduce.jl:1201 [inlined]\n\
    \    [5] (::var\"#1#3\")(x::String)\n      @ Main ./none:0\n    [6] iterate\n\
    \      @ ./generator.jl:47 [inlined]\n    [7] collect(itr::Base.Generator{Vector{String},\
    \ var\"#1#3\"})\n      @ Base ./array.jl:724\n    [8] odd_count(lst::Vector{String})\n\
    \      @ Main /tmp/tmpo1cxw_bi.jl:8\n    [9] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpo1cxw_bi.jl:15 [inlined]\n\
    \   [11] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpo1cxw_bi.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpo1cxw_bi.jl:16\n  Test threw exception\n  Expression:\
    \ candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng\
    \ 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the 8nput.\"\
    ]\n  MethodError: no method matching rem(::Char, ::Int64)\n  Closest candidates\
    \ are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:80\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Down}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:81\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at ~/.conda/envs/po"
  timestamp: 1659979569
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ [string(count(x->x%2==1, parse(Int, i))) for i in lst]\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) ==\
    \ [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpa9c62jnw.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpa9c62jnw.jl:15\n  Expression: candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\n\
    \   Evaluated: [\"1\"] == [\"the number of odd elements 4n the str4ng 4 of the\
    \ 4nput.\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpa9c62jnw.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpa9c62jnw.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpa9c62jnw.jl:16\n  Expression: candidate([\"3\", \"11111111\"\
    ]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\n   Evaluated: [\"1\", \"1\"\
    ] == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpa9c62jnw.jl:16 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpa9c62jnw.jl:14\ntest set: Test Failed at /tmp/tmpa9c62jnw.jl:17\n\
    \  Expression: candidate([\"271\", \"137\", \"314\"]) == [\"the number of odd\
    \ elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the\
    \ str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the\
    \ 2nput.\"]\n   Evaluated: [\"1\", \"1\", \"0\"] == [\"the number of odd elements\
    \ 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the str3ng\
    \ 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    ]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpa9c62jnw.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope"
  timestamp: 1659979567
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    out\
    \ = []\n    for i in lst\n        count = 0\n        for j in i\n            if\
    \ j % 2 == 1\n                count += 1\n            end\n        end\n     \
    \   push!(out, count)\n    end\n    return out\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the number of\
    \ odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"\
    11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpefop0azx.jl:22

    '
  stdout: "test set: Error During Test at /tmp/tmpefop0azx.jl:25\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: no method matching rem(::Char, ::Int64)\n\
    \  Closest candidates are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero})\
    \ at ~/.conda/envs/polyglot/share/julia/base/div.jl:80\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:81\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:82\n\
    \    ...\n  Stacktrace:\n   [1] odd_count(lst::Vector{String})\n     @ Main /tmp/tmpefop0azx.jl:12\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpefop0azx.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpefop0azx.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpefop0azx.jl:26\n  Test threw exception\n  Expression:\
    \ candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng\
    \ 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the 8nput.\"\
    ]\n  MethodError: no method matching rem(::Char, ::Int64)\n  Closest candidates\
    \ are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:80\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Down}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:81\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:82\n\
    \    ...\n  Stacktrace:\n   [1] odd_count(lst::Vector{String})\n     @ Main /tmp/tmpefop0azx.jl:12\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpefop0azx.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n  "
  timestamp: 1659979569
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    output\
    \ = []\n    for i in lst\n        count = 0\n        for j in i\n            if\
    \ parse(Int, j) % 2 != 0\n                count += 1\n            end\n      \
    \  end\n        push!(output, count)\n    end\n    return output\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) ==\
    \ [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpes8mge59.jl:22

    '
  stdout: "test set: Error During Test at /tmp/tmpes8mge59.jl:25\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: Cannot `convert` an object of type\
    \ Int64 to an object of type String\n  Closest candidates are:\n    convert(::Type{String},\
    \ !Matched::String) at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n    [1] setindex!(A::Vector{String}, x::Int64, i1::Int64)\n\
    \      @ Base ./array.jl:903\n    [2] _unsafe_copyto!(dest::Vector{String}, doffs::Int64,\
    \ src::Vector{Any}, soffs::Int64, n::Int64)\n      @ Base ./array.jl:253\n   \
    \ [3] unsafe_copyto!\n      @ ./array.jl:307 [inlined]\n    [4] _copyto_impl!\n\
    \      @ ./array.jl:331 [inlined]\n    [5] copyto!\n      @ ./array.jl:317 [inlined]\n\
    \    [6] copyto!\n      @ ./array.jl:343 [inlined]\n    [7] copyto_axcheck!\n\
    \      @ ./abstractarray.jl:1104 [inlined]\n    [8] Vector{String}(x::Vector{Any})\n\
    \      @ Base ./array.jl:563\n    [9] convert\n      @ ./array.jl:554 [inlined]\n\
    \   [10] odd_count(lst::Vector{String})\n      @ Main /tmp/tmpes8mge59.jl:18\n\
    \   [11] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [12] macro expansion\n      @ /tmp/tmpes8mge59.jl:25 [inlined]\n\
    \   [13] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [14] top-level scope\n      @ /tmp/tmpes8mge59.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpes8mge59.jl:26\n  Test threw exception\n  Expression:\
    \ candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng\
    \ 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the 8nput.\"\
    ]\n  MethodError: Cannot `convert` an object of type Int64 to an object of type\
    \ String\n  Closest candidate"
  timestamp: 1659979569
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    #\
    \ Your code here\n    return [string(count(x->x%2==1,parse(Int,i))) for i in lst]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\
    \t@test(candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the\
    \ str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the\
    \ 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"]) == [\"the number\
    \ of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements\
    \ 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng\
    \ 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpkyt95ehj.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmpkyt95ehj.jl:16\n  Expression: candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\n\
    \   Evaluated: [\"1\"] == [\"the number of odd elements 4n the str4ng 4 of the\
    \ 4nput.\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkyt95ehj.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpkyt95ehj.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpkyt95ehj.jl:17\n  Expression: candidate([\"3\", \"11111111\"\
    ]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\n   Evaluated: [\"1\", \"1\"\
    ] == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpkyt95ehj.jl:17 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpkyt95ehj.jl:15\ntest set: Test Failed at /tmp/tmpkyt95ehj.jl:18\n\
    \  Expression: candidate([\"271\", \"137\", \"314\"]) == [\"the number of odd\
    \ elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the\
    \ str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the\
    \ 2nput.\"]\n   Evaluated: [\"1\", \"1\", \"0\"] == [\"the number of odd elements\
    \ 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the str3ng\
    \ 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    ]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpkyt95ehj.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope"
  timestamp: 1659979567
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ [string(count(x->x%2==1, parse(Int, i))) for i in lst]\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) ==\
    \ [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpa9c62jnw.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpa9c62jnw.jl:15\n  Expression: candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\n\
    \   Evaluated: [\"1\"] == [\"the number of odd elements 4n the str4ng 4 of the\
    \ 4nput.\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpa9c62jnw.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpa9c62jnw.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpa9c62jnw.jl:16\n  Expression: candidate([\"3\", \"11111111\"\
    ]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\n   Evaluated: [\"1\", \"1\"\
    ] == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpa9c62jnw.jl:16 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpa9c62jnw.jl:14\ntest set: Test Failed at /tmp/tmpa9c62jnw.jl:17\n\
    \  Expression: candidate([\"271\", \"137\", \"314\"]) == [\"the number of odd\
    \ elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the\
    \ str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the\
    \ 2nput.\"]\n   Evaluated: [\"1\", \"1\", \"0\"] == [\"the number of odd elements\
    \ 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the str3ng\
    \ 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    ]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpa9c62jnw.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope"
  timestamp: 1659979567
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ map(x -> string(count(y -> y % 2 == 1, x)), lst)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the\
    \ number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmp2br6gexs.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp2br6gexs.jl:15\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: no method matching rem(::Char, ::Int64)\n\
    \  Closest candidates are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero})\
    \ at ~/.conda/envs/polyglot/share/julia/base/div.jl:80\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:81\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:82\n\
    \    ...\n  Stacktrace:\n    [1] (::var\"#2#4\")(y::Char)\n      @ Main /tmp/tmp2br6gexs.jl:8\n\
    \    [2] _simple_count\n      @ ./reduce.jl:1206 [inlined]\n    [3] #count#271\n\
    \      @ ./reduce.jl:1201 [inlined]\n    [4] count\n      @ ./reduce.jl:1201 [inlined]\n\
    \    [5] (::var\"#1#3\")(x::String)\n      @ Main /tmp/tmp2br6gexs.jl:8\n    [6]\
    \ iterate\n      @ ./generator.jl:47 [inlined]\n    [7] _collect(c::Vector{String},\
    \ itr::Base.Generator{Vector{String}, var\"#1#3\"}, #unused#::Base.EltypeUnknown,\
    \ isz::Base.HasShape{1})\n      @ Base ./array.jl:744\n    [8] collect_similar\n\
    \      @ ./array.jl:653 [inlined]\n    [9] map\n      @ ./abstractarray.jl:2867\
    \ [inlined]\n   [10] odd_count(lst::Vector{String})\n      @ Main /tmp/tmp2br6gexs.jl:8\n\
    \   [11] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [12] macro expansion\n      @ /tmp/tmp2br6gexs.jl:15 [inlined]\n\
    \   [13] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [14] top-level scope\n      @ /tmp/tmp2br6gexs.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp2br6gexs.jl:16\n  Test threw exception\n  Expression:\
    \ candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng\
    \ 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the 8nput.\"\
    ]\n  MethodError: no method matching rem(::Char, ::Int64)\n  Closest candidates\
    \ are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero}) at ~/.conda/envs/polyglot/share/"
  timestamp: 1659979569
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ map(x -> string(count(y -> y % 2 == 1, parse.(Int, x))), lst)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) ==\
    \ [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmprl0m5_1f.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmprl0m5_1f.jl:15\n  Expression: candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\n\
    \   Evaluated: [\"1\"] == [\"the number of odd elements 4n the str4ng 4 of the\
    \ 4nput.\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprl0m5_1f.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprl0m5_1f.jl:14\ntest set: Test\
    \ Failed at /tmp/tmprl0m5_1f.jl:16\n  Expression: candidate([\"3\", \"11111111\"\
    ]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\n   Evaluated: [\"1\", \"1\"\
    ] == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmprl0m5_1f.jl:16 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmprl0m5_1f.jl:14\ntest set: Test Failed at /tmp/tmprl0m5_1f.jl:17\n\
    \  Expression: candidate([\"271\", \"137\", \"314\"]) == [\"the number of odd\
    \ elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the\
    \ str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the\
    \ 2nput.\"]\n   Evaluated: [\"1\", \"1\", \"0\"] == [\"the number of odd elements\
    \ 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the str3ng\
    \ 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    ]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprl0m5_1f.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope"
  timestamp: 1659979567
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ map(x -> string(length(filter(y -> y % 2 == 1, x))), lst)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) ==\
    \ [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmp840mt00n.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp840mt00n.jl:15\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: no method matching rem(::Char, ::Int64)\n\
    \  Closest candidates are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero})\
    \ at ~/.conda/envs/polyglot/share/julia/base/div.jl:80\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:81\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:82\n\
    \    ...\n  Stacktrace:\n    [1] (::var\"#2#4\")(y::Char)\n      @ Main /tmp/tmp840mt00n.jl:8\n\
    \    [2] filter(f::var\"#2#4\", s::String)\n      @ Base ./strings/substring.jl:246\n\
    \    [3] #1\n      @ /tmp/tmp840mt00n.jl:8 [inlined]\n    [4] iterate\n      @\
    \ ./generator.jl:47 [inlined]\n    [5] _collect(c::Vector{String}, itr::Base.Generator{Vector{String},\
    \ var\"#1#3\"}, #unused#::Base.EltypeUnknown, isz::Base.HasShape{1})\n      @\
    \ Base ./array.jl:744\n    [6] collect_similar\n      @ ./array.jl:653 [inlined]\n\
    \    [7] map\n      @ ./abstractarray.jl:2867 [inlined]\n    [8] odd_count(lst::Vector{String})\n\
    \      @ Main /tmp/tmp840mt00n.jl:8\n    [9] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmp840mt00n.jl:15 [inlined]\n\
    \   [11] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmp840mt00n.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp840mt00n.jl:16\n  Test threw exception\n  Expression:\
    \ candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng\
    \ 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the 8nput.\"\
    ]\n  MethodError: no method matching rem(::Char, ::Int64)\n  Closest candidates\
    \ are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:80\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Down}) at ~/.conda/envs/polygl"
  timestamp: 1659979569
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ map(x -> string(count(y -> y % 2 == 1, x)), lst)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the\
    \ number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmp2br6gexs.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp2br6gexs.jl:15\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: no method matching rem(::Char, ::Int64)\n\
    \  Closest candidates are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero})\
    \ at ~/.conda/envs/polyglot/share/julia/base/div.jl:80\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:81\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:82\n\
    \    ...\n  Stacktrace:\n    [1] (::var\"#2#4\")(y::Char)\n      @ Main /tmp/tmp2br6gexs.jl:8\n\
    \    [2] _simple_count\n      @ ./reduce.jl:1206 [inlined]\n    [3] #count#271\n\
    \      @ ./reduce.jl:1201 [inlined]\n    [4] count\n      @ ./reduce.jl:1201 [inlined]\n\
    \    [5] (::var\"#1#3\")(x::String)\n      @ Main /tmp/tmp2br6gexs.jl:8\n    [6]\
    \ iterate\n      @ ./generator.jl:47 [inlined]\n    [7] _collect(c::Vector{String},\
    \ itr::Base.Generator{Vector{String}, var\"#1#3\"}, #unused#::Base.EltypeUnknown,\
    \ isz::Base.HasShape{1})\n      @ Base ./array.jl:744\n    [8] collect_similar\n\
    \      @ ./array.jl:653 [inlined]\n    [9] map\n      @ ./abstractarray.jl:2867\
    \ [inlined]\n   [10] odd_count(lst::Vector{String})\n      @ Main /tmp/tmp2br6gexs.jl:8\n\
    \   [11] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [12] macro expansion\n      @ /tmp/tmp2br6gexs.jl:15 [inlined]\n\
    \   [13] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [14] top-level scope\n      @ /tmp/tmp2br6gexs.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp2br6gexs.jl:16\n  Test threw exception\n  Expression:\
    \ candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng\
    \ 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the 8nput.\"\
    ]\n  MethodError: no method matching rem(::Char, ::Int64)\n  Closest candidates\
    \ are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero}) at ~/.conda/envs/polyglot/share/"
  timestamp: 1659979569
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ map(x -> string(count(y -> y % 2 == 1, parse.(Int, x))), lst)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) ==\
    \ [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmprl0m5_1f.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmprl0m5_1f.jl:15\n  Expression: candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\n\
    \   Evaluated: [\"1\"] == [\"the number of odd elements 4n the str4ng 4 of the\
    \ 4nput.\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprl0m5_1f.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprl0m5_1f.jl:14\ntest set: Test\
    \ Failed at /tmp/tmprl0m5_1f.jl:16\n  Expression: candidate([\"3\", \"11111111\"\
    ]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\n   Evaluated: [\"1\", \"1\"\
    ] == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmprl0m5_1f.jl:16 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmprl0m5_1f.jl:14\ntest set: Test Failed at /tmp/tmprl0m5_1f.jl:17\n\
    \  Expression: candidate([\"271\", \"137\", \"314\"]) == [\"the number of odd\
    \ elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the\
    \ str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the\
    \ 2nput.\"]\n   Evaluated: [\"1\", \"1\", \"0\"] == [\"the number of odd elements\
    \ 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the str3ng\
    \ 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    ]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprl0m5_1f.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope"
  timestamp: 1659979567
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ [string(count(isdigit, x) % 2 == 1 ? x : \"\") for x in lst]\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) ==\
    \ [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpm60bc044.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpm60bc044.jl:15\n  Expression: candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\n\
    \   Evaluated: [\"1234567\"] == [\"the number of odd elements 4n the str4ng 4\
    \ of the 4nput.\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpm60bc044.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpm60bc044.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpm60bc044.jl:16\n  Expression: candidate([\"3\", \"11111111\"\
    ]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\n   Evaluated: [\"3\", \"\"\
    ] == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpm60bc044.jl:16 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpm60bc044.jl:14\ntest set: Test Failed at /tmp/tmpm60bc044.jl:17\n\
    \  Expression: candidate([\"271\", \"137\", \"314\"]) == [\"the number of odd\
    \ elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the\
    \ str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the\
    \ 2nput.\"]\n   Evaluated: [\"271\", \"137\", \"314\"] == [\"the number of odd\
    \ elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the\
    \ str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the\
    \ 2nput.\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpm60bc044.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-"
  timestamp: 1659979567
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ map(x -> string(count(y -> y % 2 == 1, parse.(Int, x))), lst)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) ==\
    \ [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmprl0m5_1f.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmprl0m5_1f.jl:15\n  Expression: candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\n\
    \   Evaluated: [\"1\"] == [\"the number of odd elements 4n the str4ng 4 of the\
    \ 4nput.\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprl0m5_1f.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprl0m5_1f.jl:14\ntest set: Test\
    \ Failed at /tmp/tmprl0m5_1f.jl:16\n  Expression: candidate([\"3\", \"11111111\"\
    ]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\n   Evaluated: [\"1\", \"1\"\
    ] == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmprl0m5_1f.jl:16 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmprl0m5_1f.jl:14\ntest set: Test Failed at /tmp/tmprl0m5_1f.jl:17\n\
    \  Expression: candidate([\"271\", \"137\", \"314\"]) == [\"the number of odd\
    \ elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the\
    \ str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the\
    \ 2nput.\"]\n   Evaluated: [\"1\", \"1\", \"0\"] == [\"the number of odd elements\
    \ 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the str3ng\
    \ 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    ]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprl0m5_1f.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope"
  timestamp: 1659979567
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ map(x -> string(count(y -> parse(Int, y) % 2 != 0, x)), lst)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) ==\
    \ [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmphr2vab47.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmphr2vab47.jl:15\n  Expression: candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\n\
    \   Evaluated: [\"4\"] == [\"the number of odd elements 4n the str4ng 4 of the\
    \ 4nput.\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphr2vab47.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphr2vab47.jl:14\ntest set: Test\
    \ Failed at /tmp/tmphr2vab47.jl:16\n  Expression: candidate([\"3\", \"11111111\"\
    ]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\n   Evaluated: [\"1\", \"8\"\
    ] == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmphr2vab47.jl:16 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmphr2vab47.jl:14\ntest set: Test Failed at /tmp/tmphr2vab47.jl:17\n\
    \  Expression: candidate([\"271\", \"137\", \"314\"]) == [\"the number of odd\
    \ elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the\
    \ str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the\
    \ 2nput.\"]\n   Evaluated: [\"2\", \"3\", \"2\"] == [\"the number of odd elements\
    \ 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the str3ng\
    \ 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    ]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphr2vab47.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope"
  timestamp: 1659979567
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    output\
    \ = []\n    for i in lst\n        count = 0\n        for j in i\n            if\
    \ parse(Int, j) % 2 != 0\n                count += 1\n            end\n      \
    \  end\n        push!(output, count)\n    end\n    return output\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) ==\
    \ [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpes8mge59.jl:22

    '
  stdout: "test set: Error During Test at /tmp/tmpes8mge59.jl:25\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: Cannot `convert` an object of type\
    \ Int64 to an object of type String\n  Closest candidates are:\n    convert(::Type{String},\
    \ !Matched::String) at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n    [1] setindex!(A::Vector{String}, x::Int64, i1::Int64)\n\
    \      @ Base ./array.jl:903\n    [2] _unsafe_copyto!(dest::Vector{String}, doffs::Int64,\
    \ src::Vector{Any}, soffs::Int64, n::Int64)\n      @ Base ./array.jl:253\n   \
    \ [3] unsafe_copyto!\n      @ ./array.jl:307 [inlined]\n    [4] _copyto_impl!\n\
    \      @ ./array.jl:331 [inlined]\n    [5] copyto!\n      @ ./array.jl:317 [inlined]\n\
    \    [6] copyto!\n      @ ./array.jl:343 [inlined]\n    [7] copyto_axcheck!\n\
    \      @ ./abstractarray.jl:1104 [inlined]\n    [8] Vector{String}(x::Vector{Any})\n\
    \      @ Base ./array.jl:563\n    [9] convert\n      @ ./array.jl:554 [inlined]\n\
    \   [10] odd_count(lst::Vector{String})\n      @ Main /tmp/tmpes8mge59.jl:18\n\
    \   [11] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [12] macro expansion\n      @ /tmp/tmpes8mge59.jl:25 [inlined]\n\
    \   [13] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [14] top-level scope\n      @ /tmp/tmpes8mge59.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpes8mge59.jl:26\n  Test threw exception\n  Expression:\
    \ candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng\
    \ 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the 8nput.\"\
    ]\n  MethodError: Cannot `convert` an object of type Int64 to an object of type\
    \ String\n  Closest candidate"
  timestamp: 1659979569
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    #\
    \ your code here\n    # convert strings to integers\n    lst_int = [parse(Int,\
    \ x) for x in lst]\n    # count odd numbers\n    odd_count = [count(isodd, x)\
    \ for x in lst_int]\n    # convert integers to strings\n    odd_count_str = [string(x)\
    \ for x in odd_count]\n    return odd_count_str\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the number of\
    \ odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"\
    11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpw05lipiw.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmpw05lipiw.jl:22\n  Expression: candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\n\
    \   Evaluated: [\"1\"] == [\"the number of odd elements 4n the str4ng 4 of the\
    \ 4nput.\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw05lipiw.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpw05lipiw.jl:21\ntest set: Test\
    \ Failed at /tmp/tmpw05lipiw.jl:23\n  Expression: candidate([\"3\", \"11111111\"\
    ]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\n   Evaluated: [\"1\", \"1\"\
    ] == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpw05lipiw.jl:23 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpw05lipiw.jl:21\ntest set: Test Failed at /tmp/tmpw05lipiw.jl:24\n\
    \  Expression: candidate([\"271\", \"137\", \"314\"]) == [\"the number of odd\
    \ elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the\
    \ str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the\
    \ 2nput.\"]\n   Evaluated: [\"1\", \"1\", \"0\"] == [\"the number of odd elements\
    \ 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the str3ng\
    \ 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    ]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpw05lipiw.jl:24 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope"
  timestamp: 1659979567
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ map(x -> string(count(y -> y % 2 == 1, parse.(Int, x))), lst)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) ==\
    \ [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmprl0m5_1f.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmprl0m5_1f.jl:15\n  Expression: candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\n\
    \   Evaluated: [\"1\"] == [\"the number of odd elements 4n the str4ng 4 of the\
    \ 4nput.\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprl0m5_1f.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprl0m5_1f.jl:14\ntest set: Test\
    \ Failed at /tmp/tmprl0m5_1f.jl:16\n  Expression: candidate([\"3\", \"11111111\"\
    ]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\n   Evaluated: [\"1\", \"1\"\
    ] == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmprl0m5_1f.jl:16 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmprl0m5_1f.jl:14\ntest set: Test Failed at /tmp/tmprl0m5_1f.jl:17\n\
    \  Expression: candidate([\"271\", \"137\", \"314\"]) == [\"the number of odd\
    \ elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the\
    \ str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the\
    \ 2nput.\"]\n   Evaluated: [\"1\", \"1\", \"0\"] == [\"the number of odd elements\
    \ 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the str3ng\
    \ 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    ]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprl0m5_1f.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope"
  timestamp: 1659979567
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    out\
    \ = []\n    for i in lst\n        count = 0\n        for j in i\n            if\
    \ parse(Int, j) % 2 != 0\n                count += 1\n            end\n      \
    \  end\n        push!(out, count)\n    end\n    return out\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) ==\
    \ [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmp_1u5vkks.jl:22

    '
  stdout: "test set: Error During Test at /tmp/tmp_1u5vkks.jl:25\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: Cannot `convert` an object of type\
    \ Int64 to an object of type String\n  Closest candidates are:\n    convert(::Type{String},\
    \ !Matched::String) at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n    [1] setindex!(A::Vector{String}, x::Int64, i1::Int64)\n\
    \      @ Base ./array.jl:903\n    [2] _unsafe_copyto!(dest::Vector{String}, doffs::Int64,\
    \ src::Vector{Any}, soffs::Int64, n::Int64)\n      @ Base ./array.jl:253\n   \
    \ [3] unsafe_copyto!\n      @ ./array.jl:307 [inlined]\n    [4] _copyto_impl!\n\
    \      @ ./array.jl:331 [inlined]\n    [5] copyto!\n      @ ./array.jl:317 [inlined]\n\
    \    [6] copyto!\n      @ ./array.jl:343 [inlined]\n    [7] copyto_axcheck!\n\
    \      @ ./abstractarray.jl:1104 [inlined]\n    [8] Vector{String}(x::Vector{Any})\n\
    \      @ Base ./array.jl:563\n    [9] convert\n      @ ./array.jl:554 [inlined]\n\
    \   [10] odd_count(lst::Vector{String})\n      @ Main /tmp/tmp_1u5vkks.jl:18\n\
    \   [11] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [12] macro expansion\n      @ /tmp/tmp_1u5vkks.jl:25 [inlined]\n\
    \   [13] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [14] top-level scope\n      @ /tmp/tmp_1u5vkks.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp_1u5vkks.jl:26\n  Test threw exception\n  Expression:\
    \ candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng\
    \ 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the 8nput.\"\
    ]\n  MethodError: Cannot `convert` an object of type Int64 to an object of type\
    \ String\n  Closest candidate"
  timestamp: 1659979569
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ [string(count(x->x%2!=0, x)) for x in lst]\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the number of\
    \ odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"\
    11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmp9yublpm3.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp9yublpm3.jl:15\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: no method matching rem(::Char, ::Int64)\n\
    \  Closest candidates are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero})\
    \ at ~/.conda/envs/polyglot/share/julia/base/div.jl:80\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:81\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:82\n\
    \    ...\n  Stacktrace:\n    [1] (::var\"#2#4\")(x::Char)\n      @ Main /tmp/tmp9yublpm3.jl:8\n\
    \    [2] _simple_count\n      @ ./reduce.jl:1206 [inlined]\n    [3] #count#271\n\
    \      @ ./reduce.jl:1201 [inlined]\n    [4] count\n      @ ./reduce.jl:1201 [inlined]\n\
    \    [5] (::var\"#1#3\")(x::String)\n      @ Main ./none:0\n    [6] iterate\n\
    \      @ ./generator.jl:47 [inlined]\n    [7] collect(itr::Base.Generator{Vector{String},\
    \ var\"#1#3\"})\n      @ Base ./array.jl:724\n    [8] odd_count(lst::Vector{String})\n\
    \      @ Main /tmp/tmp9yublpm3.jl:8\n    [9] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmp9yublpm3.jl:15 [inlined]\n\
    \   [11] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmp9yublpm3.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp9yublpm3.jl:16\n  Test threw exception\n  Expression:\
    \ candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng\
    \ 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the 8nput.\"\
    ]\n  MethodError: no method matching rem(::Char, ::Int64)\n  Closest candidates\
    \ are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:80\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Down}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:81\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at ~/.conda/envs/po"
  timestamp: 1659979569
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    #\
    \ your code here\n    return [string(count(x->x%2==1,parse(Int,i))) for i in lst]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\
    \t@test(candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the\
    \ str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the\
    \ 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"]) == [\"the number\
    \ of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements\
    \ 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng\
    \ 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp6nnzwz29.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmp6nnzwz29.jl:16\n  Expression: candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\n\
    \   Evaluated: [\"1\"] == [\"the number of odd elements 4n the str4ng 4 of the\
    \ 4nput.\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6nnzwz29.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6nnzwz29.jl:15\ntest set: Test\
    \ Failed at /tmp/tmp6nnzwz29.jl:17\n  Expression: candidate([\"3\", \"11111111\"\
    ]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\n   Evaluated: [\"1\", \"1\"\
    ] == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp6nnzwz29.jl:17 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp6nnzwz29.jl:15\ntest set: Test Failed at /tmp/tmp6nnzwz29.jl:18\n\
    \  Expression: candidate([\"271\", \"137\", \"314\"]) == [\"the number of odd\
    \ elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the\
    \ str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the\
    \ 2nput.\"]\n   Evaluated: [\"1\", \"1\", \"0\"] == [\"the number of odd elements\
    \ 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the str3ng\
    \ 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    ]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6nnzwz29.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope"
  timestamp: 1659979567
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    #\
    \ your code here\n    return map(x->string(length(filter(y->y%2==1,x))),lst)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\
    \t@test(candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the\
    \ str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the\
    \ 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"]) == [\"the number\
    \ of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements\
    \ 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng\
    \ 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpraznfav9.jl:13

    '
  stdout: "test set: Error During Test at /tmp/tmpraznfav9.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: no method matching rem(::Char, ::Int64)\n\
    \  Closest candidates are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero})\
    \ at ~/.conda/envs/polyglot/share/julia/base/div.jl:80\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:81\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:82\n\
    \    ...\n  Stacktrace:\n    [1] (::var\"#2#4\")(y::Char)\n      @ Main /tmp/tmpraznfav9.jl:9\n\
    \    [2] filter(f::var\"#2#4\", s::String)\n      @ Base ./strings/substring.jl:246\n\
    \    [3] #1\n      @ /tmp/tmpraznfav9.jl:9 [inlined]\n    [4] iterate\n      @\
    \ ./generator.jl:47 [inlined]\n    [5] _collect(c::Vector{String}, itr::Base.Generator{Vector{String},\
    \ var\"#1#3\"}, #unused#::Base.EltypeUnknown, isz::Base.HasShape{1})\n      @\
    \ Base ./array.jl:744\n    [6] collect_similar\n      @ ./array.jl:653 [inlined]\n\
    \    [7] map\n      @ ./abstractarray.jl:2867 [inlined]\n    [8] odd_count(lst::Vector{String})\n\
    \      @ Main /tmp/tmpraznfav9.jl:9\n    [9] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpraznfav9.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpraznfav9.jl:15\ntest set:\
    \ Error During Test at /tmp/tmpraznfav9.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng\
    \ 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the 8nput.\"\
    ]\n  MethodError: no method matching rem(::Char, ::Int64)\n  Closest candidates\
    \ are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:80\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Down}) at ~/.conda/envs/polygl"
  timestamp: 1659979569
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    output\
    \ = []\n    for i in lst\n        count = 0\n        for j in i\n            if\
    \ parse(Int, j) % 2 != 0\n                count += 1\n            end\n      \
    \  end\n        push!(output, count)\n    end\n    return output\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) ==\
    \ [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpes8mge59.jl:22

    '
  stdout: "test set: Error During Test at /tmp/tmpes8mge59.jl:25\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: Cannot `convert` an object of type\
    \ Int64 to an object of type String\n  Closest candidates are:\n    convert(::Type{String},\
    \ !Matched::String) at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n    [1] setindex!(A::Vector{String}, x::Int64, i1::Int64)\n\
    \      @ Base ./array.jl:903\n    [2] _unsafe_copyto!(dest::Vector{String}, doffs::Int64,\
    \ src::Vector{Any}, soffs::Int64, n::Int64)\n      @ Base ./array.jl:253\n   \
    \ [3] unsafe_copyto!\n      @ ./array.jl:307 [inlined]\n    [4] _copyto_impl!\n\
    \      @ ./array.jl:331 [inlined]\n    [5] copyto!\n      @ ./array.jl:317 [inlined]\n\
    \    [6] copyto!\n      @ ./array.jl:343 [inlined]\n    [7] copyto_axcheck!\n\
    \      @ ./abstractarray.jl:1104 [inlined]\n    [8] Vector{String}(x::Vector{Any})\n\
    \      @ Base ./array.jl:563\n    [9] convert\n      @ ./array.jl:554 [inlined]\n\
    \   [10] odd_count(lst::Vector{String})\n      @ Main /tmp/tmpes8mge59.jl:18\n\
    \   [11] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [12] macro expansion\n      @ /tmp/tmpes8mge59.jl:25 [inlined]\n\
    \   [13] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [14] top-level scope\n      @ /tmp/tmpes8mge59.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpes8mge59.jl:26\n  Test threw exception\n  Expression:\
    \ candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng\
    \ 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the 8nput.\"\
    ]\n  MethodError: Cannot `convert` an object of type Int64 to an object of type\
    \ String\n  Closest candidate"
  timestamp: 1659979569
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ map(x -> string(length(filter(y -> y % 2 == 1, x))), lst)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) ==\
    \ [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmp840mt00n.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp840mt00n.jl:15\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: no method matching rem(::Char, ::Int64)\n\
    \  Closest candidates are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero})\
    \ at ~/.conda/envs/polyglot/share/julia/base/div.jl:80\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:81\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:82\n\
    \    ...\n  Stacktrace:\n    [1] (::var\"#2#4\")(y::Char)\n      @ Main /tmp/tmp840mt00n.jl:8\n\
    \    [2] filter(f::var\"#2#4\", s::String)\n      @ Base ./strings/substring.jl:246\n\
    \    [3] #1\n      @ /tmp/tmp840mt00n.jl:8 [inlined]\n    [4] iterate\n      @\
    \ ./generator.jl:47 [inlined]\n    [5] _collect(c::Vector{String}, itr::Base.Generator{Vector{String},\
    \ var\"#1#3\"}, #unused#::Base.EltypeUnknown, isz::Base.HasShape{1})\n      @\
    \ Base ./array.jl:744\n    [6] collect_similar\n      @ ./array.jl:653 [inlined]\n\
    \    [7] map\n      @ ./abstractarray.jl:2867 [inlined]\n    [8] odd_count(lst::Vector{String})\n\
    \      @ Main /tmp/tmp840mt00n.jl:8\n    [9] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmp840mt00n.jl:15 [inlined]\n\
    \   [11] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmp840mt00n.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp840mt00n.jl:16\n  Test threw exception\n  Expression:\
    \ candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng\
    \ 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the 8nput.\"\
    ]\n  MethodError: no method matching rem(::Char, ::Int64)\n  Closest candidates\
    \ are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:80\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Down}) at ~/.conda/envs/polygl"
  timestamp: 1659979569
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    #\
    \ your code here\n    return [string(length(filter(x->parse(Int,x)%2!=0,lst[i])))\
    \ for i in 1:length(lst)]\nend\nusing Test\n\n@testset begin\n\ncandidate = odd_count;\n\
    \t@test(candidate([\"1234567\"]) == [\"the number of odd elements 4n the str4ng\
    \ 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"]) == [\"the number\
    \ of odd elements 1n the str1ng 1 of the 1nput.\", \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"\
    ]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\", \"the number\
    \ of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of odd elements\
    \ 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxfpcp4p5.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmpxfpcp4p5.jl:16\n  Expression: candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\n\
    \   Evaluated: [\"4\"] == [\"the number of odd elements 4n the str4ng 4 of the\
    \ 4nput.\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxfpcp4p5.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpxfpcp4p5.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpxfpcp4p5.jl:17\n  Expression: candidate([\"3\", \"11111111\"\
    ]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\n   Evaluated: [\"1\", \"8\"\
    ] == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpxfpcp4p5.jl:17 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpxfpcp4p5.jl:15\ntest set: Test Failed at /tmp/tmpxfpcp4p5.jl:18\n\
    \  Expression: candidate([\"271\", \"137\", \"314\"]) == [\"the number of odd\
    \ elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the\
    \ str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the\
    \ 2nput.\"]\n   Evaluated: [\"2\", \"3\", \"2\"] == [\"the number of odd elements\
    \ 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the str3ng\
    \ 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    ]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpxfpcp4p5.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope"
  timestamp: 1659979567
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ [string(sum(x % 2 == 1 for x in parse.(Int, i))) for i in lst]\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) ==\
    \ [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp44zhj086.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmp44zhj086.jl:15\n  Expression: candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\n\
    \   Evaluated: [\"1\"] == [\"the number of odd elements 4n the str4ng 4 of the\
    \ 4nput.\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp44zhj086.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp44zhj086.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp44zhj086.jl:16\n  Expression: candidate([\"3\", \"11111111\"\
    ]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\n   Evaluated: [\"1\", \"1\"\
    ] == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp44zhj086.jl:16 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp44zhj086.jl:14\ntest set: Test Failed at /tmp/tmp44zhj086.jl:17\n\
    \  Expression: candidate([\"271\", \"137\", \"314\"]) == [\"the number of odd\
    \ elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the\
    \ str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the\
    \ 2nput.\"]\n   Evaluated: [\"1\", \"1\", \"0\"] == [\"the number of odd elements\
    \ 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the str3ng\
    \ 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    ]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp44zhj086.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope"
  timestamp: 1659979567
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ map(x -> string(count(y -> y % 2 == 1, x)), lst)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the\
    \ number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmp2br6gexs.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp2br6gexs.jl:15\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: no method matching rem(::Char, ::Int64)\n\
    \  Closest candidates are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero})\
    \ at ~/.conda/envs/polyglot/share/julia/base/div.jl:80\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:81\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:82\n\
    \    ...\n  Stacktrace:\n    [1] (::var\"#2#4\")(y::Char)\n      @ Main /tmp/tmp2br6gexs.jl:8\n\
    \    [2] _simple_count\n      @ ./reduce.jl:1206 [inlined]\n    [3] #count#271\n\
    \      @ ./reduce.jl:1201 [inlined]\n    [4] count\n      @ ./reduce.jl:1201 [inlined]\n\
    \    [5] (::var\"#1#3\")(x::String)\n      @ Main /tmp/tmp2br6gexs.jl:8\n    [6]\
    \ iterate\n      @ ./generator.jl:47 [inlined]\n    [7] _collect(c::Vector{String},\
    \ itr::Base.Generator{Vector{String}, var\"#1#3\"}, #unused#::Base.EltypeUnknown,\
    \ isz::Base.HasShape{1})\n      @ Base ./array.jl:744\n    [8] collect_similar\n\
    \      @ ./array.jl:653 [inlined]\n    [9] map\n      @ ./abstractarray.jl:2867\
    \ [inlined]\n   [10] odd_count(lst::Vector{String})\n      @ Main /tmp/tmp2br6gexs.jl:8\n\
    \   [11] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [12] macro expansion\n      @ /tmp/tmp2br6gexs.jl:15 [inlined]\n\
    \   [13] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [14] top-level scope\n      @ /tmp/tmp2br6gexs.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp2br6gexs.jl:16\n  Test threw exception\n  Expression:\
    \ candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng\
    \ 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the 8nput.\"\
    ]\n  MethodError: no method matching rem(::Char, ::Int64)\n  Closest candidates\
    \ are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero}) at ~/.conda/envs/polyglot/share/"
  timestamp: 1659979569
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ [string(count(x->x%2!=0,x)) for x in lst]\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the number of\
    \ odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"\
    11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpo1cxw_bi.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpo1cxw_bi.jl:15\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: no method matching rem(::Char, ::Int64)\n\
    \  Closest candidates are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero})\
    \ at ~/.conda/envs/polyglot/share/julia/base/div.jl:80\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:81\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:82\n\
    \    ...\n  Stacktrace:\n    [1] (::var\"#2#4\")(x::Char)\n      @ Main /tmp/tmpo1cxw_bi.jl:8\n\
    \    [2] _simple_count\n      @ ./reduce.jl:1206 [inlined]\n    [3] #count#271\n\
    \      @ ./reduce.jl:1201 [inlined]\n    [4] count\n      @ ./reduce.jl:1201 [inlined]\n\
    \    [5] (::var\"#1#3\")(x::String)\n      @ Main ./none:0\n    [6] iterate\n\
    \      @ ./generator.jl:47 [inlined]\n    [7] collect(itr::Base.Generator{Vector{String},\
    \ var\"#1#3\"})\n      @ Base ./array.jl:724\n    [8] odd_count(lst::Vector{String})\n\
    \      @ Main /tmp/tmpo1cxw_bi.jl:8\n    [9] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpo1cxw_bi.jl:15 [inlined]\n\
    \   [11] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpo1cxw_bi.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpo1cxw_bi.jl:16\n  Test threw exception\n  Expression:\
    \ candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng\
    \ 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the 8nput.\"\
    ]\n  MethodError: no method matching rem(::Char, ::Int64)\n  Closest candidates\
    \ are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:80\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Down}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:81\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at ~/.conda/envs/po"
  timestamp: 1659979569
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ [string(count(x->x%2==1,parse(Int,y))) for y in lst]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the\
    \ number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpdtoq4r9l.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpdtoq4r9l.jl:15\n  Expression: candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\n\
    \   Evaluated: [\"1\"] == [\"the number of odd elements 4n the str4ng 4 of the\
    \ 4nput.\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdtoq4r9l.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdtoq4r9l.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpdtoq4r9l.jl:16\n  Expression: candidate([\"3\", \"11111111\"\
    ]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\n   Evaluated: [\"1\", \"1\"\
    ] == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpdtoq4r9l.jl:16 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpdtoq4r9l.jl:14\ntest set: Test Failed at /tmp/tmpdtoq4r9l.jl:17\n\
    \  Expression: candidate([\"271\", \"137\", \"314\"]) == [\"the number of odd\
    \ elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the\
    \ str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the\
    \ 2nput.\"]\n   Evaluated: [\"1\", \"1\", \"0\"] == [\"the number of odd elements\
    \ 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the str3ng\
    \ 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    ]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdtoq4r9l.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope"
  timestamp: 1659979567
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ map(x -> string(length(filter(y -> y % 2 == 1, x))), lst)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) ==\
    \ [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmp840mt00n.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp840mt00n.jl:15\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: no method matching rem(::Char, ::Int64)\n\
    \  Closest candidates are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero})\
    \ at ~/.conda/envs/polyglot/share/julia/base/div.jl:80\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:81\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:82\n\
    \    ...\n  Stacktrace:\n    [1] (::var\"#2#4\")(y::Char)\n      @ Main /tmp/tmp840mt00n.jl:8\n\
    \    [2] filter(f::var\"#2#4\", s::String)\n      @ Base ./strings/substring.jl:246\n\
    \    [3] #1\n      @ /tmp/tmp840mt00n.jl:8 [inlined]\n    [4] iterate\n      @\
    \ ./generator.jl:47 [inlined]\n    [5] _collect(c::Vector{String}, itr::Base.Generator{Vector{String},\
    \ var\"#1#3\"}, #unused#::Base.EltypeUnknown, isz::Base.HasShape{1})\n      @\
    \ Base ./array.jl:744\n    [6] collect_similar\n      @ ./array.jl:653 [inlined]\n\
    \    [7] map\n      @ ./abstractarray.jl:2867 [inlined]\n    [8] odd_count(lst::Vector{String})\n\
    \      @ Main /tmp/tmp840mt00n.jl:8\n    [9] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmp840mt00n.jl:15 [inlined]\n\
    \   [11] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmp840mt00n.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp840mt00n.jl:16\n  Test threw exception\n  Expression:\
    \ candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng\
    \ 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the 8nput.\"\
    ]\n  MethodError: no method matching rem(::Char, ::Int64)\n  Closest candidates\
    \ are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:80\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Down}) at ~/.conda/envs/polygl"
  timestamp: 1659979569
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ map(x -> string(count(y -> isodd(parse(Int, y)), x)), lst)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) ==\
    \ [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpsxucmh44.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpsxucmh44.jl:15\n  Expression: candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\n\
    \   Evaluated: [\"4\"] == [\"the number of odd elements 4n the str4ng 4 of the\
    \ 4nput.\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsxucmh44.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsxucmh44.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpsxucmh44.jl:16\n  Expression: candidate([\"3\", \"11111111\"\
    ]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\n   Evaluated: [\"1\", \"8\"\
    ] == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpsxucmh44.jl:16 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpsxucmh44.jl:14\ntest set: Test Failed at /tmp/tmpsxucmh44.jl:17\n\
    \  Expression: candidate([\"271\", \"137\", \"314\"]) == [\"the number of odd\
    \ elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the\
    \ str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the\
    \ 2nput.\"]\n   Evaluated: [\"2\", \"3\", \"2\"] == [\"the number of odd elements\
    \ 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the str3ng\
    \ 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    ]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsxucmh44.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope"
  timestamp: 1659979567
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ [string(count(x->x%2==1, parse(Int, y))) for y in lst]\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) ==\
    \ [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp3vn16wxx.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmp3vn16wxx.jl:15\n  Expression: candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\n\
    \   Evaluated: [\"1\"] == [\"the number of odd elements 4n the str4ng 4 of the\
    \ 4nput.\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3vn16wxx.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3vn16wxx.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp3vn16wxx.jl:16\n  Expression: candidate([\"3\", \"11111111\"\
    ]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\n   Evaluated: [\"1\", \"1\"\
    ] == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp3vn16wxx.jl:16 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp3vn16wxx.jl:14\ntest set: Test Failed at /tmp/tmp3vn16wxx.jl:17\n\
    \  Expression: candidate([\"271\", \"137\", \"314\"]) == [\"the number of odd\
    \ elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the\
    \ str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the\
    \ 2nput.\"]\n   Evaluated: [\"1\", \"1\", \"0\"] == [\"the number of odd elements\
    \ 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the str3ng\
    \ 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    ]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3vn16wxx.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope"
  timestamp: 1659979567
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ map(x -> string(count(y -> y % 2 == 1, parse.(Int, x))), lst)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) ==\
    \ [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmprl0m5_1f.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmprl0m5_1f.jl:15\n  Expression: candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\n\
    \   Evaluated: [\"1\"] == [\"the number of odd elements 4n the str4ng 4 of the\
    \ 4nput.\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprl0m5_1f.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprl0m5_1f.jl:14\ntest set: Test\
    \ Failed at /tmp/tmprl0m5_1f.jl:16\n  Expression: candidate([\"3\", \"11111111\"\
    ]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\n   Evaluated: [\"1\", \"1\"\
    ] == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmprl0m5_1f.jl:16 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmprl0m5_1f.jl:14\ntest set: Test Failed at /tmp/tmprl0m5_1f.jl:17\n\
    \  Expression: candidate([\"271\", \"137\", \"314\"]) == [\"the number of odd\
    \ elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the\
    \ str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the\
    \ 2nput.\"]\n   Evaluated: [\"1\", \"1\", \"0\"] == [\"the number of odd elements\
    \ 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the str3ng\
    \ 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    ]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprl0m5_1f.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope"
  timestamp: 1659979567
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ map(x -> string(count(y -> y % 2 == 1, parse.(Int, x))), lst)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) ==\
    \ [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmprl0m5_1f.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmprl0m5_1f.jl:15\n  Expression: candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\n\
    \   Evaluated: [\"1\"] == [\"the number of odd elements 4n the str4ng 4 of the\
    \ 4nput.\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprl0m5_1f.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprl0m5_1f.jl:14\ntest set: Test\
    \ Failed at /tmp/tmprl0m5_1f.jl:16\n  Expression: candidate([\"3\", \"11111111\"\
    ]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\n   Evaluated: [\"1\", \"1\"\
    ] == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmprl0m5_1f.jl:16 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmprl0m5_1f.jl:14\ntest set: Test Failed at /tmp/tmprl0m5_1f.jl:17\n\
    \  Expression: candidate([\"271\", \"137\", \"314\"]) == [\"the number of odd\
    \ elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the\
    \ str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the\
    \ 2nput.\"]\n   Evaluated: [\"1\", \"1\", \"0\"] == [\"the number of odd elements\
    \ 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the str3ng\
    \ 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    ]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprl0m5_1f.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope"
  timestamp: 1659979567
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ [string(count(x->x%2!=0,x)) for x in lst]\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the number of\
    \ odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"\
    11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpo1cxw_bi.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpo1cxw_bi.jl:15\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: no method matching rem(::Char, ::Int64)\n\
    \  Closest candidates are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero})\
    \ at ~/.conda/envs/polyglot/share/julia/base/div.jl:80\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:81\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:82\n\
    \    ...\n  Stacktrace:\n    [1] (::var\"#2#4\")(x::Char)\n      @ Main /tmp/tmpo1cxw_bi.jl:8\n\
    \    [2] _simple_count\n      @ ./reduce.jl:1206 [inlined]\n    [3] #count#271\n\
    \      @ ./reduce.jl:1201 [inlined]\n    [4] count\n      @ ./reduce.jl:1201 [inlined]\n\
    \    [5] (::var\"#1#3\")(x::String)\n      @ Main ./none:0\n    [6] iterate\n\
    \      @ ./generator.jl:47 [inlined]\n    [7] collect(itr::Base.Generator{Vector{String},\
    \ var\"#1#3\"})\n      @ Base ./array.jl:724\n    [8] odd_count(lst::Vector{String})\n\
    \      @ Main /tmp/tmpo1cxw_bi.jl:8\n    [9] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpo1cxw_bi.jl:15 [inlined]\n\
    \   [11] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpo1cxw_bi.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpo1cxw_bi.jl:16\n  Test threw exception\n  Expression:\
    \ candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng\
    \ 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the 8nput.\"\
    ]\n  MethodError: no method matching rem(::Char, ::Int64)\n  Closest candidates\
    \ are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:80\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Down}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:81\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at ~/.conda/envs/po"
  timestamp: 1659979569
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ map(x -> string(count(y -> y % 2 == 1, x)), lst)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the\
    \ number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmp2br6gexs.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp2br6gexs.jl:15\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: no method matching rem(::Char, ::Int64)\n\
    \  Closest candidates are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero})\
    \ at ~/.conda/envs/polyglot/share/julia/base/div.jl:80\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:81\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:82\n\
    \    ...\n  Stacktrace:\n    [1] (::var\"#2#4\")(y::Char)\n      @ Main /tmp/tmp2br6gexs.jl:8\n\
    \    [2] _simple_count\n      @ ./reduce.jl:1206 [inlined]\n    [3] #count#271\n\
    \      @ ./reduce.jl:1201 [inlined]\n    [4] count\n      @ ./reduce.jl:1201 [inlined]\n\
    \    [5] (::var\"#1#3\")(x::String)\n      @ Main /tmp/tmp2br6gexs.jl:8\n    [6]\
    \ iterate\n      @ ./generator.jl:47 [inlined]\n    [7] _collect(c::Vector{String},\
    \ itr::Base.Generator{Vector{String}, var\"#1#3\"}, #unused#::Base.EltypeUnknown,\
    \ isz::Base.HasShape{1})\n      @ Base ./array.jl:744\n    [8] collect_similar\n\
    \      @ ./array.jl:653 [inlined]\n    [9] map\n      @ ./abstractarray.jl:2867\
    \ [inlined]\n   [10] odd_count(lst::Vector{String})\n      @ Main /tmp/tmp2br6gexs.jl:8\n\
    \   [11] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [12] macro expansion\n      @ /tmp/tmp2br6gexs.jl:15 [inlined]\n\
    \   [13] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [14] top-level scope\n      @ /tmp/tmp2br6gexs.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp2br6gexs.jl:16\n  Test threw exception\n  Expression:\
    \ candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng\
    \ 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the 8nput.\"\
    ]\n  MethodError: no method matching rem(::Char, ::Int64)\n  Closest candidates\
    \ are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero}) at ~/.conda/envs/polyglot/share/"
  timestamp: 1659979569
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ map(x -> string(length(filter(y -> y % 2 == 1, parse.(Int, x)))), lst)\nend\n\
    using Test\n\n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\
    \t@test(candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the\
    \ str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the\
    \ 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"]) == [\"the number\
    \ of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements\
    \ 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng\
    \ 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmp9xdtwedh.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp9xdtwedh.jl:15\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: no method matching filter(::var\"\
    #2#4\", ::Int64)\n  Closest candidates are:\n    filter(::Any, !Matched::Tuple)\
    \ at ~/.conda/envs/polyglot/share/julia/base/tuple.jl:363\n    filter(::Any, !Matched::Array{T,\
    \ N}) where {T, N} at ~/.conda/envs/polyglot/share/julia/base/array.jl:2479\n\
    \    filter(::Any, !Matched::AbstractDict) at ~/.conda/envs/polyglot/share/julia/base/abstractdict.jl:434\n\
    \    ...\n  Stacktrace:\n    [1] (::var\"#1#3\")(x::String)\n      @ Main /tmp/tmp9xdtwedh.jl:8\n\
    \    [2] iterate\n      @ ./generator.jl:47 [inlined]\n    [3] _collect\n    \
    \  @ ./array.jl:744 [inlined]\n    [4] collect_similar\n      @ ./array.jl:653\
    \ [inlined]\n    [5] map\n      @ ./abstractarray.jl:2867 [inlined]\n    [6] odd_count(lst::Vector{String})\n\
    \      @ Main /tmp/tmp9xdtwedh.jl:8\n    [7] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [8] macro expansion\n      @ /tmp/tmp9xdtwedh.jl:15 [inlined]\n\
    \    [9] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [10] top-level scope\n      @ /tmp/tmp9xdtwedh.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp9xdtwedh.jl:16\n  Test threw exception\n  Expression:\
    \ candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng\
    \ 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the 8nput.\"\
    ]\n  MethodError: no method matching filter(::var\"#2#4\", ::Int64)\n  Closest\
    \ candidates are:\n    filter(::Any, !Matched::Tuple) at ~/.conda/envs/polyglot/share/julia/base/tuple.jl:363\n\
    \    filter(::Any, !Matched::Array{T, N}) where {T, N} at ~/.conda/envs/polyglot/share/julia/base/array.jl:2479\n\
    \    filter(::Any, !Matched::AbstractDict) at ~/.conda/envs/polyglot/share/julia/base/abstractdict.jl:434\n\
    \    ...\n  Stacktrace:\n    [1] (::var\"#1#3\")(x::String)\n      @ Main /tmp/tmp9xdtwedh.jl:8\n\
    \    [2] iterate\n      @ ./"
  timestamp: 1659979569
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ [string(sum(x % 2 == 1 for x in parse.(Int, i))) for i in lst]\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) ==\
    \ [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp44zhj086.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmp44zhj086.jl:15\n  Expression: candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\n\
    \   Evaluated: [\"1\"] == [\"the number of odd elements 4n the str4ng 4 of the\
    \ 4nput.\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp44zhj086.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp44zhj086.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp44zhj086.jl:16\n  Expression: candidate([\"3\", \"11111111\"\
    ]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\n   Evaluated: [\"1\", \"1\"\
    ] == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp44zhj086.jl:16 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp44zhj086.jl:14\ntest set: Test Failed at /tmp/tmp44zhj086.jl:17\n\
    \  Expression: candidate([\"271\", \"137\", \"314\"]) == [\"the number of odd\
    \ elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the\
    \ str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the\
    \ 2nput.\"]\n   Evaluated: [\"1\", \"1\", \"0\"] == [\"the number of odd elements\
    \ 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the str3ng\
    \ 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    ]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp44zhj086.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope"
  timestamp: 1659979567
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ map(x -> string(length(filter(y -> y % 2 == 1, x))), lst)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) ==\
    \ [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmp840mt00n.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp840mt00n.jl:15\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: no method matching rem(::Char, ::Int64)\n\
    \  Closest candidates are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero})\
    \ at ~/.conda/envs/polyglot/share/julia/base/div.jl:80\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:81\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:82\n\
    \    ...\n  Stacktrace:\n    [1] (::var\"#2#4\")(y::Char)\n      @ Main /tmp/tmp840mt00n.jl:8\n\
    \    [2] filter(f::var\"#2#4\", s::String)\n      @ Base ./strings/substring.jl:246\n\
    \    [3] #1\n      @ /tmp/tmp840mt00n.jl:8 [inlined]\n    [4] iterate\n      @\
    \ ./generator.jl:47 [inlined]\n    [5] _collect(c::Vector{String}, itr::Base.Generator{Vector{String},\
    \ var\"#1#3\"}, #unused#::Base.EltypeUnknown, isz::Base.HasShape{1})\n      @\
    \ Base ./array.jl:744\n    [6] collect_similar\n      @ ./array.jl:653 [inlined]\n\
    \    [7] map\n      @ ./abstractarray.jl:2867 [inlined]\n    [8] odd_count(lst::Vector{String})\n\
    \      @ Main /tmp/tmp840mt00n.jl:8\n    [9] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmp840mt00n.jl:15 [inlined]\n\
    \   [11] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmp840mt00n.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp840mt00n.jl:16\n  Test threw exception\n  Expression:\
    \ candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng\
    \ 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the 8nput.\"\
    ]\n  MethodError: no method matching rem(::Char, ::Int64)\n  Closest candidates\
    \ are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:80\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Down}) at ~/.conda/envs/polygl"
  timestamp: 1659979569
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ map(x -> string(length(filter(y -> parse(Int, y) % 2 != 0, x))), lst)\nend\n\
    using Test\n\n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\
    \t@test(candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the\
    \ str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the\
    \ 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"]) == [\"the number\
    \ of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements\
    \ 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng\
    \ 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpjj5krmrz.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpjj5krmrz.jl:15\n  Expression: candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\n\
    \   Evaluated: [\"4\"] == [\"the number of odd elements 4n the str4ng 4 of the\
    \ 4nput.\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjj5krmrz.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjj5krmrz.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpjj5krmrz.jl:16\n  Expression: candidate([\"3\", \"11111111\"\
    ]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\n   Evaluated: [\"1\", \"8\"\
    ] == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpjj5krmrz.jl:16 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpjj5krmrz.jl:14\ntest set: Test Failed at /tmp/tmpjj5krmrz.jl:17\n\
    \  Expression: candidate([\"271\", \"137\", \"314\"]) == [\"the number of odd\
    \ elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the\
    \ str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the\
    \ 2nput.\"]\n   Evaluated: [\"2\", \"3\", \"2\"] == [\"the number of odd elements\
    \ 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the str3ng\
    \ 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    ]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjj5krmrz.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope"
  timestamp: 1659979567
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    #\
    \ your code here\n    return [string(sum(x % 2 == 1 for x in parse.(Int, i)))\
    \ for i in lst]\nend\nusing Test\n\n@testset begin\n\ncandidate = odd_count;\n\
    \t@test(candidate([\"1234567\"]) == [\"the number of odd elements 4n the str4ng\
    \ 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"]) == [\"the number\
    \ of odd elements 1n the str1ng 1 of the 1nput.\", \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"\
    ]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\", \"the number\
    \ of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of odd elements\
    \ 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpgksptp38.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmpgksptp38.jl:16\n  Expression: candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\n\
    \   Evaluated: [\"1\"] == [\"the number of odd elements 4n the str4ng 4 of the\
    \ 4nput.\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgksptp38.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpgksptp38.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpgksptp38.jl:17\n  Expression: candidate([\"3\", \"11111111\"\
    ]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\n   Evaluated: [\"1\", \"1\"\
    ] == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpgksptp38.jl:17 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpgksptp38.jl:15\ntest set: Test Failed at /tmp/tmpgksptp38.jl:18\n\
    \  Expression: candidate([\"271\", \"137\", \"314\"]) == [\"the number of odd\
    \ elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the\
    \ str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the\
    \ 2nput.\"]\n   Evaluated: [\"1\", \"1\", \"0\"] == [\"the number of odd elements\
    \ 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the str3ng\
    \ 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    ]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpgksptp38.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope"
  timestamp: 1659979567
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ map(x -> string(count(y -> y % 2 == 1, x)), lst)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the\
    \ number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmp2br6gexs.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp2br6gexs.jl:15\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: no method matching rem(::Char, ::Int64)\n\
    \  Closest candidates are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero})\
    \ at ~/.conda/envs/polyglot/share/julia/base/div.jl:80\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:81\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:82\n\
    \    ...\n  Stacktrace:\n    [1] (::var\"#2#4\")(y::Char)\n      @ Main /tmp/tmp2br6gexs.jl:8\n\
    \    [2] _simple_count\n      @ ./reduce.jl:1206 [inlined]\n    [3] #count#271\n\
    \      @ ./reduce.jl:1201 [inlined]\n    [4] count\n      @ ./reduce.jl:1201 [inlined]\n\
    \    [5] (::var\"#1#3\")(x::String)\n      @ Main /tmp/tmp2br6gexs.jl:8\n    [6]\
    \ iterate\n      @ ./generator.jl:47 [inlined]\n    [7] _collect(c::Vector{String},\
    \ itr::Base.Generator{Vector{String}, var\"#1#3\"}, #unused#::Base.EltypeUnknown,\
    \ isz::Base.HasShape{1})\n      @ Base ./array.jl:744\n    [8] collect_similar\n\
    \      @ ./array.jl:653 [inlined]\n    [9] map\n      @ ./abstractarray.jl:2867\
    \ [inlined]\n   [10] odd_count(lst::Vector{String})\n      @ Main /tmp/tmp2br6gexs.jl:8\n\
    \   [11] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [12] macro expansion\n      @ /tmp/tmp2br6gexs.jl:15 [inlined]\n\
    \   [13] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [14] top-level scope\n      @ /tmp/tmp2br6gexs.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp2br6gexs.jl:16\n  Test threw exception\n  Expression:\
    \ candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng\
    \ 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the 8nput.\"\
    ]\n  MethodError: no method matching rem(::Char, ::Int64)\n  Closest candidates\
    \ are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero}) at ~/.conda/envs/polyglot/share/"
  timestamp: 1659979569
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    count\
    \ = 0\n    for i in lst\n        for j in i\n            if j % 2 == 1\n     \
    \           count += 1\n            end\n        end\n        println(count)\n\
    \        count = 0\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the number of odd elements\
    \ 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"])\
    \ == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\"\
    , \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    , \"the number of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of\
    \ odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmp7w7tl271.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmp7w7tl271.jl:24\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: no method matching rem(::Char, ::Int64)\n\
    \  Closest candidates are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero})\
    \ at ~/.conda/envs/polyglot/share/julia/base/div.jl:80\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:81\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:82\n\
    \    ...\n  Stacktrace:\n   [1] odd_count(lst::Vector{String})\n     @ Main /tmp/tmp7w7tl271.jl:11\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7w7tl271.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp7w7tl271.jl:23\ntest set:\
    \ Error During Test at /tmp/tmp7w7tl271.jl:25\n  Test threw exception\n  Expression:\
    \ candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng\
    \ 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the 8nput.\"\
    ]\n  MethodError: no method matching rem(::Char, ::Int64)\n  Closest candidates\
    \ are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:80\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Down}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:81\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:82\n\
    \    ...\n  Stacktrace:\n   [1] odd_count(lst::Vector{String})\n     @ Main /tmp/tmp7w7tl271.jl:11\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp7w7tl271.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n  "
  timestamp: 1659979571
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ [string(sum(x % 2 == 1 for x in parse.(Int, i))) for i in lst]\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) ==\
    \ [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp44zhj086.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmp44zhj086.jl:15\n  Expression: candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\n\
    \   Evaluated: [\"1\"] == [\"the number of odd elements 4n the str4ng 4 of the\
    \ 4nput.\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp44zhj086.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp44zhj086.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp44zhj086.jl:16\n  Expression: candidate([\"3\", \"11111111\"\
    ]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\n   Evaluated: [\"1\", \"1\"\
    ] == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp44zhj086.jl:16 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp44zhj086.jl:14\ntest set: Test Failed at /tmp/tmp44zhj086.jl:17\n\
    \  Expression: candidate([\"271\", \"137\", \"314\"]) == [\"the number of odd\
    \ elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the\
    \ str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the\
    \ 2nput.\"]\n   Evaluated: [\"1\", \"1\", \"0\"] == [\"the number of odd elements\
    \ 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the str3ng\
    \ 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    ]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp44zhj086.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope"
  timestamp: 1659979567
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ [string(length(filter(x->parse(Int,x)%2==1,i))) for i in lst]\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) ==\
    \ [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmptvjozxto.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmptvjozxto.jl:15\n  Expression: candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\n\
    \   Evaluated: [\"4\"] == [\"the number of odd elements 4n the str4ng 4 of the\
    \ 4nput.\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptvjozxto.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptvjozxto.jl:14\ntest set: Test\
    \ Failed at /tmp/tmptvjozxto.jl:16\n  Expression: candidate([\"3\", \"11111111\"\
    ]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\n   Evaluated: [\"1\", \"8\"\
    ] == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmptvjozxto.jl:16 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmptvjozxto.jl:14\ntest set: Test Failed at /tmp/tmptvjozxto.jl:17\n\
    \  Expression: candidate([\"271\", \"137\", \"314\"]) == [\"the number of odd\
    \ elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the\
    \ str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the\
    \ 2nput.\"]\n   Evaluated: [\"2\", \"3\", \"2\"] == [\"the number of odd elements\
    \ 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the str3ng\
    \ 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    ]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptvjozxto.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope"
  timestamp: 1659979570
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ map(x -> string(count(y -> y % 2 == 1, parse.(Int, x))), lst)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) ==\
    \ [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmprl0m5_1f.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmprl0m5_1f.jl:15\n  Expression: candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\n\
    \   Evaluated: [\"1\"] == [\"the number of odd elements 4n the str4ng 4 of the\
    \ 4nput.\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprl0m5_1f.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprl0m5_1f.jl:14\ntest set: Test\
    \ Failed at /tmp/tmprl0m5_1f.jl:16\n  Expression: candidate([\"3\", \"11111111\"\
    ]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\n   Evaluated: [\"1\", \"1\"\
    ] == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmprl0m5_1f.jl:16 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmprl0m5_1f.jl:14\ntest set: Test Failed at /tmp/tmprl0m5_1f.jl:17\n\
    \  Expression: candidate([\"271\", \"137\", \"314\"]) == [\"the number of odd\
    \ elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the\
    \ str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the\
    \ 2nput.\"]\n   Evaluated: [\"1\", \"1\", \"0\"] == [\"the number of odd elements\
    \ 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the str3ng\
    \ 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    ]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprl0m5_1f.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope"
  timestamp: 1659979567
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    #\
    \ your code here\n    output = []\n    for i in lst\n        count = 0\n     \
    \   for j in i\n            if parse(Int, j) % 2 != 0\n                count +=\
    \ 1\n            end\n        end\n        push!(output, count)\n    end\n   \
    \ return output\nend\nusing Test\n\n@testset begin\n\ncandidate = odd_count;\n\
    \t@test(candidate([\"1234567\"]) == [\"the number of odd elements 4n the str4ng\
    \ 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"]) == [\"the number\
    \ of odd elements 1n the str1ng 1 of the 1nput.\", \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"\
    ]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\", \"the number\
    \ of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of odd elements\
    \ 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpjoob5zfa.jl:23

    '
  stdout: "test set: Error During Test at /tmp/tmpjoob5zfa.jl:26\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: Cannot `convert` an object of type\
    \ Int64 to an object of type String\n  Closest candidates are:\n    convert(::Type{String},\
    \ !Matched::String) at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n    [1] setindex!(A::Vector{String}, x::Int64, i1::Int64)\n\
    \      @ Base ./array.jl:903\n    [2] _unsafe_copyto!(dest::Vector{String}, doffs::Int64,\
    \ src::Vector{Any}, soffs::Int64, n::Int64)\n      @ Base ./array.jl:253\n   \
    \ [3] unsafe_copyto!\n      @ ./array.jl:307 [inlined]\n    [4] _copyto_impl!\n\
    \      @ ./array.jl:331 [inlined]\n    [5] copyto!\n      @ ./array.jl:317 [inlined]\n\
    \    [6] copyto!\n      @ ./array.jl:343 [inlined]\n    [7] copyto_axcheck!\n\
    \      @ ./abstractarray.jl:1104 [inlined]\n    [8] Vector{String}(x::Vector{Any})\n\
    \      @ Base ./array.jl:563\n    [9] convert\n      @ ./array.jl:554 [inlined]\n\
    \   [10] odd_count(lst::Vector{String})\n      @ Main /tmp/tmpjoob5zfa.jl:19\n\
    \   [11] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [12] macro expansion\n      @ /tmp/tmpjoob5zfa.jl:26 [inlined]\n\
    \   [13] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [14] top-level scope\n      @ /tmp/tmpjoob5zfa.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpjoob5zfa.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng\
    \ 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the 8nput.\"\
    ]\n  MethodError: Cannot `convert` an object of type Int64 to an object of type\
    \ String\n  Closest candidate"
  timestamp: 1659979572
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    #\
    \ your code here\n    return [string(count(x->x%2==1, parse(Int, y))) for y in\
    \ lst]\nend\nusing Test\n\n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\
    \t@test(candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the\
    \ str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the\
    \ 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"]) == [\"the number\
    \ of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements\
    \ 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng\
    \ 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpfhvozhfu.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmpfhvozhfu.jl:16\n  Expression: candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\n\
    \   Evaluated: [\"1\"] == [\"the number of odd elements 4n the str4ng 4 of the\
    \ 4nput.\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfhvozhfu.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfhvozhfu.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpfhvozhfu.jl:17\n  Expression: candidate([\"3\", \"11111111\"\
    ]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\n   Evaluated: [\"1\", \"1\"\
    ] == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpfhvozhfu.jl:17 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpfhvozhfu.jl:15\ntest set: Test Failed at /tmp/tmpfhvozhfu.jl:18\n\
    \  Expression: candidate([\"271\", \"137\", \"314\"]) == [\"the number of odd\
    \ elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the\
    \ str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the\
    \ 2nput.\"]\n   Evaluated: [\"1\", \"1\", \"0\"] == [\"the number of odd elements\
    \ 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the str3ng\
    \ 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    ]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfhvozhfu.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope"
  timestamp: 1659979570
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ [string(count(x->x%2==1, parse(Int, y))) for y in lst]\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) ==\
    \ [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp3vn16wxx.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmp3vn16wxx.jl:15\n  Expression: candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\n\
    \   Evaluated: [\"1\"] == [\"the number of odd elements 4n the str4ng 4 of the\
    \ 4nput.\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3vn16wxx.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3vn16wxx.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp3vn16wxx.jl:16\n  Expression: candidate([\"3\", \"11111111\"\
    ]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\n   Evaluated: [\"1\", \"1\"\
    ] == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp3vn16wxx.jl:16 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp3vn16wxx.jl:14\ntest set: Test Failed at /tmp/tmp3vn16wxx.jl:17\n\
    \  Expression: candidate([\"271\", \"137\", \"314\"]) == [\"the number of odd\
    \ elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the\
    \ str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the\
    \ 2nput.\"]\n   Evaluated: [\"1\", \"1\", \"0\"] == [\"the number of odd elements\
    \ 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the str3ng\
    \ 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    ]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3vn16wxx.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope"
  timestamp: 1659979567
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ map(x -> string(length(filter(y -> y % 2 == 1, parse.(Int, x)))), lst)\nend\n\
    using Test\n\n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\
    \t@test(candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the\
    \ str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the\
    \ 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"]) == [\"the number\
    \ of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements\
    \ 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng\
    \ 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmp9xdtwedh.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp9xdtwedh.jl:15\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: no method matching filter(::var\"\
    #2#4\", ::Int64)\n  Closest candidates are:\n    filter(::Any, !Matched::Tuple)\
    \ at ~/.conda/envs/polyglot/share/julia/base/tuple.jl:363\n    filter(::Any, !Matched::Array{T,\
    \ N}) where {T, N} at ~/.conda/envs/polyglot/share/julia/base/array.jl:2479\n\
    \    filter(::Any, !Matched::AbstractDict) at ~/.conda/envs/polyglot/share/julia/base/abstractdict.jl:434\n\
    \    ...\n  Stacktrace:\n    [1] (::var\"#1#3\")(x::String)\n      @ Main /tmp/tmp9xdtwedh.jl:8\n\
    \    [2] iterate\n      @ ./generator.jl:47 [inlined]\n    [3] _collect\n    \
    \  @ ./array.jl:744 [inlined]\n    [4] collect_similar\n      @ ./array.jl:653\
    \ [inlined]\n    [5] map\n      @ ./abstractarray.jl:2867 [inlined]\n    [6] odd_count(lst::Vector{String})\n\
    \      @ Main /tmp/tmp9xdtwedh.jl:8\n    [7] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [8] macro expansion\n      @ /tmp/tmp9xdtwedh.jl:15 [inlined]\n\
    \    [9] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [10] top-level scope\n      @ /tmp/tmp9xdtwedh.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp9xdtwedh.jl:16\n  Test threw exception\n  Expression:\
    \ candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng\
    \ 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the 8nput.\"\
    ]\n  MethodError: no method matching filter(::var\"#2#4\", ::Int64)\n  Closest\
    \ candidates are:\n    filter(::Any, !Matched::Tuple) at ~/.conda/envs/polyglot/share/julia/base/tuple.jl:363\n\
    \    filter(::Any, !Matched::Array{T, N}) where {T, N} at ~/.conda/envs/polyglot/share/julia/base/array.jl:2479\n\
    \    filter(::Any, !Matched::AbstractDict) at ~/.conda/envs/polyglot/share/julia/base/abstractdict.jl:434\n\
    \    ...\n  Stacktrace:\n    [1] (::var\"#1#3\")(x::String)\n      @ Main /tmp/tmp9xdtwedh.jl:8\n\
    \    [2] iterate\n      @ ./"
  timestamp: 1659979569
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ map(x -> string(length(filter(y -> parse(Int, y) % 2 != 0, x))), lst)\nend\n\
    using Test\n\n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\
    \t@test(candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the\
    \ str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the\
    \ 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"]) == [\"the number\
    \ of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements\
    \ 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng\
    \ 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpjj5krmrz.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpjj5krmrz.jl:15\n  Expression: candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\n\
    \   Evaluated: [\"4\"] == [\"the number of odd elements 4n the str4ng 4 of the\
    \ 4nput.\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjj5krmrz.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjj5krmrz.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpjj5krmrz.jl:16\n  Expression: candidate([\"3\", \"11111111\"\
    ]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\n   Evaluated: [\"1\", \"8\"\
    ] == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpjj5krmrz.jl:16 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpjj5krmrz.jl:14\ntest set: Test Failed at /tmp/tmpjj5krmrz.jl:17\n\
    \  Expression: candidate([\"271\", \"137\", \"314\"]) == [\"the number of odd\
    \ elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the\
    \ str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the\
    \ 2nput.\"]\n   Evaluated: [\"2\", \"3\", \"2\"] == [\"the number of odd elements\
    \ 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the str3ng\
    \ 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    ]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjj5krmrz.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope"
  timestamp: 1659979567
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ [string(count(x->x%2!=0,x)) for x in lst]\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the number of\
    \ odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"\
    11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpo1cxw_bi.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpo1cxw_bi.jl:15\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: no method matching rem(::Char, ::Int64)\n\
    \  Closest candidates are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero})\
    \ at ~/.conda/envs/polyglot/share/julia/base/div.jl:80\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:81\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:82\n\
    \    ...\n  Stacktrace:\n    [1] (::var\"#2#4\")(x::Char)\n      @ Main /tmp/tmpo1cxw_bi.jl:8\n\
    \    [2] _simple_count\n      @ ./reduce.jl:1206 [inlined]\n    [3] #count#271\n\
    \      @ ./reduce.jl:1201 [inlined]\n    [4] count\n      @ ./reduce.jl:1201 [inlined]\n\
    \    [5] (::var\"#1#3\")(x::String)\n      @ Main ./none:0\n    [6] iterate\n\
    \      @ ./generator.jl:47 [inlined]\n    [7] collect(itr::Base.Generator{Vector{String},\
    \ var\"#1#3\"})\n      @ Base ./array.jl:724\n    [8] odd_count(lst::Vector{String})\n\
    \      @ Main /tmp/tmpo1cxw_bi.jl:8\n    [9] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpo1cxw_bi.jl:15 [inlined]\n\
    \   [11] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpo1cxw_bi.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpo1cxw_bi.jl:16\n  Test threw exception\n  Expression:\
    \ candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng\
    \ 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the 8nput.\"\
    ]\n  MethodError: no method matching rem(::Char, ::Int64)\n  Closest candidates\
    \ are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:80\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Down}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:81\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at ~/.conda/envs/po"
  timestamp: 1659979569
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    #\
    \ your code here\n    return [string(count(x->x%2==1,parse(Int,y))) for y in lst]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\
    \t@test(candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the\
    \ str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the\
    \ 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"]) == [\"the number\
    \ of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements\
    \ 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng\
    \ 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmplr3jgbom.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmplr3jgbom.jl:16\n  Expression: candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\n\
    \   Evaluated: [\"1\"] == [\"the number of odd elements 4n the str4ng 4 of the\
    \ 4nput.\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplr3jgbom.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplr3jgbom.jl:15\ntest set: Test\
    \ Failed at /tmp/tmplr3jgbom.jl:17\n  Expression: candidate([\"3\", \"11111111\"\
    ]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\n   Evaluated: [\"1\", \"1\"\
    ] == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmplr3jgbom.jl:17 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmplr3jgbom.jl:15\ntest set: Test Failed at /tmp/tmplr3jgbom.jl:18\n\
    \  Expression: candidate([\"271\", \"137\", \"314\"]) == [\"the number of odd\
    \ elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the\
    \ str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the\
    \ 2nput.\"]\n   Evaluated: [\"1\", \"1\", \"0\"] == [\"the number of odd elements\
    \ 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the str3ng\
    \ 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    ]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplr3jgbom.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope"
  timestamp: 1659979570
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ [string(count(x->parse(Int,x)%2==1,i)) for i in lst]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the\
    \ number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp7kpye1go.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmp7kpye1go.jl:15\n  Expression: candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\n\
    \   Evaluated: [\"4\"] == [\"the number of odd elements 4n the str4ng 4 of the\
    \ 4nput.\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7kpye1go.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7kpye1go.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp7kpye1go.jl:16\n  Expression: candidate([\"3\", \"11111111\"\
    ]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\n   Evaluated: [\"1\", \"8\"\
    ] == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp7kpye1go.jl:16 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp7kpye1go.jl:14\ntest set: Test Failed at /tmp/tmp7kpye1go.jl:17\n\
    \  Expression: candidate([\"271\", \"137\", \"314\"]) == [\"the number of odd\
    \ elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the\
    \ str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the\
    \ 2nput.\"]\n   Evaluated: [\"2\", \"3\", \"2\"] == [\"the number of odd elements\
    \ 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the str3ng\
    \ 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    ]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7kpye1go.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope"
  timestamp: 1659979570
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ map(x -> length(filter(y -> parse(Int, y) % 2 != 0, x)), lst)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) ==\
    \ [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpfbff2k_f.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpfbff2k_f.jl:15\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: Cannot `convert` an object of type\
    \ Int64 to an object of type String\n  Closest candidates are:\n    convert(::Type{String},\
    \ !Matched::String) at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n    [1] setindex!(A::Vector{String}, x::Int64, i1::Int64)\n\
    \      @ Base ./array.jl:903\n    [2] _unsafe_copyto!(dest::Vector{String}, doffs::Int64,\
    \ src::Vector{Int64}, soffs::Int64, n::Int64)\n      @ Base ./array.jl:253\n \
    \   [3] unsafe_copyto!\n      @ ./array.jl:307 [inlined]\n    [4] _copyto_impl!\n\
    \      @ ./array.jl:331 [inlined]\n    [5] copyto!\n      @ ./array.jl:317 [inlined]\n\
    \    [6] copyto!\n      @ ./array.jl:343 [inlined]\n    [7] copyto_axcheck!\n\
    \      @ ./abstractarray.jl:1104 [inlined]\n    [8] Vector{String}(x::Vector{Int64})\n\
    \      @ Base ./array.jl:563\n    [9] convert\n      @ ./array.jl:554 [inlined]\n\
    \   [10] odd_count(lst::Vector{String})\n      @ Main /tmp/tmpfbff2k_f.jl:8\n\
    \   [11] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [12] macro expansion\n      @ /tmp/tmpfbff2k_f.jl:15 [inlined]\n\
    \   [13] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [14] top-level scope\n      @ /tmp/tmpfbff2k_f.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpfbff2k_f.jl:16\n  Test threw exception\n  Expression:\
    \ candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng\
    \ 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the 8nput.\"\
    ]\n  MethodError: Cannot `convert` an object of type Int64 to an object of type\
    \ String\n  Closest candid"
  timestamp: 1659979572
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    count\
    \ = 0\n    for i in lst\n        for j in i\n            if parse(Int, j) % 2\
    \ != 0\n                count += 1\n            end\n        end\n        println(count)\n\
    \        count = 0\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the number of odd elements\
    \ 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"])\
    \ == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\"\
    , \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    , \"the number of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of\
    \ odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpdmwipwzv.jl:21

    '
  stdout: "4\ntest set: Error During Test at /tmp/tmpdmwipwzv.jl:24\n  Test threw\
    \ exception\n  Expression: candidate([\"1234567\"]) == [\"the number of odd elements\
    \ 4n the str4ng 4 of the 4nput.\"]\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type Vector{String}\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::LinearAlgebra.Factorization) where T<:AbstractArray\
    \ at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{Vector{String}}, !Matched::LibGit2.StrArrayStruct) at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LibGit2/src/strarray.jl:13\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at ~/.conda/envs/polyglot/share/julia/base/array.jl:554\n\
    \    ...\n  Stacktrace:\n   [1] odd_count(lst::Vector{String})\n     @ Main /tmp/tmpdmwipwzv.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpdmwipwzv.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpdmwipwzv.jl:23\n1\n8\ntest\
    \ set: Error During Test at /tmp/tmpdmwipwzv.jl:25\n  Test threw exception\n \
    \ Expression: candidate([\"3\", \"11111111\"]) == [\"the number of odd elements\
    \ 1n the str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng\
    \ 8 of the 8nput.\"]\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Vector{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::LinearAlgebra.Factorization) where T<:AbstractArray at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{Vector{String}}, !Matched::LibGit2.StrArrayStruct) at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LibGit2/src/strarray.jl:13\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at ~/.conda/envs/polyglot/share/julia/base/array.jl:554\n\
    \    ...\n  Stacktrace:\n   [1] odd_count(lst::Vector{String})\n     @ Main /t"
  timestamp: 1659979572
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    \"\
    \"\"\n    >>> odd_count([\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\"\
    , \"9\", \"10\"])\n    [\"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\", \"1\"\
    , \"1\", \"1\"]\n    >>> odd_count([\"1\", \"2\", \"3\", \"4\", \"5\", \"6\",\
    \ \"7\", \"8\", \"9\", \"10\", \"11\"])\n    [\"2\", \"2\", \"2\", \"2\", \"2\"\
    , \"2\", \"2\", \"2\", \"2\", \"2\", \"2\"]\n    >>> odd_count([\"1\", \"2\",\
    \ \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\"])\n\
    \    [\"2\", \"2\", \"2\", \"2\", \"2\", \"2\", \"2\", \"2\", \"2\", \"2\", \"\
    2\", \"2\"]\n    >>> odd_count([\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\"\
    , \"8\", \"9\", \"10\", \"11\", \"12\", \"13\"])\n    [\"3\", \"3\", \"3\", \"\
    3\", \"3\", \"3\", \"3\", \"3\", \"3\", \"3\", \"3\", \"3\", \"3\"]\n    >>> odd_count([\"\
    1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"\
    12\", \"13\", \"14\"])\n    [\"3\", \"3\", \"3\", \"3\", \"3\", \"3\", \"3\",\
    \ \"3\", \"3\", \"3\", \"3\", \"3\", \"3\", \"3\"]\n    >>> odd_count([\"1\",\
    \ \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\", \"10\", \"11\", \"12\"\
    , \"13\", \"14\", \"15\"])\n    [\"4\", \"4\", \"4\", \"4\", \"4\", \"4\", \"\
    4\", \"4\", \"4\", \"4\", \"4\", \"4\", \"4\", \"4\", \"4\nusing Test\n\n@testset\
    \ begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the\
    \ number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpdgoegdsy.jl:1\nin expression starting at /tmp/tmpdgoegdsy.jl:1\n"
  stdout: ''
  timestamp: 1659979569
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ map(x -> string(count(y -> y % 2 == 1, x)), lst)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the\
    \ number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmp2br6gexs.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp2br6gexs.jl:15\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: no method matching rem(::Char, ::Int64)\n\
    \  Closest candidates are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero})\
    \ at ~/.conda/envs/polyglot/share/julia/base/div.jl:80\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:81\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:82\n\
    \    ...\n  Stacktrace:\n    [1] (::var\"#2#4\")(y::Char)\n      @ Main /tmp/tmp2br6gexs.jl:8\n\
    \    [2] _simple_count\n      @ ./reduce.jl:1206 [inlined]\n    [3] #count#271\n\
    \      @ ./reduce.jl:1201 [inlined]\n    [4] count\n      @ ./reduce.jl:1201 [inlined]\n\
    \    [5] (::var\"#1#3\")(x::String)\n      @ Main /tmp/tmp2br6gexs.jl:8\n    [6]\
    \ iterate\n      @ ./generator.jl:47 [inlined]\n    [7] _collect(c::Vector{String},\
    \ itr::Base.Generator{Vector{String}, var\"#1#3\"}, #unused#::Base.EltypeUnknown,\
    \ isz::Base.HasShape{1})\n      @ Base ./array.jl:744\n    [8] collect_similar\n\
    \      @ ./array.jl:653 [inlined]\n    [9] map\n      @ ./abstractarray.jl:2867\
    \ [inlined]\n   [10] odd_count(lst::Vector{String})\n      @ Main /tmp/tmp2br6gexs.jl:8\n\
    \   [11] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [12] macro expansion\n      @ /tmp/tmp2br6gexs.jl:15 [inlined]\n\
    \   [13] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [14] top-level scope\n      @ /tmp/tmp2br6gexs.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp2br6gexs.jl:16\n  Test threw exception\n  Expression:\
    \ candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng\
    \ 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the 8nput.\"\
    ]\n  MethodError: no method matching rem(::Char, ::Int64)\n  Closest candidates\
    \ are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero}) at ~/.conda/envs/polyglot/share/"
  timestamp: 1659979569
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ map(x -> string(length(filter(y -> y % 2 == 1, parse.(Int, x)))), lst)\nend\n\
    using Test\n\n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\
    \t@test(candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the\
    \ str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the\
    \ 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"]) == [\"the number\
    \ of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements\
    \ 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng\
    \ 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmp9xdtwedh.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp9xdtwedh.jl:15\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: no method matching filter(::var\"\
    #2#4\", ::Int64)\n  Closest candidates are:\n    filter(::Any, !Matched::Tuple)\
    \ at ~/.conda/envs/polyglot/share/julia/base/tuple.jl:363\n    filter(::Any, !Matched::Array{T,\
    \ N}) where {T, N} at ~/.conda/envs/polyglot/share/julia/base/array.jl:2479\n\
    \    filter(::Any, !Matched::AbstractDict) at ~/.conda/envs/polyglot/share/julia/base/abstractdict.jl:434\n\
    \    ...\n  Stacktrace:\n    [1] (::var\"#1#3\")(x::String)\n      @ Main /tmp/tmp9xdtwedh.jl:8\n\
    \    [2] iterate\n      @ ./generator.jl:47 [inlined]\n    [3] _collect\n    \
    \  @ ./array.jl:744 [inlined]\n    [4] collect_similar\n      @ ./array.jl:653\
    \ [inlined]\n    [5] map\n      @ ./abstractarray.jl:2867 [inlined]\n    [6] odd_count(lst::Vector{String})\n\
    \      @ Main /tmp/tmp9xdtwedh.jl:8\n    [7] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [8] macro expansion\n      @ /tmp/tmp9xdtwedh.jl:15 [inlined]\n\
    \    [9] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [10] top-level scope\n      @ /tmp/tmp9xdtwedh.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp9xdtwedh.jl:16\n  Test threw exception\n  Expression:\
    \ candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng\
    \ 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the 8nput.\"\
    ]\n  MethodError: no method matching filter(::var\"#2#4\", ::Int64)\n  Closest\
    \ candidates are:\n    filter(::Any, !Matched::Tuple) at ~/.conda/envs/polyglot/share/julia/base/tuple.jl:363\n\
    \    filter(::Any, !Matched::Array{T, N}) where {T, N} at ~/.conda/envs/polyglot/share/julia/base/array.jl:2479\n\
    \    filter(::Any, !Matched::AbstractDict) at ~/.conda/envs/polyglot/share/julia/base/abstractdict.jl:434\n\
    \    ...\n  Stacktrace:\n    [1] (::var\"#1#3\")(x::String)\n      @ Main /tmp/tmp9xdtwedh.jl:8\n\
    \    [2] iterate\n      @ ./"
  timestamp: 1659979569
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    #\
    \ your code here\n    output = []\n    for i in lst\n        count = 0\n     \
    \   for j in i\n            if parse(Int, j) % 2 != 0\n                count +=\
    \ 1\n            end\n        end\n        push!(output, count)\n    end\n   \
    \ return output\nend\nusing Test\n\n@testset begin\n\ncandidate = odd_count;\n\
    \t@test(candidate([\"1234567\"]) == [\"the number of odd elements 4n the str4ng\
    \ 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"]) == [\"the number\
    \ of odd elements 1n the str1ng 1 of the 1nput.\", \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"\
    ]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\", \"the number\
    \ of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of odd elements\
    \ 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpjoob5zfa.jl:23

    '
  stdout: "test set: Error During Test at /tmp/tmpjoob5zfa.jl:26\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: Cannot `convert` an object of type\
    \ Int64 to an object of type String\n  Closest candidates are:\n    convert(::Type{String},\
    \ !Matched::String) at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n    [1] setindex!(A::Vector{String}, x::Int64, i1::Int64)\n\
    \      @ Base ./array.jl:903\n    [2] _unsafe_copyto!(dest::Vector{String}, doffs::Int64,\
    \ src::Vector{Any}, soffs::Int64, n::Int64)\n      @ Base ./array.jl:253\n   \
    \ [3] unsafe_copyto!\n      @ ./array.jl:307 [inlined]\n    [4] _copyto_impl!\n\
    \      @ ./array.jl:331 [inlined]\n    [5] copyto!\n      @ ./array.jl:317 [inlined]\n\
    \    [6] copyto!\n      @ ./array.jl:343 [inlined]\n    [7] copyto_axcheck!\n\
    \      @ ./abstractarray.jl:1104 [inlined]\n    [8] Vector{String}(x::Vector{Any})\n\
    \      @ Base ./array.jl:563\n    [9] convert\n      @ ./array.jl:554 [inlined]\n\
    \   [10] odd_count(lst::Vector{String})\n      @ Main /tmp/tmpjoob5zfa.jl:19\n\
    \   [11] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [12] macro expansion\n      @ /tmp/tmpjoob5zfa.jl:26 [inlined]\n\
    \   [13] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [14] top-level scope\n      @ /tmp/tmpjoob5zfa.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpjoob5zfa.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng\
    \ 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the 8nput.\"\
    ]\n  MethodError: Cannot `convert` an object of type Int64 to an object of type\
    \ String\n  Closest candidate"
  timestamp: 1659979572
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ map(x -> length(filter(y -> y % 2 == 1, parse.(Int, x))), lst)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) ==\
    \ [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpxcg3uqq1.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpxcg3uqq1.jl:15\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: no method matching filter(::var\"\
    #2#4\", ::Int64)\n  Closest candidates are:\n    filter(::Any, !Matched::Tuple)\
    \ at ~/.conda/envs/polyglot/share/julia/base/tuple.jl:363\n    filter(::Any, !Matched::Array{T,\
    \ N}) where {T, N} at ~/.conda/envs/polyglot/share/julia/base/array.jl:2479\n\
    \    filter(::Any, !Matched::AbstractDict) at ~/.conda/envs/polyglot/share/julia/base/abstractdict.jl:434\n\
    \    ...\n  Stacktrace:\n    [1] (::var\"#1#3\")(x::String)\n      @ Main /tmp/tmpxcg3uqq1.jl:8\n\
    \    [2] iterate\n      @ ./generator.jl:47 [inlined]\n    [3] _collect\n    \
    \  @ ./array.jl:744 [inlined]\n    [4] collect_similar\n      @ ./array.jl:653\
    \ [inlined]\n    [5] map\n      @ ./abstractarray.jl:2867 [inlined]\n    [6] odd_count(lst::Vector{String})\n\
    \      @ Main /tmp/tmpxcg3uqq1.jl:8\n    [7] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [8] macro expansion\n      @ /tmp/tmpxcg3uqq1.jl:15 [inlined]\n\
    \    [9] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [10] top-level scope\n      @ /tmp/tmpxcg3uqq1.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpxcg3uqq1.jl:16\n  Test threw exception\n  Expression:\
    \ candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng\
    \ 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the 8nput.\"\
    ]\n  MethodError: no method matching filter(::var\"#2#4\", ::Int64)\n  Closest\
    \ candidates are:\n    filter(::Any, !Matched::Tuple) at ~/.conda/envs/polyglot/share/julia/base/tuple.jl:363\n\
    \    filter(::Any, !Matched::Array{T, N}) where {T, N} at ~/.conda/envs/polyglot/share/julia/base/array.jl:2479\n\
    \    filter(::Any, !Matched::AbstractDict) at ~/.conda/envs/polyglot/share/julia/base/abstractdict.jl:434\n\
    \    ...\n  Stacktrace:\n    [1] (::var\"#1#3\")(x::String)\n      @ Main /tmp/tmpxcg3uqq1.jl:8\n\
    \    [2] iterate\n      @ ./"
  timestamp: 1659979572
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ [string(count(x->parse(Int,x)%2!=0,lst[i])) for i in 1:length(lst)]\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"\
    ]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpg6q7iyyk.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpg6q7iyyk.jl:15\n  Expression: candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\n\
    \   Evaluated: [\"4\"] == [\"the number of odd elements 4n the str4ng 4 of the\
    \ 4nput.\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpg6q7iyyk.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpg6q7iyyk.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpg6q7iyyk.jl:16\n  Expression: candidate([\"3\", \"11111111\"\
    ]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\n   Evaluated: [\"1\", \"8\"\
    ] == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpg6q7iyyk.jl:16 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpg6q7iyyk.jl:14\ntest set: Test Failed at /tmp/tmpg6q7iyyk.jl:17\n\
    \  Expression: candidate([\"271\", \"137\", \"314\"]) == [\"the number of odd\
    \ elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the\
    \ str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the\
    \ 2nput.\"]\n   Evaluated: [\"2\", \"3\", \"2\"] == [\"the number of odd elements\
    \ 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the str3ng\
    \ 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    ]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpg6q7iyyk.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope"
  timestamp: 1659979570
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ map(x -> string(count(y -> y % 2 == 1, x)), lst)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the\
    \ number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmp2br6gexs.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp2br6gexs.jl:15\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: no method matching rem(::Char, ::Int64)\n\
    \  Closest candidates are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero})\
    \ at ~/.conda/envs/polyglot/share/julia/base/div.jl:80\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:81\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:82\n\
    \    ...\n  Stacktrace:\n    [1] (::var\"#2#4\")(y::Char)\n      @ Main /tmp/tmp2br6gexs.jl:8\n\
    \    [2] _simple_count\n      @ ./reduce.jl:1206 [inlined]\n    [3] #count#271\n\
    \      @ ./reduce.jl:1201 [inlined]\n    [4] count\n      @ ./reduce.jl:1201 [inlined]\n\
    \    [5] (::var\"#1#3\")(x::String)\n      @ Main /tmp/tmp2br6gexs.jl:8\n    [6]\
    \ iterate\n      @ ./generator.jl:47 [inlined]\n    [7] _collect(c::Vector{String},\
    \ itr::Base.Generator{Vector{String}, var\"#1#3\"}, #unused#::Base.EltypeUnknown,\
    \ isz::Base.HasShape{1})\n      @ Base ./array.jl:744\n    [8] collect_similar\n\
    \      @ ./array.jl:653 [inlined]\n    [9] map\n      @ ./abstractarray.jl:2867\
    \ [inlined]\n   [10] odd_count(lst::Vector{String})\n      @ Main /tmp/tmp2br6gexs.jl:8\n\
    \   [11] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [12] macro expansion\n      @ /tmp/tmp2br6gexs.jl:15 [inlined]\n\
    \   [13] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [14] top-level scope\n      @ /tmp/tmp2br6gexs.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp2br6gexs.jl:16\n  Test threw exception\n  Expression:\
    \ candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng\
    \ 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the 8nput.\"\
    ]\n  MethodError: no method matching rem(::Char, ::Int64)\n  Closest candidates\
    \ are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero}) at ~/.conda/envs/polyglot/share/"
  timestamp: 1659979569
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ map(x -> string(length(filter(y -> y % 2 == 1, x))), lst)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) ==\
    \ [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmp840mt00n.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp840mt00n.jl:15\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: no method matching rem(::Char, ::Int64)\n\
    \  Closest candidates are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero})\
    \ at ~/.conda/envs/polyglot/share/julia/base/div.jl:80\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:81\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:82\n\
    \    ...\n  Stacktrace:\n    [1] (::var\"#2#4\")(y::Char)\n      @ Main /tmp/tmp840mt00n.jl:8\n\
    \    [2] filter(f::var\"#2#4\", s::String)\n      @ Base ./strings/substring.jl:246\n\
    \    [3] #1\n      @ /tmp/tmp840mt00n.jl:8 [inlined]\n    [4] iterate\n      @\
    \ ./generator.jl:47 [inlined]\n    [5] _collect(c::Vector{String}, itr::Base.Generator{Vector{String},\
    \ var\"#1#3\"}, #unused#::Base.EltypeUnknown, isz::Base.HasShape{1})\n      @\
    \ Base ./array.jl:744\n    [6] collect_similar\n      @ ./array.jl:653 [inlined]\n\
    \    [7] map\n      @ ./abstractarray.jl:2867 [inlined]\n    [8] odd_count(lst::Vector{String})\n\
    \      @ Main /tmp/tmp840mt00n.jl:8\n    [9] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmp840mt00n.jl:15 [inlined]\n\
    \   [11] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmp840mt00n.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp840mt00n.jl:16\n  Test threw exception\n  Expression:\
    \ candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng\
    \ 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the 8nput.\"\
    ]\n  MethodError: no method matching rem(::Char, ::Int64)\n  Closest candidates\
    \ are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:80\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Down}) at ~/.conda/envs/polygl"
  timestamp: 1659979569
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ map(x -> string(count(y -> y % 2 == 1, x)), lst)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the\
    \ number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmp2br6gexs.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp2br6gexs.jl:15\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: no method matching rem(::Char, ::Int64)\n\
    \  Closest candidates are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero})\
    \ at ~/.conda/envs/polyglot/share/julia/base/div.jl:80\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:81\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:82\n\
    \    ...\n  Stacktrace:\n    [1] (::var\"#2#4\")(y::Char)\n      @ Main /tmp/tmp2br6gexs.jl:8\n\
    \    [2] _simple_count\n      @ ./reduce.jl:1206 [inlined]\n    [3] #count#271\n\
    \      @ ./reduce.jl:1201 [inlined]\n    [4] count\n      @ ./reduce.jl:1201 [inlined]\n\
    \    [5] (::var\"#1#3\")(x::String)\n      @ Main /tmp/tmp2br6gexs.jl:8\n    [6]\
    \ iterate\n      @ ./generator.jl:47 [inlined]\n    [7] _collect(c::Vector{String},\
    \ itr::Base.Generator{Vector{String}, var\"#1#3\"}, #unused#::Base.EltypeUnknown,\
    \ isz::Base.HasShape{1})\n      @ Base ./array.jl:744\n    [8] collect_similar\n\
    \      @ ./array.jl:653 [inlined]\n    [9] map\n      @ ./abstractarray.jl:2867\
    \ [inlined]\n   [10] odd_count(lst::Vector{String})\n      @ Main /tmp/tmp2br6gexs.jl:8\n\
    \   [11] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [12] macro expansion\n      @ /tmp/tmp2br6gexs.jl:15 [inlined]\n\
    \   [13] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [14] top-level scope\n      @ /tmp/tmp2br6gexs.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp2br6gexs.jl:16\n  Test threw exception\n  Expression:\
    \ candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng\
    \ 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the 8nput.\"\
    ]\n  MethodError: no method matching rem(::Char, ::Int64)\n  Closest candidates\
    \ are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero}) at ~/.conda/envs/polyglot/share/"
  timestamp: 1659979569
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    #\
    \ Your code here\n    return [string(count(x->x%2==1,parse(Int,y))) for y in lst]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\
    \t@test(candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the\
    \ str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the\
    \ 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"]) == [\"the number\
    \ of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements\
    \ 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng\
    \ 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpql3ck3ua.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmpql3ck3ua.jl:16\n  Expression: candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\n\
    \   Evaluated: [\"1\"] == [\"the number of odd elements 4n the str4ng 4 of the\
    \ 4nput.\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpql3ck3ua.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpql3ck3ua.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpql3ck3ua.jl:17\n  Expression: candidate([\"3\", \"11111111\"\
    ]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\n   Evaluated: [\"1\", \"1\"\
    ] == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpql3ck3ua.jl:17 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpql3ck3ua.jl:15\ntest set: Test Failed at /tmp/tmpql3ck3ua.jl:18\n\
    \  Expression: candidate([\"271\", \"137\", \"314\"]) == [\"the number of odd\
    \ elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the\
    \ str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the\
    \ 2nput.\"]\n   Evaluated: [\"1\", \"1\", \"0\"] == [\"the number of odd elements\
    \ 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the str3ng\
    \ 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    ]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpql3ck3ua.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope"
  timestamp: 1659979570
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ map(x -> string(length(filter(y -> parse(Int, y) % 2 != 0, x))), lst)\nend\n\
    using Test\n\n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\
    \t@test(candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the\
    \ str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the\
    \ 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"]) == [\"the number\
    \ of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements\
    \ 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng\
    \ 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpjj5krmrz.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpjj5krmrz.jl:15\n  Expression: candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\n\
    \   Evaluated: [\"4\"] == [\"the number of odd elements 4n the str4ng 4 of the\
    \ 4nput.\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjj5krmrz.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjj5krmrz.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpjj5krmrz.jl:16\n  Expression: candidate([\"3\", \"11111111\"\
    ]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\n   Evaluated: [\"1\", \"8\"\
    ] == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpjj5krmrz.jl:16 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpjj5krmrz.jl:14\ntest set: Test Failed at /tmp/tmpjj5krmrz.jl:17\n\
    \  Expression: candidate([\"271\", \"137\", \"314\"]) == [\"the number of odd\
    \ elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the\
    \ str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the\
    \ 2nput.\"]\n   Evaluated: [\"2\", \"3\", \"2\"] == [\"the number of odd elements\
    \ 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the str3ng\
    \ 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    ]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjj5krmrz.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope"
  timestamp: 1659979567
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ map(x -> string(count(y -> y % 2 == 1, x)), lst)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the\
    \ number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmp2br6gexs.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp2br6gexs.jl:15\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: no method matching rem(::Char, ::Int64)\n\
    \  Closest candidates are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero})\
    \ at ~/.conda/envs/polyglot/share/julia/base/div.jl:80\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:81\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:82\n\
    \    ...\n  Stacktrace:\n    [1] (::var\"#2#4\")(y::Char)\n      @ Main /tmp/tmp2br6gexs.jl:8\n\
    \    [2] _simple_count\n      @ ./reduce.jl:1206 [inlined]\n    [3] #count#271\n\
    \      @ ./reduce.jl:1201 [inlined]\n    [4] count\n      @ ./reduce.jl:1201 [inlined]\n\
    \    [5] (::var\"#1#3\")(x::String)\n      @ Main /tmp/tmp2br6gexs.jl:8\n    [6]\
    \ iterate\n      @ ./generator.jl:47 [inlined]\n    [7] _collect(c::Vector{String},\
    \ itr::Base.Generator{Vector{String}, var\"#1#3\"}, #unused#::Base.EltypeUnknown,\
    \ isz::Base.HasShape{1})\n      @ Base ./array.jl:744\n    [8] collect_similar\n\
    \      @ ./array.jl:653 [inlined]\n    [9] map\n      @ ./abstractarray.jl:2867\
    \ [inlined]\n   [10] odd_count(lst::Vector{String})\n      @ Main /tmp/tmp2br6gexs.jl:8\n\
    \   [11] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [12] macro expansion\n      @ /tmp/tmp2br6gexs.jl:15 [inlined]\n\
    \   [13] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [14] top-level scope\n      @ /tmp/tmp2br6gexs.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp2br6gexs.jl:16\n  Test threw exception\n  Expression:\
    \ candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng\
    \ 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the 8nput.\"\
    ]\n  MethodError: no method matching rem(::Char, ::Int64)\n  Closest candidates\
    \ are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero}) at ~/.conda/envs/polyglot/share/"
  timestamp: 1659979569
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    #\
    \ YOUR CODE HERE\n    return [string(count(x->x%2!=0, parse(Int, i))) for i in\
    \ lst]\nend\nusing Test\n\n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\
    \t@test(candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the\
    \ str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the\
    \ 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"]) == [\"the number\
    \ of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements\
    \ 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng\
    \ 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpj5nxmnql.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmpj5nxmnql.jl:16\n  Expression: candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\n\
    \   Evaluated: [\"1\"] == [\"the number of odd elements 4n the str4ng 4 of the\
    \ 4nput.\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpj5nxmnql.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpj5nxmnql.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpj5nxmnql.jl:17\n  Expression: candidate([\"3\", \"11111111\"\
    ]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\n   Evaluated: [\"1\", \"1\"\
    ] == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpj5nxmnql.jl:17 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpj5nxmnql.jl:15\ntest set: Test Failed at /tmp/tmpj5nxmnql.jl:18\n\
    \  Expression: candidate([\"271\", \"137\", \"314\"]) == [\"the number of odd\
    \ elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the\
    \ str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the\
    \ 2nput.\"]\n   Evaluated: [\"1\", \"1\", \"0\"] == [\"the number of odd elements\
    \ 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the str3ng\
    \ 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    ]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpj5nxmnql.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope"
  timestamp: 1659979570
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ [string(sum(x % 2 == 1 for x in parse.(Int, i))) for i in lst]\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) ==\
    \ [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp44zhj086.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmp44zhj086.jl:15\n  Expression: candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\n\
    \   Evaluated: [\"1\"] == [\"the number of odd elements 4n the str4ng 4 of the\
    \ 4nput.\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp44zhj086.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp44zhj086.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp44zhj086.jl:16\n  Expression: candidate([\"3\", \"11111111\"\
    ]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\n   Evaluated: [\"1\", \"1\"\
    ] == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp44zhj086.jl:16 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp44zhj086.jl:14\ntest set: Test Failed at /tmp/tmp44zhj086.jl:17\n\
    \  Expression: candidate([\"271\", \"137\", \"314\"]) == [\"the number of odd\
    \ elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the\
    \ str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the\
    \ 2nput.\"]\n   Evaluated: [\"1\", \"1\", \"0\"] == [\"the number of odd elements\
    \ 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the str3ng\
    \ 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    ]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp44zhj086.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope"
  timestamp: 1659979567
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ [string(count(x->parse(Int,x)%2!=0,i)) for i in lst]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the\
    \ number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp6v9g_i1b.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmp6v9g_i1b.jl:15\n  Expression: candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\n\
    \   Evaluated: [\"4\"] == [\"the number of odd elements 4n the str4ng 4 of the\
    \ 4nput.\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6v9g_i1b.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6v9g_i1b.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp6v9g_i1b.jl:16\n  Expression: candidate([\"3\", \"11111111\"\
    ]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\n   Evaluated: [\"1\", \"8\"\
    ] == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp6v9g_i1b.jl:16 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp6v9g_i1b.jl:14\ntest set: Test Failed at /tmp/tmp6v9g_i1b.jl:17\n\
    \  Expression: candidate([\"271\", \"137\", \"314\"]) == [\"the number of odd\
    \ elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the\
    \ str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the\
    \ 2nput.\"]\n   Evaluated: [\"2\", \"3\", \"2\"] == [\"the number of odd elements\
    \ 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the str3ng\
    \ 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    ]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6v9g_i1b.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope"
  timestamp: 1659979570
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ map(x -> string(length(filter(y -> y % 2 == 1, parse.(Int, x)))), lst)\nend\n\
    using Test\n\n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\
    \t@test(candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the\
    \ str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the\
    \ 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"]) == [\"the number\
    \ of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements\
    \ 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng\
    \ 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmp9xdtwedh.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp9xdtwedh.jl:15\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: no method matching filter(::var\"\
    #2#4\", ::Int64)\n  Closest candidates are:\n    filter(::Any, !Matched::Tuple)\
    \ at ~/.conda/envs/polyglot/share/julia/base/tuple.jl:363\n    filter(::Any, !Matched::Array{T,\
    \ N}) where {T, N} at ~/.conda/envs/polyglot/share/julia/base/array.jl:2479\n\
    \    filter(::Any, !Matched::AbstractDict) at ~/.conda/envs/polyglot/share/julia/base/abstractdict.jl:434\n\
    \    ...\n  Stacktrace:\n    [1] (::var\"#1#3\")(x::String)\n      @ Main /tmp/tmp9xdtwedh.jl:8\n\
    \    [2] iterate\n      @ ./generator.jl:47 [inlined]\n    [3] _collect\n    \
    \  @ ./array.jl:744 [inlined]\n    [4] collect_similar\n      @ ./array.jl:653\
    \ [inlined]\n    [5] map\n      @ ./abstractarray.jl:2867 [inlined]\n    [6] odd_count(lst::Vector{String})\n\
    \      @ Main /tmp/tmp9xdtwedh.jl:8\n    [7] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [8] macro expansion\n      @ /tmp/tmp9xdtwedh.jl:15 [inlined]\n\
    \    [9] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [10] top-level scope\n      @ /tmp/tmp9xdtwedh.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp9xdtwedh.jl:16\n  Test threw exception\n  Expression:\
    \ candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng\
    \ 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the 8nput.\"\
    ]\n  MethodError: no method matching filter(::var\"#2#4\", ::Int64)\n  Closest\
    \ candidates are:\n    filter(::Any, !Matched::Tuple) at ~/.conda/envs/polyglot/share/julia/base/tuple.jl:363\n\
    \    filter(::Any, !Matched::Array{T, N}) where {T, N} at ~/.conda/envs/polyglot/share/julia/base/array.jl:2479\n\
    \    filter(::Any, !Matched::AbstractDict) at ~/.conda/envs/polyglot/share/julia/base/abstractdict.jl:434\n\
    \    ...\n  Stacktrace:\n    [1] (::var\"#1#3\")(x::String)\n      @ Main /tmp/tmp9xdtwedh.jl:8\n\
    \    [2] iterate\n      @ ./"
  timestamp: 1659979569
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    n\
    \ = length(lst)\n    output = Vector{String}(n)\n    for i in 1:n\n        count\
    \ = 0\n        for j in 1:length(lst[i])\n            if parse(Int, lst[i][j])\
    \ % 2 == 1\n                count += 1\n            end\n        end\n       \
    \ output[i] = string(count)\n    end\n    return output\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the\
    \ number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmprsjajykn.jl:23

    '
  stdout: "test set: Error During Test at /tmp/tmprsjajykn.jl:26\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: no method matching Vector{String}(::Int64)\n\
    \  Closest candidates are:\n    Vector{T}() where T at ~/.conda/envs/polyglot/share/julia/base/boot.jl:476\n\
    \    Array{T, N}(!Matched::Core.Compiler.BitArray{N}) where {T, N} at ~/.conda/envs/polyglot/share/julia/base/bitarray.jl:494\n\
    \    Vector{T}(!Matched::Core.Compiler.AbstractRange{T}) where T at ~/.conda/envs/polyglot/share/julia/base/range.jl:1286\n\
    \    ...\n  Stacktrace:\n   [1] odd_count(lst::Vector{String})\n     @ Main /tmp/tmprsjajykn.jl:9\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmprsjajykn.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmprsjajykn.jl:25\ntest set:\
    \ Error During Test at /tmp/tmprsjajykn.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng\
    \ 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the 8nput.\"\
    ]\n  MethodError: no method matching Vector{String}(::Int64)\n  Closest candidates\
    \ are:\n    Vector{T}() where T at ~/.conda/envs/polyglot/share/julia/base/boot.jl:476\n\
    \    Array{T, N}(!Matched::Core.Compiler.BitArray{N}) where {T, N} at ~/.conda/envs/polyglot/share/julia/base/bitarray.jl:494\n\
    \    Vector{T}(!Matched::Core.Compiler.AbstractRange{T}) where T at ~/.conda/envs/polyglot/share/julia/base/range.jl:1286\n\
    \    ...\n  Stacktrace:\n   [1] odd_count(lst::Vector{String})\n     @ Main /tmp/tmprsjajykn.jl:9\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmprsjajykn.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] "
  timestamp: 1659979573
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ map(x -> string(length(filter(y -> parse(Int, y) % 2 != 0, x))), lst)\nend\n\
    using Test\n\n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\
    \t@test(candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the\
    \ str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the\
    \ 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"]) == [\"the number\
    \ of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements\
    \ 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng\
    \ 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpjj5krmrz.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpjj5krmrz.jl:15\n  Expression: candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\n\
    \   Evaluated: [\"4\"] == [\"the number of odd elements 4n the str4ng 4 of the\
    \ 4nput.\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjj5krmrz.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjj5krmrz.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpjj5krmrz.jl:16\n  Expression: candidate([\"3\", \"11111111\"\
    ]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\n   Evaluated: [\"1\", \"8\"\
    ] == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpjj5krmrz.jl:16 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpjj5krmrz.jl:14\ntest set: Test Failed at /tmp/tmpjj5krmrz.jl:17\n\
    \  Expression: candidate([\"271\", \"137\", \"314\"]) == [\"the number of odd\
    \ elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the\
    \ str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the\
    \ 2nput.\"]\n   Evaluated: [\"2\", \"3\", \"2\"] == [\"the number of odd elements\
    \ 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the str3ng\
    \ 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    ]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjj5krmrz.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope"
  timestamp: 1659979567
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ [string(count(x->x%2!=0,x)) for x in lst]\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the number of\
    \ odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"\
    11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpo1cxw_bi.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpo1cxw_bi.jl:15\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: no method matching rem(::Char, ::Int64)\n\
    \  Closest candidates are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero})\
    \ at ~/.conda/envs/polyglot/share/julia/base/div.jl:80\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:81\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:82\n\
    \    ...\n  Stacktrace:\n    [1] (::var\"#2#4\")(x::Char)\n      @ Main /tmp/tmpo1cxw_bi.jl:8\n\
    \    [2] _simple_count\n      @ ./reduce.jl:1206 [inlined]\n    [3] #count#271\n\
    \      @ ./reduce.jl:1201 [inlined]\n    [4] count\n      @ ./reduce.jl:1201 [inlined]\n\
    \    [5] (::var\"#1#3\")(x::String)\n      @ Main ./none:0\n    [6] iterate\n\
    \      @ ./generator.jl:47 [inlined]\n    [7] collect(itr::Base.Generator{Vector{String},\
    \ var\"#1#3\"})\n      @ Base ./array.jl:724\n    [8] odd_count(lst::Vector{String})\n\
    \      @ Main /tmp/tmpo1cxw_bi.jl:8\n    [9] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpo1cxw_bi.jl:15 [inlined]\n\
    \   [11] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpo1cxw_bi.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpo1cxw_bi.jl:16\n  Test threw exception\n  Expression:\
    \ candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng\
    \ 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the 8nput.\"\
    ]\n  MethodError: no method matching rem(::Char, ::Int64)\n  Closest candidates\
    \ are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:80\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Down}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:81\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at ~/.conda/envs/po"
  timestamp: 1659979569
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ [string(sum(i % 2 == 1 for i in parse.(Int, x))) for x in lst]\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) ==\
    \ [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpq5r9jlxm.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpq5r9jlxm.jl:15\n  Expression: candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\n\
    \   Evaluated: [\"1\"] == [\"the number of odd elements 4n the str4ng 4 of the\
    \ 4nput.\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq5r9jlxm.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq5r9jlxm.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpq5r9jlxm.jl:16\n  Expression: candidate([\"3\", \"11111111\"\
    ]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\n   Evaluated: [\"1\", \"1\"\
    ] == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpq5r9jlxm.jl:16 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpq5r9jlxm.jl:14\ntest set: Test Failed at /tmp/tmpq5r9jlxm.jl:17\n\
    \  Expression: candidate([\"271\", \"137\", \"314\"]) == [\"the number of odd\
    \ elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the\
    \ str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the\
    \ 2nput.\"]\n   Evaluated: [\"1\", \"1\", \"0\"] == [\"the number of odd elements\
    \ 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the str3ng\
    \ 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    ]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq5r9jlxm.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope"
  timestamp: 1659979571
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ map(x -> string(length(filter(y -> y % 2 == 1, x))), lst)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) ==\
    \ [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmp840mt00n.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp840mt00n.jl:15\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: no method matching rem(::Char, ::Int64)\n\
    \  Closest candidates are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero})\
    \ at ~/.conda/envs/polyglot/share/julia/base/div.jl:80\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:81\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:82\n\
    \    ...\n  Stacktrace:\n    [1] (::var\"#2#4\")(y::Char)\n      @ Main /tmp/tmp840mt00n.jl:8\n\
    \    [2] filter(f::var\"#2#4\", s::String)\n      @ Base ./strings/substring.jl:246\n\
    \    [3] #1\n      @ /tmp/tmp840mt00n.jl:8 [inlined]\n    [4] iterate\n      @\
    \ ./generator.jl:47 [inlined]\n    [5] _collect(c::Vector{String}, itr::Base.Generator{Vector{String},\
    \ var\"#1#3\"}, #unused#::Base.EltypeUnknown, isz::Base.HasShape{1})\n      @\
    \ Base ./array.jl:744\n    [6] collect_similar\n      @ ./array.jl:653 [inlined]\n\
    \    [7] map\n      @ ./abstractarray.jl:2867 [inlined]\n    [8] odd_count(lst::Vector{String})\n\
    \      @ Main /tmp/tmp840mt00n.jl:8\n    [9] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmp840mt00n.jl:15 [inlined]\n\
    \   [11] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmp840mt00n.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp840mt00n.jl:16\n  Test threw exception\n  Expression:\
    \ candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng\
    \ 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the 8nput.\"\
    ]\n  MethodError: no method matching rem(::Char, ::Int64)\n  Closest candidates\
    \ are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:80\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Down}) at ~/.conda/envs/polygl"
  timestamp: 1659979569
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ map(x -> string(length(filter(y -> parse(Int, y) % 2 != 0, x))), lst)\nend\n\
    using Test\n\n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\
    \t@test(candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the\
    \ str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the\
    \ 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"]) == [\"the number\
    \ of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements\
    \ 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng\
    \ 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpjj5krmrz.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpjj5krmrz.jl:15\n  Expression: candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\n\
    \   Evaluated: [\"4\"] == [\"the number of odd elements 4n the str4ng 4 of the\
    \ 4nput.\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjj5krmrz.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjj5krmrz.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpjj5krmrz.jl:16\n  Expression: candidate([\"3\", \"11111111\"\
    ]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\n   Evaluated: [\"1\", \"8\"\
    ] == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpjj5krmrz.jl:16 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpjj5krmrz.jl:14\ntest set: Test Failed at /tmp/tmpjj5krmrz.jl:17\n\
    \  Expression: candidate([\"271\", \"137\", \"314\"]) == [\"the number of odd\
    \ elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the\
    \ str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the\
    \ 2nput.\"]\n   Evaluated: [\"2\", \"3\", \"2\"] == [\"the number of odd elements\
    \ 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the str3ng\
    \ 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    ]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjj5krmrz.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope"
  timestamp: 1659979567
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ map(x -> string(count(y -> y % 2 == 1, parse.(Int, x))), lst)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) ==\
    \ [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmprl0m5_1f.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmprl0m5_1f.jl:15\n  Expression: candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\n\
    \   Evaluated: [\"1\"] == [\"the number of odd elements 4n the str4ng 4 of the\
    \ 4nput.\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprl0m5_1f.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprl0m5_1f.jl:14\ntest set: Test\
    \ Failed at /tmp/tmprl0m5_1f.jl:16\n  Expression: candidate([\"3\", \"11111111\"\
    ]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\n   Evaluated: [\"1\", \"1\"\
    ] == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmprl0m5_1f.jl:16 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmprl0m5_1f.jl:14\ntest set: Test Failed at /tmp/tmprl0m5_1f.jl:17\n\
    \  Expression: candidate([\"271\", \"137\", \"314\"]) == [\"the number of odd\
    \ elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the\
    \ str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the\
    \ 2nput.\"]\n   Evaluated: [\"1\", \"1\", \"0\"] == [\"the number of odd elements\
    \ 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the str3ng\
    \ 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    ]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprl0m5_1f.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope"
  timestamp: 1659979567
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ [string(count(isdigit, x) % 2 == 1 ? x : \"\") for x in lst]\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) ==\
    \ [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpm60bc044.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpm60bc044.jl:15\n  Expression: candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\n\
    \   Evaluated: [\"1234567\"] == [\"the number of odd elements 4n the str4ng 4\
    \ of the 4nput.\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpm60bc044.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpm60bc044.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpm60bc044.jl:16\n  Expression: candidate([\"3\", \"11111111\"\
    ]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\n   Evaluated: [\"3\", \"\"\
    ] == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpm60bc044.jl:16 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpm60bc044.jl:14\ntest set: Test Failed at /tmp/tmpm60bc044.jl:17\n\
    \  Expression: candidate([\"271\", \"137\", \"314\"]) == [\"the number of odd\
    \ elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the\
    \ str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the\
    \ 2nput.\"]\n   Evaluated: [\"271\", \"137\", \"314\"] == [\"the number of odd\
    \ elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the\
    \ str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the\
    \ 2nput.\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpm60bc044.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-"
  timestamp: 1659979567
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    out\
    \ = []\n    for i in lst\n        count = 0\n        for j in i\n            if\
    \ parse(Int, j) % 2 != 0\n                count += 1\n            end\n      \
    \  end\n        push!(out, count)\n    end\n    return out\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) ==\
    \ [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmp_1u5vkks.jl:22

    '
  stdout: "test set: Error During Test at /tmp/tmp_1u5vkks.jl:25\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: Cannot `convert` an object of type\
    \ Int64 to an object of type String\n  Closest candidates are:\n    convert(::Type{String},\
    \ !Matched::String) at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n    [1] setindex!(A::Vector{String}, x::Int64, i1::Int64)\n\
    \      @ Base ./array.jl:903\n    [2] _unsafe_copyto!(dest::Vector{String}, doffs::Int64,\
    \ src::Vector{Any}, soffs::Int64, n::Int64)\n      @ Base ./array.jl:253\n   \
    \ [3] unsafe_copyto!\n      @ ./array.jl:307 [inlined]\n    [4] _copyto_impl!\n\
    \      @ ./array.jl:331 [inlined]\n    [5] copyto!\n      @ ./array.jl:317 [inlined]\n\
    \    [6] copyto!\n      @ ./array.jl:343 [inlined]\n    [7] copyto_axcheck!\n\
    \      @ ./abstractarray.jl:1104 [inlined]\n    [8] Vector{String}(x::Vector{Any})\n\
    \      @ Base ./array.jl:563\n    [9] convert\n      @ ./array.jl:554 [inlined]\n\
    \   [10] odd_count(lst::Vector{String})\n      @ Main /tmp/tmp_1u5vkks.jl:18\n\
    \   [11] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [12] macro expansion\n      @ /tmp/tmp_1u5vkks.jl:25 [inlined]\n\
    \   [13] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [14] top-level scope\n      @ /tmp/tmp_1u5vkks.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp_1u5vkks.jl:26\n  Test threw exception\n  Expression:\
    \ candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng\
    \ 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the 8nput.\"\
    ]\n  MethodError: Cannot `convert` an object of type Int64 to an object of type\
    \ String\n  Closest candidate"
  timestamp: 1659979569
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    output\
    \ = []\n    for i in lst\n        count = 0\n        for j in i\n            if\
    \ parse(Int, j) % 2 != 0\n                count += 1\n            end\n      \
    \  end\n        push!(output, count)\n    end\n    return output\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) ==\
    \ [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpes8mge59.jl:22

    '
  stdout: "test set: Error During Test at /tmp/tmpes8mge59.jl:25\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: Cannot `convert` an object of type\
    \ Int64 to an object of type String\n  Closest candidates are:\n    convert(::Type{String},\
    \ !Matched::String) at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n    [1] setindex!(A::Vector{String}, x::Int64, i1::Int64)\n\
    \      @ Base ./array.jl:903\n    [2] _unsafe_copyto!(dest::Vector{String}, doffs::Int64,\
    \ src::Vector{Any}, soffs::Int64, n::Int64)\n      @ Base ./array.jl:253\n   \
    \ [3] unsafe_copyto!\n      @ ./array.jl:307 [inlined]\n    [4] _copyto_impl!\n\
    \      @ ./array.jl:331 [inlined]\n    [5] copyto!\n      @ ./array.jl:317 [inlined]\n\
    \    [6] copyto!\n      @ ./array.jl:343 [inlined]\n    [7] copyto_axcheck!\n\
    \      @ ./abstractarray.jl:1104 [inlined]\n    [8] Vector{String}(x::Vector{Any})\n\
    \      @ Base ./array.jl:563\n    [9] convert\n      @ ./array.jl:554 [inlined]\n\
    \   [10] odd_count(lst::Vector{String})\n      @ Main /tmp/tmpes8mge59.jl:18\n\
    \   [11] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [12] macro expansion\n      @ /tmp/tmpes8mge59.jl:25 [inlined]\n\
    \   [13] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [14] top-level scope\n      @ /tmp/tmpes8mge59.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpes8mge59.jl:26\n  Test threw exception\n  Expression:\
    \ candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng\
    \ 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the 8nput.\"\
    ]\n  MethodError: Cannot `convert` an object of type Int64 to an object of type\
    \ String\n  Closest candidate"
  timestamp: 1659979569
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ map(x -> string(length(filter(y -> y % 2 == 1, map(z -> parse(Int, z), split(x))))),\
    \ lst)\nend\nusing Test\n\n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\
    \t@test(candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the\
    \ str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the\
    \ 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"]) == [\"the number\
    \ of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements\
    \ 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng\
    \ 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpfpr81vtf.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpfpr81vtf.jl:15\n  Expression: candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\n\
    \   Evaluated: [\"1\"] == [\"the number of odd elements 4n the str4ng 4 of the\
    \ 4nput.\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfpr81vtf.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfpr81vtf.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpfpr81vtf.jl:16\n  Expression: candidate([\"3\", \"11111111\"\
    ]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\n   Evaluated: [\"1\", \"1\"\
    ] == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpfpr81vtf.jl:16 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpfpr81vtf.jl:14\ntest set: Test Failed at /tmp/tmpfpr81vtf.jl:17\n\
    \  Expression: candidate([\"271\", \"137\", \"314\"]) == [\"the number of odd\
    \ elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the\
    \ str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the\
    \ 2nput.\"]\n   Evaluated: [\"1\", \"1\", \"0\"] == [\"the number of odd elements\
    \ 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the str3ng\
    \ 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    ]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfpr81vtf.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope"
  timestamp: 1659979572
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ map(x -> string(length(filter(y -> parse(Int, y) % 2 != 0, x))), lst)\nend\n\
    using Test\n\n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\
    \t@test(candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the\
    \ str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the\
    \ 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"]) == [\"the number\
    \ of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements\
    \ 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng\
    \ 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpjj5krmrz.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpjj5krmrz.jl:15\n  Expression: candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\n\
    \   Evaluated: [\"4\"] == [\"the number of odd elements 4n the str4ng 4 of the\
    \ 4nput.\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjj5krmrz.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjj5krmrz.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpjj5krmrz.jl:16\n  Expression: candidate([\"3\", \"11111111\"\
    ]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\n   Evaluated: [\"1\", \"8\"\
    ] == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpjj5krmrz.jl:16 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpjj5krmrz.jl:14\ntest set: Test Failed at /tmp/tmpjj5krmrz.jl:17\n\
    \  Expression: candidate([\"271\", \"137\", \"314\"]) == [\"the number of odd\
    \ elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the\
    \ str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the\
    \ 2nput.\"]\n   Evaluated: [\"2\", \"3\", \"2\"] == [\"the number of odd elements\
    \ 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the str3ng\
    \ 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    ]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjj5krmrz.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope"
  timestamp: 1659979567
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ map(x -> string(count(y -> y % 2 == 1, x)), lst)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the\
    \ number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmp2br6gexs.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp2br6gexs.jl:15\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: no method matching rem(::Char, ::Int64)\n\
    \  Closest candidates are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero})\
    \ at ~/.conda/envs/polyglot/share/julia/base/div.jl:80\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:81\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:82\n\
    \    ...\n  Stacktrace:\n    [1] (::var\"#2#4\")(y::Char)\n      @ Main /tmp/tmp2br6gexs.jl:8\n\
    \    [2] _simple_count\n      @ ./reduce.jl:1206 [inlined]\n    [3] #count#271\n\
    \      @ ./reduce.jl:1201 [inlined]\n    [4] count\n      @ ./reduce.jl:1201 [inlined]\n\
    \    [5] (::var\"#1#3\")(x::String)\n      @ Main /tmp/tmp2br6gexs.jl:8\n    [6]\
    \ iterate\n      @ ./generator.jl:47 [inlined]\n    [7] _collect(c::Vector{String},\
    \ itr::Base.Generator{Vector{String}, var\"#1#3\"}, #unused#::Base.EltypeUnknown,\
    \ isz::Base.HasShape{1})\n      @ Base ./array.jl:744\n    [8] collect_similar\n\
    \      @ ./array.jl:653 [inlined]\n    [9] map\n      @ ./abstractarray.jl:2867\
    \ [inlined]\n   [10] odd_count(lst::Vector{String})\n      @ Main /tmp/tmp2br6gexs.jl:8\n\
    \   [11] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [12] macro expansion\n      @ /tmp/tmp2br6gexs.jl:15 [inlined]\n\
    \   [13] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [14] top-level scope\n      @ /tmp/tmp2br6gexs.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp2br6gexs.jl:16\n  Test threw exception\n  Expression:\
    \ candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng\
    \ 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the 8nput.\"\
    ]\n  MethodError: no method matching rem(::Char, ::Int64)\n  Closest candidates\
    \ are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero}) at ~/.conda/envs/polyglot/share/"
  timestamp: 1659979569
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    #\
    \ your code here\n    return [string(length(filter(x->x%2!=0, parse.(Int, lst[i]))))\
    \ for i in 1:length(lst)]\nend\nusing Test\n\n@testset begin\n\ncandidate = odd_count;\n\
    \t@test(candidate([\"1234567\"]) == [\"the number of odd elements 4n the str4ng\
    \ 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"]) == [\"the number\
    \ of odd elements 1n the str1ng 1 of the 1nput.\", \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"\
    ]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\", \"the number\
    \ of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of odd elements\
    \ 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmp9uuhjjhq.jl:13

    '
  stdout: "test set: Error During Test at /tmp/tmp9uuhjjhq.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: no method matching filter(::var\"\
    #2#4\", ::Int64)\n  Closest candidates are:\n    filter(::Any, !Matched::Tuple)\
    \ at ~/.conda/envs/polyglot/share/julia/base/tuple.jl:363\n    filter(::Any, !Matched::Array{T,\
    \ N}) where {T, N} at ~/.conda/envs/polyglot/share/julia/base/array.jl:2479\n\
    \    filter(::Any, !Matched::AbstractDict) at ~/.conda/envs/polyglot/share/julia/base/abstractdict.jl:434\n\
    \    ...\n  Stacktrace:\n   [1] (::var\"#1#3\"{Vector{String}})(i::Int64)\n  \
    \   @ Main ./none:0\n   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3]\
    \ collect\n     @ ./array.jl:724 [inlined]\n   [4] odd_count(lst::Vector{String})\n\
    \     @ Main /tmp/tmp9uuhjjhq.jl:9\n   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmp9uuhjjhq.jl:16 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmp9uuhjjhq.jl:15\ntest set:\
    \ Error During Test at /tmp/tmp9uuhjjhq.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng\
    \ 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the 8nput.\"\
    ]\n  MethodError: no method matching filter(::var\"#2#4\", ::Int64)\n  Closest\
    \ candidates are:\n    filter(::Any, !Matched::Tuple) at ~/.conda/envs/polyglot/share/julia/base/tuple.jl:363\n\
    \    filter(::Any, !Matched::Array{T, N}) where {T, N} at ~/.conda/envs/polyglot/share/julia/base/array.jl:2479\n\
    \    filter(::Any, !Matched::AbstractDict) at ~/.conda/envs/polyglot/share/julia/base/abstractdict.jl:434\n\
    \    ...\n  Stacktrace:\n   [1] (::var\"#1#3\"{Vector{String}})(i::Int64)\n  \
    \   @ Main ./none:0\n   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3]\
    \ collect\n     @ ./array.jl:724 [inlined]\n   [4] odd_count(lst::Vector{String})\n\
    \     @ Main /tmp/"
  timestamp: 1659979573
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    #\
    \ Your code here\n    return [\"0\"]\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the number of odd elements\
    \ 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"])\
    \ == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\"\
    , \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    , \"the number of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of\
    \ odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp7033931q.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmp7033931q.jl:16\n  Expression: candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\n\
    \   Evaluated: [\"0\"] == [\"the number of odd elements 4n the str4ng 4 of the\
    \ 4nput.\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7033931q.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7033931q.jl:15\ntest set: Test\
    \ Failed at /tmp/tmp7033931q.jl:17\n  Expression: candidate([\"3\", \"11111111\"\
    ]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\n   Evaluated: [\"0\"] == [\"\
    the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number of odd\
    \ elements 8n the str8ng 8 of the 8nput.\"]\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp7033931q.jl:17 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp7033931q.jl:15\ntest set: Test Failed at /tmp/tmp7033931q.jl:18\n\
    \  Expression: candidate([\"271\", \"137\", \"314\"]) == [\"the number of odd\
    \ elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the\
    \ str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the\
    \ 2nput.\"]\n   Evaluated: [\"0\"] == [\"the number of odd elements 2n the str2ng\
    \ 2 of the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\"\
    , \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp7033931q.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp7"
  timestamp: 1659979572
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ map(x -> string(length(filter(y -> isodd(parse(Int, y)), x))), lst)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"\
    ]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmptmmpccnb.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmptmmpccnb.jl:15\n  Expression: candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\n\
    \   Evaluated: [\"4\"] == [\"the number of odd elements 4n the str4ng 4 of the\
    \ 4nput.\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptmmpccnb.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmptmmpccnb.jl:14\ntest set: Test\
    \ Failed at /tmp/tmptmmpccnb.jl:16\n  Expression: candidate([\"3\", \"11111111\"\
    ]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\n   Evaluated: [\"1\", \"8\"\
    ] == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmptmmpccnb.jl:16 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmptmmpccnb.jl:14\ntest set: Test Failed at /tmp/tmptmmpccnb.jl:17\n\
    \  Expression: candidate([\"271\", \"137\", \"314\"]) == [\"the number of odd\
    \ elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the\
    \ str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the\
    \ 2nput.\"]\n   Evaluated: [\"2\", \"3\", \"2\"] == [\"the number of odd elements\
    \ 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the str3ng\
    \ 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    ]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmptmmpccnb.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope"
  timestamp: 1659979572
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    odd_count\
    \ = []\n    for i in lst\n        count = 0\n        for j in i\n            if\
    \ parse(Int, j) % 2 != 0\n                count += 1\n            end\n      \
    \  end\n        push!(odd_count, count)\n    end\n    return odd_count\nend\n\
    using Test\n\n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\
    \t@test(candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the\
    \ str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the\
    \ 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"]) == [\"the number\
    \ of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements\
    \ 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng\
    \ 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpwr_4rj3c.jl:22

    '
  stdout: "test set: Error During Test at /tmp/tmpwr_4rj3c.jl:25\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: Cannot `convert` an object of type\
    \ Int64 to an object of type String\n  Closest candidates are:\n    convert(::Type{String},\
    \ !Matched::String) at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n    [1] setindex!(A::Vector{String}, x::Int64, i1::Int64)\n\
    \      @ Base ./array.jl:903\n    [2] _unsafe_copyto!(dest::Vector{String}, doffs::Int64,\
    \ src::Vector{Any}, soffs::Int64, n::Int64)\n      @ Base ./array.jl:253\n   \
    \ [3] unsafe_copyto!\n      @ ./array.jl:307 [inlined]\n    [4] _copyto_impl!\n\
    \      @ ./array.jl:331 [inlined]\n    [5] copyto!\n      @ ./array.jl:317 [inlined]\n\
    \    [6] copyto!\n      @ ./array.jl:343 [inlined]\n    [7] copyto_axcheck!\n\
    \      @ ./abstractarray.jl:1104 [inlined]\n    [8] Vector{String}(x::Vector{Any})\n\
    \      @ Base ./array.jl:563\n    [9] convert\n      @ ./array.jl:554 [inlined]\n\
    \   [10] odd_count(lst::Vector{String})\n      @ Main /tmp/tmpwr_4rj3c.jl:18\n\
    \   [11] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [12] macro expansion\n      @ /tmp/tmpwr_4rj3c.jl:25 [inlined]\n\
    \   [13] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [14] top-level scope\n      @ /tmp/tmpwr_4rj3c.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpwr_4rj3c.jl:26\n  Test threw exception\n  Expression:\
    \ candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng\
    \ 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the 8nput.\"\
    ]\n  MethodError: Cannot `convert` an object of type Int64 to an object of type\
    \ String\n  Closest candidate"
  timestamp: 1659979574
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    #\
    \ Your code here\n    # You can use the function isodd(x) to check if x is odd\n\
    \    # You can use the function parse(Int, x) to convert a string x to an integer\n\
    \    # You can use the function string(x) to convert an integer x to a string\n\
    \    # You can use the function length(x) to get the length of a string x\n  \
    \  # You can use the function *(x, y) to multiply two numbers x and y\n    # You\
    \ can use the function +(x, y) to add two numbers x and y\n    # You can use the\
    \ function -(x, y) to subtract two numbers x and y\n    # You can use the function\
    \ /(x, y) to divide two numbers x and y\n    # You can use the function ^(x, y)\
    \ to raise a number x to the power of y\n    # You can use the function ==(x,\
    \ y) to check if two numbers x and y are equal\n    # You can use the function\
    \ !=(x, y) to check if two numbers x and y are not equal\n    # You can use the\
    \ function <(x, y) to check if a number x is less than y\n    # You can use the\
    \ function >(x, y) to check if a number x is greater than y\n    # You can use\
    \ the function <=(x, y) to check if a number x is less than or equal to y\n  \
    \  # You can use the function >=(x, y) to check if a number x is greater than\
    \ or equal to y\n    # You can use the function println(x) to print the value\
    \ of x\n    # You can use the function print(x) to print the value of x without\
    \ a newline\n    # You can use the function typeof(x) to get the type of x\n \
    \   # You can use the function isa(x, T) to check if x is of type T\n    # You\
    \ can use the function isodd(x) to check if x is odd\n    # You can use the function\
    \ iseven(x) to check if x is even\n    # You can use the function isinteger(x)\
    \ to check if x is an integer\n    # You can use the function isfloat(x) to check\
    \ if x is a float\n    # You can use\nusing Test\n\n@testset begin\n\ncandidate\
    \ = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the number of odd elements\
    \ 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"])\
    \ == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\"\
    , \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    , \"the number of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of\
    \ odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmph_fpyryl.jl:7\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmph_fpyryl.jl:1\n\
    in expression starting at /tmp/tmph_fpyryl.jl:1\n"
  stdout: ''
  timestamp: 1659979571
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    #\
    \ your code here\n    odd_count = []\n    for i in lst\n        count = 0\n  \
    \      for j in i\n            if j % 2 == 1\n                count += 1\n   \
    \         end\n        end\n        push!(odd_count, count)\n    end\n    return\
    \ odd_count\nend\nusing Test\n\n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\
    \t@test(candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the\
    \ str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the\
    \ 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"]) == [\"the number\
    \ of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements\
    \ 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng\
    \ 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpqiem_jot.jl:23

    '
  stdout: "test set: Error During Test at /tmp/tmpqiem_jot.jl:26\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: no method matching rem(::Char, ::Int64)\n\
    \  Closest candidates are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero})\
    \ at ~/.conda/envs/polyglot/share/julia/base/div.jl:80\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:81\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:82\n\
    \    ...\n  Stacktrace:\n   [1] odd_count(lst::Vector{String})\n     @ Main /tmp/tmpqiem_jot.jl:13\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpqiem_jot.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpqiem_jot.jl:25\ntest set:\
    \ Error During Test at /tmp/tmpqiem_jot.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng\
    \ 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the 8nput.\"\
    ]\n  MethodError: no method matching rem(::Char, ::Int64)\n  Closest candidates\
    \ are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:80\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Down}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:81\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:82\n\
    \    ...\n  Stacktrace:\n   [1] odd_count(lst::Vector{String})\n     @ Main /tmp/tmpqiem_jot.jl:13\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpqiem_jot.jl:27 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n  "
  timestamp: 1659979573
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ map(x -> string(count(y -> y % 2 == 1, x)), lst)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the\
    \ number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmp2br6gexs.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp2br6gexs.jl:15\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: no method matching rem(::Char, ::Int64)\n\
    \  Closest candidates are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero})\
    \ at ~/.conda/envs/polyglot/share/julia/base/div.jl:80\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:81\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:82\n\
    \    ...\n  Stacktrace:\n    [1] (::var\"#2#4\")(y::Char)\n      @ Main /tmp/tmp2br6gexs.jl:8\n\
    \    [2] _simple_count\n      @ ./reduce.jl:1206 [inlined]\n    [3] #count#271\n\
    \      @ ./reduce.jl:1201 [inlined]\n    [4] count\n      @ ./reduce.jl:1201 [inlined]\n\
    \    [5] (::var\"#1#3\")(x::String)\n      @ Main /tmp/tmp2br6gexs.jl:8\n    [6]\
    \ iterate\n      @ ./generator.jl:47 [inlined]\n    [7] _collect(c::Vector{String},\
    \ itr::Base.Generator{Vector{String}, var\"#1#3\"}, #unused#::Base.EltypeUnknown,\
    \ isz::Base.HasShape{1})\n      @ Base ./array.jl:744\n    [8] collect_similar\n\
    \      @ ./array.jl:653 [inlined]\n    [9] map\n      @ ./abstractarray.jl:2867\
    \ [inlined]\n   [10] odd_count(lst::Vector{String})\n      @ Main /tmp/tmp2br6gexs.jl:8\n\
    \   [11] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [12] macro expansion\n      @ /tmp/tmp2br6gexs.jl:15 [inlined]\n\
    \   [13] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [14] top-level scope\n      @ /tmp/tmp2br6gexs.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp2br6gexs.jl:16\n  Test threw exception\n  Expression:\
    \ candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng\
    \ 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the 8nput.\"\
    ]\n  MethodError: no method matching rem(::Char, ::Int64)\n  Closest candidates\
    \ are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero}) at ~/.conda/envs/polyglot/share/"
  timestamp: 1659979569
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    #\
    \ your code here\n    odd_count = []\n    for i in lst\n        count = 0\n  \
    \      for j in i\n            if parse(Int, j) % 2 != 0\n                count\
    \ += 1\n            end\n        end\n        push!(odd_count, count)\n    end\n\
    \    return odd_count\nend\nusing Test\n\n@testset begin\n\ncandidate = odd_count;\n\
    \t@test(candidate([\"1234567\"]) == [\"the number of odd elements 4n the str4ng\
    \ 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"]) == [\"the number\
    \ of odd elements 1n the str1ng 1 of the 1nput.\", \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"\
    ]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\", \"the number\
    \ of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of odd elements\
    \ 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmppv1q8gfj.jl:23

    '
  stdout: "test set: Error During Test at /tmp/tmppv1q8gfj.jl:26\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: Cannot `convert` an object of type\
    \ Int64 to an object of type String\n  Closest candidates are:\n    convert(::Type{String},\
    \ !Matched::String) at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n    [1] setindex!(A::Vector{String}, x::Int64, i1::Int64)\n\
    \      @ Base ./array.jl:903\n    [2] _unsafe_copyto!(dest::Vector{String}, doffs::Int64,\
    \ src::Vector{Any}, soffs::Int64, n::Int64)\n      @ Base ./array.jl:253\n   \
    \ [3] unsafe_copyto!\n      @ ./array.jl:307 [inlined]\n    [4] _copyto_impl!\n\
    \      @ ./array.jl:331 [inlined]\n    [5] copyto!\n      @ ./array.jl:317 [inlined]\n\
    \    [6] copyto!\n      @ ./array.jl:343 [inlined]\n    [7] copyto_axcheck!\n\
    \      @ ./abstractarray.jl:1104 [inlined]\n    [8] Vector{String}(x::Vector{Any})\n\
    \      @ Base ./array.jl:563\n    [9] convert\n      @ ./array.jl:554 [inlined]\n\
    \   [10] odd_count(lst::Vector{String})\n      @ Main /tmp/tmppv1q8gfj.jl:19\n\
    \   [11] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [12] macro expansion\n      @ /tmp/tmppv1q8gfj.jl:26 [inlined]\n\
    \   [13] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [14] top-level scope\n      @ /tmp/tmppv1q8gfj.jl:25\ntest set:\
    \ Error During Test at /tmp/tmppv1q8gfj.jl:27\n  Test threw exception\n  Expression:\
    \ candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng\
    \ 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the 8nput.\"\
    ]\n  MethodError: Cannot `convert` an object of type Int64 to an object of type\
    \ String\n  Closest candidate"
  timestamp: 1659979574
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ [string(count(x->x%2!=0,x)) for x in lst]\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the number of\
    \ odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"\
    11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpo1cxw_bi.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpo1cxw_bi.jl:15\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: no method matching rem(::Char, ::Int64)\n\
    \  Closest candidates are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero})\
    \ at ~/.conda/envs/polyglot/share/julia/base/div.jl:80\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:81\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:82\n\
    \    ...\n  Stacktrace:\n    [1] (::var\"#2#4\")(x::Char)\n      @ Main /tmp/tmpo1cxw_bi.jl:8\n\
    \    [2] _simple_count\n      @ ./reduce.jl:1206 [inlined]\n    [3] #count#271\n\
    \      @ ./reduce.jl:1201 [inlined]\n    [4] count\n      @ ./reduce.jl:1201 [inlined]\n\
    \    [5] (::var\"#1#3\")(x::String)\n      @ Main ./none:0\n    [6] iterate\n\
    \      @ ./generator.jl:47 [inlined]\n    [7] collect(itr::Base.Generator{Vector{String},\
    \ var\"#1#3\"})\n      @ Base ./array.jl:724\n    [8] odd_count(lst::Vector{String})\n\
    \      @ Main /tmp/tmpo1cxw_bi.jl:8\n    [9] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpo1cxw_bi.jl:15 [inlined]\n\
    \   [11] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpo1cxw_bi.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpo1cxw_bi.jl:16\n  Test threw exception\n  Expression:\
    \ candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng\
    \ 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the 8nput.\"\
    ]\n  MethodError: no method matching rem(::Char, ::Int64)\n  Closest candidates\
    \ are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:80\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Down}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:81\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at ~/.conda/envs/po"
  timestamp: 1659979569
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ map(x -> string(length(filter(y -> parse(Int, y) % 2 != 0, x))), lst)\nend\n\
    using Test\n\n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\
    \t@test(candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the\
    \ str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the\
    \ 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"]) == [\"the number\
    \ of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements\
    \ 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng\
    \ 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpjj5krmrz.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpjj5krmrz.jl:15\n  Expression: candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\n\
    \   Evaluated: [\"4\"] == [\"the number of odd elements 4n the str4ng 4 of the\
    \ 4nput.\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjj5krmrz.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjj5krmrz.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpjj5krmrz.jl:16\n  Expression: candidate([\"3\", \"11111111\"\
    ]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\n   Evaluated: [\"1\", \"8\"\
    ] == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpjj5krmrz.jl:16 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpjj5krmrz.jl:14\ntest set: Test Failed at /tmp/tmpjj5krmrz.jl:17\n\
    \  Expression: candidate([\"271\", \"137\", \"314\"]) == [\"the number of odd\
    \ elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the\
    \ str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the\
    \ 2nput.\"]\n   Evaluated: [\"2\", \"3\", \"2\"] == [\"the number of odd elements\
    \ 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the str3ng\
    \ 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    ]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjj5krmrz.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope"
  timestamp: 1659979567
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ map(x -> string(length(filter(y -> parse(Int, y) % 2 != 0, x))), lst)\nend\n\
    using Test\n\n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\
    \t@test(candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the\
    \ str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the\
    \ 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"]) == [\"the number\
    \ of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements\
    \ 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng\
    \ 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpjj5krmrz.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpjj5krmrz.jl:15\n  Expression: candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\n\
    \   Evaluated: [\"4\"] == [\"the number of odd elements 4n the str4ng 4 of the\
    \ 4nput.\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjj5krmrz.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjj5krmrz.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpjj5krmrz.jl:16\n  Expression: candidate([\"3\", \"11111111\"\
    ]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\n   Evaluated: [\"1\", \"8\"\
    ] == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpjj5krmrz.jl:16 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpjj5krmrz.jl:14\ntest set: Test Failed at /tmp/tmpjj5krmrz.jl:17\n\
    \  Expression: candidate([\"271\", \"137\", \"314\"]) == [\"the number of odd\
    \ elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the\
    \ str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the\
    \ 2nput.\"]\n   Evaluated: [\"2\", \"3\", \"2\"] == [\"the number of odd elements\
    \ 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the str3ng\
    \ 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    ]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjj5krmrz.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope"
  timestamp: 1659979567
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ [string(count(x->x%2!=0,x)) for x in lst]\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the number of\
    \ odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"\
    11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpo1cxw_bi.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpo1cxw_bi.jl:15\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: no method matching rem(::Char, ::Int64)\n\
    \  Closest candidates are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero})\
    \ at ~/.conda/envs/polyglot/share/julia/base/div.jl:80\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:81\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:82\n\
    \    ...\n  Stacktrace:\n    [1] (::var\"#2#4\")(x::Char)\n      @ Main /tmp/tmpo1cxw_bi.jl:8\n\
    \    [2] _simple_count\n      @ ./reduce.jl:1206 [inlined]\n    [3] #count#271\n\
    \      @ ./reduce.jl:1201 [inlined]\n    [4] count\n      @ ./reduce.jl:1201 [inlined]\n\
    \    [5] (::var\"#1#3\")(x::String)\n      @ Main ./none:0\n    [6] iterate\n\
    \      @ ./generator.jl:47 [inlined]\n    [7] collect(itr::Base.Generator{Vector{String},\
    \ var\"#1#3\"})\n      @ Base ./array.jl:724\n    [8] odd_count(lst::Vector{String})\n\
    \      @ Main /tmp/tmpo1cxw_bi.jl:8\n    [9] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpo1cxw_bi.jl:15 [inlined]\n\
    \   [11] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpo1cxw_bi.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpo1cxw_bi.jl:16\n  Test threw exception\n  Expression:\
    \ candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng\
    \ 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the 8nput.\"\
    ]\n  MethodError: no method matching rem(::Char, ::Int64)\n  Closest candidates\
    \ are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:80\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Down}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:81\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at ~/.conda/envs/po"
  timestamp: 1659979569
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ map(x -> string(count(y -> y % 2 == 1, x)), lst)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the\
    \ number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmp2br6gexs.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp2br6gexs.jl:15\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: no method matching rem(::Char, ::Int64)\n\
    \  Closest candidates are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero})\
    \ at ~/.conda/envs/polyglot/share/julia/base/div.jl:80\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:81\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:82\n\
    \    ...\n  Stacktrace:\n    [1] (::var\"#2#4\")(y::Char)\n      @ Main /tmp/tmp2br6gexs.jl:8\n\
    \    [2] _simple_count\n      @ ./reduce.jl:1206 [inlined]\n    [3] #count#271\n\
    \      @ ./reduce.jl:1201 [inlined]\n    [4] count\n      @ ./reduce.jl:1201 [inlined]\n\
    \    [5] (::var\"#1#3\")(x::String)\n      @ Main /tmp/tmp2br6gexs.jl:8\n    [6]\
    \ iterate\n      @ ./generator.jl:47 [inlined]\n    [7] _collect(c::Vector{String},\
    \ itr::Base.Generator{Vector{String}, var\"#1#3\"}, #unused#::Base.EltypeUnknown,\
    \ isz::Base.HasShape{1})\n      @ Base ./array.jl:744\n    [8] collect_similar\n\
    \      @ ./array.jl:653 [inlined]\n    [9] map\n      @ ./abstractarray.jl:2867\
    \ [inlined]\n   [10] odd_count(lst::Vector{String})\n      @ Main /tmp/tmp2br6gexs.jl:8\n\
    \   [11] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [12] macro expansion\n      @ /tmp/tmp2br6gexs.jl:15 [inlined]\n\
    \   [13] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [14] top-level scope\n      @ /tmp/tmp2br6gexs.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp2br6gexs.jl:16\n  Test threw exception\n  Expression:\
    \ candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng\
    \ 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the 8nput.\"\
    ]\n  MethodError: no method matching rem(::Char, ::Int64)\n  Closest candidates\
    \ are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero}) at ~/.conda/envs/polyglot/share/"
  timestamp: 1659979569
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ map(x -> string(count(y -> y % 2 == 1, x)), lst)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the\
    \ number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmp2br6gexs.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp2br6gexs.jl:15\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: no method matching rem(::Char, ::Int64)\n\
    \  Closest candidates are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero})\
    \ at ~/.conda/envs/polyglot/share/julia/base/div.jl:80\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:81\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:82\n\
    \    ...\n  Stacktrace:\n    [1] (::var\"#2#4\")(y::Char)\n      @ Main /tmp/tmp2br6gexs.jl:8\n\
    \    [2] _simple_count\n      @ ./reduce.jl:1206 [inlined]\n    [3] #count#271\n\
    \      @ ./reduce.jl:1201 [inlined]\n    [4] count\n      @ ./reduce.jl:1201 [inlined]\n\
    \    [5] (::var\"#1#3\")(x::String)\n      @ Main /tmp/tmp2br6gexs.jl:8\n    [6]\
    \ iterate\n      @ ./generator.jl:47 [inlined]\n    [7] _collect(c::Vector{String},\
    \ itr::Base.Generator{Vector{String}, var\"#1#3\"}, #unused#::Base.EltypeUnknown,\
    \ isz::Base.HasShape{1})\n      @ Base ./array.jl:744\n    [8] collect_similar\n\
    \      @ ./array.jl:653 [inlined]\n    [9] map\n      @ ./abstractarray.jl:2867\
    \ [inlined]\n   [10] odd_count(lst::Vector{String})\n      @ Main /tmp/tmp2br6gexs.jl:8\n\
    \   [11] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [12] macro expansion\n      @ /tmp/tmp2br6gexs.jl:15 [inlined]\n\
    \   [13] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [14] top-level scope\n      @ /tmp/tmp2br6gexs.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp2br6gexs.jl:16\n  Test threw exception\n  Expression:\
    \ candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng\
    \ 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the 8nput.\"\
    ]\n  MethodError: no method matching rem(::Char, ::Int64)\n  Closest candidates\
    \ are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero}) at ~/.conda/envs/polyglot/share/"
  timestamp: 1659979569
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ map(x -> string(count(y -> y % 2 == 1, parse.(Int, x))), lst)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) ==\
    \ [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmprl0m5_1f.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmprl0m5_1f.jl:15\n  Expression: candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\n\
    \   Evaluated: [\"1\"] == [\"the number of odd elements 4n the str4ng 4 of the\
    \ 4nput.\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprl0m5_1f.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprl0m5_1f.jl:14\ntest set: Test\
    \ Failed at /tmp/tmprl0m5_1f.jl:16\n  Expression: candidate([\"3\", \"11111111\"\
    ]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\n   Evaluated: [\"1\", \"1\"\
    ] == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmprl0m5_1f.jl:16 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmprl0m5_1f.jl:14\ntest set: Test Failed at /tmp/tmprl0m5_1f.jl:17\n\
    \  Expression: candidate([\"271\", \"137\", \"314\"]) == [\"the number of odd\
    \ elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the\
    \ str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the\
    \ 2nput.\"]\n   Evaluated: [\"1\", \"1\", \"0\"] == [\"the number of odd elements\
    \ 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the str3ng\
    \ 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    ]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprl0m5_1f.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope"
  timestamp: 1659979567
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ map(x -> string(count(y -> y % 2 == 1, x)), lst)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the\
    \ number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmp2br6gexs.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp2br6gexs.jl:15\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: no method matching rem(::Char, ::Int64)\n\
    \  Closest candidates are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero})\
    \ at ~/.conda/envs/polyglot/share/julia/base/div.jl:80\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:81\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:82\n\
    \    ...\n  Stacktrace:\n    [1] (::var\"#2#4\")(y::Char)\n      @ Main /tmp/tmp2br6gexs.jl:8\n\
    \    [2] _simple_count\n      @ ./reduce.jl:1206 [inlined]\n    [3] #count#271\n\
    \      @ ./reduce.jl:1201 [inlined]\n    [4] count\n      @ ./reduce.jl:1201 [inlined]\n\
    \    [5] (::var\"#1#3\")(x::String)\n      @ Main /tmp/tmp2br6gexs.jl:8\n    [6]\
    \ iterate\n      @ ./generator.jl:47 [inlined]\n    [7] _collect(c::Vector{String},\
    \ itr::Base.Generator{Vector{String}, var\"#1#3\"}, #unused#::Base.EltypeUnknown,\
    \ isz::Base.HasShape{1})\n      @ Base ./array.jl:744\n    [8] collect_similar\n\
    \      @ ./array.jl:653 [inlined]\n    [9] map\n      @ ./abstractarray.jl:2867\
    \ [inlined]\n   [10] odd_count(lst::Vector{String})\n      @ Main /tmp/tmp2br6gexs.jl:8\n\
    \   [11] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [12] macro expansion\n      @ /tmp/tmp2br6gexs.jl:15 [inlined]\n\
    \   [13] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [14] top-level scope\n      @ /tmp/tmp2br6gexs.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp2br6gexs.jl:16\n  Test threw exception\n  Expression:\
    \ candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng\
    \ 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the 8nput.\"\
    ]\n  MethodError: no method matching rem(::Char, ::Int64)\n  Closest candidates\
    \ are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero}) at ~/.conda/envs/polyglot/share/"
  timestamp: 1659979569
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ map(x -> string(count(y -> y % 2 == 1, parse.(Int, x))), lst)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) ==\
    \ [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmprl0m5_1f.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmprl0m5_1f.jl:15\n  Expression: candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\n\
    \   Evaluated: [\"1\"] == [\"the number of odd elements 4n the str4ng 4 of the\
    \ 4nput.\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprl0m5_1f.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprl0m5_1f.jl:14\ntest set: Test\
    \ Failed at /tmp/tmprl0m5_1f.jl:16\n  Expression: candidate([\"3\", \"11111111\"\
    ]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\n   Evaluated: [\"1\", \"1\"\
    ] == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmprl0m5_1f.jl:16 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmprl0m5_1f.jl:14\ntest set: Test Failed at /tmp/tmprl0m5_1f.jl:17\n\
    \  Expression: candidate([\"271\", \"137\", \"314\"]) == [\"the number of odd\
    \ elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the\
    \ str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the\
    \ 2nput.\"]\n   Evaluated: [\"1\", \"1\", \"0\"] == [\"the number of odd elements\
    \ 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the str3ng\
    \ 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    ]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprl0m5_1f.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope"
  timestamp: 1659979567
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ [string(count(isdigit, x) % 2 == 1 ? x : \"\") for x in lst]\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) ==\
    \ [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpm60bc044.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpm60bc044.jl:15\n  Expression: candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\n\
    \   Evaluated: [\"1234567\"] == [\"the number of odd elements 4n the str4ng 4\
    \ of the 4nput.\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpm60bc044.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpm60bc044.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpm60bc044.jl:16\n  Expression: candidate([\"3\", \"11111111\"\
    ]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\n   Evaluated: [\"3\", \"\"\
    ] == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpm60bc044.jl:16 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpm60bc044.jl:14\ntest set: Test Failed at /tmp/tmpm60bc044.jl:17\n\
    \  Expression: candidate([\"271\", \"137\", \"314\"]) == [\"the number of odd\
    \ elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the\
    \ str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the\
    \ 2nput.\"]\n   Evaluated: [\"271\", \"137\", \"314\"] == [\"the number of odd\
    \ elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the\
    \ str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the\
    \ 2nput.\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpm60bc044.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-"
  timestamp: 1659979567
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    count\
    \ = 0\n    for i in lst\n        for j in i\n            if parse(Int, j) % 2\
    \ != 0\n                count += 1\n            end\n        end\n        println(count)\n\
    \        count = 0\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate =\
    \ odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the number of odd elements\
    \ 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"])\
    \ == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\"\
    , \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    , \"the number of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of\
    \ odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpdmwipwzv.jl:21

    '
  stdout: "4\ntest set: Error During Test at /tmp/tmpdmwipwzv.jl:24\n  Test threw\
    \ exception\n  Expression: candidate([\"1234567\"]) == [\"the number of odd elements\
    \ 4n the str4ng 4 of the 4nput.\"]\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type Vector{String}\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::LinearAlgebra.Factorization) where T<:AbstractArray\
    \ at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{Vector{String}}, !Matched::LibGit2.StrArrayStruct) at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LibGit2/src/strarray.jl:13\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at ~/.conda/envs/polyglot/share/julia/base/array.jl:554\n\
    \    ...\n  Stacktrace:\n   [1] odd_count(lst::Vector{String})\n     @ Main /tmp/tmpdmwipwzv.jl:16\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpdmwipwzv.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpdmwipwzv.jl:23\n1\n8\ntest\
    \ set: Error During Test at /tmp/tmpdmwipwzv.jl:25\n  Test threw exception\n \
    \ Expression: candidate([\"3\", \"11111111\"]) == [\"the number of odd elements\
    \ 1n the str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng\
    \ 8 of the 8nput.\"]\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Vector{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::LinearAlgebra.Factorization) where T<:AbstractArray at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{Vector{String}}, !Matched::LibGit2.StrArrayStruct) at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LibGit2/src/strarray.jl:13\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at ~/.conda/envs/polyglot/share/julia/base/array.jl:554\n\
    \    ...\n  Stacktrace:\n   [1] odd_count(lst::Vector{String})\n     @ Main /t"
  timestamp: 1659979572
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ map(x -> string(count(y -> y % 2 == 1, x)), lst)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the\
    \ number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmp2br6gexs.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp2br6gexs.jl:15\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: no method matching rem(::Char, ::Int64)\n\
    \  Closest candidates are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero})\
    \ at ~/.conda/envs/polyglot/share/julia/base/div.jl:80\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:81\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:82\n\
    \    ...\n  Stacktrace:\n    [1] (::var\"#2#4\")(y::Char)\n      @ Main /tmp/tmp2br6gexs.jl:8\n\
    \    [2] _simple_count\n      @ ./reduce.jl:1206 [inlined]\n    [3] #count#271\n\
    \      @ ./reduce.jl:1201 [inlined]\n    [4] count\n      @ ./reduce.jl:1201 [inlined]\n\
    \    [5] (::var\"#1#3\")(x::String)\n      @ Main /tmp/tmp2br6gexs.jl:8\n    [6]\
    \ iterate\n      @ ./generator.jl:47 [inlined]\n    [7] _collect(c::Vector{String},\
    \ itr::Base.Generator{Vector{String}, var\"#1#3\"}, #unused#::Base.EltypeUnknown,\
    \ isz::Base.HasShape{1})\n      @ Base ./array.jl:744\n    [8] collect_similar\n\
    \      @ ./array.jl:653 [inlined]\n    [9] map\n      @ ./abstractarray.jl:2867\
    \ [inlined]\n   [10] odd_count(lst::Vector{String})\n      @ Main /tmp/tmp2br6gexs.jl:8\n\
    \   [11] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [12] macro expansion\n      @ /tmp/tmp2br6gexs.jl:15 [inlined]\n\
    \   [13] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [14] top-level scope\n      @ /tmp/tmp2br6gexs.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp2br6gexs.jl:16\n  Test threw exception\n  Expression:\
    \ candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng\
    \ 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the 8nput.\"\
    ]\n  MethodError: no method matching rem(::Char, ::Int64)\n  Closest candidates\
    \ are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero}) at ~/.conda/envs/polyglot/share/"
  timestamp: 1659979569
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ map(x -> string(length(filter(y -> y % 2 == 1, x))), lst)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) ==\
    \ [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmp840mt00n.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp840mt00n.jl:15\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: no method matching rem(::Char, ::Int64)\n\
    \  Closest candidates are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero})\
    \ at ~/.conda/envs/polyglot/share/julia/base/div.jl:80\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:81\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:82\n\
    \    ...\n  Stacktrace:\n    [1] (::var\"#2#4\")(y::Char)\n      @ Main /tmp/tmp840mt00n.jl:8\n\
    \    [2] filter(f::var\"#2#4\", s::String)\n      @ Base ./strings/substring.jl:246\n\
    \    [3] #1\n      @ /tmp/tmp840mt00n.jl:8 [inlined]\n    [4] iterate\n      @\
    \ ./generator.jl:47 [inlined]\n    [5] _collect(c::Vector{String}, itr::Base.Generator{Vector{String},\
    \ var\"#1#3\"}, #unused#::Base.EltypeUnknown, isz::Base.HasShape{1})\n      @\
    \ Base ./array.jl:744\n    [6] collect_similar\n      @ ./array.jl:653 [inlined]\n\
    \    [7] map\n      @ ./abstractarray.jl:2867 [inlined]\n    [8] odd_count(lst::Vector{String})\n\
    \      @ Main /tmp/tmp840mt00n.jl:8\n    [9] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmp840mt00n.jl:15 [inlined]\n\
    \   [11] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmp840mt00n.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp840mt00n.jl:16\n  Test threw exception\n  Expression:\
    \ candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng\
    \ 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the 8nput.\"\
    ]\n  MethodError: no method matching rem(::Char, ::Int64)\n  Closest candidates\
    \ are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:80\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Down}) at ~/.conda/envs/polygl"
  timestamp: 1659979569
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ map(x -> string(length(filter(y -> parse(Int, y) % 2 != 0, x))), lst)\nend\n\
    using Test\n\n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\
    \t@test(candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the\
    \ str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the\
    \ 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"]) == [\"the number\
    \ of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements\
    \ 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng\
    \ 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpjj5krmrz.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpjj5krmrz.jl:15\n  Expression: candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\n\
    \   Evaluated: [\"4\"] == [\"the number of odd elements 4n the str4ng 4 of the\
    \ 4nput.\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjj5krmrz.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjj5krmrz.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpjj5krmrz.jl:16\n  Expression: candidate([\"3\", \"11111111\"\
    ]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\n   Evaluated: [\"1\", \"8\"\
    ] == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpjj5krmrz.jl:16 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpjj5krmrz.jl:14\ntest set: Test Failed at /tmp/tmpjj5krmrz.jl:17\n\
    \  Expression: candidate([\"271\", \"137\", \"314\"]) == [\"the number of odd\
    \ elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the\
    \ str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the\
    \ 2nput.\"]\n   Evaluated: [\"2\", \"3\", \"2\"] == [\"the number of odd elements\
    \ 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the str3ng\
    \ 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    ]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjj5krmrz.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope"
  timestamp: 1659979567
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ [string(sum(x % 2 == 1 for x in parse.(Int, y))) for y in lst]\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) ==\
    \ [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmppkrol7nm.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmppkrol7nm.jl:15\n  Expression: candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\n\
    \   Evaluated: [\"1\"] == [\"the number of odd elements 4n the str4ng 4 of the\
    \ 4nput.\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppkrol7nm.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmppkrol7nm.jl:14\ntest set: Test\
    \ Failed at /tmp/tmppkrol7nm.jl:16\n  Expression: candidate([\"3\", \"11111111\"\
    ]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\n   Evaluated: [\"1\", \"1\"\
    ] == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmppkrol7nm.jl:16 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmppkrol7nm.jl:14\ntest set: Test Failed at /tmp/tmppkrol7nm.jl:17\n\
    \  Expression: candidate([\"271\", \"137\", \"314\"]) == [\"the number of odd\
    \ elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the\
    \ str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the\
    \ 2nput.\"]\n   Evaluated: [\"1\", \"1\", \"0\"] == [\"the number of odd elements\
    \ 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the str3ng\
    \ 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    ]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmppkrol7nm.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope"
  timestamp: 1659979572
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ map(x -> string(count(y -> y % 2 == 1, x)), lst)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the\
    \ number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmp2br6gexs.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp2br6gexs.jl:15\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: no method matching rem(::Char, ::Int64)\n\
    \  Closest candidates are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero})\
    \ at ~/.conda/envs/polyglot/share/julia/base/div.jl:80\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:81\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:82\n\
    \    ...\n  Stacktrace:\n    [1] (::var\"#2#4\")(y::Char)\n      @ Main /tmp/tmp2br6gexs.jl:8\n\
    \    [2] _simple_count\n      @ ./reduce.jl:1206 [inlined]\n    [3] #count#271\n\
    \      @ ./reduce.jl:1201 [inlined]\n    [4] count\n      @ ./reduce.jl:1201 [inlined]\n\
    \    [5] (::var\"#1#3\")(x::String)\n      @ Main /tmp/tmp2br6gexs.jl:8\n    [6]\
    \ iterate\n      @ ./generator.jl:47 [inlined]\n    [7] _collect(c::Vector{String},\
    \ itr::Base.Generator{Vector{String}, var\"#1#3\"}, #unused#::Base.EltypeUnknown,\
    \ isz::Base.HasShape{1})\n      @ Base ./array.jl:744\n    [8] collect_similar\n\
    \      @ ./array.jl:653 [inlined]\n    [9] map\n      @ ./abstractarray.jl:2867\
    \ [inlined]\n   [10] odd_count(lst::Vector{String})\n      @ Main /tmp/tmp2br6gexs.jl:8\n\
    \   [11] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [12] macro expansion\n      @ /tmp/tmp2br6gexs.jl:15 [inlined]\n\
    \   [13] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [14] top-level scope\n      @ /tmp/tmp2br6gexs.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp2br6gexs.jl:16\n  Test threw exception\n  Expression:\
    \ candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng\
    \ 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the 8nput.\"\
    ]\n  MethodError: no method matching rem(::Char, ::Int64)\n  Closest candidates\
    \ are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero}) at ~/.conda/envs/polyglot/share/"
  timestamp: 1659979569
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ map(x -> string(length(filter(y -> y % 2 == 1, x))), lst)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) ==\
    \ [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmp840mt00n.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp840mt00n.jl:15\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: no method matching rem(::Char, ::Int64)\n\
    \  Closest candidates are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero})\
    \ at ~/.conda/envs/polyglot/share/julia/base/div.jl:80\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:81\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:82\n\
    \    ...\n  Stacktrace:\n    [1] (::var\"#2#4\")(y::Char)\n      @ Main /tmp/tmp840mt00n.jl:8\n\
    \    [2] filter(f::var\"#2#4\", s::String)\n      @ Base ./strings/substring.jl:246\n\
    \    [3] #1\n      @ /tmp/tmp840mt00n.jl:8 [inlined]\n    [4] iterate\n      @\
    \ ./generator.jl:47 [inlined]\n    [5] _collect(c::Vector{String}, itr::Base.Generator{Vector{String},\
    \ var\"#1#3\"}, #unused#::Base.EltypeUnknown, isz::Base.HasShape{1})\n      @\
    \ Base ./array.jl:744\n    [6] collect_similar\n      @ ./array.jl:653 [inlined]\n\
    \    [7] map\n      @ ./abstractarray.jl:2867 [inlined]\n    [8] odd_count(lst::Vector{String})\n\
    \      @ Main /tmp/tmp840mt00n.jl:8\n    [9] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmp840mt00n.jl:15 [inlined]\n\
    \   [11] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmp840mt00n.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp840mt00n.jl:16\n  Test threw exception\n  Expression:\
    \ candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng\
    \ 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the 8nput.\"\
    ]\n  MethodError: no method matching rem(::Char, ::Int64)\n  Closest candidates\
    \ are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:80\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Down}) at ~/.conda/envs/polygl"
  timestamp: 1659979569
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ [string(count(x->parse(Int,x)%2==1,x)) for x in lst]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the\
    \ number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpv1192b6s.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpv1192b6s.jl:15\n  Expression: candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\n\
    \   Evaluated: [\"4\"] == [\"the number of odd elements 4n the str4ng 4 of the\
    \ 4nput.\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpv1192b6s.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpv1192b6s.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpv1192b6s.jl:16\n  Expression: candidate([\"3\", \"11111111\"\
    ]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\n   Evaluated: [\"1\", \"8\"\
    ] == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpv1192b6s.jl:16 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpv1192b6s.jl:14\ntest set: Test Failed at /tmp/tmpv1192b6s.jl:17\n\
    \  Expression: candidate([\"271\", \"137\", \"314\"]) == [\"the number of odd\
    \ elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the\
    \ str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the\
    \ 2nput.\"]\n   Evaluated: [\"2\", \"3\", \"2\"] == [\"the number of odd elements\
    \ 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the str3ng\
    \ 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    ]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpv1192b6s.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope"
  timestamp: 1659979572
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ [string(count(x->x%2==1, parse(Int, i))) for i in lst]\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) ==\
    \ [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpa9c62jnw.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpa9c62jnw.jl:15\n  Expression: candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\n\
    \   Evaluated: [\"1\"] == [\"the number of odd elements 4n the str4ng 4 of the\
    \ 4nput.\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpa9c62jnw.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpa9c62jnw.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpa9c62jnw.jl:16\n  Expression: candidate([\"3\", \"11111111\"\
    ]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\n   Evaluated: [\"1\", \"1\"\
    ] == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpa9c62jnw.jl:16 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpa9c62jnw.jl:14\ntest set: Test Failed at /tmp/tmpa9c62jnw.jl:17\n\
    \  Expression: candidate([\"271\", \"137\", \"314\"]) == [\"the number of odd\
    \ elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the\
    \ str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the\
    \ 2nput.\"]\n   Evaluated: [\"1\", \"1\", \"0\"] == [\"the number of odd elements\
    \ 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the str3ng\
    \ 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    ]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpa9c62jnw.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope"
  timestamp: 1659979567
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ [string(count(x->x%2==1, parse(Int, i))) for i in lst]\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) ==\
    \ [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpa9c62jnw.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpa9c62jnw.jl:15\n  Expression: candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\n\
    \   Evaluated: [\"1\"] == [\"the number of odd elements 4n the str4ng 4 of the\
    \ 4nput.\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpa9c62jnw.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpa9c62jnw.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpa9c62jnw.jl:16\n  Expression: candidate([\"3\", \"11111111\"\
    ]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\n   Evaluated: [\"1\", \"1\"\
    ] == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpa9c62jnw.jl:16 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpa9c62jnw.jl:14\ntest set: Test Failed at /tmp/tmpa9c62jnw.jl:17\n\
    \  Expression: candidate([\"271\", \"137\", \"314\"]) == [\"the number of odd\
    \ elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the\
    \ str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the\
    \ 2nput.\"]\n   Evaluated: [\"1\", \"1\", \"0\"] == [\"the number of odd elements\
    \ 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the str3ng\
    \ 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    ]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpa9c62jnw.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope"
  timestamp: 1659979567
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ map(x -> string(length(filter(y -> y % 2 == 1, collect(x)))), lst)\nend\nusing\
    \ Test\n\n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"\
    ]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpzk4sl963.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpzk4sl963.jl:15\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: no method matching rem(::Char, ::Int64)\n\
    \  Closest candidates are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero})\
    \ at ~/.conda/envs/polyglot/share/julia/base/div.jl:80\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:81\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:82\n\
    \    ...\n  Stacktrace:\n    [1] (::var\"#2#4\")(y::Char)\n      @ Main /tmp/tmpzk4sl963.jl:8\n\
    \    [2] filter(f::var\"#2#4\", a::Vector{Char})\n      @ Base ./array.jl:2484\n\
    \    [3] (::var\"#1#3\")(x::String)\n      @ Main /tmp/tmpzk4sl963.jl:8\n    [4]\
    \ iterate\n      @ ./generator.jl:47 [inlined]\n    [5] _collect(c::Vector{String},\
    \ itr::Base.Generator{Vector{String}, var\"#1#3\"}, #unused#::Base.EltypeUnknown,\
    \ isz::Base.HasShape{1})\n      @ Base ./array.jl:744\n    [6] collect_similar\n\
    \      @ ./array.jl:653 [inlined]\n    [7] map\n      @ ./abstractarray.jl:2867\
    \ [inlined]\n    [8] odd_count(lst::Vector{String})\n      @ Main /tmp/tmpzk4sl963.jl:8\n\
    \    [9] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpzk4sl963.jl:15 [inlined]\n\
    \   [11] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpzk4sl963.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpzk4sl963.jl:16\n  Test threw exception\n  Expression:\
    \ candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng\
    \ 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the 8nput.\"\
    ]\n  MethodError: no method matching rem(::Char, ::Int64)\n  Closest candidates\
    \ are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:80\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Down}) at ~/.conda"
  timestamp: 1659979574
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    #\
    \ your code here\n    return [string(sum(x % 2 != 0 for x in parse.(Int, i)))\
    \ for i in lst]\nend\nusing Test\n\n@testset begin\n\ncandidate = odd_count;\n\
    \t@test(candidate([\"1234567\"]) == [\"the number of odd elements 4n the str4ng\
    \ 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"]) == [\"the number\
    \ of odd elements 1n the str1ng 1 of the 1nput.\", \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"\
    ]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\", \"the number\
    \ of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of odd elements\
    \ 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp3mdthjb2.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmp3mdthjb2.jl:16\n  Expression: candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\n\
    \   Evaluated: [\"1\"] == [\"the number of odd elements 4n the str4ng 4 of the\
    \ 4nput.\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3mdthjb2.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3mdthjb2.jl:15\ntest set: Test\
    \ Failed at /tmp/tmp3mdthjb2.jl:17\n  Expression: candidate([\"3\", \"11111111\"\
    ]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\n   Evaluated: [\"1\", \"1\"\
    ] == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp3mdthjb2.jl:17 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp3mdthjb2.jl:15\ntest set: Test Failed at /tmp/tmp3mdthjb2.jl:18\n\
    \  Expression: candidate([\"271\", \"137\", \"314\"]) == [\"the number of odd\
    \ elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the\
    \ str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the\
    \ 2nput.\"]\n   Evaluated: [\"1\", \"1\", \"0\"] == [\"the number of odd elements\
    \ 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the str3ng\
    \ 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    ]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3mdthjb2.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope"
  timestamp: 1659979573
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ map(x -> length(filter(y -> parse(Int, y) % 2 != 0, x)), lst)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) ==\
    \ [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpfbff2k_f.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpfbff2k_f.jl:15\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: Cannot `convert` an object of type\
    \ Int64 to an object of type String\n  Closest candidates are:\n    convert(::Type{String},\
    \ !Matched::String) at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n    [1] setindex!(A::Vector{String}, x::Int64, i1::Int64)\n\
    \      @ Base ./array.jl:903\n    [2] _unsafe_copyto!(dest::Vector{String}, doffs::Int64,\
    \ src::Vector{Int64}, soffs::Int64, n::Int64)\n      @ Base ./array.jl:253\n \
    \   [3] unsafe_copyto!\n      @ ./array.jl:307 [inlined]\n    [4] _copyto_impl!\n\
    \      @ ./array.jl:331 [inlined]\n    [5] copyto!\n      @ ./array.jl:317 [inlined]\n\
    \    [6] copyto!\n      @ ./array.jl:343 [inlined]\n    [7] copyto_axcheck!\n\
    \      @ ./abstractarray.jl:1104 [inlined]\n    [8] Vector{String}(x::Vector{Int64})\n\
    \      @ Base ./array.jl:563\n    [9] convert\n      @ ./array.jl:554 [inlined]\n\
    \   [10] odd_count(lst::Vector{String})\n      @ Main /tmp/tmpfbff2k_f.jl:8\n\
    \   [11] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [12] macro expansion\n      @ /tmp/tmpfbff2k_f.jl:15 [inlined]\n\
    \   [13] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [14] top-level scope\n      @ /tmp/tmpfbff2k_f.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpfbff2k_f.jl:16\n  Test threw exception\n  Expression:\
    \ candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng\
    \ 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the 8nput.\"\
    ]\n  MethodError: Cannot `convert` an object of type Int64 to an object of type\
    \ String\n  Closest candid"
  timestamp: 1659979572
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ map(x -> length(filter(y -> parse(Int, y) % 2 != 0, x)), lst)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) ==\
    \ [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpfbff2k_f.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpfbff2k_f.jl:15\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: Cannot `convert` an object of type\
    \ Int64 to an object of type String\n  Closest candidates are:\n    convert(::Type{String},\
    \ !Matched::String) at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n    [1] setindex!(A::Vector{String}, x::Int64, i1::Int64)\n\
    \      @ Base ./array.jl:903\n    [2] _unsafe_copyto!(dest::Vector{String}, doffs::Int64,\
    \ src::Vector{Int64}, soffs::Int64, n::Int64)\n      @ Base ./array.jl:253\n \
    \   [3] unsafe_copyto!\n      @ ./array.jl:307 [inlined]\n    [4] _copyto_impl!\n\
    \      @ ./array.jl:331 [inlined]\n    [5] copyto!\n      @ ./array.jl:317 [inlined]\n\
    \    [6] copyto!\n      @ ./array.jl:343 [inlined]\n    [7] copyto_axcheck!\n\
    \      @ ./abstractarray.jl:1104 [inlined]\n    [8] Vector{String}(x::Vector{Int64})\n\
    \      @ Base ./array.jl:563\n    [9] convert\n      @ ./array.jl:554 [inlined]\n\
    \   [10] odd_count(lst::Vector{String})\n      @ Main /tmp/tmpfbff2k_f.jl:8\n\
    \   [11] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [12] macro expansion\n      @ /tmp/tmpfbff2k_f.jl:15 [inlined]\n\
    \   [13] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [14] top-level scope\n      @ /tmp/tmpfbff2k_f.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpfbff2k_f.jl:16\n  Test threw exception\n  Expression:\
    \ candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng\
    \ 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the 8nput.\"\
    ]\n  MethodError: Cannot `convert` an object of type Int64 to an object of type\
    \ String\n  Closest candid"
  timestamp: 1659979572
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    #\
    \ your code here\n    return [string(count(x->x%2==1,parse(Int,i))) for i in lst]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\
    \t@test(candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the\
    \ str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the\
    \ 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"]) == [\"the number\
    \ of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements\
    \ 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng\
    \ 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp6nnzwz29.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmp6nnzwz29.jl:16\n  Expression: candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\n\
    \   Evaluated: [\"1\"] == [\"the number of odd elements 4n the str4ng 4 of the\
    \ 4nput.\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6nnzwz29.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6nnzwz29.jl:15\ntest set: Test\
    \ Failed at /tmp/tmp6nnzwz29.jl:17\n  Expression: candidate([\"3\", \"11111111\"\
    ]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\n   Evaluated: [\"1\", \"1\"\
    ] == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp6nnzwz29.jl:17 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp6nnzwz29.jl:15\ntest set: Test Failed at /tmp/tmp6nnzwz29.jl:18\n\
    \  Expression: candidate([\"271\", \"137\", \"314\"]) == [\"the number of odd\
    \ elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the\
    \ str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the\
    \ 2nput.\"]\n   Evaluated: [\"1\", \"1\", \"0\"] == [\"the number of odd elements\
    \ 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the str3ng\
    \ 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    ]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6nnzwz29.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope"
  timestamp: 1659979567
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ map(x -> string(length(filter(y -> parse(Int, y) % 2 != 0, x))), lst)\nend\n\
    using Test\n\n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\
    \t@test(candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the\
    \ str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the\
    \ 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"]) == [\"the number\
    \ of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements\
    \ 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng\
    \ 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpjj5krmrz.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpjj5krmrz.jl:15\n  Expression: candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\n\
    \   Evaluated: [\"4\"] == [\"the number of odd elements 4n the str4ng 4 of the\
    \ 4nput.\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjj5krmrz.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjj5krmrz.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpjj5krmrz.jl:16\n  Expression: candidate([\"3\", \"11111111\"\
    ]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\n   Evaluated: [\"1\", \"8\"\
    ] == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpjj5krmrz.jl:16 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpjj5krmrz.jl:14\ntest set: Test Failed at /tmp/tmpjj5krmrz.jl:17\n\
    \  Expression: candidate([\"271\", \"137\", \"314\"]) == [\"the number of odd\
    \ elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the\
    \ str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the\
    \ 2nput.\"]\n   Evaluated: [\"2\", \"3\", \"2\"] == [\"the number of odd elements\
    \ 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the str3ng\
    \ 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    ]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjj5krmrz.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope"
  timestamp: 1659979567
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ map(x -> string(length(filter(y -> y % 2 == 1, map(z -> parse(Int, z), x)))),\
    \ lst)\nend\nusing Test\n\n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\
    \t@test(candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the\
    \ str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the\
    \ 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"]) == [\"the number\
    \ of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements\
    \ 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng\
    \ 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpw25oppjd.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpw25oppjd.jl:15\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  ArgumentError: map(f, s::AbstractString) requires\
    \ f to return AbstractChar; try map(f, collect(s)) or a comprehension instead\n\
    \  Stacktrace:\n    [1] map(f::var\"#3#6\", s::String)\n      @ Base ./strings/basic.jl:611\n\
    \    [2] #1\n      @ /tmp/tmpw25oppjd.jl:8 [inlined]\n    [3] iterate\n      @\
    \ ./generator.jl:47 [inlined]\n    [4] _collect(c::Vector{String}, itr::Base.Generator{Vector{String},\
    \ var\"#1#4\"}, #unused#::Base.EltypeUnknown, isz::Base.HasShape{1})\n      @\
    \ Base ./array.jl:744\n    [5] collect_similar\n      @ ./array.jl:653 [inlined]\n\
    \    [6] map\n      @ ./abstractarray.jl:2867 [inlined]\n    [7] odd_count(lst::Vector{String})\n\
    \      @ Main /tmp/tmpw25oppjd.jl:8\n    [8] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [9] macro expansion\n      @ /tmp/tmpw25oppjd.jl:15 [inlined]\n\
    \   [10] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [11] top-level scope\n      @ /tmp/tmpw25oppjd.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpw25oppjd.jl:16\n  Test threw exception\n  Expression:\
    \ candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng\
    \ 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the 8nput.\"\
    ]\n  ArgumentError: map(f, s::AbstractString) requires f to return AbstractChar;\
    \ try map(f, collect(s)) or a comprehension instead\n  Stacktrace:\n    [1] map(f::var\"\
    #3#6\", s::String)\n      @ Base ./strings/basic.jl:611\n    [2] #1\n      @ /tmp/tmpw25oppjd.jl:8\
    \ [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _collect(c::Vector{String},\
    \ itr::Base.Generator{Vector{String}, var\"#1#4\"}, #unused#::Base.EltypeUnknown,\
    \ isz::Base.HasShape{1})\n      @ Base ./array.jl:744\n    [5] collect_similar\n\
    \      @ ./array.jl:653 [inlined]\n    [6] map\n      @ ./abstractarray.jl:2867\
    \ [inlined]\n    [7] odd_count(lst::"
  timestamp: 1659979574
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ map(x -> string(count(y -> y % 2 == 1, x)), lst)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the\
    \ number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmp2br6gexs.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp2br6gexs.jl:15\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: no method matching rem(::Char, ::Int64)\n\
    \  Closest candidates are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero})\
    \ at ~/.conda/envs/polyglot/share/julia/base/div.jl:80\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:81\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:82\n\
    \    ...\n  Stacktrace:\n    [1] (::var\"#2#4\")(y::Char)\n      @ Main /tmp/tmp2br6gexs.jl:8\n\
    \    [2] _simple_count\n      @ ./reduce.jl:1206 [inlined]\n    [3] #count#271\n\
    \      @ ./reduce.jl:1201 [inlined]\n    [4] count\n      @ ./reduce.jl:1201 [inlined]\n\
    \    [5] (::var\"#1#3\")(x::String)\n      @ Main /tmp/tmp2br6gexs.jl:8\n    [6]\
    \ iterate\n      @ ./generator.jl:47 [inlined]\n    [7] _collect(c::Vector{String},\
    \ itr::Base.Generator{Vector{String}, var\"#1#3\"}, #unused#::Base.EltypeUnknown,\
    \ isz::Base.HasShape{1})\n      @ Base ./array.jl:744\n    [8] collect_similar\n\
    \      @ ./array.jl:653 [inlined]\n    [9] map\n      @ ./abstractarray.jl:2867\
    \ [inlined]\n   [10] odd_count(lst::Vector{String})\n      @ Main /tmp/tmp2br6gexs.jl:8\n\
    \   [11] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [12] macro expansion\n      @ /tmp/tmp2br6gexs.jl:15 [inlined]\n\
    \   [13] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [14] top-level scope\n      @ /tmp/tmp2br6gexs.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp2br6gexs.jl:16\n  Test threw exception\n  Expression:\
    \ candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng\
    \ 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the 8nput.\"\
    ]\n  MethodError: no method matching rem(::Char, ::Int64)\n  Closest candidates\
    \ are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero}) at ~/.conda/envs/polyglot/share/"
  timestamp: 1659979569
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ [string(count(x->x%2!=0,i)) for i in lst]\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the number of\
    \ odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"\
    11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpcg82loky.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpcg82loky.jl:15\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: no method matching rem(::Char, ::Int64)\n\
    \  Closest candidates are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero})\
    \ at ~/.conda/envs/polyglot/share/julia/base/div.jl:80\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:81\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:82\n\
    \    ...\n  Stacktrace:\n    [1] (::var\"#2#4\")(x::Char)\n      @ Main /tmp/tmpcg82loky.jl:8\n\
    \    [2] _simple_count\n      @ ./reduce.jl:1206 [inlined]\n    [3] #count#271\n\
    \      @ ./reduce.jl:1201 [inlined]\n    [4] count\n      @ ./reduce.jl:1201 [inlined]\n\
    \    [5] (::var\"#1#3\")(i::String)\n      @ Main ./none:0\n    [6] iterate\n\
    \      @ ./generator.jl:47 [inlined]\n    [7] collect(itr::Base.Generator{Vector{String},\
    \ var\"#1#3\"})\n      @ Base ./array.jl:724\n    [8] odd_count(lst::Vector{String})\n\
    \      @ Main /tmp/tmpcg82loky.jl:8\n    [9] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpcg82loky.jl:15 [inlined]\n\
    \   [11] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpcg82loky.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpcg82loky.jl:16\n  Test threw exception\n  Expression:\
    \ candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng\
    \ 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the 8nput.\"\
    ]\n  MethodError: no method matching rem(::Char, ::Int64)\n  Closest candidates\
    \ are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:80\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Down}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:81\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at ~/.conda/envs/po"
  timestamp: 1659979575
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ map(x -> string(count(y -> y % 2 == 1, parse.(Int, x))), lst)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) ==\
    \ [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmprl0m5_1f.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmprl0m5_1f.jl:15\n  Expression: candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\n\
    \   Evaluated: [\"1\"] == [\"the number of odd elements 4n the str4ng 4 of the\
    \ 4nput.\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprl0m5_1f.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprl0m5_1f.jl:14\ntest set: Test\
    \ Failed at /tmp/tmprl0m5_1f.jl:16\n  Expression: candidate([\"3\", \"11111111\"\
    ]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\n   Evaluated: [\"1\", \"1\"\
    ] == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmprl0m5_1f.jl:16 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmprl0m5_1f.jl:14\ntest set: Test Failed at /tmp/tmprl0m5_1f.jl:17\n\
    \  Expression: candidate([\"271\", \"137\", \"314\"]) == [\"the number of odd\
    \ elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the\
    \ str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the\
    \ 2nput.\"]\n   Evaluated: [\"1\", \"1\", \"0\"] == [\"the number of odd elements\
    \ 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the str3ng\
    \ 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    ]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprl0m5_1f.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope"
  timestamp: 1659979567
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ map(x -> string(count(y -> y % 2 == 1, x)), lst)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the\
    \ number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmp2br6gexs.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp2br6gexs.jl:15\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: no method matching rem(::Char, ::Int64)\n\
    \  Closest candidates are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero})\
    \ at ~/.conda/envs/polyglot/share/julia/base/div.jl:80\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:81\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:82\n\
    \    ...\n  Stacktrace:\n    [1] (::var\"#2#4\")(y::Char)\n      @ Main /tmp/tmp2br6gexs.jl:8\n\
    \    [2] _simple_count\n      @ ./reduce.jl:1206 [inlined]\n    [3] #count#271\n\
    \      @ ./reduce.jl:1201 [inlined]\n    [4] count\n      @ ./reduce.jl:1201 [inlined]\n\
    \    [5] (::var\"#1#3\")(x::String)\n      @ Main /tmp/tmp2br6gexs.jl:8\n    [6]\
    \ iterate\n      @ ./generator.jl:47 [inlined]\n    [7] _collect(c::Vector{String},\
    \ itr::Base.Generator{Vector{String}, var\"#1#3\"}, #unused#::Base.EltypeUnknown,\
    \ isz::Base.HasShape{1})\n      @ Base ./array.jl:744\n    [8] collect_similar\n\
    \      @ ./array.jl:653 [inlined]\n    [9] map\n      @ ./abstractarray.jl:2867\
    \ [inlined]\n   [10] odd_count(lst::Vector{String})\n      @ Main /tmp/tmp2br6gexs.jl:8\n\
    \   [11] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [12] macro expansion\n      @ /tmp/tmp2br6gexs.jl:15 [inlined]\n\
    \   [13] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [14] top-level scope\n      @ /tmp/tmp2br6gexs.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp2br6gexs.jl:16\n  Test threw exception\n  Expression:\
    \ candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng\
    \ 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the 8nput.\"\
    ]\n  MethodError: no method matching rem(::Char, ::Int64)\n  Closest candidates\
    \ are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero}) at ~/.conda/envs/polyglot/share/"
  timestamp: 1659979569
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    #\
    \ TODO: implement this function\n    return [\"0\"]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the\
    \ number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpox4alg_m.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmpox4alg_m.jl:16\n  Expression: candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\n\
    \   Evaluated: [\"0\"] == [\"the number of odd elements 4n the str4ng 4 of the\
    \ 4nput.\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpox4alg_m.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpox4alg_m.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpox4alg_m.jl:17\n  Expression: candidate([\"3\", \"11111111\"\
    ]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\n   Evaluated: [\"0\"] == [\"\
    the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number of odd\
    \ elements 8n the str8ng 8 of the 8nput.\"]\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpox4alg_m.jl:17 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpox4alg_m.jl:15\ntest set: Test Failed at /tmp/tmpox4alg_m.jl:18\n\
    \  Expression: candidate([\"271\", \"137\", \"314\"]) == [\"the number of odd\
    \ elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the\
    \ str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the\
    \ 2nput.\"]\n   Evaluated: [\"0\"] == [\"the number of odd elements 2n the str2ng\
    \ 2 of the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\"\
    , \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpox4alg_m.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpo"
  timestamp: 1659979573
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ [string(count(x->x%2==1,x)) for x in lst]\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the number of\
    \ odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"\
    11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmprh25be7v.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmprh25be7v.jl:15\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: no method matching rem(::Char, ::Int64)\n\
    \  Closest candidates are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero})\
    \ at ~/.conda/envs/polyglot/share/julia/base/div.jl:80\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:81\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:82\n\
    \    ...\n  Stacktrace:\n    [1] (::var\"#2#4\")(x::Char)\n      @ Main /tmp/tmprh25be7v.jl:8\n\
    \    [2] _simple_count\n      @ ./reduce.jl:1206 [inlined]\n    [3] #count#271\n\
    \      @ ./reduce.jl:1201 [inlined]\n    [4] count\n      @ ./reduce.jl:1201 [inlined]\n\
    \    [5] (::var\"#1#3\")(x::String)\n      @ Main ./none:0\n    [6] iterate\n\
    \      @ ./generator.jl:47 [inlined]\n    [7] collect(itr::Base.Generator{Vector{String},\
    \ var\"#1#3\"})\n      @ Base ./array.jl:724\n    [8] odd_count(lst::Vector{String})\n\
    \      @ Main /tmp/tmprh25be7v.jl:8\n    [9] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmprh25be7v.jl:15 [inlined]\n\
    \   [11] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmprh25be7v.jl:14\ntest set:\
    \ Error During Test at /tmp/tmprh25be7v.jl:16\n  Test threw exception\n  Expression:\
    \ candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng\
    \ 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the 8nput.\"\
    ]\n  MethodError: no method matching rem(::Char, ::Int64)\n  Closest candidates\
    \ are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:80\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Down}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:81\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at ~/.conda/envs/po"
  timestamp: 1659979575
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    output\
    \ = []\n    for i in lst\n        count = 0\n        for j in i\n            if\
    \ parse(Int, j) % 2 != 0\n                count += 1\n            end\n      \
    \  end\n        push!(output, count)\n    end\n    return output\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) ==\
    \ [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpes8mge59.jl:22

    '
  stdout: "test set: Error During Test at /tmp/tmpes8mge59.jl:25\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: Cannot `convert` an object of type\
    \ Int64 to an object of type String\n  Closest candidates are:\n    convert(::Type{String},\
    \ !Matched::String) at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n    [1] setindex!(A::Vector{String}, x::Int64, i1::Int64)\n\
    \      @ Base ./array.jl:903\n    [2] _unsafe_copyto!(dest::Vector{String}, doffs::Int64,\
    \ src::Vector{Any}, soffs::Int64, n::Int64)\n      @ Base ./array.jl:253\n   \
    \ [3] unsafe_copyto!\n      @ ./array.jl:307 [inlined]\n    [4] _copyto_impl!\n\
    \      @ ./array.jl:331 [inlined]\n    [5] copyto!\n      @ ./array.jl:317 [inlined]\n\
    \    [6] copyto!\n      @ ./array.jl:343 [inlined]\n    [7] copyto_axcheck!\n\
    \      @ ./abstractarray.jl:1104 [inlined]\n    [8] Vector{String}(x::Vector{Any})\n\
    \      @ Base ./array.jl:563\n    [9] convert\n      @ ./array.jl:554 [inlined]\n\
    \   [10] odd_count(lst::Vector{String})\n      @ Main /tmp/tmpes8mge59.jl:18\n\
    \   [11] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [12] macro expansion\n      @ /tmp/tmpes8mge59.jl:25 [inlined]\n\
    \   [13] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [14] top-level scope\n      @ /tmp/tmpes8mge59.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpes8mge59.jl:26\n  Test threw exception\n  Expression:\
    \ candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng\
    \ 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the 8nput.\"\
    ]\n  MethodError: Cannot `convert` an object of type Int64 to an object of type\
    \ String\n  Closest candidate"
  timestamp: 1659979569
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ map(x -> string(length(filter(y -> parse(Int, y) % 2 != 0, x))), lst)\nend\n\
    using Test\n\n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\
    \t@test(candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the\
    \ str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the\
    \ 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"]) == [\"the number\
    \ of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements\
    \ 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng\
    \ 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpjj5krmrz.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpjj5krmrz.jl:15\n  Expression: candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\n\
    \   Evaluated: [\"4\"] == [\"the number of odd elements 4n the str4ng 4 of the\
    \ 4nput.\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjj5krmrz.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjj5krmrz.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpjj5krmrz.jl:16\n  Expression: candidate([\"3\", \"11111111\"\
    ]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\n   Evaluated: [\"1\", \"8\"\
    ] == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpjj5krmrz.jl:16 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpjj5krmrz.jl:14\ntest set: Test Failed at /tmp/tmpjj5krmrz.jl:17\n\
    \  Expression: candidate([\"271\", \"137\", \"314\"]) == [\"the number of odd\
    \ elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the\
    \ str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the\
    \ 2nput.\"]\n   Evaluated: [\"2\", \"3\", \"2\"] == [\"the number of odd elements\
    \ 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the str3ng\
    \ 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    ]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjj5krmrz.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope"
  timestamp: 1659979567
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ map(x -> string(length(filter(y -> y % 2 == 1, parse.(Int, x)))), lst)\nend\n\
    using Test\n\n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\
    \t@test(candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the\
    \ str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the\
    \ 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"]) == [\"the number\
    \ of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements\
    \ 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng\
    \ 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmp9xdtwedh.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp9xdtwedh.jl:15\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: no method matching filter(::var\"\
    #2#4\", ::Int64)\n  Closest candidates are:\n    filter(::Any, !Matched::Tuple)\
    \ at ~/.conda/envs/polyglot/share/julia/base/tuple.jl:363\n    filter(::Any, !Matched::Array{T,\
    \ N}) where {T, N} at ~/.conda/envs/polyglot/share/julia/base/array.jl:2479\n\
    \    filter(::Any, !Matched::AbstractDict) at ~/.conda/envs/polyglot/share/julia/base/abstractdict.jl:434\n\
    \    ...\n  Stacktrace:\n    [1] (::var\"#1#3\")(x::String)\n      @ Main /tmp/tmp9xdtwedh.jl:8\n\
    \    [2] iterate\n      @ ./generator.jl:47 [inlined]\n    [3] _collect\n    \
    \  @ ./array.jl:744 [inlined]\n    [4] collect_similar\n      @ ./array.jl:653\
    \ [inlined]\n    [5] map\n      @ ./abstractarray.jl:2867 [inlined]\n    [6] odd_count(lst::Vector{String})\n\
    \      @ Main /tmp/tmp9xdtwedh.jl:8\n    [7] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [8] macro expansion\n      @ /tmp/tmp9xdtwedh.jl:15 [inlined]\n\
    \    [9] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [10] top-level scope\n      @ /tmp/tmp9xdtwedh.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp9xdtwedh.jl:16\n  Test threw exception\n  Expression:\
    \ candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng\
    \ 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the 8nput.\"\
    ]\n  MethodError: no method matching filter(::var\"#2#4\", ::Int64)\n  Closest\
    \ candidates are:\n    filter(::Any, !Matched::Tuple) at ~/.conda/envs/polyglot/share/julia/base/tuple.jl:363\n\
    \    filter(::Any, !Matched::Array{T, N}) where {T, N} at ~/.conda/envs/polyglot/share/julia/base/array.jl:2479\n\
    \    filter(::Any, !Matched::AbstractDict) at ~/.conda/envs/polyglot/share/julia/base/abstractdict.jl:434\n\
    \    ...\n  Stacktrace:\n    [1] (::var\"#1#3\")(x::String)\n      @ Main /tmp/tmp9xdtwedh.jl:8\n\
    \    [2] iterate\n      @ ./"
  timestamp: 1659979569
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    #\
    \ your code here\n    return [string(count(x->x%2==1,x)) for x in lst]\nend\n\
    using Test\n\n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\
    \t@test(candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the\
    \ str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the\
    \ 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"]) == [\"the number\
    \ of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements\
    \ 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng\
    \ 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmplajdyhpc.jl:13

    '
  stdout: "test set: Error During Test at /tmp/tmplajdyhpc.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: no method matching rem(::Char, ::Int64)\n\
    \  Closest candidates are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero})\
    \ at ~/.conda/envs/polyglot/share/julia/base/div.jl:80\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:81\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:82\n\
    \    ...\n  Stacktrace:\n    [1] (::var\"#2#4\")(x::Char)\n      @ Main /tmp/tmplajdyhpc.jl:9\n\
    \    [2] _simple_count\n      @ ./reduce.jl:1206 [inlined]\n    [3] #count#271\n\
    \      @ ./reduce.jl:1201 [inlined]\n    [4] count\n      @ ./reduce.jl:1201 [inlined]\n\
    \    [5] (::var\"#1#3\")(x::String)\n      @ Main ./none:0\n    [6] iterate\n\
    \      @ ./generator.jl:47 [inlined]\n    [7] collect(itr::Base.Generator{Vector{String},\
    \ var\"#1#3\"})\n      @ Base ./array.jl:724\n    [8] odd_count(lst::Vector{String})\n\
    \      @ Main /tmp/tmplajdyhpc.jl:9\n    [9] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmplajdyhpc.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmplajdyhpc.jl:15\ntest set:\
    \ Error During Test at /tmp/tmplajdyhpc.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng\
    \ 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the 8nput.\"\
    ]\n  MethodError: no method matching rem(::Char, ::Int64)\n  Closest candidates\
    \ are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:80\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Down}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:81\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at ~/.conda/envs/po"
  timestamp: 1659979575
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ map(x -> string(count(y -> y % 2 == 1, x)), lst)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the\
    \ number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmp2br6gexs.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp2br6gexs.jl:15\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: no method matching rem(::Char, ::Int64)\n\
    \  Closest candidates are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero})\
    \ at ~/.conda/envs/polyglot/share/julia/base/div.jl:80\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:81\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:82\n\
    \    ...\n  Stacktrace:\n    [1] (::var\"#2#4\")(y::Char)\n      @ Main /tmp/tmp2br6gexs.jl:8\n\
    \    [2] _simple_count\n      @ ./reduce.jl:1206 [inlined]\n    [3] #count#271\n\
    \      @ ./reduce.jl:1201 [inlined]\n    [4] count\n      @ ./reduce.jl:1201 [inlined]\n\
    \    [5] (::var\"#1#3\")(x::String)\n      @ Main /tmp/tmp2br6gexs.jl:8\n    [6]\
    \ iterate\n      @ ./generator.jl:47 [inlined]\n    [7] _collect(c::Vector{String},\
    \ itr::Base.Generator{Vector{String}, var\"#1#3\"}, #unused#::Base.EltypeUnknown,\
    \ isz::Base.HasShape{1})\n      @ Base ./array.jl:744\n    [8] collect_similar\n\
    \      @ ./array.jl:653 [inlined]\n    [9] map\n      @ ./abstractarray.jl:2867\
    \ [inlined]\n   [10] odd_count(lst::Vector{String})\n      @ Main /tmp/tmp2br6gexs.jl:8\n\
    \   [11] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [12] macro expansion\n      @ /tmp/tmp2br6gexs.jl:15 [inlined]\n\
    \   [13] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [14] top-level scope\n      @ /tmp/tmp2br6gexs.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp2br6gexs.jl:16\n  Test threw exception\n  Expression:\
    \ candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng\
    \ 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the 8nput.\"\
    ]\n  MethodError: no method matching rem(::Char, ::Int64)\n  Closest candidates\
    \ are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero}) at ~/.conda/envs/polyglot/share/"
  timestamp: 1659979569
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ map(x -> string(count(y -> y % 2 == 1, x)), lst)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the\
    \ number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmp2br6gexs.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp2br6gexs.jl:15\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: no method matching rem(::Char, ::Int64)\n\
    \  Closest candidates are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero})\
    \ at ~/.conda/envs/polyglot/share/julia/base/div.jl:80\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:81\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:82\n\
    \    ...\n  Stacktrace:\n    [1] (::var\"#2#4\")(y::Char)\n      @ Main /tmp/tmp2br6gexs.jl:8\n\
    \    [2] _simple_count\n      @ ./reduce.jl:1206 [inlined]\n    [3] #count#271\n\
    \      @ ./reduce.jl:1201 [inlined]\n    [4] count\n      @ ./reduce.jl:1201 [inlined]\n\
    \    [5] (::var\"#1#3\")(x::String)\n      @ Main /tmp/tmp2br6gexs.jl:8\n    [6]\
    \ iterate\n      @ ./generator.jl:47 [inlined]\n    [7] _collect(c::Vector{String},\
    \ itr::Base.Generator{Vector{String}, var\"#1#3\"}, #unused#::Base.EltypeUnknown,\
    \ isz::Base.HasShape{1})\n      @ Base ./array.jl:744\n    [8] collect_similar\n\
    \      @ ./array.jl:653 [inlined]\n    [9] map\n      @ ./abstractarray.jl:2867\
    \ [inlined]\n   [10] odd_count(lst::Vector{String})\n      @ Main /tmp/tmp2br6gexs.jl:8\n\
    \   [11] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [12] macro expansion\n      @ /tmp/tmp2br6gexs.jl:15 [inlined]\n\
    \   [13] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [14] top-level scope\n      @ /tmp/tmp2br6gexs.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp2br6gexs.jl:16\n  Test threw exception\n  Expression:\
    \ candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng\
    \ 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the 8nput.\"\
    ]\n  MethodError: no method matching rem(::Char, ::Int64)\n  Closest candidates\
    \ are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero}) at ~/.conda/envs/polyglot/share/"
  timestamp: 1659979569
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    output\
    \ = []\n    for i in lst\n        count = 0\n        for j in i\n            if\
    \ parse(Int, j) % 2 != 0\n                count += 1\n            end\n      \
    \  end\n        push!(output, count)\n    end\n    return output\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) ==\
    \ [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpes8mge59.jl:22

    '
  stdout: "test set: Error During Test at /tmp/tmpes8mge59.jl:25\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: Cannot `convert` an object of type\
    \ Int64 to an object of type String\n  Closest candidates are:\n    convert(::Type{String},\
    \ !Matched::String) at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n    [1] setindex!(A::Vector{String}, x::Int64, i1::Int64)\n\
    \      @ Base ./array.jl:903\n    [2] _unsafe_copyto!(dest::Vector{String}, doffs::Int64,\
    \ src::Vector{Any}, soffs::Int64, n::Int64)\n      @ Base ./array.jl:253\n   \
    \ [3] unsafe_copyto!\n      @ ./array.jl:307 [inlined]\n    [4] _copyto_impl!\n\
    \      @ ./array.jl:331 [inlined]\n    [5] copyto!\n      @ ./array.jl:317 [inlined]\n\
    \    [6] copyto!\n      @ ./array.jl:343 [inlined]\n    [7] copyto_axcheck!\n\
    \      @ ./abstractarray.jl:1104 [inlined]\n    [8] Vector{String}(x::Vector{Any})\n\
    \      @ Base ./array.jl:563\n    [9] convert\n      @ ./array.jl:554 [inlined]\n\
    \   [10] odd_count(lst::Vector{String})\n      @ Main /tmp/tmpes8mge59.jl:18\n\
    \   [11] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [12] macro expansion\n      @ /tmp/tmpes8mge59.jl:25 [inlined]\n\
    \   [13] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [14] top-level scope\n      @ /tmp/tmpes8mge59.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpes8mge59.jl:26\n  Test threw exception\n  Expression:\
    \ candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng\
    \ 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the 8nput.\"\
    ]\n  MethodError: Cannot `convert` an object of type Int64 to an object of type\
    \ String\n  Closest candidate"
  timestamp: 1659979569
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    #\
    \ your code here\n    return [string(sum(isodd.(parse.(Int, x)))) for x in lst]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\
    \t@test(candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the\
    \ str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the\
    \ 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"]) == [\"the number\
    \ of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements\
    \ 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng\
    \ 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp_itydd_t.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmp_itydd_t.jl:16\n  Expression: candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\n\
    \   Evaluated: [\"1\"] == [\"the number of odd elements 4n the str4ng 4 of the\
    \ 4nput.\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_itydd_t.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_itydd_t.jl:15\ntest set: Test\
    \ Failed at /tmp/tmp_itydd_t.jl:17\n  Expression: candidate([\"3\", \"11111111\"\
    ]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\n   Evaluated: [\"1\", \"1\"\
    ] == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp_itydd_t.jl:17 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp_itydd_t.jl:15\ntest set: Test Failed at /tmp/tmp_itydd_t.jl:18\n\
    \  Expression: candidate([\"271\", \"137\", \"314\"]) == [\"the number of odd\
    \ elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the\
    \ str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the\
    \ 2nput.\"]\n   Evaluated: [\"1\", \"1\", \"0\"] == [\"the number of odd elements\
    \ 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the str3ng\
    \ 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    ]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_itydd_t.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope"
  timestamp: 1659979574
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ [string(count(x->x%2==1, parse(Int, i))) for i in lst]\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) ==\
    \ [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpa9c62jnw.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpa9c62jnw.jl:15\n  Expression: candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\n\
    \   Evaluated: [\"1\"] == [\"the number of odd elements 4n the str4ng 4 of the\
    \ 4nput.\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpa9c62jnw.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpa9c62jnw.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpa9c62jnw.jl:16\n  Expression: candidate([\"3\", \"11111111\"\
    ]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\n   Evaluated: [\"1\", \"1\"\
    ] == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpa9c62jnw.jl:16 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpa9c62jnw.jl:14\ntest set: Test Failed at /tmp/tmpa9c62jnw.jl:17\n\
    \  Expression: candidate([\"271\", \"137\", \"314\"]) == [\"the number of odd\
    \ elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the\
    \ str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the\
    \ 2nput.\"]\n   Evaluated: [\"1\", \"1\", \"0\"] == [\"the number of odd elements\
    \ 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the str3ng\
    \ 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    ]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpa9c62jnw.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope"
  timestamp: 1659979567
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    out\
    \ = []\n    for i in lst\n        count = 0\n        for j in i\n            if\
    \ parse(Int, j) % 2 != 0\n                count += 1\n            end\n      \
    \  end\n        push!(out, count)\n    end\n    return out\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) ==\
    \ [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmp_1u5vkks.jl:22

    '
  stdout: "test set: Error During Test at /tmp/tmp_1u5vkks.jl:25\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: Cannot `convert` an object of type\
    \ Int64 to an object of type String\n  Closest candidates are:\n    convert(::Type{String},\
    \ !Matched::String) at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n    [1] setindex!(A::Vector{String}, x::Int64, i1::Int64)\n\
    \      @ Base ./array.jl:903\n    [2] _unsafe_copyto!(dest::Vector{String}, doffs::Int64,\
    \ src::Vector{Any}, soffs::Int64, n::Int64)\n      @ Base ./array.jl:253\n   \
    \ [3] unsafe_copyto!\n      @ ./array.jl:307 [inlined]\n    [4] _copyto_impl!\n\
    \      @ ./array.jl:331 [inlined]\n    [5] copyto!\n      @ ./array.jl:317 [inlined]\n\
    \    [6] copyto!\n      @ ./array.jl:343 [inlined]\n    [7] copyto_axcheck!\n\
    \      @ ./abstractarray.jl:1104 [inlined]\n    [8] Vector{String}(x::Vector{Any})\n\
    \      @ Base ./array.jl:563\n    [9] convert\n      @ ./array.jl:554 [inlined]\n\
    \   [10] odd_count(lst::Vector{String})\n      @ Main /tmp/tmp_1u5vkks.jl:18\n\
    \   [11] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [12] macro expansion\n      @ /tmp/tmp_1u5vkks.jl:25 [inlined]\n\
    \   [13] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [14] top-level scope\n      @ /tmp/tmp_1u5vkks.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp_1u5vkks.jl:26\n  Test threw exception\n  Expression:\
    \ candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng\
    \ 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the 8nput.\"\
    ]\n  MethodError: Cannot `convert` an object of type Int64 to an object of type\
    \ String\n  Closest candidate"
  timestamp: 1659979569
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ map(x -> string(length(filter(y -> y % 2 == 1, x))), lst)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) ==\
    \ [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmp840mt00n.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp840mt00n.jl:15\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: no method matching rem(::Char, ::Int64)\n\
    \  Closest candidates are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero})\
    \ at ~/.conda/envs/polyglot/share/julia/base/div.jl:80\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:81\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:82\n\
    \    ...\n  Stacktrace:\n    [1] (::var\"#2#4\")(y::Char)\n      @ Main /tmp/tmp840mt00n.jl:8\n\
    \    [2] filter(f::var\"#2#4\", s::String)\n      @ Base ./strings/substring.jl:246\n\
    \    [3] #1\n      @ /tmp/tmp840mt00n.jl:8 [inlined]\n    [4] iterate\n      @\
    \ ./generator.jl:47 [inlined]\n    [5] _collect(c::Vector{String}, itr::Base.Generator{Vector{String},\
    \ var\"#1#3\"}, #unused#::Base.EltypeUnknown, isz::Base.HasShape{1})\n      @\
    \ Base ./array.jl:744\n    [6] collect_similar\n      @ ./array.jl:653 [inlined]\n\
    \    [7] map\n      @ ./abstractarray.jl:2867 [inlined]\n    [8] odd_count(lst::Vector{String})\n\
    \      @ Main /tmp/tmp840mt00n.jl:8\n    [9] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmp840mt00n.jl:15 [inlined]\n\
    \   [11] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmp840mt00n.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp840mt00n.jl:16\n  Test threw exception\n  Expression:\
    \ candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng\
    \ 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the 8nput.\"\
    ]\n  MethodError: no method matching rem(::Char, ::Int64)\n  Closest candidates\
    \ are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:80\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Down}) at ~/.conda/envs/polygl"
  timestamp: 1659979569
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ map(x -> string(count(y -> y % 2 == 1, x)), lst)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the\
    \ number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmp2br6gexs.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp2br6gexs.jl:15\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: no method matching rem(::Char, ::Int64)\n\
    \  Closest candidates are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero})\
    \ at ~/.conda/envs/polyglot/share/julia/base/div.jl:80\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:81\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:82\n\
    \    ...\n  Stacktrace:\n    [1] (::var\"#2#4\")(y::Char)\n      @ Main /tmp/tmp2br6gexs.jl:8\n\
    \    [2] _simple_count\n      @ ./reduce.jl:1206 [inlined]\n    [3] #count#271\n\
    \      @ ./reduce.jl:1201 [inlined]\n    [4] count\n      @ ./reduce.jl:1201 [inlined]\n\
    \    [5] (::var\"#1#3\")(x::String)\n      @ Main /tmp/tmp2br6gexs.jl:8\n    [6]\
    \ iterate\n      @ ./generator.jl:47 [inlined]\n    [7] _collect(c::Vector{String},\
    \ itr::Base.Generator{Vector{String}, var\"#1#3\"}, #unused#::Base.EltypeUnknown,\
    \ isz::Base.HasShape{1})\n      @ Base ./array.jl:744\n    [8] collect_similar\n\
    \      @ ./array.jl:653 [inlined]\n    [9] map\n      @ ./abstractarray.jl:2867\
    \ [inlined]\n   [10] odd_count(lst::Vector{String})\n      @ Main /tmp/tmp2br6gexs.jl:8\n\
    \   [11] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [12] macro expansion\n      @ /tmp/tmp2br6gexs.jl:15 [inlined]\n\
    \   [13] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [14] top-level scope\n      @ /tmp/tmp2br6gexs.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp2br6gexs.jl:16\n  Test threw exception\n  Expression:\
    \ candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng\
    \ 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the 8nput.\"\
    ]\n  MethodError: no method matching rem(::Char, ::Int64)\n  Closest candidates\
    \ are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero}) at ~/.conda/envs/polyglot/share/"
  timestamp: 1659979569
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ map(x -> string(count(y -> y % 2 == 1, x)), lst)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the\
    \ number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmp2br6gexs.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp2br6gexs.jl:15\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: no method matching rem(::Char, ::Int64)\n\
    \  Closest candidates are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero})\
    \ at ~/.conda/envs/polyglot/share/julia/base/div.jl:80\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:81\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:82\n\
    \    ...\n  Stacktrace:\n    [1] (::var\"#2#4\")(y::Char)\n      @ Main /tmp/tmp2br6gexs.jl:8\n\
    \    [2] _simple_count\n      @ ./reduce.jl:1206 [inlined]\n    [3] #count#271\n\
    \      @ ./reduce.jl:1201 [inlined]\n    [4] count\n      @ ./reduce.jl:1201 [inlined]\n\
    \    [5] (::var\"#1#3\")(x::String)\n      @ Main /tmp/tmp2br6gexs.jl:8\n    [6]\
    \ iterate\n      @ ./generator.jl:47 [inlined]\n    [7] _collect(c::Vector{String},\
    \ itr::Base.Generator{Vector{String}, var\"#1#3\"}, #unused#::Base.EltypeUnknown,\
    \ isz::Base.HasShape{1})\n      @ Base ./array.jl:744\n    [8] collect_similar\n\
    \      @ ./array.jl:653 [inlined]\n    [9] map\n      @ ./abstractarray.jl:2867\
    \ [inlined]\n   [10] odd_count(lst::Vector{String})\n      @ Main /tmp/tmp2br6gexs.jl:8\n\
    \   [11] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [12] macro expansion\n      @ /tmp/tmp2br6gexs.jl:15 [inlined]\n\
    \   [13] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [14] top-level scope\n      @ /tmp/tmp2br6gexs.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp2br6gexs.jl:16\n  Test threw exception\n  Expression:\
    \ candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng\
    \ 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the 8nput.\"\
    ]\n  MethodError: no method matching rem(::Char, ::Int64)\n  Closest candidates\
    \ are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero}) at ~/.conda/envs/polyglot/share/"
  timestamp: 1659979569
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    #\
    \ your code here\n    return [string(length(filter(x->x%2==1, parse.(Int, x))))\
    \ for x in lst]\nend\nusing Test\n\n@testset begin\n\ncandidate = odd_count;\n\
    \t@test(candidate([\"1234567\"]) == [\"the number of odd elements 4n the str4ng\
    \ 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"]) == [\"the number\
    \ of odd elements 1n the str1ng 1 of the 1nput.\", \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"\
    ]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\", \"the number\
    \ of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of odd elements\
    \ 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmponvu_5yf.jl:13

    '
  stdout: "test set: Error During Test at /tmp/tmponvu_5yf.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: no method matching filter(::var\"\
    #2#4\", ::Int64)\n  Closest candidates are:\n    filter(::Any, !Matched::Tuple)\
    \ at ~/.conda/envs/polyglot/share/julia/base/tuple.jl:363\n    filter(::Any, !Matched::Array{T,\
    \ N}) where {T, N} at ~/.conda/envs/polyglot/share/julia/base/array.jl:2479\n\
    \    filter(::Any, !Matched::AbstractDict) at ~/.conda/envs/polyglot/share/julia/base/abstractdict.jl:434\n\
    \    ...\n  Stacktrace:\n   [1] (::var\"#1#3\")(x::String)\n     @ Main ./none:0\n\
    \   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect\n     @ ./array.jl:724\
    \ [inlined]\n   [4] odd_count(lst::Vector{String})\n     @ Main /tmp/tmponvu_5yf.jl:9\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [6] macro expansion\n     @ /tmp/tmponvu_5yf.jl:16 [inlined]\n\
    \   [7] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [8] top-level scope\n     @ /tmp/tmponvu_5yf.jl:15\ntest set:\
    \ Error During Test at /tmp/tmponvu_5yf.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng\
    \ 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the 8nput.\"\
    ]\n  MethodError: no method matching filter(::var\"#2#4\", ::Int64)\n  Closest\
    \ candidates are:\n    filter(::Any, !Matched::Tuple) at ~/.conda/envs/polyglot/share/julia/base/tuple.jl:363\n\
    \    filter(::Any, !Matched::Array{T, N}) where {T, N} at ~/.conda/envs/polyglot/share/julia/base/array.jl:2479\n\
    \    filter(::Any, !Matched::AbstractDict) at ~/.conda/envs/polyglot/share/julia/base/abstractdict.jl:434\n\
    \    ...\n  Stacktrace:\n   [1] (::var\"#1#3\")(x::String)\n     @ Main ./none:0\n\
    \   [2] iterate\n     @ ./generator.jl:47 [inlined]\n   [3] collect\n     @ ./array.jl:724\
    \ [inlined]\n   [4] odd_count(lst::Vector{String})\n     @ Main /tmp/tmponvu_5yf.jl:9\n\
    \   [5] macro "
  timestamp: 1659979576
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ map(x -> string(length(filter(y -> parse(Int, y) % 2 != 0, x))), lst)\nend\n\
    using Test\n\n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\
    \t@test(candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the\
    \ str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the\
    \ 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"]) == [\"the number\
    \ of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements\
    \ 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng\
    \ 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpjj5krmrz.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpjj5krmrz.jl:15\n  Expression: candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\n\
    \   Evaluated: [\"4\"] == [\"the number of odd elements 4n the str4ng 4 of the\
    \ 4nput.\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjj5krmrz.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjj5krmrz.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpjj5krmrz.jl:16\n  Expression: candidate([\"3\", \"11111111\"\
    ]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\n   Evaluated: [\"1\", \"8\"\
    ] == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpjj5krmrz.jl:16 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpjj5krmrz.jl:14\ntest set: Test Failed at /tmp/tmpjj5krmrz.jl:17\n\
    \  Expression: candidate([\"271\", \"137\", \"314\"]) == [\"the number of odd\
    \ elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the\
    \ str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the\
    \ 2nput.\"]\n   Evaluated: [\"2\", \"3\", \"2\"] == [\"the number of odd elements\
    \ 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the str3ng\
    \ 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    ]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjj5krmrz.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope"
  timestamp: 1659979567
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    #\
    \ create a vector of the same length as the input\n    output = Vector{String}(undef,\
    \ length(lst))\n    # iterate over the input\n    for i in 1:length(lst)\n   \
    \     # create a counter\n        counter = 0\n        # iterate over each character\
    \ in the string\n        for j in 1:length(lst[i])\n            # if the character\
    \ is odd, increment the counter\n            if parse(Int, lst[i][j]) % 2 != 0\n\
    \                counter += 1\n            end\n        end\n        # add the\
    \ counter to the output vector\n        output[i] = string(counter)\n    end\n\
    \    return output\nend\nusing Test\n\n@testset begin\n\ncandidate = odd_count;\n\
    \t@test(candidate([\"1234567\"]) == [\"the number of odd elements 4n the str4ng\
    \ 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"]) == [\"the number\
    \ of odd elements 1n the str1ng 1 of the 1nput.\", \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"\
    ]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\", \"the number\
    \ of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of odd elements\
    \ 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp1fiysyt5.jl:28

    '
  stdout: "test set: Test Failed at /tmp/tmp1fiysyt5.jl:31\n  Expression: candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\n\
    \   Evaluated: [\"4\"] == [\"the number of odd elements 4n the str4ng 4 of the\
    \ 4nput.\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1fiysyt5.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1fiysyt5.jl:30\ntest set: Test\
    \ Failed at /tmp/tmp1fiysyt5.jl:32\n  Expression: candidate([\"3\", \"11111111\"\
    ]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\n   Evaluated: [\"1\", \"8\"\
    ] == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp1fiysyt5.jl:32 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp1fiysyt5.jl:30\ntest set: Test Failed at /tmp/tmp1fiysyt5.jl:33\n\
    \  Expression: candidate([\"271\", \"137\", \"314\"]) == [\"the number of odd\
    \ elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the\
    \ str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the\
    \ 2nput.\"]\n   Evaluated: [\"2\", \"3\", \"2\"] == [\"the number of odd elements\
    \ 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the str3ng\
    \ 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    ]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1fiysyt5.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope"
  timestamp: 1659979574
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ map(x -> string(length(filter(y -> y % 2 == 1, x))), lst)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) ==\
    \ [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmp840mt00n.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp840mt00n.jl:15\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: no method matching rem(::Char, ::Int64)\n\
    \  Closest candidates are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero})\
    \ at ~/.conda/envs/polyglot/share/julia/base/div.jl:80\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:81\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:82\n\
    \    ...\n  Stacktrace:\n    [1] (::var\"#2#4\")(y::Char)\n      @ Main /tmp/tmp840mt00n.jl:8\n\
    \    [2] filter(f::var\"#2#4\", s::String)\n      @ Base ./strings/substring.jl:246\n\
    \    [3] #1\n      @ /tmp/tmp840mt00n.jl:8 [inlined]\n    [4] iterate\n      @\
    \ ./generator.jl:47 [inlined]\n    [5] _collect(c::Vector{String}, itr::Base.Generator{Vector{String},\
    \ var\"#1#3\"}, #unused#::Base.EltypeUnknown, isz::Base.HasShape{1})\n      @\
    \ Base ./array.jl:744\n    [6] collect_similar\n      @ ./array.jl:653 [inlined]\n\
    \    [7] map\n      @ ./abstractarray.jl:2867 [inlined]\n    [8] odd_count(lst::Vector{String})\n\
    \      @ Main /tmp/tmp840mt00n.jl:8\n    [9] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmp840mt00n.jl:15 [inlined]\n\
    \   [11] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmp840mt00n.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp840mt00n.jl:16\n  Test threw exception\n  Expression:\
    \ candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng\
    \ 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the 8nput.\"\
    ]\n  MethodError: no method matching rem(::Char, ::Int64)\n  Closest candidates\
    \ are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:80\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Down}) at ~/.conda/envs/polygl"
  timestamp: 1659979569
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ [string(count(x->x%2!=0,i)) for i in lst]\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the number of\
    \ odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"\
    11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpcg82loky.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpcg82loky.jl:15\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: no method matching rem(::Char, ::Int64)\n\
    \  Closest candidates are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero})\
    \ at ~/.conda/envs/polyglot/share/julia/base/div.jl:80\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:81\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:82\n\
    \    ...\n  Stacktrace:\n    [1] (::var\"#2#4\")(x::Char)\n      @ Main /tmp/tmpcg82loky.jl:8\n\
    \    [2] _simple_count\n      @ ./reduce.jl:1206 [inlined]\n    [3] #count#271\n\
    \      @ ./reduce.jl:1201 [inlined]\n    [4] count\n      @ ./reduce.jl:1201 [inlined]\n\
    \    [5] (::var\"#1#3\")(i::String)\n      @ Main ./none:0\n    [6] iterate\n\
    \      @ ./generator.jl:47 [inlined]\n    [7] collect(itr::Base.Generator{Vector{String},\
    \ var\"#1#3\"})\n      @ Base ./array.jl:724\n    [8] odd_count(lst::Vector{String})\n\
    \      @ Main /tmp/tmpcg82loky.jl:8\n    [9] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpcg82loky.jl:15 [inlined]\n\
    \   [11] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpcg82loky.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpcg82loky.jl:16\n  Test threw exception\n  Expression:\
    \ candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng\
    \ 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the 8nput.\"\
    ]\n  MethodError: no method matching rem(::Char, ::Int64)\n  Closest candidates\
    \ are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:80\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Down}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:81\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at ~/.conda/envs/po"
  timestamp: 1659979575
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ map(x -> string(count(y -> y % 2 == 1, x)), lst)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the\
    \ number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmp2br6gexs.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp2br6gexs.jl:15\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: no method matching rem(::Char, ::Int64)\n\
    \  Closest candidates are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero})\
    \ at ~/.conda/envs/polyglot/share/julia/base/div.jl:80\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:81\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:82\n\
    \    ...\n  Stacktrace:\n    [1] (::var\"#2#4\")(y::Char)\n      @ Main /tmp/tmp2br6gexs.jl:8\n\
    \    [2] _simple_count\n      @ ./reduce.jl:1206 [inlined]\n    [3] #count#271\n\
    \      @ ./reduce.jl:1201 [inlined]\n    [4] count\n      @ ./reduce.jl:1201 [inlined]\n\
    \    [5] (::var\"#1#3\")(x::String)\n      @ Main /tmp/tmp2br6gexs.jl:8\n    [6]\
    \ iterate\n      @ ./generator.jl:47 [inlined]\n    [7] _collect(c::Vector{String},\
    \ itr::Base.Generator{Vector{String}, var\"#1#3\"}, #unused#::Base.EltypeUnknown,\
    \ isz::Base.HasShape{1})\n      @ Base ./array.jl:744\n    [8] collect_similar\n\
    \      @ ./array.jl:653 [inlined]\n    [9] map\n      @ ./abstractarray.jl:2867\
    \ [inlined]\n   [10] odd_count(lst::Vector{String})\n      @ Main /tmp/tmp2br6gexs.jl:8\n\
    \   [11] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [12] macro expansion\n      @ /tmp/tmp2br6gexs.jl:15 [inlined]\n\
    \   [13] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [14] top-level scope\n      @ /tmp/tmp2br6gexs.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp2br6gexs.jl:16\n  Test threw exception\n  Expression:\
    \ candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng\
    \ 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the 8nput.\"\
    ]\n  MethodError: no method matching rem(::Char, ::Int64)\n  Closest candidates\
    \ are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero}) at ~/.conda/envs/polyglot/share/"
  timestamp: 1659979569
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ [string(count(x->x%2==1,parse(Int,y))) for y in lst]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the\
    \ number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpdtoq4r9l.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpdtoq4r9l.jl:15\n  Expression: candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\n\
    \   Evaluated: [\"1\"] == [\"the number of odd elements 4n the str4ng 4 of the\
    \ 4nput.\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdtoq4r9l.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdtoq4r9l.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpdtoq4r9l.jl:16\n  Expression: candidate([\"3\", \"11111111\"\
    ]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\n   Evaluated: [\"1\", \"1\"\
    ] == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpdtoq4r9l.jl:16 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpdtoq4r9l.jl:14\ntest set: Test Failed at /tmp/tmpdtoq4r9l.jl:17\n\
    \  Expression: candidate([\"271\", \"137\", \"314\"]) == [\"the number of odd\
    \ elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the\
    \ str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the\
    \ 2nput.\"]\n   Evaluated: [\"1\", \"1\", \"0\"] == [\"the number of odd elements\
    \ 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the str3ng\
    \ 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    ]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdtoq4r9l.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope"
  timestamp: 1659979567
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    #\
    \ Your code here\n    return [string(sum(parse.(Int, x) .% 2 .== 1)) for x in\
    \ lst]\nend\nusing Test\n\n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\
    \t@test(candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the\
    \ str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the\
    \ 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"]) == [\"the number\
    \ of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements\
    \ 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng\
    \ 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp2lfu3unf.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmp2lfu3unf.jl:16\n  Expression: candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\n\
    \   Evaluated: [\"1\"] == [\"the number of odd elements 4n the str4ng 4 of the\
    \ 4nput.\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2lfu3unf.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp2lfu3unf.jl:15\ntest set: Test\
    \ Failed at /tmp/tmp2lfu3unf.jl:17\n  Expression: candidate([\"3\", \"11111111\"\
    ]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\n   Evaluated: [\"1\", \"1\"\
    ] == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp2lfu3unf.jl:17 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp2lfu3unf.jl:15\ntest set: Test Failed at /tmp/tmp2lfu3unf.jl:18\n\
    \  Expression: candidate([\"271\", \"137\", \"314\"]) == [\"the number of odd\
    \ elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the\
    \ str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the\
    \ 2nput.\"]\n   Evaluated: [\"1\", \"1\", \"0\"] == [\"the number of odd elements\
    \ 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the str3ng\
    \ 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    ]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp2lfu3unf.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope"
  timestamp: 1659979574
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    #\
    \ your code here\n    return map(x->string(length(filter(y->y%2==1,x))),lst)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\
    \t@test(candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the\
    \ str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the\
    \ 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"]) == [\"the number\
    \ of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements\
    \ 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng\
    \ 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpraznfav9.jl:13

    '
  stdout: "test set: Error During Test at /tmp/tmpraznfav9.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: no method matching rem(::Char, ::Int64)\n\
    \  Closest candidates are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero})\
    \ at ~/.conda/envs/polyglot/share/julia/base/div.jl:80\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:81\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:82\n\
    \    ...\n  Stacktrace:\n    [1] (::var\"#2#4\")(y::Char)\n      @ Main /tmp/tmpraznfav9.jl:9\n\
    \    [2] filter(f::var\"#2#4\", s::String)\n      @ Base ./strings/substring.jl:246\n\
    \    [3] #1\n      @ /tmp/tmpraznfav9.jl:9 [inlined]\n    [4] iterate\n      @\
    \ ./generator.jl:47 [inlined]\n    [5] _collect(c::Vector{String}, itr::Base.Generator{Vector{String},\
    \ var\"#1#3\"}, #unused#::Base.EltypeUnknown, isz::Base.HasShape{1})\n      @\
    \ Base ./array.jl:744\n    [6] collect_similar\n      @ ./array.jl:653 [inlined]\n\
    \    [7] map\n      @ ./abstractarray.jl:2867 [inlined]\n    [8] odd_count(lst::Vector{String})\n\
    \      @ Main /tmp/tmpraznfav9.jl:9\n    [9] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpraznfav9.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpraznfav9.jl:15\ntest set:\
    \ Error During Test at /tmp/tmpraznfav9.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng\
    \ 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the 8nput.\"\
    ]\n  MethodError: no method matching rem(::Char, ::Int64)\n  Closest candidates\
    \ are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:80\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Down}) at ~/.conda/envs/polygl"
  timestamp: 1659979569
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    res\
    \ = []\n    for i in lst\n        count = 0\n        for j in i\n            if\
    \ parse(Int, j) % 2 != 0\n                count += 1\n            end\n      \
    \  end\n        push!(res, count)\n    end\n    return res\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) ==\
    \ [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmphzqhxw72.jl:22

    '
  stdout: "test set: Error During Test at /tmp/tmphzqhxw72.jl:25\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: Cannot `convert` an object of type\
    \ Int64 to an object of type String\n  Closest candidates are:\n    convert(::Type{String},\
    \ !Matched::String) at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n    [1] setindex!(A::Vector{String}, x::Int64, i1::Int64)\n\
    \      @ Base ./array.jl:903\n    [2] _unsafe_copyto!(dest::Vector{String}, doffs::Int64,\
    \ src::Vector{Any}, soffs::Int64, n::Int64)\n      @ Base ./array.jl:253\n   \
    \ [3] unsafe_copyto!\n      @ ./array.jl:307 [inlined]\n    [4] _copyto_impl!\n\
    \      @ ./array.jl:331 [inlined]\n    [5] copyto!\n      @ ./array.jl:317 [inlined]\n\
    \    [6] copyto!\n      @ ./array.jl:343 [inlined]\n    [7] copyto_axcheck!\n\
    \      @ ./abstractarray.jl:1104 [inlined]\n    [8] Vector{String}(x::Vector{Any})\n\
    \      @ Base ./array.jl:563\n    [9] convert\n      @ ./array.jl:554 [inlined]\n\
    \   [10] odd_count(lst::Vector{String})\n      @ Main /tmp/tmphzqhxw72.jl:18\n\
    \   [11] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [12] macro expansion\n      @ /tmp/tmphzqhxw72.jl:25 [inlined]\n\
    \   [13] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [14] top-level scope\n      @ /tmp/tmphzqhxw72.jl:24\ntest set:\
    \ Error During Test at /tmp/tmphzqhxw72.jl:26\n  Test threw exception\n  Expression:\
    \ candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng\
    \ 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the 8nput.\"\
    ]\n  MethodError: Cannot `convert` an object of type Int64 to an object of type\
    \ String\n  Closest candidate"
  timestamp: 1659979576
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ [string(count(x->x%2==1, parse(Int, y))) for y in lst]\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) ==\
    \ [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp3vn16wxx.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmp3vn16wxx.jl:15\n  Expression: candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\n\
    \   Evaluated: [\"1\"] == [\"the number of odd elements 4n the str4ng 4 of the\
    \ 4nput.\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3vn16wxx.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp3vn16wxx.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp3vn16wxx.jl:16\n  Expression: candidate([\"3\", \"11111111\"\
    ]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\n   Evaluated: [\"1\", \"1\"\
    ] == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp3vn16wxx.jl:16 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp3vn16wxx.jl:14\ntest set: Test Failed at /tmp/tmp3vn16wxx.jl:17\n\
    \  Expression: candidate([\"271\", \"137\", \"314\"]) == [\"the number of odd\
    \ elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the\
    \ str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the\
    \ 2nput.\"]\n   Evaluated: [\"1\", \"1\", \"0\"] == [\"the number of odd elements\
    \ 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the str3ng\
    \ 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    ]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp3vn16wxx.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope"
  timestamp: 1659979567
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ map(x -> string(count(y -> y % 2 == 1, parse.(Int, x))), lst)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) ==\
    \ [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmprl0m5_1f.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmprl0m5_1f.jl:15\n  Expression: candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\n\
    \   Evaluated: [\"1\"] == [\"the number of odd elements 4n the str4ng 4 of the\
    \ 4nput.\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprl0m5_1f.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprl0m5_1f.jl:14\ntest set: Test\
    \ Failed at /tmp/tmprl0m5_1f.jl:16\n  Expression: candidate([\"3\", \"11111111\"\
    ]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\n   Evaluated: [\"1\", \"1\"\
    ] == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmprl0m5_1f.jl:16 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmprl0m5_1f.jl:14\ntest set: Test Failed at /tmp/tmprl0m5_1f.jl:17\n\
    \  Expression: candidate([\"271\", \"137\", \"314\"]) == [\"the number of odd\
    \ elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the\
    \ str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the\
    \ 2nput.\"]\n   Evaluated: [\"1\", \"1\", \"0\"] == [\"the number of odd elements\
    \ 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the str3ng\
    \ 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    ]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprl0m5_1f.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope"
  timestamp: 1659979567
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ map(x -> string(count(y -> isodd(parse(Int, y)), x)), lst)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) ==\
    \ [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpsxucmh44.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpsxucmh44.jl:15\n  Expression: candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\n\
    \   Evaluated: [\"4\"] == [\"the number of odd elements 4n the str4ng 4 of the\
    \ 4nput.\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsxucmh44.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsxucmh44.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpsxucmh44.jl:16\n  Expression: candidate([\"3\", \"11111111\"\
    ]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\n   Evaluated: [\"1\", \"8\"\
    ] == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpsxucmh44.jl:16 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpsxucmh44.jl:14\ntest set: Test Failed at /tmp/tmpsxucmh44.jl:17\n\
    \  Expression: candidate([\"271\", \"137\", \"314\"]) == [\"the number of odd\
    \ elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the\
    \ str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the\
    \ 2nput.\"]\n   Evaluated: [\"2\", \"3\", \"2\"] == [\"the number of odd elements\
    \ 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the str3ng\
    \ 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    ]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsxucmh44.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope"
  timestamp: 1659979567
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ [string(length(filter(x->parse(Int,x)%2!=0, lst[i]))) for i in 1:length(lst)]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\
    \t@test(candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the\
    \ str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the\
    \ 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"]) == [\"the number\
    \ of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements\
    \ 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng\
    \ 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpsz2wfa2o.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpsz2wfa2o.jl:15\n  Expression: candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\n\
    \   Evaluated: [\"4\"] == [\"the number of odd elements 4n the str4ng 4 of the\
    \ 4nput.\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsz2wfa2o.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsz2wfa2o.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpsz2wfa2o.jl:16\n  Expression: candidate([\"3\", \"11111111\"\
    ]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\n   Evaluated: [\"1\", \"8\"\
    ] == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpsz2wfa2o.jl:16 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpsz2wfa2o.jl:14\ntest set: Test Failed at /tmp/tmpsz2wfa2o.jl:17\n\
    \  Expression: candidate([\"271\", \"137\", \"314\"]) == [\"the number of odd\
    \ elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the\
    \ str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the\
    \ 2nput.\"]\n   Evaluated: [\"2\", \"3\", \"2\"] == [\"the number of odd elements\
    \ 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the str3ng\
    \ 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    ]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsz2wfa2o.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope"
  timestamp: 1659979575
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ map(x -> string(length(filter(y -> y % 2 == 1, parse.(Int, x)))), lst)\nend\n\
    using Test\n\n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\
    \t@test(candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the\
    \ str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the\
    \ 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"]) == [\"the number\
    \ of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements\
    \ 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng\
    \ 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmp9xdtwedh.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp9xdtwedh.jl:15\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: no method matching filter(::var\"\
    #2#4\", ::Int64)\n  Closest candidates are:\n    filter(::Any, !Matched::Tuple)\
    \ at ~/.conda/envs/polyglot/share/julia/base/tuple.jl:363\n    filter(::Any, !Matched::Array{T,\
    \ N}) where {T, N} at ~/.conda/envs/polyglot/share/julia/base/array.jl:2479\n\
    \    filter(::Any, !Matched::AbstractDict) at ~/.conda/envs/polyglot/share/julia/base/abstractdict.jl:434\n\
    \    ...\n  Stacktrace:\n    [1] (::var\"#1#3\")(x::String)\n      @ Main /tmp/tmp9xdtwedh.jl:8\n\
    \    [2] iterate\n      @ ./generator.jl:47 [inlined]\n    [3] _collect\n    \
    \  @ ./array.jl:744 [inlined]\n    [4] collect_similar\n      @ ./array.jl:653\
    \ [inlined]\n    [5] map\n      @ ./abstractarray.jl:2867 [inlined]\n    [6] odd_count(lst::Vector{String})\n\
    \      @ Main /tmp/tmp9xdtwedh.jl:8\n    [7] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [8] macro expansion\n      @ /tmp/tmp9xdtwedh.jl:15 [inlined]\n\
    \    [9] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [10] top-level scope\n      @ /tmp/tmp9xdtwedh.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp9xdtwedh.jl:16\n  Test threw exception\n  Expression:\
    \ candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng\
    \ 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the 8nput.\"\
    ]\n  MethodError: no method matching filter(::var\"#2#4\", ::Int64)\n  Closest\
    \ candidates are:\n    filter(::Any, !Matched::Tuple) at ~/.conda/envs/polyglot/share/julia/base/tuple.jl:363\n\
    \    filter(::Any, !Matched::Array{T, N}) where {T, N} at ~/.conda/envs/polyglot/share/julia/base/array.jl:2479\n\
    \    filter(::Any, !Matched::AbstractDict) at ~/.conda/envs/polyglot/share/julia/base/abstractdict.jl:434\n\
    \    ...\n  Stacktrace:\n    [1] (::var\"#1#3\")(x::String)\n      @ Main /tmp/tmp9xdtwedh.jl:8\n\
    \    [2] iterate\n      @ ./"
  timestamp: 1659979569
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    #\
    \ Your code here\n    return [string(sum(x % 2 == 1 for x in parse.(Int, i)))\
    \ for i in lst]\nend\nusing Test\n\n@testset begin\n\ncandidate = odd_count;\n\
    \t@test(candidate([\"1234567\"]) == [\"the number of odd elements 4n the str4ng\
    \ 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"]) == [\"the number\
    \ of odd elements 1n the str1ng 1 of the 1nput.\", \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"\
    ]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\", \"the number\
    \ of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of odd elements\
    \ 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpitx13mj_.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmpitx13mj_.jl:16\n  Expression: candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\n\
    \   Evaluated: [\"1\"] == [\"the number of odd elements 4n the str4ng 4 of the\
    \ 4nput.\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpitx13mj_.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpitx13mj_.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpitx13mj_.jl:17\n  Expression: candidate([\"3\", \"11111111\"\
    ]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\n   Evaluated: [\"1\", \"1\"\
    ] == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpitx13mj_.jl:17 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpitx13mj_.jl:15\ntest set: Test Failed at /tmp/tmpitx13mj_.jl:18\n\
    \  Expression: candidate([\"271\", \"137\", \"314\"]) == [\"the number of odd\
    \ elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the\
    \ str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the\
    \ 2nput.\"]\n   Evaluated: [\"1\", \"1\", \"0\"] == [\"the number of odd elements\
    \ 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the str3ng\
    \ 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    ]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpitx13mj_.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope"
  timestamp: 1659979574
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ map(x -> string(length(filter(y -> y % 2 == 1, parse.(Int, x)))), lst)\nend\n\
    using Test\n\n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\
    \t@test(candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the\
    \ str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the\
    \ 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"]) == [\"the number\
    \ of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements\
    \ 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng\
    \ 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmp9xdtwedh.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp9xdtwedh.jl:15\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: no method matching filter(::var\"\
    #2#4\", ::Int64)\n  Closest candidates are:\n    filter(::Any, !Matched::Tuple)\
    \ at ~/.conda/envs/polyglot/share/julia/base/tuple.jl:363\n    filter(::Any, !Matched::Array{T,\
    \ N}) where {T, N} at ~/.conda/envs/polyglot/share/julia/base/array.jl:2479\n\
    \    filter(::Any, !Matched::AbstractDict) at ~/.conda/envs/polyglot/share/julia/base/abstractdict.jl:434\n\
    \    ...\n  Stacktrace:\n    [1] (::var\"#1#3\")(x::String)\n      @ Main /tmp/tmp9xdtwedh.jl:8\n\
    \    [2] iterate\n      @ ./generator.jl:47 [inlined]\n    [3] _collect\n    \
    \  @ ./array.jl:744 [inlined]\n    [4] collect_similar\n      @ ./array.jl:653\
    \ [inlined]\n    [5] map\n      @ ./abstractarray.jl:2867 [inlined]\n    [6] odd_count(lst::Vector{String})\n\
    \      @ Main /tmp/tmp9xdtwedh.jl:8\n    [7] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [8] macro expansion\n      @ /tmp/tmp9xdtwedh.jl:15 [inlined]\n\
    \    [9] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [10] top-level scope\n      @ /tmp/tmp9xdtwedh.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp9xdtwedh.jl:16\n  Test threw exception\n  Expression:\
    \ candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng\
    \ 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the 8nput.\"\
    ]\n  MethodError: no method matching filter(::var\"#2#4\", ::Int64)\n  Closest\
    \ candidates are:\n    filter(::Any, !Matched::Tuple) at ~/.conda/envs/polyglot/share/julia/base/tuple.jl:363\n\
    \    filter(::Any, !Matched::Array{T, N}) where {T, N} at ~/.conda/envs/polyglot/share/julia/base/array.jl:2479\n\
    \    filter(::Any, !Matched::AbstractDict) at ~/.conda/envs/polyglot/share/julia/base/abstractdict.jl:434\n\
    \    ...\n  Stacktrace:\n    [1] (::var\"#1#3\")(x::String)\n      @ Main /tmp/tmp9xdtwedh.jl:8\n\
    \    [2] iterate\n      @ ./"
  timestamp: 1659979569
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ [string(count(x->x%2==1,x)) for x in lst]\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the number of\
    \ odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"\
    11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmprh25be7v.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmprh25be7v.jl:15\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: no method matching rem(::Char, ::Int64)\n\
    \  Closest candidates are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero})\
    \ at ~/.conda/envs/polyglot/share/julia/base/div.jl:80\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:81\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:82\n\
    \    ...\n  Stacktrace:\n    [1] (::var\"#2#4\")(x::Char)\n      @ Main /tmp/tmprh25be7v.jl:8\n\
    \    [2] _simple_count\n      @ ./reduce.jl:1206 [inlined]\n    [3] #count#271\n\
    \      @ ./reduce.jl:1201 [inlined]\n    [4] count\n      @ ./reduce.jl:1201 [inlined]\n\
    \    [5] (::var\"#1#3\")(x::String)\n      @ Main ./none:0\n    [6] iterate\n\
    \      @ ./generator.jl:47 [inlined]\n    [7] collect(itr::Base.Generator{Vector{String},\
    \ var\"#1#3\"})\n      @ Base ./array.jl:724\n    [8] odd_count(lst::Vector{String})\n\
    \      @ Main /tmp/tmprh25be7v.jl:8\n    [9] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmprh25be7v.jl:15 [inlined]\n\
    \   [11] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmprh25be7v.jl:14\ntest set:\
    \ Error During Test at /tmp/tmprh25be7v.jl:16\n  Test threw exception\n  Expression:\
    \ candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng\
    \ 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the 8nput.\"\
    ]\n  MethodError: no method matching rem(::Char, ::Int64)\n  Closest candidates\
    \ are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:80\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Down}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:81\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at ~/.conda/envs/po"
  timestamp: 1659979575
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    odd_count\
    \ = 0\n    for i in lst\n        for j in i\n            if j % 2 == 1\n     \
    \           odd_count += 1\n            end\n        end\n        println(odd_count)\n\
    \        odd_count = 0\n    end\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the number of odd elements\
    \ 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"])\
    \ == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\"\
    , \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    , \"the number of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of\
    \ odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpctoa_l_r.jl:21

    '
  stdout: "test set: Error During Test at /tmp/tmpctoa_l_r.jl:24\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: no method matching rem(::Char, ::Int64)\n\
    \  Closest candidates are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero})\
    \ at ~/.conda/envs/polyglot/share/julia/base/div.jl:80\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:81\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:82\n\
    \    ...\n  Stacktrace:\n   [1] odd_count(lst::Vector{String})\n     @ Main /tmp/tmpctoa_l_r.jl:11\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpctoa_l_r.jl:24 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpctoa_l_r.jl:23\ntest set:\
    \ Error During Test at /tmp/tmpctoa_l_r.jl:25\n  Test threw exception\n  Expression:\
    \ candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng\
    \ 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the 8nput.\"\
    ]\n  MethodError: no method matching rem(::Char, ::Int64)\n  Closest candidates\
    \ are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:80\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Down}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:81\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:82\n\
    \    ...\n  Stacktrace:\n   [1] odd_count(lst::Vector{String})\n     @ Main /tmp/tmpctoa_l_r.jl:11\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpctoa_l_r.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n  "
  timestamp: 1659979576
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ map(x -> string(count(y -> y % 2 == 1, x)), lst)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the\
    \ number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmp2br6gexs.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp2br6gexs.jl:15\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: no method matching rem(::Char, ::Int64)\n\
    \  Closest candidates are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero})\
    \ at ~/.conda/envs/polyglot/share/julia/base/div.jl:80\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:81\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:82\n\
    \    ...\n  Stacktrace:\n    [1] (::var\"#2#4\")(y::Char)\n      @ Main /tmp/tmp2br6gexs.jl:8\n\
    \    [2] _simple_count\n      @ ./reduce.jl:1206 [inlined]\n    [3] #count#271\n\
    \      @ ./reduce.jl:1201 [inlined]\n    [4] count\n      @ ./reduce.jl:1201 [inlined]\n\
    \    [5] (::var\"#1#3\")(x::String)\n      @ Main /tmp/tmp2br6gexs.jl:8\n    [6]\
    \ iterate\n      @ ./generator.jl:47 [inlined]\n    [7] _collect(c::Vector{String},\
    \ itr::Base.Generator{Vector{String}, var\"#1#3\"}, #unused#::Base.EltypeUnknown,\
    \ isz::Base.HasShape{1})\n      @ Base ./array.jl:744\n    [8] collect_similar\n\
    \      @ ./array.jl:653 [inlined]\n    [9] map\n      @ ./abstractarray.jl:2867\
    \ [inlined]\n   [10] odd_count(lst::Vector{String})\n      @ Main /tmp/tmp2br6gexs.jl:8\n\
    \   [11] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [12] macro expansion\n      @ /tmp/tmp2br6gexs.jl:15 [inlined]\n\
    \   [13] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [14] top-level scope\n      @ /tmp/tmp2br6gexs.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp2br6gexs.jl:16\n  Test threw exception\n  Expression:\
    \ candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng\
    \ 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the 8nput.\"\
    ]\n  MethodError: no method matching rem(::Char, ::Int64)\n  Closest candidates\
    \ are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero}) at ~/.conda/envs/polyglot/share/"
  timestamp: 1659979569
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ map(x -> string(sum(map(y -> parse(Int, y) % 2, split(x, \"\")))), lst)\nend\n\
    using Test\n\n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\
    \t@test(candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the\
    \ str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the\
    \ 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"]) == [\"the number\
    \ of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements\
    \ 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng\
    \ 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpuu9p1fn5.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpuu9p1fn5.jl:15\n  Expression: candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\n\
    \   Evaluated: [\"4\"] == [\"the number of odd elements 4n the str4ng 4 of the\
    \ 4nput.\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuu9p1fn5.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpuu9p1fn5.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpuu9p1fn5.jl:16\n  Expression: candidate([\"3\", \"11111111\"\
    ]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\n   Evaluated: [\"1\", \"8\"\
    ] == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpuu9p1fn5.jl:16 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpuu9p1fn5.jl:14\ntest set: Test Failed at /tmp/tmpuu9p1fn5.jl:17\n\
    \  Expression: candidate([\"271\", \"137\", \"314\"]) == [\"the number of odd\
    \ elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the\
    \ str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the\
    \ 2nput.\"]\n   Evaluated: [\"2\", \"3\", \"2\"] == [\"the number of odd elements\
    \ 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the str3ng\
    \ 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    ]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpuu9p1fn5.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope"
  timestamp: 1659979574
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ [string(sum(parse(Int, x) % 2 == 1 for x in lst[i])) for i in 1:length(lst)]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\
    \t@test(candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the\
    \ str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the\
    \ 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"]) == [\"the number\
    \ of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements\
    \ 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng\
    \ 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpdgq2u1st.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpdgq2u1st.jl:15\n  Expression: candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\n\
    \   Evaluated: [\"4\"] == [\"the number of odd elements 4n the str4ng 4 of the\
    \ 4nput.\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdgq2u1st.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpdgq2u1st.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpdgq2u1st.jl:16\n  Expression: candidate([\"3\", \"11111111\"\
    ]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\n   Evaluated: [\"1\", \"8\"\
    ] == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpdgq2u1st.jl:16 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpdgq2u1st.jl:14\ntest set: Test Failed at /tmp/tmpdgq2u1st.jl:17\n\
    \  Expression: candidate([\"271\", \"137\", \"314\"]) == [\"the number of odd\
    \ elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the\
    \ str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the\
    \ 2nput.\"]\n   Evaluated: [\"2\", \"3\", \"2\"] == [\"the number of odd elements\
    \ 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the str3ng\
    \ 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    ]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpdgq2u1st.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope"
  timestamp: 1659979575
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ map(x -> string(length(filter(y -> y % 2 == 1, x))), lst)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) ==\
    \ [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmp840mt00n.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp840mt00n.jl:15\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: no method matching rem(::Char, ::Int64)\n\
    \  Closest candidates are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero})\
    \ at ~/.conda/envs/polyglot/share/julia/base/div.jl:80\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:81\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:82\n\
    \    ...\n  Stacktrace:\n    [1] (::var\"#2#4\")(y::Char)\n      @ Main /tmp/tmp840mt00n.jl:8\n\
    \    [2] filter(f::var\"#2#4\", s::String)\n      @ Base ./strings/substring.jl:246\n\
    \    [3] #1\n      @ /tmp/tmp840mt00n.jl:8 [inlined]\n    [4] iterate\n      @\
    \ ./generator.jl:47 [inlined]\n    [5] _collect(c::Vector{String}, itr::Base.Generator{Vector{String},\
    \ var\"#1#3\"}, #unused#::Base.EltypeUnknown, isz::Base.HasShape{1})\n      @\
    \ Base ./array.jl:744\n    [6] collect_similar\n      @ ./array.jl:653 [inlined]\n\
    \    [7] map\n      @ ./abstractarray.jl:2867 [inlined]\n    [8] odd_count(lst::Vector{String})\n\
    \      @ Main /tmp/tmp840mt00n.jl:8\n    [9] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmp840mt00n.jl:15 [inlined]\n\
    \   [11] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmp840mt00n.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp840mt00n.jl:16\n  Test threw exception\n  Expression:\
    \ candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng\
    \ 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the 8nput.\"\
    ]\n  MethodError: no method matching rem(::Char, ::Int64)\n  Closest candidates\
    \ are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:80\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Down}) at ~/.conda/envs/polygl"
  timestamp: 1659979569
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ [string(sum(isodd.(parse.(Int, x)))) for x in lst]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the\
    \ number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmphov_vt2s.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmphov_vt2s.jl:15\n  Expression: candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\n\
    \   Evaluated: [\"1\"] == [\"the number of odd elements 4n the str4ng 4 of the\
    \ 4nput.\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphov_vt2s.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphov_vt2s.jl:14\ntest set: Test\
    \ Failed at /tmp/tmphov_vt2s.jl:16\n  Expression: candidate([\"3\", \"11111111\"\
    ]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\n   Evaluated: [\"1\", \"1\"\
    ] == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmphov_vt2s.jl:16 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmphov_vt2s.jl:14\ntest set: Test Failed at /tmp/tmphov_vt2s.jl:17\n\
    \  Expression: candidate([\"271\", \"137\", \"314\"]) == [\"the number of odd\
    \ elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the\
    \ str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the\
    \ 2nput.\"]\n   Evaluated: [\"1\", \"1\", \"0\"] == [\"the number of odd elements\
    \ 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the str3ng\
    \ 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    ]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphov_vt2s.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope"
  timestamp: 1659979575
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ map(x -> string(count(y -> parse(Int, y) % 2 != 0, x)), lst)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) ==\
    \ [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmphr2vab47.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmphr2vab47.jl:15\n  Expression: candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\n\
    \   Evaluated: [\"4\"] == [\"the number of odd elements 4n the str4ng 4 of the\
    \ 4nput.\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphr2vab47.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphr2vab47.jl:14\ntest set: Test\
    \ Failed at /tmp/tmphr2vab47.jl:16\n  Expression: candidate([\"3\", \"11111111\"\
    ]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\n   Evaluated: [\"1\", \"8\"\
    ] == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmphr2vab47.jl:16 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmphr2vab47.jl:14\ntest set: Test Failed at /tmp/tmphr2vab47.jl:17\n\
    \  Expression: candidate([\"271\", \"137\", \"314\"]) == [\"the number of odd\
    \ elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the\
    \ str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the\
    \ 2nput.\"]\n   Evaluated: [\"2\", \"3\", \"2\"] == [\"the number of odd elements\
    \ 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the str3ng\
    \ 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    ]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphr2vab47.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope"
  timestamp: 1659979567
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ [string(count(x->x%2!=0, i)) for i in lst]\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the number of\
    \ odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"\
    11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpze_766by.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpze_766by.jl:15\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: no method matching rem(::Char, ::Int64)\n\
    \  Closest candidates are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero})\
    \ at ~/.conda/envs/polyglot/share/julia/base/div.jl:80\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:81\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:82\n\
    \    ...\n  Stacktrace:\n    [1] (::var\"#2#4\")(x::Char)\n      @ Main /tmp/tmpze_766by.jl:8\n\
    \    [2] _simple_count\n      @ ./reduce.jl:1206 [inlined]\n    [3] #count#271\n\
    \      @ ./reduce.jl:1201 [inlined]\n    [4] count\n      @ ./reduce.jl:1201 [inlined]\n\
    \    [5] (::var\"#1#3\")(i::String)\n      @ Main ./none:0\n    [6] iterate\n\
    \      @ ./generator.jl:47 [inlined]\n    [7] collect(itr::Base.Generator{Vector{String},\
    \ var\"#1#3\"})\n      @ Base ./array.jl:724\n    [8] odd_count(lst::Vector{String})\n\
    \      @ Main /tmp/tmpze_766by.jl:8\n    [9] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpze_766by.jl:15 [inlined]\n\
    \   [11] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpze_766by.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpze_766by.jl:16\n  Test threw exception\n  Expression:\
    \ candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng\
    \ 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the 8nput.\"\
    ]\n  MethodError: no method matching rem(::Char, ::Int64)\n  Closest candidates\
    \ are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:80\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Down}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:81\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at ~/.conda/envs/po"
  timestamp: 1659979577
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    #\
    \ Your code here\n    return [string(count(x->x%2==1,x)) for x in lst]\nend\n\
    using Test\n\n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\
    \t@test(candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the\
    \ str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the\
    \ 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"]) == [\"the number\
    \ of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements\
    \ 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng\
    \ 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpdan9blew.jl:13

    '
  stdout: "test set: Error During Test at /tmp/tmpdan9blew.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: no method matching rem(::Char, ::Int64)\n\
    \  Closest candidates are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero})\
    \ at ~/.conda/envs/polyglot/share/julia/base/div.jl:80\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:81\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:82\n\
    \    ...\n  Stacktrace:\n    [1] (::var\"#2#4\")(x::Char)\n      @ Main /tmp/tmpdan9blew.jl:9\n\
    \    [2] _simple_count\n      @ ./reduce.jl:1206 [inlined]\n    [3] #count#271\n\
    \      @ ./reduce.jl:1201 [inlined]\n    [4] count\n      @ ./reduce.jl:1201 [inlined]\n\
    \    [5] (::var\"#1#3\")(x::String)\n      @ Main ./none:0\n    [6] iterate\n\
    \      @ ./generator.jl:47 [inlined]\n    [7] collect(itr::Base.Generator{Vector{String},\
    \ var\"#1#3\"})\n      @ Base ./array.jl:724\n    [8] odd_count(lst::Vector{String})\n\
    \      @ Main /tmp/tmpdan9blew.jl:9\n    [9] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpdan9blew.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpdan9blew.jl:15\ntest set:\
    \ Error During Test at /tmp/tmpdan9blew.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng\
    \ 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the 8nput.\"\
    ]\n  MethodError: no method matching rem(::Char, ::Int64)\n  Closest candidates\
    \ are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:80\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Down}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:81\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at ~/.conda/envs/po"
  timestamp: 1659979577
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ map(x -> string(length(filter(y -> y % 2 == 1, x))), lst)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) ==\
    \ [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmp840mt00n.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp840mt00n.jl:15\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: no method matching rem(::Char, ::Int64)\n\
    \  Closest candidates are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero})\
    \ at ~/.conda/envs/polyglot/share/julia/base/div.jl:80\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:81\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:82\n\
    \    ...\n  Stacktrace:\n    [1] (::var\"#2#4\")(y::Char)\n      @ Main /tmp/tmp840mt00n.jl:8\n\
    \    [2] filter(f::var\"#2#4\", s::String)\n      @ Base ./strings/substring.jl:246\n\
    \    [3] #1\n      @ /tmp/tmp840mt00n.jl:8 [inlined]\n    [4] iterate\n      @\
    \ ./generator.jl:47 [inlined]\n    [5] _collect(c::Vector{String}, itr::Base.Generator{Vector{String},\
    \ var\"#1#3\"}, #unused#::Base.EltypeUnknown, isz::Base.HasShape{1})\n      @\
    \ Base ./array.jl:744\n    [6] collect_similar\n      @ ./array.jl:653 [inlined]\n\
    \    [7] map\n      @ ./abstractarray.jl:2867 [inlined]\n    [8] odd_count(lst::Vector{String})\n\
    \      @ Main /tmp/tmp840mt00n.jl:8\n    [9] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmp840mt00n.jl:15 [inlined]\n\
    \   [11] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmp840mt00n.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp840mt00n.jl:16\n  Test threw exception\n  Expression:\
    \ candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng\
    \ 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the 8nput.\"\
    ]\n  MethodError: no method matching rem(::Char, ::Int64)\n  Closest candidates\
    \ are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:80\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Down}) at ~/.conda/envs/polygl"
  timestamp: 1659979569
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ map(x -> string(count(y -> isodd(parse(Int, y)), x)), lst)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) ==\
    \ [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpsxucmh44.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpsxucmh44.jl:15\n  Expression: candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\n\
    \   Evaluated: [\"4\"] == [\"the number of odd elements 4n the str4ng 4 of the\
    \ 4nput.\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsxucmh44.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpsxucmh44.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpsxucmh44.jl:16\n  Expression: candidate([\"3\", \"11111111\"\
    ]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\n   Evaluated: [\"1\", \"8\"\
    ] == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpsxucmh44.jl:16 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpsxucmh44.jl:14\ntest set: Test Failed at /tmp/tmpsxucmh44.jl:17\n\
    \  Expression: candidate([\"271\", \"137\", \"314\"]) == [\"the number of odd\
    \ elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the\
    \ str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the\
    \ 2nput.\"]\n   Evaluated: [\"2\", \"3\", \"2\"] == [\"the number of odd elements\
    \ 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the str3ng\
    \ 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    ]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpsxucmh44.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope"
  timestamp: 1659979567
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ [string(count(x->x%2!=0, parse(Int,i))) for i in lst]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the\
    \ number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmphihw3qc9.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmphihw3qc9.jl:15\n  Expression: candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\n\
    \   Evaluated: [\"1\"] == [\"the number of odd elements 4n the str4ng 4 of the\
    \ 4nput.\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphihw3qc9.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphihw3qc9.jl:14\ntest set: Test\
    \ Failed at /tmp/tmphihw3qc9.jl:16\n  Expression: candidate([\"3\", \"11111111\"\
    ]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\n   Evaluated: [\"1\", \"1\"\
    ] == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmphihw3qc9.jl:16 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmphihw3qc9.jl:14\ntest set: Test Failed at /tmp/tmphihw3qc9.jl:17\n\
    \  Expression: candidate([\"271\", \"137\", \"314\"]) == [\"the number of odd\
    \ elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the\
    \ str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the\
    \ 2nput.\"]\n   Evaluated: [\"1\", \"1\", \"0\"] == [\"the number of odd elements\
    \ 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the str3ng\
    \ 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    ]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphihw3qc9.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope"
  timestamp: 1659979576
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ [string(count(x->x%2==1, parse(Int, s))) for s in lst]\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) ==\
    \ [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmprjnrmgxw.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmprjnrmgxw.jl:15\n  Expression: candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\n\
    \   Evaluated: [\"1\"] == [\"the number of odd elements 4n the str4ng 4 of the\
    \ 4nput.\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprjnrmgxw.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmprjnrmgxw.jl:14\ntest set: Test\
    \ Failed at /tmp/tmprjnrmgxw.jl:16\n  Expression: candidate([\"3\", \"11111111\"\
    ]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\n   Evaluated: [\"1\", \"1\"\
    ] == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmprjnrmgxw.jl:16 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmprjnrmgxw.jl:14\ntest set: Test Failed at /tmp/tmprjnrmgxw.jl:17\n\
    \  Expression: candidate([\"271\", \"137\", \"314\"]) == [\"the number of odd\
    \ elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the\
    \ str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the\
    \ 2nput.\"]\n   Evaluated: [\"1\", \"1\", \"0\"] == [\"the number of odd elements\
    \ 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the str3ng\
    \ 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    ]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmprjnrmgxw.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope"
  timestamp: 1659979576
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    #\
    \ TODO: implement me\n    return [\"0\"]\nend\nusing Test\n\n@testset begin\n\n\
    candidate = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the number of odd\
    \ elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"\
    ]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\"\
    , \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    , \"the number of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of\
    \ odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpqyaiawdm.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmpqyaiawdm.jl:16\n  Expression: candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\n\
    \   Evaluated: [\"0\"] == [\"the number of odd elements 4n the str4ng 4 of the\
    \ 4nput.\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqyaiawdm.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqyaiawdm.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpqyaiawdm.jl:17\n  Expression: candidate([\"3\", \"11111111\"\
    ]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\n   Evaluated: [\"0\"] == [\"\
    the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number of odd\
    \ elements 8n the str8ng 8 of the 8nput.\"]\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpqyaiawdm.jl:17 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpqyaiawdm.jl:15\ntest set: Test Failed at /tmp/tmpqyaiawdm.jl:18\n\
    \  Expression: candidate([\"271\", \"137\", \"314\"]) == [\"the number of odd\
    \ elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the\
    \ str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the\
    \ 2nput.\"]\n   Evaluated: [\"0\"] == [\"the number of odd elements 2n the str2ng\
    \ 2 of the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\"\
    , \"the number of odd elements 2n the str2ng 2 of the 2nput.\"]\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqyaiawdm.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq"
  timestamp: 1659979576
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    #\
    \ your code here\n    return [string(count(x->x%2==1,parse(Int,y))) for y in lst]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\
    \t@test(candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the\
    \ str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the\
    \ 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"]) == [\"the number\
    \ of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements\
    \ 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng\
    \ 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmplr3jgbom.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmplr3jgbom.jl:16\n  Expression: candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\n\
    \   Evaluated: [\"1\"] == [\"the number of odd elements 4n the str4ng 4 of the\
    \ 4nput.\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplr3jgbom.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplr3jgbom.jl:15\ntest set: Test\
    \ Failed at /tmp/tmplr3jgbom.jl:17\n  Expression: candidate([\"3\", \"11111111\"\
    ]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\n   Evaluated: [\"1\", \"1\"\
    ] == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmplr3jgbom.jl:17 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmplr3jgbom.jl:15\ntest set: Test Failed at /tmp/tmplr3jgbom.jl:18\n\
    \  Expression: candidate([\"271\", \"137\", \"314\"]) == [\"the number of odd\
    \ elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the\
    \ str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the\
    \ 2nput.\"]\n   Evaluated: [\"1\", \"1\", \"0\"] == [\"the number of odd elements\
    \ 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the str3ng\
    \ 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    ]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplr3jgbom.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope"
  timestamp: 1659979570
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    #\
    \ your code here\n    return [string(sum(x % 2 == 1 for x in parse.(Int, y)))\
    \ for y in lst]\nend\nusing Test\n\n@testset begin\n\ncandidate = odd_count;\n\
    \t@test(candidate([\"1234567\"]) == [\"the number of odd elements 4n the str4ng\
    \ 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"]) == [\"the number\
    \ of odd elements 1n the str1ng 1 of the 1nput.\", \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"\
    ]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\", \"the number\
    \ of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of odd elements\
    \ 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpcun2hdm1.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmpcun2hdm1.jl:16\n  Expression: candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\n\
    \   Evaluated: [\"1\"] == [\"the number of odd elements 4n the str4ng 4 of the\
    \ 4nput.\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcun2hdm1.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpcun2hdm1.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpcun2hdm1.jl:17\n  Expression: candidate([\"3\", \"11111111\"\
    ]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\n   Evaluated: [\"1\", \"1\"\
    ] == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpcun2hdm1.jl:17 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpcun2hdm1.jl:15\ntest set: Test Failed at /tmp/tmpcun2hdm1.jl:18\n\
    \  Expression: candidate([\"271\", \"137\", \"314\"]) == [\"the number of odd\
    \ elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the\
    \ str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the\
    \ 2nput.\"]\n   Evaluated: [\"1\", \"1\", \"0\"] == [\"the number of odd elements\
    \ 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the str3ng\
    \ 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    ]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpcun2hdm1.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope"
  timestamp: 1659979576
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ map(x -> string(count(y -> y % 2 == 1, x)), lst)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the\
    \ number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmp2br6gexs.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp2br6gexs.jl:15\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: no method matching rem(::Char, ::Int64)\n\
    \  Closest candidates are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero})\
    \ at ~/.conda/envs/polyglot/share/julia/base/div.jl:80\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:81\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:82\n\
    \    ...\n  Stacktrace:\n    [1] (::var\"#2#4\")(y::Char)\n      @ Main /tmp/tmp2br6gexs.jl:8\n\
    \    [2] _simple_count\n      @ ./reduce.jl:1206 [inlined]\n    [3] #count#271\n\
    \      @ ./reduce.jl:1201 [inlined]\n    [4] count\n      @ ./reduce.jl:1201 [inlined]\n\
    \    [5] (::var\"#1#3\")(x::String)\n      @ Main /tmp/tmp2br6gexs.jl:8\n    [6]\
    \ iterate\n      @ ./generator.jl:47 [inlined]\n    [7] _collect(c::Vector{String},\
    \ itr::Base.Generator{Vector{String}, var\"#1#3\"}, #unused#::Base.EltypeUnknown,\
    \ isz::Base.HasShape{1})\n      @ Base ./array.jl:744\n    [8] collect_similar\n\
    \      @ ./array.jl:653 [inlined]\n    [9] map\n      @ ./abstractarray.jl:2867\
    \ [inlined]\n   [10] odd_count(lst::Vector{String})\n      @ Main /tmp/tmp2br6gexs.jl:8\n\
    \   [11] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [12] macro expansion\n      @ /tmp/tmp2br6gexs.jl:15 [inlined]\n\
    \   [13] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [14] top-level scope\n      @ /tmp/tmp2br6gexs.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp2br6gexs.jl:16\n  Test threw exception\n  Expression:\
    \ candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng\
    \ 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the 8nput.\"\
    ]\n  MethodError: no method matching rem(::Char, ::Int64)\n  Closest candidates\
    \ are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero}) at ~/.conda/envs/polyglot/share/"
  timestamp: 1659979569
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    #\
    \ Convert each string to an integer\n    # Count the number of odd digits in each\
    \ integer\n    # Convert each integer to a string\n    # Return the list of strings\n\
    \    return map(x -> string(length(filter(y -> y % 2 != 0, collect(x)))), map(x\
    \ -> parse(Int, x), lst))\nend\nusing Test\n\n@testset begin\n\ncandidate = odd_count;\n\
    \t@test(candidate([\"1234567\"]) == [\"the number of odd elements 4n the str4ng\
    \ 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"11111111\"]) == [\"the number\
    \ of odd elements 1n the str1ng 1 of the 1nput.\", \"the number of odd elements\
    \ 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"\
    ]) == [\"the number of odd elements 2n the str2ng 2 of the 2nput.\", \"the number\
    \ of odd elements 3n the str3ng 3 of the 3nput.\", \"the number of odd elements\
    \ 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp6poc1oty.jl:16

    '
  stdout: "test set: Test Failed at /tmp/tmp6poc1oty.jl:19\n  Expression: candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\n\
    \   Evaluated: [\"1\"] == [\"the number of odd elements 4n the str4ng 4 of the\
    \ 4nput.\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6poc1oty.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp6poc1oty.jl:18\ntest set: Test\
    \ Failed at /tmp/tmp6poc1oty.jl:20\n  Expression: candidate([\"3\", \"11111111\"\
    ]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\n   Evaluated: [\"1\", \"1\"\
    ] == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp6poc1oty.jl:20 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp6poc1oty.jl:18\ntest set: Test Failed at /tmp/tmp6poc1oty.jl:21\n\
    \  Expression: candidate([\"271\", \"137\", \"314\"]) == [\"the number of odd\
    \ elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the\
    \ str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the\
    \ 2nput.\"]\n   Evaluated: [\"1\", \"1\", \"0\"] == [\"the number of odd elements\
    \ 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the str3ng\
    \ 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    ]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp6poc1oty.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope"
  timestamp: 1659979576
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ map(x -> string(length(filter(y -> y % 2 == 1, map(z -> parse(Int, z), x)))),\
    \ lst)\nend\nusing Test\n\n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\
    \t@test(candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the\
    \ str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the\
    \ 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"]) == [\"the number\
    \ of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements\
    \ 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng\
    \ 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpw25oppjd.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpw25oppjd.jl:15\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  ArgumentError: map(f, s::AbstractString) requires\
    \ f to return AbstractChar; try map(f, collect(s)) or a comprehension instead\n\
    \  Stacktrace:\n    [1] map(f::var\"#3#6\", s::String)\n      @ Base ./strings/basic.jl:611\n\
    \    [2] #1\n      @ /tmp/tmpw25oppjd.jl:8 [inlined]\n    [3] iterate\n      @\
    \ ./generator.jl:47 [inlined]\n    [4] _collect(c::Vector{String}, itr::Base.Generator{Vector{String},\
    \ var\"#1#4\"}, #unused#::Base.EltypeUnknown, isz::Base.HasShape{1})\n      @\
    \ Base ./array.jl:744\n    [5] collect_similar\n      @ ./array.jl:653 [inlined]\n\
    \    [6] map\n      @ ./abstractarray.jl:2867 [inlined]\n    [7] odd_count(lst::Vector{String})\n\
    \      @ Main /tmp/tmpw25oppjd.jl:8\n    [8] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [9] macro expansion\n      @ /tmp/tmpw25oppjd.jl:15 [inlined]\n\
    \   [10] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [11] top-level scope\n      @ /tmp/tmpw25oppjd.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpw25oppjd.jl:16\n  Test threw exception\n  Expression:\
    \ candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng\
    \ 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the 8nput.\"\
    ]\n  ArgumentError: map(f, s::AbstractString) requires f to return AbstractChar;\
    \ try map(f, collect(s)) or a comprehension instead\n  Stacktrace:\n    [1] map(f::var\"\
    #3#6\", s::String)\n      @ Base ./strings/basic.jl:611\n    [2] #1\n      @ /tmp/tmpw25oppjd.jl:8\
    \ [inlined]\n    [3] iterate\n      @ ./generator.jl:47 [inlined]\n    [4] _collect(c::Vector{String},\
    \ itr::Base.Generator{Vector{String}, var\"#1#4\"}, #unused#::Base.EltypeUnknown,\
    \ isz::Base.HasShape{1})\n      @ Base ./array.jl:744\n    [5] collect_similar\n\
    \      @ ./array.jl:653 [inlined]\n    [6] map\n      @ ./abstractarray.jl:2867\
    \ [inlined]\n    [7] odd_count(lst::"
  timestamp: 1659979574
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ map(x -> string(count(y -> y % 2 == 1, x)), lst)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the\
    \ number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmp2br6gexs.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp2br6gexs.jl:15\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: no method matching rem(::Char, ::Int64)\n\
    \  Closest candidates are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero})\
    \ at ~/.conda/envs/polyglot/share/julia/base/div.jl:80\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:81\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:82\n\
    \    ...\n  Stacktrace:\n    [1] (::var\"#2#4\")(y::Char)\n      @ Main /tmp/tmp2br6gexs.jl:8\n\
    \    [2] _simple_count\n      @ ./reduce.jl:1206 [inlined]\n    [3] #count#271\n\
    \      @ ./reduce.jl:1201 [inlined]\n    [4] count\n      @ ./reduce.jl:1201 [inlined]\n\
    \    [5] (::var\"#1#3\")(x::String)\n      @ Main /tmp/tmp2br6gexs.jl:8\n    [6]\
    \ iterate\n      @ ./generator.jl:47 [inlined]\n    [7] _collect(c::Vector{String},\
    \ itr::Base.Generator{Vector{String}, var\"#1#3\"}, #unused#::Base.EltypeUnknown,\
    \ isz::Base.HasShape{1})\n      @ Base ./array.jl:744\n    [8] collect_similar\n\
    \      @ ./array.jl:653 [inlined]\n    [9] map\n      @ ./abstractarray.jl:2867\
    \ [inlined]\n   [10] odd_count(lst::Vector{String})\n      @ Main /tmp/tmp2br6gexs.jl:8\n\
    \   [11] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [12] macro expansion\n      @ /tmp/tmp2br6gexs.jl:15 [inlined]\n\
    \   [13] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [14] top-level scope\n      @ /tmp/tmp2br6gexs.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp2br6gexs.jl:16\n  Test threw exception\n  Expression:\
    \ candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng\
    \ 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the 8nput.\"\
    ]\n  MethodError: no method matching rem(::Char, ::Int64)\n  Closest candidates\
    \ are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero}) at ~/.conda/envs/polyglot/share/"
  timestamp: 1659979569
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    #\
    \ your code here\n    return map(x->string(length(filter(y->y%2==1,x))),lst)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\
    \t@test(candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the\
    \ str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the\
    \ 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"]) == [\"the number\
    \ of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements\
    \ 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng\
    \ 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpraznfav9.jl:13

    '
  stdout: "test set: Error During Test at /tmp/tmpraznfav9.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: no method matching rem(::Char, ::Int64)\n\
    \  Closest candidates are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero})\
    \ at ~/.conda/envs/polyglot/share/julia/base/div.jl:80\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:81\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:82\n\
    \    ...\n  Stacktrace:\n    [1] (::var\"#2#4\")(y::Char)\n      @ Main /tmp/tmpraznfav9.jl:9\n\
    \    [2] filter(f::var\"#2#4\", s::String)\n      @ Base ./strings/substring.jl:246\n\
    \    [3] #1\n      @ /tmp/tmpraznfav9.jl:9 [inlined]\n    [4] iterate\n      @\
    \ ./generator.jl:47 [inlined]\n    [5] _collect(c::Vector{String}, itr::Base.Generator{Vector{String},\
    \ var\"#1#3\"}, #unused#::Base.EltypeUnknown, isz::Base.HasShape{1})\n      @\
    \ Base ./array.jl:744\n    [6] collect_similar\n      @ ./array.jl:653 [inlined]\n\
    \    [7] map\n      @ ./abstractarray.jl:2867 [inlined]\n    [8] odd_count(lst::Vector{String})\n\
    \      @ Main /tmp/tmpraznfav9.jl:9\n    [9] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpraznfav9.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpraznfav9.jl:15\ntest set:\
    \ Error During Test at /tmp/tmpraznfav9.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng\
    \ 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the 8nput.\"\
    ]\n  MethodError: no method matching rem(::Char, ::Int64)\n  Closest candidates\
    \ are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:80\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Down}) at ~/.conda/envs/polygl"
  timestamp: 1659979569
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ [string(count(x->(parse(Int,x)%2==1),lst[i])) for i in 1:length(lst)]\nend\n\
    using Test\n\n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\
    \t@test(candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the\
    \ str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the\
    \ 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"]) == [\"the number\
    \ of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements\
    \ 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng\
    \ 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpqc0s_ifi.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpqc0s_ifi.jl:15\n  Expression: candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\n\
    \   Evaluated: [\"4\"] == [\"the number of odd elements 4n the str4ng 4 of the\
    \ 4nput.\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqc0s_ifi.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqc0s_ifi.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpqc0s_ifi.jl:16\n  Expression: candidate([\"3\", \"11111111\"\
    ]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\n   Evaluated: [\"1\", \"8\"\
    ] == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpqc0s_ifi.jl:16 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpqc0s_ifi.jl:14\ntest set: Test Failed at /tmp/tmpqc0s_ifi.jl:17\n\
    \  Expression: candidate([\"271\", \"137\", \"314\"]) == [\"the number of odd\
    \ elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the\
    \ str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the\
    \ 2nput.\"]\n   Evaluated: [\"2\", \"3\", \"2\"] == [\"the number of odd elements\
    \ 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the str3ng\
    \ 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    ]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqc0s_ifi.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope"
  timestamp: 1659979576
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ [string(length(filter(x->parse(Int,x)%2!=0,lst[i]))) for i=1:length(lst)]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\
    \t@test(candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the\
    \ str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the\
    \ 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"]) == [\"the number\
    \ of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements\
    \ 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng\
    \ 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpj_b9hfsd.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpj_b9hfsd.jl:15\n  Expression: candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\n\
    \   Evaluated: [\"4\"] == [\"the number of odd elements 4n the str4ng 4 of the\
    \ 4nput.\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpj_b9hfsd.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpj_b9hfsd.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpj_b9hfsd.jl:16\n  Expression: candidate([\"3\", \"11111111\"\
    ]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\n   Evaluated: [\"1\", \"8\"\
    ] == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpj_b9hfsd.jl:16 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpj_b9hfsd.jl:14\ntest set: Test Failed at /tmp/tmpj_b9hfsd.jl:17\n\
    \  Expression: candidate([\"271\", \"137\", \"314\"]) == [\"the number of odd\
    \ elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the\
    \ str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the\
    \ 2nput.\"]\n   Evaluated: [\"2\", \"3\", \"2\"] == [\"the number of odd elements\
    \ 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the str3ng\
    \ 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    ]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpj_b9hfsd.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope"
  timestamp: 1659979576
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ [string(count(x->x%2==1,parse(Int,s))) for s in lst]\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the\
    \ number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp1errm3v4.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmp1errm3v4.jl:15\n  Expression: candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\n\
    \   Evaluated: [\"1\"] == [\"the number of odd elements 4n the str4ng 4 of the\
    \ 4nput.\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1errm3v4.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1errm3v4.jl:14\ntest set: Test\
    \ Failed at /tmp/tmp1errm3v4.jl:16\n  Expression: candidate([\"3\", \"11111111\"\
    ]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\n   Evaluated: [\"1\", \"1\"\
    ] == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp1errm3v4.jl:16 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp1errm3v4.jl:14\ntest set: Test Failed at /tmp/tmp1errm3v4.jl:17\n\
    \  Expression: candidate([\"271\", \"137\", \"314\"]) == [\"the number of odd\
    \ elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the\
    \ str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the\
    \ 2nput.\"]\n   Evaluated: [\"1\", \"1\", \"0\"] == [\"the number of odd elements\
    \ 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the str3ng\
    \ 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    ]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1errm3v4.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope"
  timestamp: 1659979577
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    count\
    \ = 0\n    for i in lst\n        for j in i\n            if parse(Int, j) % 2\
    \ != 0\n                count += 1\n            end\n        end\n        push!(lst,\
    \ count)\n        count = 0\n    end\n    return lst\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the\
    \ number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpqhgfow1l.jl:22

    '
  stdout: "test set: Error During Test at /tmp/tmpqhgfow1l.jl:25\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: Cannot `convert` an object of type\
    \ Int64 to an object of type String\n  Closest candidates are:\n    convert(::Type{String},\
    \ !Matched::String) at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] push!(a::Vector{String}, item::Int64)\n     @\
    \ Base ./array.jl:994\n   [2] odd_count(lst::Vector{String})\n     @ Main /tmp/tmpqhgfow1l.jl:15\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmpqhgfow1l.jl:25 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmpqhgfow1l.jl:24\ntest set:\
    \ Error During Test at /tmp/tmpqhgfow1l.jl:26\n  Test threw exception\n  Expression:\
    \ candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng\
    \ 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the 8nput.\"\
    ]\n  MethodError: Cannot `convert` an object of type Int64 to an object of type\
    \ String\n  Closest candidates are:\n    convert(::Type{String}, !Matched::String)\
    \ at ~/.conda/envs/polyglot/share/julia/base/essentials.jl:223\n    convert(::Type{T},\
    \ !Matched::T) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at ~/.conda/envs/polyglot/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] push!(a::Vector{String}, item::Int64)\n     @\
    \ Base ./array.jl:994\n   [2] odd_count(lst::Vector{String})\n     @ Main /tmp/tmpqhgfow1l.jl:15\n\
    \   "
  timestamp: 1659979578
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ [string(sum(i % 2 == 1 for i in parse.(Int, x))) for x in lst]\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) ==\
    \ [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpq5r9jlxm.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpq5r9jlxm.jl:15\n  Expression: candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\n\
    \   Evaluated: [\"1\"] == [\"the number of odd elements 4n the str4ng 4 of the\
    \ 4nput.\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq5r9jlxm.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq5r9jlxm.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpq5r9jlxm.jl:16\n  Expression: candidate([\"3\", \"11111111\"\
    ]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\n   Evaluated: [\"1\", \"1\"\
    ] == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpq5r9jlxm.jl:16 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpq5r9jlxm.jl:14\ntest set: Test Failed at /tmp/tmpq5r9jlxm.jl:17\n\
    \  Expression: candidate([\"271\", \"137\", \"314\"]) == [\"the number of odd\
    \ elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the\
    \ str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the\
    \ 2nput.\"]\n   Evaluated: [\"1\", \"1\", \"0\"] == [\"the number of odd elements\
    \ 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the str3ng\
    \ 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    ]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq5r9jlxm.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope"
  timestamp: 1659979571
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    #\
    \ your code here\n    return [string(count(x->x%2==1,parse(Int,y))) for y in lst]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\
    \t@test(candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the\
    \ str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the\
    \ 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"]) == [\"the number\
    \ of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements\
    \ 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng\
    \ 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmplr3jgbom.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmplr3jgbom.jl:16\n  Expression: candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\n\
    \   Evaluated: [\"1\"] == [\"the number of odd elements 4n the str4ng 4 of the\
    \ 4nput.\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplr3jgbom.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmplr3jgbom.jl:15\ntest set: Test\
    \ Failed at /tmp/tmplr3jgbom.jl:17\n  Expression: candidate([\"3\", \"11111111\"\
    ]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\n   Evaluated: [\"1\", \"1\"\
    ] == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmplr3jgbom.jl:17 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmplr3jgbom.jl:15\ntest set: Test Failed at /tmp/tmplr3jgbom.jl:18\n\
    \  Expression: candidate([\"271\", \"137\", \"314\"]) == [\"the number of odd\
    \ elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the\
    \ str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the\
    \ 2nput.\"]\n   Evaluated: [\"1\", \"1\", \"0\"] == [\"the number of odd elements\
    \ 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the str3ng\
    \ 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    ]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmplr3jgbom.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope"
  timestamp: 1659979570
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ map(x -> string(count(y -> y % 2 == 1, x)), lst)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the\
    \ number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmp2br6gexs.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp2br6gexs.jl:15\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: no method matching rem(::Char, ::Int64)\n\
    \  Closest candidates are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero})\
    \ at ~/.conda/envs/polyglot/share/julia/base/div.jl:80\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:81\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:82\n\
    \    ...\n  Stacktrace:\n    [1] (::var\"#2#4\")(y::Char)\n      @ Main /tmp/tmp2br6gexs.jl:8\n\
    \    [2] _simple_count\n      @ ./reduce.jl:1206 [inlined]\n    [3] #count#271\n\
    \      @ ./reduce.jl:1201 [inlined]\n    [4] count\n      @ ./reduce.jl:1201 [inlined]\n\
    \    [5] (::var\"#1#3\")(x::String)\n      @ Main /tmp/tmp2br6gexs.jl:8\n    [6]\
    \ iterate\n      @ ./generator.jl:47 [inlined]\n    [7] _collect(c::Vector{String},\
    \ itr::Base.Generator{Vector{String}, var\"#1#3\"}, #unused#::Base.EltypeUnknown,\
    \ isz::Base.HasShape{1})\n      @ Base ./array.jl:744\n    [8] collect_similar\n\
    \      @ ./array.jl:653 [inlined]\n    [9] map\n      @ ./abstractarray.jl:2867\
    \ [inlined]\n   [10] odd_count(lst::Vector{String})\n      @ Main /tmp/tmp2br6gexs.jl:8\n\
    \   [11] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [12] macro expansion\n      @ /tmp/tmp2br6gexs.jl:15 [inlined]\n\
    \   [13] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [14] top-level scope\n      @ /tmp/tmp2br6gexs.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp2br6gexs.jl:16\n  Test threw exception\n  Expression:\
    \ candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng\
    \ 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the 8nput.\"\
    ]\n  MethodError: no method matching rem(::Char, ::Int64)\n  Closest candidates\
    \ are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero}) at ~/.conda/envs/polyglot/share/"
  timestamp: 1659979569
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ [string(count(x->x%2==1, x)) for x in lst]\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the number of\
    \ odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"3\", \"\
    11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpj7815jhj.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmpj7815jhj.jl:15\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: no method matching rem(::Char, ::Int64)\n\
    \  Closest candidates are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero})\
    \ at ~/.conda/envs/polyglot/share/julia/base/div.jl:80\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:81\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:82\n\
    \    ...\n  Stacktrace:\n    [1] (::var\"#2#4\")(x::Char)\n      @ Main /tmp/tmpj7815jhj.jl:8\n\
    \    [2] _simple_count\n      @ ./reduce.jl:1206 [inlined]\n    [3] #count#271\n\
    \      @ ./reduce.jl:1201 [inlined]\n    [4] count\n      @ ./reduce.jl:1201 [inlined]\n\
    \    [5] (::var\"#1#3\")(x::String)\n      @ Main ./none:0\n    [6] iterate\n\
    \      @ ./generator.jl:47 [inlined]\n    [7] collect(itr::Base.Generator{Vector{String},\
    \ var\"#1#3\"})\n      @ Base ./array.jl:724\n    [8] odd_count(lst::Vector{String})\n\
    \      @ Main /tmp/tmpj7815jhj.jl:8\n    [9] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpj7815jhj.jl:15 [inlined]\n\
    \   [11] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpj7815jhj.jl:14\ntest set:\
    \ Error During Test at /tmp/tmpj7815jhj.jl:16\n  Test threw exception\n  Expression:\
    \ candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng\
    \ 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the 8nput.\"\
    ]\n  MethodError: no method matching rem(::Char, ::Int64)\n  Closest candidates\
    \ are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:80\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Down}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:81\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at ~/.conda/envs/po"
  timestamp: 1659979578
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ map(x -> string(length(filter(y -> y % 2 == 1, x))), lst)\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) ==\
    \ [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmp840mt00n.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp840mt00n.jl:15\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: no method matching rem(::Char, ::Int64)\n\
    \  Closest candidates are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero})\
    \ at ~/.conda/envs/polyglot/share/julia/base/div.jl:80\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:81\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:82\n\
    \    ...\n  Stacktrace:\n    [1] (::var\"#2#4\")(y::Char)\n      @ Main /tmp/tmp840mt00n.jl:8\n\
    \    [2] filter(f::var\"#2#4\", s::String)\n      @ Base ./strings/substring.jl:246\n\
    \    [3] #1\n      @ /tmp/tmp840mt00n.jl:8 [inlined]\n    [4] iterate\n      @\
    \ ./generator.jl:47 [inlined]\n    [5] _collect(c::Vector{String}, itr::Base.Generator{Vector{String},\
    \ var\"#1#3\"}, #unused#::Base.EltypeUnknown, isz::Base.HasShape{1})\n      @\
    \ Base ./array.jl:744\n    [6] collect_similar\n      @ ./array.jl:653 [inlined]\n\
    \    [7] map\n      @ ./abstractarray.jl:2867 [inlined]\n    [8] odd_count(lst::Vector{String})\n\
    \      @ Main /tmp/tmp840mt00n.jl:8\n    [9] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmp840mt00n.jl:15 [inlined]\n\
    \   [11] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmp840mt00n.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp840mt00n.jl:16\n  Test threw exception\n  Expression:\
    \ candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng\
    \ 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the 8nput.\"\
    ]\n  MethodError: no method matching rem(::Char, ::Int64)\n  Closest candidates\
    \ are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:80\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Down}) at ~/.conda/envs/polygl"
  timestamp: 1659979569
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ map(x -> string(length(filter(y -> y % 2 == 1, parse.(Int, x)))), lst)\nend\n\
    using Test\n\n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\
    \t@test(candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the\
    \ str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the\
    \ 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"]) == [\"the number\
    \ of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements\
    \ 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng\
    \ 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmp9xdtwedh.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp9xdtwedh.jl:15\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: no method matching filter(::var\"\
    #2#4\", ::Int64)\n  Closest candidates are:\n    filter(::Any, !Matched::Tuple)\
    \ at ~/.conda/envs/polyglot/share/julia/base/tuple.jl:363\n    filter(::Any, !Matched::Array{T,\
    \ N}) where {T, N} at ~/.conda/envs/polyglot/share/julia/base/array.jl:2479\n\
    \    filter(::Any, !Matched::AbstractDict) at ~/.conda/envs/polyglot/share/julia/base/abstractdict.jl:434\n\
    \    ...\n  Stacktrace:\n    [1] (::var\"#1#3\")(x::String)\n      @ Main /tmp/tmp9xdtwedh.jl:8\n\
    \    [2] iterate\n      @ ./generator.jl:47 [inlined]\n    [3] _collect\n    \
    \  @ ./array.jl:744 [inlined]\n    [4] collect_similar\n      @ ./array.jl:653\
    \ [inlined]\n    [5] map\n      @ ./abstractarray.jl:2867 [inlined]\n    [6] odd_count(lst::Vector{String})\n\
    \      @ Main /tmp/tmp9xdtwedh.jl:8\n    [7] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [8] macro expansion\n      @ /tmp/tmp9xdtwedh.jl:15 [inlined]\n\
    \    [9] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [10] top-level scope\n      @ /tmp/tmp9xdtwedh.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp9xdtwedh.jl:16\n  Test threw exception\n  Expression:\
    \ candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng\
    \ 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the 8nput.\"\
    ]\n  MethodError: no method matching filter(::var\"#2#4\", ::Int64)\n  Closest\
    \ candidates are:\n    filter(::Any, !Matched::Tuple) at ~/.conda/envs/polyglot/share/julia/base/tuple.jl:363\n\
    \    filter(::Any, !Matched::Array{T, N}) where {T, N} at ~/.conda/envs/polyglot/share/julia/base/array.jl:2479\n\
    \    filter(::Any, !Matched::AbstractDict) at ~/.conda/envs/polyglot/share/julia/base/abstractdict.jl:434\n\
    \    ...\n  Stacktrace:\n    [1] (::var\"#1#3\")(x::String)\n      @ Main /tmp/tmp9xdtwedh.jl:8\n\
    \    [2] iterate\n      @ ./"
  timestamp: 1659979569
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ map(x -> string(count(y -> y % 2 == 1, x)), lst)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the\
    \ number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmp2br6gexs.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp2br6gexs.jl:15\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: no method matching rem(::Char, ::Int64)\n\
    \  Closest candidates are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero})\
    \ at ~/.conda/envs/polyglot/share/julia/base/div.jl:80\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:81\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:82\n\
    \    ...\n  Stacktrace:\n    [1] (::var\"#2#4\")(y::Char)\n      @ Main /tmp/tmp2br6gexs.jl:8\n\
    \    [2] _simple_count\n      @ ./reduce.jl:1206 [inlined]\n    [3] #count#271\n\
    \      @ ./reduce.jl:1201 [inlined]\n    [4] count\n      @ ./reduce.jl:1201 [inlined]\n\
    \    [5] (::var\"#1#3\")(x::String)\n      @ Main /tmp/tmp2br6gexs.jl:8\n    [6]\
    \ iterate\n      @ ./generator.jl:47 [inlined]\n    [7] _collect(c::Vector{String},\
    \ itr::Base.Generator{Vector{String}, var\"#1#3\"}, #unused#::Base.EltypeUnknown,\
    \ isz::Base.HasShape{1})\n      @ Base ./array.jl:744\n    [8] collect_similar\n\
    \      @ ./array.jl:653 [inlined]\n    [9] map\n      @ ./abstractarray.jl:2867\
    \ [inlined]\n   [10] odd_count(lst::Vector{String})\n      @ Main /tmp/tmp2br6gexs.jl:8\n\
    \   [11] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [12] macro expansion\n      @ /tmp/tmp2br6gexs.jl:15 [inlined]\n\
    \   [13] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [14] top-level scope\n      @ /tmp/tmp2br6gexs.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp2br6gexs.jl:16\n  Test threw exception\n  Expression:\
    \ candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng\
    \ 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the 8nput.\"\
    ]\n  MethodError: no method matching rem(::Char, ::Int64)\n  Closest candidates\
    \ are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero}) at ~/.conda/envs/polyglot/share/"
  timestamp: 1659979569
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    #\
    \ Your code here\n    odd_count = 0\n    for i in lst\n        for j in i\n  \
    \          if parse(Int, j) % 2 != 0\n                odd_count += 1\n       \
    \     end\n        end\n        println(odd_count)\n        odd_count = 0\n  \
    \  end\nend\nusing Test\n\n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\
    \t@test(candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the\
    \ str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the\
    \ 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"]) == [\"the number\
    \ of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements\
    \ 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng\
    \ 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpo0kye3x_.jl:22

    '
  stdout: "4\ntest set: Error During Test at /tmp/tmpo0kye3x_.jl:25\n  Test threw\
    \ exception\n  Expression: candidate([\"1234567\"]) == [\"the number of odd elements\
    \ 4n the str4ng 4 of the 4nput.\"]\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type Vector{String}\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::LinearAlgebra.Factorization) where T<:AbstractArray\
    \ at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{Vector{String}}, !Matched::LibGit2.StrArrayStruct) at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LibGit2/src/strarray.jl:13\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at ~/.conda/envs/polyglot/share/julia/base/array.jl:554\n\
    \    ...\n  Stacktrace:\n   [1] odd_count(lst::Vector{String})\n     @ Main /tmp/tmpo0kye3x_.jl:17\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpo0kye3x_.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpo0kye3x_.jl:24\n1\n8\ntest\
    \ set: Error During Test at /tmp/tmpo0kye3x_.jl:26\n  Test threw exception\n \
    \ Expression: candidate([\"3\", \"11111111\"]) == [\"the number of odd elements\
    \ 1n the str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng\
    \ 8 of the 8nput.\"]\n  MethodError: Cannot `convert` an object of type Nothing\
    \ to an object of type Vector{String}\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::LinearAlgebra.Factorization) where T<:AbstractArray at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LinearAlgebra/src/factorization.jl:58\n\
    \    convert(::Type{Vector{String}}, !Matched::LibGit2.StrArrayStruct) at ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/LibGit2/src/strarray.jl:13\n\
    \    convert(::Type{T}, !Matched::AbstractArray) where T<:Array at ~/.conda/envs/polyglot/share/julia/base/array.jl:554\n\
    \    ...\n  Stacktrace:\n   [1] odd_count(lst::Vector{String})\n     @ Main /t"
  timestamp: 1659979578
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ map(x -> string(length(filter(y -> y % 2 == 1, parse.(Int, x)))), lst)\nend\n\
    using Test\n\n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\
    \t@test(candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the\
    \ str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the\
    \ 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"]) == [\"the number\
    \ of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements\
    \ 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng\
    \ 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmp9xdtwedh.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp9xdtwedh.jl:15\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: no method matching filter(::var\"\
    #2#4\", ::Int64)\n  Closest candidates are:\n    filter(::Any, !Matched::Tuple)\
    \ at ~/.conda/envs/polyglot/share/julia/base/tuple.jl:363\n    filter(::Any, !Matched::Array{T,\
    \ N}) where {T, N} at ~/.conda/envs/polyglot/share/julia/base/array.jl:2479\n\
    \    filter(::Any, !Matched::AbstractDict) at ~/.conda/envs/polyglot/share/julia/base/abstractdict.jl:434\n\
    \    ...\n  Stacktrace:\n    [1] (::var\"#1#3\")(x::String)\n      @ Main /tmp/tmp9xdtwedh.jl:8\n\
    \    [2] iterate\n      @ ./generator.jl:47 [inlined]\n    [3] _collect\n    \
    \  @ ./array.jl:744 [inlined]\n    [4] collect_similar\n      @ ./array.jl:653\
    \ [inlined]\n    [5] map\n      @ ./abstractarray.jl:2867 [inlined]\n    [6] odd_count(lst::Vector{String})\n\
    \      @ Main /tmp/tmp9xdtwedh.jl:8\n    [7] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n    [8] macro expansion\n      @ /tmp/tmp9xdtwedh.jl:15 [inlined]\n\
    \    [9] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [10] top-level scope\n      @ /tmp/tmp9xdtwedh.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp9xdtwedh.jl:16\n  Test threw exception\n  Expression:\
    \ candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng\
    \ 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the 8nput.\"\
    ]\n  MethodError: no method matching filter(::var\"#2#4\", ::Int64)\n  Closest\
    \ candidates are:\n    filter(::Any, !Matched::Tuple) at ~/.conda/envs/polyglot/share/julia/base/tuple.jl:363\n\
    \    filter(::Any, !Matched::Array{T, N}) where {T, N} at ~/.conda/envs/polyglot/share/julia/base/array.jl:2479\n\
    \    filter(::Any, !Matched::AbstractDict) at ~/.conda/envs/polyglot/share/julia/base/abstractdict.jl:434\n\
    \    ...\n  Stacktrace:\n    [1] (::var\"#1#3\")(x::String)\n      @ Main /tmp/tmp9xdtwedh.jl:8\n\
    \    [2] iterate\n      @ ./"
  timestamp: 1659979569
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    #\
    \ Your code here\n    return [string(count(x->x%2!=0,x)) for x in lst]\nend\n\
    using Test\n\n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\
    \t@test(candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the\
    \ str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the\
    \ 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"]) == [\"the number\
    \ of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements\
    \ 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng\
    \ 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpl_l68wht.jl:13

    '
  stdout: "test set: Error During Test at /tmp/tmpl_l68wht.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: no method matching rem(::Char, ::Int64)\n\
    \  Closest candidates are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero})\
    \ at ~/.conda/envs/polyglot/share/julia/base/div.jl:80\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:81\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:82\n\
    \    ...\n  Stacktrace:\n    [1] (::var\"#2#4\")(x::Char)\n      @ Main /tmp/tmpl_l68wht.jl:9\n\
    \    [2] _simple_count\n      @ ./reduce.jl:1206 [inlined]\n    [3] #count#271\n\
    \      @ ./reduce.jl:1201 [inlined]\n    [4] count\n      @ ./reduce.jl:1201 [inlined]\n\
    \    [5] (::var\"#1#3\")(x::String)\n      @ Main ./none:0\n    [6] iterate\n\
    \      @ ./generator.jl:47 [inlined]\n    [7] collect(itr::Base.Generator{Vector{String},\
    \ var\"#1#3\"})\n      @ Base ./array.jl:724\n    [8] odd_count(lst::Vector{String})\n\
    \      @ Main /tmp/tmpl_l68wht.jl:9\n    [9] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpl_l68wht.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpl_l68wht.jl:15\ntest set:\
    \ Error During Test at /tmp/tmpl_l68wht.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng\
    \ 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the 8nput.\"\
    ]\n  MethodError: no method matching rem(::Char, ::Int64)\n  Closest candidates\
    \ are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:80\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Down}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:81\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at ~/.conda/envs/po"
  timestamp: 1659979578
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ map(x -> string(count(y -> y % 2 == 1, x)), lst)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the\
    \ number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmp2br6gexs.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp2br6gexs.jl:15\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: no method matching rem(::Char, ::Int64)\n\
    \  Closest candidates are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero})\
    \ at ~/.conda/envs/polyglot/share/julia/base/div.jl:80\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:81\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:82\n\
    \    ...\n  Stacktrace:\n    [1] (::var\"#2#4\")(y::Char)\n      @ Main /tmp/tmp2br6gexs.jl:8\n\
    \    [2] _simple_count\n      @ ./reduce.jl:1206 [inlined]\n    [3] #count#271\n\
    \      @ ./reduce.jl:1201 [inlined]\n    [4] count\n      @ ./reduce.jl:1201 [inlined]\n\
    \    [5] (::var\"#1#3\")(x::String)\n      @ Main /tmp/tmp2br6gexs.jl:8\n    [6]\
    \ iterate\n      @ ./generator.jl:47 [inlined]\n    [7] _collect(c::Vector{String},\
    \ itr::Base.Generator{Vector{String}, var\"#1#3\"}, #unused#::Base.EltypeUnknown,\
    \ isz::Base.HasShape{1})\n      @ Base ./array.jl:744\n    [8] collect_similar\n\
    \      @ ./array.jl:653 [inlined]\n    [9] map\n      @ ./abstractarray.jl:2867\
    \ [inlined]\n   [10] odd_count(lst::Vector{String})\n      @ Main /tmp/tmp2br6gexs.jl:8\n\
    \   [11] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [12] macro expansion\n      @ /tmp/tmp2br6gexs.jl:15 [inlined]\n\
    \   [13] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [14] top-level scope\n      @ /tmp/tmp2br6gexs.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp2br6gexs.jl:16\n  Test threw exception\n  Expression:\
    \ candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng\
    \ 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the 8nput.\"\
    ]\n  MethodError: no method matching rem(::Char, ::Int64)\n  Closest candidates\
    \ are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero}) at ~/.conda/envs/polyglot/share/"
  timestamp: 1659979569
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ map(x -> string(count(y -> y % 2 == 1, x)), lst)\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) == [\"the\
    \ number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmp2br6gexs.jl:12

    '
  stdout: "test set: Error During Test at /tmp/tmp2br6gexs.jl:15\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: no method matching rem(::Char, ::Int64)\n\
    \  Closest candidates are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero})\
    \ at ~/.conda/envs/polyglot/share/julia/base/div.jl:80\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:81\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:82\n\
    \    ...\n  Stacktrace:\n    [1] (::var\"#2#4\")(y::Char)\n      @ Main /tmp/tmp2br6gexs.jl:8\n\
    \    [2] _simple_count\n      @ ./reduce.jl:1206 [inlined]\n    [3] #count#271\n\
    \      @ ./reduce.jl:1201 [inlined]\n    [4] count\n      @ ./reduce.jl:1201 [inlined]\n\
    \    [5] (::var\"#1#3\")(x::String)\n      @ Main /tmp/tmp2br6gexs.jl:8\n    [6]\
    \ iterate\n      @ ./generator.jl:47 [inlined]\n    [7] _collect(c::Vector{String},\
    \ itr::Base.Generator{Vector{String}, var\"#1#3\"}, #unused#::Base.EltypeUnknown,\
    \ isz::Base.HasShape{1})\n      @ Base ./array.jl:744\n    [8] collect_similar\n\
    \      @ ./array.jl:653 [inlined]\n    [9] map\n      @ ./abstractarray.jl:2867\
    \ [inlined]\n   [10] odd_count(lst::Vector{String})\n      @ Main /tmp/tmp2br6gexs.jl:8\n\
    \   [11] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [12] macro expansion\n      @ /tmp/tmp2br6gexs.jl:15 [inlined]\n\
    \   [13] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [14] top-level scope\n      @ /tmp/tmp2br6gexs.jl:14\ntest set:\
    \ Error During Test at /tmp/tmp2br6gexs.jl:16\n  Test threw exception\n  Expression:\
    \ candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng\
    \ 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the 8nput.\"\
    ]\n  MethodError: no method matching rem(::Char, ::Int64)\n  Closest candidates\
    \ are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero}) at ~/.conda/envs/polyglot/share/"
  timestamp: 1659979569
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    #\
    \ your code here\n    return map(x->string(length(filter(y->parse(Int,y)%2==1,x))),lst)\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\
    \t@test(candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the\
    \ str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the\
    \ 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"]) == [\"the number\
    \ of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements\
    \ 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng\
    \ 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpq6akr_r1.jl:13

    '
  stdout: "test set: Test Failed at /tmp/tmpq6akr_r1.jl:16\n  Expression: candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\n\
    \   Evaluated: [\"4\"] == [\"the number of odd elements 4n the str4ng 4 of the\
    \ 4nput.\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq6akr_r1.jl:16 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpq6akr_r1.jl:15\ntest set: Test\
    \ Failed at /tmp/tmpq6akr_r1.jl:17\n  Expression: candidate([\"3\", \"11111111\"\
    ]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\n   Evaluated: [\"1\", \"8\"\
    ] == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpq6akr_r1.jl:17 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpq6akr_r1.jl:15\ntest set: Test Failed at /tmp/tmpq6akr_r1.jl:18\n\
    \  Expression: candidate([\"271\", \"137\", \"314\"]) == [\"the number of odd\
    \ elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the\
    \ str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the\
    \ 2nput.\"]\n   Evaluated: [\"2\", \"3\", \"2\"] == [\"the number of odd elements\
    \ 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the str3ng\
    \ 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    ]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpq6akr_r1.jl:18 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope"
  timestamp: 1659979577
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ [string(length(filter(x->parse(Int,x)%2!=0,lst[i]))) for i=1:length(lst)]\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\
    \t@test(candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the\
    \ str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the\
    \ 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"]) == [\"the number\
    \ of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements\
    \ 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng\
    \ 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpj_b9hfsd.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpj_b9hfsd.jl:15\n  Expression: candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\n\
    \   Evaluated: [\"4\"] == [\"the number of odd elements 4n the str4ng 4 of the\
    \ 4nput.\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpj_b9hfsd.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpj_b9hfsd.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpj_b9hfsd.jl:16\n  Expression: candidate([\"3\", \"11111111\"\
    ]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\n   Evaluated: [\"1\", \"8\"\
    ] == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpj_b9hfsd.jl:16 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpj_b9hfsd.jl:14\ntest set: Test Failed at /tmp/tmpj_b9hfsd.jl:17\n\
    \  Expression: candidate([\"271\", \"137\", \"314\"]) == [\"the number of odd\
    \ elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the\
    \ str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the\
    \ 2nput.\"]\n   Evaluated: [\"2\", \"3\", \"2\"] == [\"the number of odd elements\
    \ 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the str3ng\
    \ 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    ]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpj_b9hfsd.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope"
  timestamp: 1659979576
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    #\
    \ your code here\n    return [string(count(x->x%2!=0, x)) for x in lst]\nend\n\
    using Test\n\n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\
    \t@test(candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the\
    \ str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the\
    \ 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"]) == [\"the number\
    \ of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements\
    \ 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng\
    \ 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpxmnwrxlp.jl:13

    '
  stdout: "test set: Error During Test at /tmp/tmpxmnwrxlp.jl:16\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: no method matching rem(::Char, ::Int64)\n\
    \  Closest candidates are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero})\
    \ at ~/.conda/envs/polyglot/share/julia/base/div.jl:80\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:81\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:82\n\
    \    ...\n  Stacktrace:\n    [1] (::var\"#2#4\")(x::Char)\n      @ Main /tmp/tmpxmnwrxlp.jl:9\n\
    \    [2] _simple_count\n      @ ./reduce.jl:1206 [inlined]\n    [3] #count#271\n\
    \      @ ./reduce.jl:1201 [inlined]\n    [4] count\n      @ ./reduce.jl:1201 [inlined]\n\
    \    [5] (::var\"#1#3\")(x::String)\n      @ Main ./none:0\n    [6] iterate\n\
    \      @ ./generator.jl:47 [inlined]\n    [7] collect(itr::Base.Generator{Vector{String},\
    \ var\"#1#3\"})\n      @ Base ./array.jl:724\n    [8] odd_count(lst::Vector{String})\n\
    \      @ Main /tmp/tmpxmnwrxlp.jl:9\n    [9] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [10] macro expansion\n      @ /tmp/tmpxmnwrxlp.jl:16 [inlined]\n\
    \   [11] macro expansion\n      @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [12] top-level scope\n      @ /tmp/tmpxmnwrxlp.jl:15\ntest set:\
    \ Error During Test at /tmp/tmpxmnwrxlp.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng\
    \ 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the 8nput.\"\
    ]\n  MethodError: no method matching rem(::Char, ::Int64)\n  Closest candidates\
    \ are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:80\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Down}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:81\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at ~/.conda/envs/po"
  timestamp: 1659979578
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    odd_count\
    \ = []\n    for i in lst\n        count = 0\n        for j in i\n            if\
    \ j % 2 == 1\n                count += 1\n            end\n        end\n     \
    \   push!(odd_count, count)\n    end\n    return odd_count\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) ==\
    \ [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmp0d6mez_w.jl:22

    '
  stdout: "test set: Error During Test at /tmp/tmp0d6mez_w.jl:25\n  Test threw exception\n\
    \  Expression: candidate([\"1234567\"]) == [\"the number of odd elements 4n the\
    \ str4ng 4 of the 4nput.\"]\n  MethodError: no method matching rem(::Char, ::Int64)\n\
    \  Closest candidates are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero})\
    \ at ~/.conda/envs/polyglot/share/julia/base/div.jl:80\n    rem(::Any, ::Any,\
    \ !Matched::RoundingMode{:Down}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:81\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:82\n\
    \    ...\n  Stacktrace:\n   [1] odd_count(lst::Vector{String})\n     @ Main /tmp/tmp0d6mez_w.jl:12\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp0d6mez_w.jl:25 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp0d6mez_w.jl:24\ntest set:\
    \ Error During Test at /tmp/tmp0d6mez_w.jl:26\n  Test threw exception\n  Expression:\
    \ candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng\
    \ 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the 8nput.\"\
    ]\n  MethodError: no method matching rem(::Char, ::Int64)\n  Closest candidates\
    \ are:\n    rem(::Any, ::Any, !Matched::RoundingMode{:ToZero}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:80\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Down}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:81\n\
    \    rem(::Any, ::Any, !Matched::RoundingMode{:Up}) at ~/.conda/envs/polyglot/share/julia/base/div.jl:82\n\
    \    ...\n  Stacktrace:\n   [1] odd_count(lst::Vector{String})\n     @ Main /tmp/tmp0d6mez_w.jl:12\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp0d6mez_w.jl:26 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n  "
  timestamp: 1659979578
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    #\
    \ initialize output vector\n    output = Vector{String}(undef, length(lst))\n\
    \    # loop through each string in the input\n    for i in 1:length(lst)\n   \
    \     # initialize counter\n        count = 0\n        # loop through each character\
    \ in the string\n        for j in 1:length(lst[i])\n            # if the character\
    \ is odd, increment the counter\n            if parse(Int, lst[i][j]) % 2 != 0\n\
    \                count += 1\n            end\n        end\n        # add the counter\
    \ to the output vector\n        output[i] = string(count)\n    end\n    return\
    \ output\nend\nusing Test\n\n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\
    \t@test(candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the\
    \ str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the\
    \ 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"]) == [\"the number\
    \ of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements\
    \ 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng\
    \ 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp4fqjmvtt.jl:28

    '
  stdout: "test set: Test Failed at /tmp/tmp4fqjmvtt.jl:31\n  Expression: candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\n\
    \   Evaluated: [\"4\"] == [\"the number of odd elements 4n the str4ng 4 of the\
    \ 4nput.\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4fqjmvtt.jl:31 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp4fqjmvtt.jl:30\ntest set: Test\
    \ Failed at /tmp/tmp4fqjmvtt.jl:32\n  Expression: candidate([\"3\", \"11111111\"\
    ]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\n   Evaluated: [\"1\", \"8\"\
    ] == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp4fqjmvtt.jl:32 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp4fqjmvtt.jl:30\ntest set: Test Failed at /tmp/tmp4fqjmvtt.jl:33\n\
    \  Expression: candidate([\"271\", \"137\", \"314\"]) == [\"the number of odd\
    \ elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the\
    \ str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the\
    \ 2nput.\"]\n   Evaluated: [\"2\", \"3\", \"2\"] == [\"the number of odd elements\
    \ 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the str3ng\
    \ 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    ]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp4fqjmvtt.jl:33 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope"
  timestamp: 1659979577
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ [string(count(x->x%2==1, parse(Int, i))) for i in lst]\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"1234567\"]) ==\
    \ [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\t@test(candidate([\"\
    3\", \"11111111\"]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\"\
    , \"the number of odd elements 8n the str8ng 8 of the 8nput.\"])\n\t@test(candidate([\"\
    271\", \"137\", \"314\"]) == [\"the number of odd elements 2n the str2ng 2 of\
    \ the 2nput.\", \"the number of odd elements 3n the str3ng 3 of the 3nput.\",\
    \ \"the number of odd elements 2n the str2ng 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpa9c62jnw.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpa9c62jnw.jl:15\n  Expression: candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\n\
    \   Evaluated: [\"1\"] == [\"the number of odd elements 4n the str4ng 4 of the\
    \ 4nput.\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpa9c62jnw.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpa9c62jnw.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpa9c62jnw.jl:16\n  Expression: candidate([\"3\", \"11111111\"\
    ]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\n   Evaluated: [\"1\", \"1\"\
    ] == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpa9c62jnw.jl:16 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpa9c62jnw.jl:14\ntest set: Test Failed at /tmp/tmpa9c62jnw.jl:17\n\
    \  Expression: candidate([\"271\", \"137\", \"314\"]) == [\"the number of odd\
    \ elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the\
    \ str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the\
    \ 2nput.\"]\n   Evaluated: [\"1\", \"1\", \"0\"] == [\"the number of odd elements\
    \ 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the str3ng\
    \ 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    ]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpa9c62jnw.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope"
  timestamp: 1659979567
- exit_code: 1
  program: "\"\"\"Given a list of strings, where each string consists of only digits,\
    \ return a list.\n    Each element i of the output should be \"the number of odd\
    \ elements in the\n    string i of the input.\" where all the i's should be replaced\
    \ by the number\n    of odd digits in the i'th string of the input.\n\n      \
    \      \"\"\"\nfunction odd_count(lst::Vector{String})::Vector{String} \n    return\
    \ map(x -> string(length(filter(y -> parse(Int, y) % 2 != 0, x))), lst)\nend\n\
    using Test\n\n@testset begin\n\ncandidate = odd_count;\n\t@test(candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"])\n\
    \t@test(candidate([\"3\", \"11111111\"]) == [\"the number of odd elements 1n the\
    \ str1ng 1 of the 1nput.\", \"the number of odd elements 8n the str8ng 8 of the\
    \ 8nput.\"])\n\t@test(candidate([\"271\", \"137\", \"314\"]) == [\"the number\
    \ of odd elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements\
    \ 3n the str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng\
    \ 2 of the 2nput.\"])\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpjj5krmrz.jl:12

    '
  stdout: "test set: Test Failed at /tmp/tmpjj5krmrz.jl:15\n  Expression: candidate([\"\
    1234567\"]) == [\"the number of odd elements 4n the str4ng 4 of the 4nput.\"]\n\
    \   Evaluated: [\"4\"] == [\"the number of odd elements 4n the str4ng 4 of the\
    \ 4nput.\"]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjj5krmrz.jl:15 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjj5krmrz.jl:14\ntest set: Test\
    \ Failed at /tmp/tmpjj5krmrz.jl:16\n  Expression: candidate([\"3\", \"11111111\"\
    ]) == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\n   Evaluated: [\"1\", \"8\"\
    ] == [\"the number of odd elements 1n the str1ng 1 of the 1nput.\", \"the number\
    \ of odd elements 8n the str8ng 8 of the 8nput.\"]\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpjj5krmrz.jl:16 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpjj5krmrz.jl:14\ntest set: Test Failed at /tmp/tmpjj5krmrz.jl:17\n\
    \  Expression: candidate([\"271\", \"137\", \"314\"]) == [\"the number of odd\
    \ elements 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the\
    \ str3ng 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the\
    \ 2nput.\"]\n   Evaluated: [\"2\", \"3\", \"2\"] == [\"the number of odd elements\
    \ 2n the str2ng 2 of the 2nput.\", \"the number of odd elements 3n the str3ng\
    \ 3 of the 3nput.\", \"the number of odd elements 2n the str2ng 2 of the 2nput.\"\
    ]\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjj5krmrz.jl:17 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope"
  timestamp: 1659979567

language: jl
name: HumanEval_93_encode
results:
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # YOUR CODE\
    \ HERE\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmptf0lerti.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmptf0lerti.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmptf0lerti.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmptf0lerti.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmptf0lerti.jl:17\ntest set:\
    \ Error During Test at /tmp/tmptf0lerti.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmptf0lerti.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmptf0lerti.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    \"\"\"\n \
    \   >>> encode(\"Hello World\")\n    \"HllE Wrld\"\n    >>> encode(\"Hello World!\"\
    )\n    \"HllE Wrld!\"\n    >>> encode(\"Hello World!\")\n    \"HllE Wrld!\"\n\
    \    >>> encode(\"Hello World!\")\n    \"HllE Wrld!\"\n    >>> encode(\"Hello\
    \ World!\")\n    \"HllE Wrld!\"\n    >>> encode(\"Hello World!\")\n    \"HllE\
    \ Wrld!\"\n    >>> encode(\"Hello World!\")\n    \"HllE Wrld!\"\n    >>> encode(\"\
    Hello World!\")\n    \"HllE Wrld!\"\n    >>> encode(\"Hello World!\")\n    \"\
    HllE Wrld!\"\n    >>> encode(\"Hello World!\")\n    \"HllE Wrld!\"\n    >>> encode(\"\
    Hello World!\")\n    \"HllE Wrld!\"\n    >>> encode(\"Hello World!\")\n    \"\
    HllE Wrld!\"\n    >>> encode(\"Hello World!\")\n    \"HllE Wrld!\"\n    >>> encode(\"\
    Hello World!\")\n    \"HllE Wrld!\"\n    >>> encode(\"Hello World!\")\n    \"\
    HllE Wrld!\"\n    >>> encode(\"Hello World!\")\n    \"HllE Wrld!\"\n    >>> encode(\"\
    Hello World!\")\n    \"HllE Wrld!\"\n    >>> encode(\"Hello World!\")\n    \"\
    HllE Wrld!\"\n    >>> encode(\"Hello World!\")\n    \"HllE Wrld!\"\n    >>> encode(\"\
    Hello World!\")\n    \"HllE Wrld!\"\n    >>> encode(\"Hello World!\")\n    \"\
    HllE Wrld!\"\n    >>> encode(\"Hello World!\")\n    \"HllE Wrld!\"\n    >>> encode(\"\
    Hello World!\")\n    \"HllE Wrld!\"\n    >>> encode(\"Hello World!\")\n    \"\
    HllE Wrld!\"\n    >>> encode(\"Hello World!\")\n    \"HllE Wrld!\"\n    >>> encode(\"\
    Hello World!\")\n    \"HllE Wrld!\"\n    >>> encode(\"Hello World!\")\n    \"\
    HllE Wrld!\"\n    >>> encode(\"Hello World!\")\n    \"HllE Wrld!\"\n    >>> encode(\"\
    Hello\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpcmgcpkq3.jl:1\nin expression starting at /tmp/tmpcmgcpkq3.jl:1\n"
  stdout: ''
  timestamp: 1659747127
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # Your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpq6x5950r.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpq6x5950r.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpq6x5950r.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpq6x5950r.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpq6x5950r.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpq6x5950r.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpq6x5950r.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpq6x5950r.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    \"\"\"\n \
    \   >>> encode(\"Hello World\")\n    \"HElLO wORLd\"\n    >>> encode(\"This is\
    \ a test\")\n    \"THIs iS A TEsT\"\n    >>> encode(\"This is a longer test\"\
    )\n    \"THIs iS A LOngER TEsT\"\n    \"\"\"\n    # YOUR CODE HERE\n    return\
    \ \"HElLO wORLd\"\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t\
    @test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\"\
    )\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\")\
    \ == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmphn03fe0t.jl:24

    '
  stdout: "test set: Test Failed at /tmp/tmphn03fe0t.jl:27\n  Expression: candidate(\"\
    TEST\") == \"tgst\"\n   Evaluated: \"HElLO wORLd\" == \"tgst\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphn03fe0t.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphn03fe0t.jl:26\ntest set: Test\
    \ Failed at /tmp/tmphn03fe0t.jl:28\n  Expression: candidate(\"Mudasir\") == \"\
    mWDCSKR\"\n   Evaluated: \"HElLO wORLd\" == \"mWDCSKR\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphn03fe0t.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphn03fe0t.jl:26\ntest set: Test\
    \ Failed at /tmp/tmphn03fe0t.jl:29\n  Expression: candidate(\"YES\") == \"ygs\"\
    \n   Evaluated: \"HElLO wORLd\" == \"ygs\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphn03fe0t.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphn03fe0t.jl:26\ntest set: Test\
    \ Failed at /tmp/tmphn03fe0t.jl:30\n  Expression: candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\"\n   Evaluated: \"HElLO wORLd\" == \"tHKS KS C MGSSCGG\"\
    \nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmphn03fe0t.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmphn03fe0t.jl:26\ntest set: Test\
    \ Failed at /tmp/tmphn03fe0t.jl:31\n  Expression: candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\n   "
  timestamp: 1659747128
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # Your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpq6x5950r.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpq6x5950r.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpq6x5950r.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpq6x5950r.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpq6x5950r.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpq6x5950r.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpq6x5950r.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpq6x5950r.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # YOUR CODE\
    \ HERE\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmptf0lerti.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmptf0lerti.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmptf0lerti.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmptf0lerti.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmptf0lerti.jl:17\ntest set:\
    \ Error During Test at /tmp/tmptf0lerti.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmptf0lerti.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmptf0lerti.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # YOUR CODE\
    \ HERE\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmptf0lerti.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmptf0lerti.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmptf0lerti.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmptf0lerti.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmptf0lerti.jl:17\ntest set:\
    \ Error During Test at /tmp/tmptf0lerti.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmptf0lerti.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmptf0lerti.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    \"\"\"\n \
    \   encode(message::String)::String\n    \n    Takes a string message and encodes\
    \ it. \n    \"\"\"\n    # create a dictionary of vowels and their replacements\n\
    \    vowels = Dict(\"a\"=>\"c\", \"e\"=>\"g\", \"i\"=>\"k\", \"o\"=>\"q\", \"\
    u\"=>\"y\")\n    # create a dictionary of letters and their replacements\n   \
    \ letters = Dict(\"a\"=>\"A\", \"b\"=>\"B\", \"c\"=>\"C\", \"d\"=>\"D\", \"e\"\
    =>\"E\", \"f\"=>\"F\", \"g\"=>\"G\", \"h\"=>\"H\", \"i\"=>\"I\", \"j\"=>\"J\"\
    , \"k\"=>\"K\", \"l\"=>\"L\", \"m\"=>\"M\", \"n\"=>\"N\", \"o\"=>\"O\", \"p\"\
    =>\"P\", \"q\"=>\"Q\", \"r\"=>\"R\", \"s\"=>\"S\", \"t\"=>\"T\", \"u\"=>\"U\"\
    , \"v\"=>\"V\", \"w\"=>\"W\", \"x\"=>\"X\", \"y\"=>\"Y\", \"z\"=>\"Z\")\n    #\
    \ create a dictionary of letters and their replacements\n    letters2 = Dict(\"\
    A\"=>\"a\", \"B\"=>\"b\", \"C\"=>\"c\", \"D\"=>\"d\", \"E\"=>\"e\", \"F\"=>\"\
    f\", \"G\"=>\"g\", \"H\"=>\"h\", \"I\"=>\"i\", \"J\"=>\"j\", \"K\"=>\"k\", \"\
    L\"=>\"l\", \"M\"=>\"m\", \"N\"=>\"n\", \"O\"=>\"o\", \"P\"=>\"p\", \"Q\"=>\"\
    q\", \"R\"=>\"r\", \"S\"=>\"s\", \"T\"=>\"t\", \"U\"=>\"u\", \"V\"=>\"v\", \"\
    W\"=>\"w\", \"X\"=>\"x\", \"Y\"=>\"y\", \"Z\"=>\"z\")\n    # create an empty string\
    \ to store the encoded message\n    encoded = \"\"\n    # loop through each character\
    \ in the message\n   \nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t\
    @test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\"\
    )\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\")\
    \ == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: \"function\" at /tmp/tmpyls45w_1.jl:10\
    \ requires end\nStacktrace:\n [1] top-level scope\n   @ /tmp/tmpyls45w_1.jl:1\n\
    in expression starting at /tmp/tmpyls45w_1.jl:1\n"
  stdout: ''
  timestamp: 1659747127
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\n    return encoded_message\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = encode;\n\t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\"\
    ) == \"mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpr3ecz71i.jl:16

    '
  stdout: "test set: Error During Test at /tmp/tmpr3ecz71i.jl:19\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  UndefVarError: encoded_message\
    \ not defined\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpr3ecz71i.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpr3ecz71i.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpr3ecz71i.jl:18\ntest set:\
    \ Error During Test at /tmp/tmpr3ecz71i.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  UndefVarError: encoded_message not\
    \ defined\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpr3ecz71i.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpr3ecz71i.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpr3ecz71i.jl:18\ntest set:\
    \ Error During Test at /tmp/tmpr3ecz71i.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"YES\") == \"ygs\"\n  UndefVarError: encoded_message not defined\n\
    \  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpr3ecz71i.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpr3ecz71i.jl:21 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpr3ecz71i.jl:18\ntest set:\
    \ Error During Test at /tmp/tmpr3ecz71i.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\n  UndefVarError:\
    \ encoded_message not defined\n  Stacktrace:\n   [1] encode(message::String)\n\
    \     @ Main /tmp/tmpr3ecz71i.jl:12\n   [2] macro "
  timestamp: 1659747129
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # Your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpq6x5950r.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpq6x5950r.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpq6x5950r.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpq6x5950r.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpq6x5950r.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpq6x5950r.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpq6x5950r.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpq6x5950r.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # Your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpq6x5950r.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpq6x5950r.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpq6x5950r.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpq6x5950r.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpq6x5950r.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpq6x5950r.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpq6x5950r.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpq6x5950r.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # YOUR CODE\
    \ HERE\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmptf0lerti.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmptf0lerti.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmptf0lerti.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmptf0lerti.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmptf0lerti.jl:17\ntest set:\
    \ Error During Test at /tmp/tmptf0lerti.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmptf0lerti.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmptf0lerti.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    vowels = [\"\
    a\", \"e\", \"i\", \"o\", \"u\"]\n    encoded_message = \"\"\n    for letter in\
    \ message\n        if letter in vowels\n            encoded_message *= letter\
    \ + \"2\"\n        else\n            encoded_message *= letter\n        end\n\
    \    end\n    return encoded_message\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = encode;\n\t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\"\
    ) == \"mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp0e36zxks.jl:24

    '
  stdout: "test set: Test Failed at /tmp/tmp0e36zxks.jl:27\n  Expression: candidate(\"\
    TEST\") == \"tgst\"\n   Evaluated: \"TEST\" == \"tgst\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0e36zxks.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0e36zxks.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp0e36zxks.jl:28\n  Expression: candidate(\"Mudasir\") == \"\
    mWDCSKR\"\n   Evaluated: \"Mudasir\" == \"mWDCSKR\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0e36zxks.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0e36zxks.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp0e36zxks.jl:29\n  Expression: candidate(\"YES\") == \"ygs\"\
    \n   Evaluated: \"YES\" == \"ygs\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0e36zxks.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0e36zxks.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp0e36zxks.jl:30\n  Expression: candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\"\n   Evaluated: \"This is a message\" == \"tHKS KS C\
    \ MGSSCGG\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp0e36zxks.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp0e36zxks.jl:26\ntest set: Test\
    \ Failed at /tmp/tmp0e36zxks.jl:31\n  Expression: candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\n   Evaluated: \"I"
  timestamp: 1659747128
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # Your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpq6x5950r.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpq6x5950r.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpq6x5950r.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpq6x5950r.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpq6x5950r.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpq6x5950r.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpq6x5950r.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpq6x5950r.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\n    return encoded_message\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = encode;\n\t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\"\
    ) == \"mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpr3ecz71i.jl:16

    '
  stdout: "test set: Error During Test at /tmp/tmpr3ecz71i.jl:19\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  UndefVarError: encoded_message\
    \ not defined\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpr3ecz71i.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpr3ecz71i.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpr3ecz71i.jl:18\ntest set:\
    \ Error During Test at /tmp/tmpr3ecz71i.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  UndefVarError: encoded_message not\
    \ defined\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpr3ecz71i.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpr3ecz71i.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpr3ecz71i.jl:18\ntest set:\
    \ Error During Test at /tmp/tmpr3ecz71i.jl:21\n  Test threw exception\n  Expression:\
    \ candidate(\"YES\") == \"ygs\"\n  UndefVarError: encoded_message not defined\n\
    \  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpr3ecz71i.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpr3ecz71i.jl:21 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpr3ecz71i.jl:18\ntest set:\
    \ Error During Test at /tmp/tmpr3ecz71i.jl:22\n  Test threw exception\n  Expression:\
    \ candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\n  UndefVarError:\
    \ encoded_message not defined\n  Stacktrace:\n   [1] encode(message::String)\n\
    \     @ Main /tmp/tmpr3ecz71i.jl:12\n   [2] macro "
  timestamp: 1659747129
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # YOUR CODE\
    \ HERE\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmptf0lerti.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmptf0lerti.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmptf0lerti.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmptf0lerti.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmptf0lerti.jl:17\ntest set:\
    \ Error During Test at /tmp/tmptf0lerti.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmptf0lerti.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmptf0lerti.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # Your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpq6x5950r.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpq6x5950r.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpq6x5950r.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpq6x5950r.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpq6x5950r.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpq6x5950r.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpq6x5950r.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpq6x5950r.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    alphabet =\
    \ \"abcdefghijklmnopqrstuvwxyz\"\n    vowels = \"aeiou\"\n    encoded_message\
    \ = \"\"\n    for letter in message\n        if letter in vowels\n           \
    \ encoded_message *= alphabet[(findfirst(alphabet, letter) + 2) % 26]\n      \
    \  elseif letter in alphabet\n            encoded_message *= alphabet[(findfirst(alphabet,\
    \ letter) + 13) % 26]\n        else\n            encoded_message *= letter\n \
    \       end\n    end\n    return encoded_message\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = encode;\n\t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"\
    Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 2 failed, 3 errored,
    0 broken.

    in expression starting at /tmp/tmpb238r0sm.jl:27

    '
  stdout: "test set: Test Failed at /tmp/tmpb238r0sm.jl:30\n  Expression: candidate(\"\
    TEST\") == \"tgst\"\n   Evaluated: \"TEST\" == \"tgst\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpb238r0sm.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpb238r0sm.jl:29\ntest set: Error\
    \ During Test at /tmp/tmpb238r0sm.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: no method matching findfirst(::String,\
    \ ::Char)\n  Closest candidates are:\n    findfirst(!Matched::Function, ::Any)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\n    findfirst(::AbstractString,\
    \ !Matched::AbstractString) at /shared/centos7/julia/1.7.3/share/julia/base/strings/search.jl:104\n\
    \    findfirst(::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1910\n\
    \  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpb238r0sm.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpb238r0sm.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpb238r0sm.jl:29\ntest set:\
    \ Test Failed at /tmp/tmpb238r0sm.jl:32\n  Expression: candidate(\"YES\") == \"\
    ygs\"\n   Evaluated: \"YES\" == \"ygs\"\nStacktrace:\n [1] macro expansion\n \
    \  @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpb238r0sm.jl:32 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpb238r0sm.jl:29\ntest set: Error\
    \ During Test at /tmp/tmpb238r0sm.jl:33\n  Test threw exception\n  Expression:\
    \ candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\n  MethodError: no\
    \ method matching fin"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # Your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpq6x5950r.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpq6x5950r.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpq6x5950r.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpq6x5950r.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpq6x5950r.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpq6x5950r.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpq6x5950r.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpq6x5950r.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\n    return message\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpza878kce.jl:16

    '
  stdout: "test set: Test Failed at /tmp/tmpza878kce.jl:19\n  Expression: candidate(\"\
    TEST\") == \"tgst\"\n   Evaluated: \"TEST\" == \"tgst\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpza878kce.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpza878kce.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpza878kce.jl:20\n  Expression: candidate(\"Mudasir\") == \"\
    mWDCSKR\"\n   Evaluated: \"Mudasir\" == \"mWDCSKR\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpza878kce.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpza878kce.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpza878kce.jl:21\n  Expression: candidate(\"YES\") == \"ygs\"\
    \n   Evaluated: \"YES\" == \"ygs\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpza878kce.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpza878kce.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpza878kce.jl:22\n  Expression: candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\"\n   Evaluated: \"This is a message\" == \"tHKS KS C\
    \ MGSSCGG\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpza878kce.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpza878kce.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpza878kce.jl:23\n  Expression: candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\n   Evaluated: \"I"
  timestamp: 1659747128
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # TODO: implement\
    \ this function\n    return message\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = encode;\n\t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\"\
    ) == \"mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpqhdiumyz.jl:16

    '
  stdout: "test set: Test Failed at /tmp/tmpqhdiumyz.jl:19\n  Expression: candidate(\"\
    TEST\") == \"tgst\"\n   Evaluated: \"TEST\" == \"tgst\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqhdiumyz.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqhdiumyz.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpqhdiumyz.jl:20\n  Expression: candidate(\"Mudasir\") == \"\
    mWDCSKR\"\n   Evaluated: \"Mudasir\" == \"mWDCSKR\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqhdiumyz.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqhdiumyz.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpqhdiumyz.jl:21\n  Expression: candidate(\"YES\") == \"ygs\"\
    \n   Evaluated: \"YES\" == \"ygs\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqhdiumyz.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqhdiumyz.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpqhdiumyz.jl:22\n  Expression: candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\"\n   Evaluated: \"This is a message\" == \"tHKS KS C\
    \ MGSSCGG\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpqhdiumyz.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpqhdiumyz.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpqhdiumyz.jl:23\n  Expression: candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\n   Evaluated: \"I"
  timestamp: 1659747128
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    vowels = [\"\
    a\", \"e\", \"i\", \"o\", \"u\"]\n    alphabet = [\"a\", \"b\", \"c\", \"d\",\
    \ \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\"\
    , \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\"\
    ]\n    encoded_message = \"\"\n    for i in message\n        if i in vowels\n\
    \            index = findfirst(vowels, i)\n            encoded_message = encoded_message\
    \ * alphabet[index + 2]\n        else\n            index = findfirst(alphabet,\
    \ i)\n            encoded_message = encoded_message * alphabet[index + 2]\n  \
    \      end\n    end\n    return encoded_message\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = encode;\n\t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"\
    Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpgoognf04.jl:27

    '
  stdout: "test set: Error During Test at /tmp/tmpgoognf04.jl:30\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: no method matching\
    \ findfirst(::Vector{String}, ::Char)\n  Closest candidates are:\n    findfirst(!Matched::Function,\
    \ ::Any) at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\n    findfirst(::AbstractArray)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1920\n    findfirst(::Any)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1910\n  Stacktrace:\n\
    \   [1] encode(message::String)\n     @ Main /tmp/tmpgoognf04.jl:19\n   [2] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgoognf04.jl:30 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpgoognf04.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpgoognf04.jl:31\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: no method matching findfirst(::Vector{String},\
    \ ::Char)\n  Closest candidates are:\n    findfirst(!Matched::Function, ::Any)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1994\n    findfirst(::AbstractArray)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1920\n    findfirst(::Any)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/array.jl:1910\n  Stacktrace:\n\
    \   [1] encode(message::String)\n     @ Main /tmp/tmpgoognf04.jl:19\n   [2] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpgoognf04.jl:31 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpgoognf04.jl:29\ntest set:\
    \ Error During Test at /tmp/tmpgoognf04.jl:32\n  Test threw exception\n  Expression:\
    \ candidate(\"YES\") == \"ygs\"\n  MethodError: no method matching findfirst(::Vector{String},\
    \ ::Char)\n  Closest candidates "
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here \nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmppa53kaex.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmppa53kaex.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmppa53kaex.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmppa53kaex.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmppa53kaex.jl:17\ntest set:\
    \ Error During Test at /tmp/tmppa53kaex.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmppa53kaex.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmppa53kaex.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747129
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    \"\"\"\n \
    \   >>> encode(\"Hello World\")\n    \"HElLo WOrLd\"\n    >>> encode(\"I love\
    \ you\")\n    \"I lOvE yOu\"\n    >>> encode(\"I am a student\")\n    \"I Am A\
    \ StUdEnT\"\n    \"\"\"\n    # YOUR CODE HERE\n    return \"HElLo WOrLd\"\nend\n\
    using Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"TEST\"\
    ) == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpy38jtjh0.jl:24

    '
  stdout: "test set: Test Failed at /tmp/tmpy38jtjh0.jl:27\n  Expression: candidate(\"\
    TEST\") == \"tgst\"\n   Evaluated: \"HElLo WOrLd\" == \"tgst\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy38jtjh0.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy38jtjh0.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpy38jtjh0.jl:28\n  Expression: candidate(\"Mudasir\") == \"\
    mWDCSKR\"\n   Evaluated: \"HElLo WOrLd\" == \"mWDCSKR\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy38jtjh0.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy38jtjh0.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpy38jtjh0.jl:29\n  Expression: candidate(\"YES\") == \"ygs\"\
    \n   Evaluated: \"HElLo WOrLd\" == \"ygs\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy38jtjh0.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy38jtjh0.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpy38jtjh0.jl:30\n  Expression: candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\"\n   Evaluated: \"HElLo WOrLd\" == \"tHKS KS C MGSSCGG\"\
    \nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpy38jtjh0.jl:30 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpy38jtjh0.jl:26\ntest set: Test\
    \ Failed at /tmp/tmpy38jtjh0.jl:31\n  Expression: candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\n   "
  timestamp: 1659747128
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # YOUR CODE\
    \ HERE\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmptf0lerti.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmptf0lerti.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmptf0lerti.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmptf0lerti.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmptf0lerti.jl:17\ntest set:\
    \ Error During Test at /tmp/tmptf0lerti.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmptf0lerti.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmptf0lerti.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # YOUR CODE\
    \ HERE\n    return \"\";\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpoypmizw9.jl:16

    '
  stdout: "test set: Test Failed at /tmp/tmpoypmizw9.jl:19\n  Expression: candidate(\"\
    TEST\") == \"tgst\"\n   Evaluated: \"\" == \"tgst\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpoypmizw9.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpoypmizw9.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpoypmizw9.jl:20\n  Expression: candidate(\"Mudasir\") == \"\
    mWDCSKR\"\n   Evaluated: \"\" == \"mWDCSKR\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpoypmizw9.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpoypmizw9.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpoypmizw9.jl:21\n  Expression: candidate(\"YES\") == \"ygs\"\
    \n   Evaluated: \"\" == \"ygs\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpoypmizw9.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpoypmizw9.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpoypmizw9.jl:22\n  Expression: candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\"\n   Evaluated: \"\" == \"tHKS KS C MGSSCGG\"\nStacktrace:\n\
    \ [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpoypmizw9.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpoypmizw9.jl:18\ntest set: Test\
    \ Failed at /tmp/tmpoypmizw9.jl:23\n  Expression: candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\n   Evaluated: \"\" == \"k dQnT\
    \ kNqW wHcT Tq wRkTg\""
  timestamp: 1659747128
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    vowels = [\"\
    a\", \"e\", \"i\", \"o\", \"u\"]\n    encoded = \"\"\n    for c in message\n \
    \       if c in vowels\n            encoded *= c\n        elseif c in uppercase(vowels)\n\
    \            encoded *= c\n        elseif c in lowercase(vowels)\n           \
    \ encoded *= c\n        elseif c in uppercase(alphabet)\n            encoded *=\
    \ c\n        elseif c in lowercase(alphabet)\n            encoded *= c\n     \
    \   else\n            encoded *= c\n        end\n    end\n    return encoded\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmp1pvrr_n4.jl:32

    '
  stdout: "test set: Error During Test at /tmp/tmp1pvrr_n4.jl:35\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: no method matching\
    \ uppercase(::Vector{String})\n  Closest candidates are:\n    uppercase(!Matched::T)\
    \ where T<:AbstractChar at /shared/centos7/julia/1.7.3/share/julia/base/strings/unicode.jl:251\n\
    \    uppercase(!Matched::AbstractString) at /shared/centos7/julia/1.7.3/share/julia/base/strings/unicode.jl:525\n\
    \  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmp1pvrr_n4.jl:16\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1pvrr_n4.jl:35 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp1pvrr_n4.jl:34\ntest set:\
    \ Error During Test at /tmp/tmp1pvrr_n4.jl:36\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: no method matching uppercase(::Vector{String})\n\
    \  Closest candidates are:\n    uppercase(!Matched::T) where T<:AbstractChar at\
    \ /shared/centos7/julia/1.7.3/share/julia/base/strings/unicode.jl:251\n    uppercase(!Matched::AbstractString)\
    \ at /shared/centos7/julia/1.7.3/share/julia/base/strings/unicode.jl:525\n  Stacktrace:\n\
    \   [1] encode(message::String)\n     @ Main /tmp/tmp1pvrr_n4.jl:16\n   [2] macro\
    \ expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmp1pvrr_n4.jl:36 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmp1pvrr_n4.jl:34\ntest set:\
    \ Error During Test at /tmp/tmp1pvrr_n4.jl:37\n  Test threw exception\n  Expression:\
    \ candidate(\"YES\") == \"ygs\"\n  MethodError: no method matching uppercase(::Vector{String})\n\
    \  Closest candidates are:\n    uppercase(!Matched::T) where T<:AbstractChar at\
    \ /shared/centos7/julia/1.7.3/share/julia/base/strings/unicode.jl"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # Your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpq6x5950r.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpq6x5950r.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpq6x5950r.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpq6x5950r.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpq6x5950r.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpq6x5950r.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpq6x5950r.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpq6x5950r.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    \"\"\"\n \
    \   >>> encode(\"Hello World\")\n    \"HllE Wrdl\"\n    >>> encode(\"Hello World\"\
    )\n    \"HllE Wrdl\"\n    >>> encode(\"Hello World\")\n    \"HllE Wrdl\"\n   \
    \ \"\"\"\n    # Your code here\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = encode;\n\t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\"\
    ) == \"mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpzyb_4zt5.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmpzyb_4zt5.jl:26\n  Expression: candidate(\"\
    TEST\") == \"tgst\"\n   Evaluated: \">>> encode(\\\"Hello World\\\")\\n\\\"HllE\
    \ Wrdl\\\"\\n>>> encode(\\\"Hello World\\\")\\n\\\"HllE Wrdl\\\"\\n>>> encode(\\\
    \"Hello World\\\")\\n\\\"HllE Wrdl\\\"\\n\" == \"tgst\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzyb_4zt5.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzyb_4zt5.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpzyb_4zt5.jl:27\n  Expression: candidate(\"Mudasir\") == \"\
    mWDCSKR\"\n   Evaluated: \">>> encode(\\\"Hello World\\\")\\n\\\"HllE Wrdl\\\"\
    \\n>>> encode(\\\"Hello World\\\")\\n\\\"HllE Wrdl\\\"\\n>>> encode(\\\"Hello\
    \ World\\\")\\n\\\"HllE Wrdl\\\"\\n\" == \"mWDCSKR\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzyb_4zt5.jl:27 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzyb_4zt5.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpzyb_4zt5.jl:28\n  Expression: candidate(\"YES\") == \"ygs\"\
    \n   Evaluated: \">>> encode(\\\"Hello World\\\")\\n\\\"HllE Wrdl\\\"\\n>>> encode(\\\
    \"Hello World\\\")\\n\\\"HllE Wrdl\\\"\\n>>> encode(\\\"Hello World\\\")\\n\\\"\
    HllE Wrdl\\\"\\n\" == \"ygs\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpzyb_4zt5.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpzyb_4zt5.jl:25\ntest set: Test\
    \ Failed at /tmp/tmpzyb_4zt5.jl:29\n  Expression: candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\"\n   Evaluated: \">>> encode(\\\"Hello World\\\")\\\
    n\\\"HllE Wrdl\\\"\\n>>> encode(\\\"Hello World\\\")\\n\\\"HllE Wrdl\\\"\\n>>>\
    \ encode(\\\"Hello World\\\")\\n\\\"HllE Wrdl\\\"\\n\" == \"tHKS KS C"
  timestamp: 1659747128
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # YOUR CODE\
    \ HERE\n    return\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\
    \t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"\
    mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"This is\
    \ a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpkglbyh8f.jl:16

    '
  stdout: "test set: Error During Test at /tmp/tmpkglbyh8f.jl:19\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpkglbyh8f.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkglbyh8f.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpkglbyh8f.jl:18\ntest set:\
    \ Error During Test at /tmp/tmpkglbyh8f.jl:20\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpkglbyh8f.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpkglbyh8f.jl:20 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # YOUR CODE\
    \ HERE\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmptf0lerti.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmptf0lerti.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmptf0lerti.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmptf0lerti.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmptf0lerti.jl:17\ntest set:\
    \ Error During Test at /tmp/tmptf0lerti.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmptf0lerti.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmptf0lerti.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # write your\
    \ code here\n    return message\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = encode;\n\t@test(candidate(\"TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\"\
    ) == \"mWDCSKR\")\n\t@test(candidate(\"YES\") == \"ygs\")\n\t@test(candidate(\"\
    This is a message\") == \"tHKS KS C MGSSCGG\")\n\t@test(candidate(\"I DoNt KnOw\
    \ WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\")\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp1ui088dh.jl:16

    '
  stdout: "test set: Test Failed at /tmp/tmp1ui088dh.jl:19\n  Expression: candidate(\"\
    TEST\") == \"tgst\"\n   Evaluated: \"TEST\" == \"tgst\"\nStacktrace:\n [1] macro\
    \ expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1ui088dh.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1ui088dh.jl:18\ntest set: Test\
    \ Failed at /tmp/tmp1ui088dh.jl:20\n  Expression: candidate(\"Mudasir\") == \"\
    mWDCSKR\"\n   Evaluated: \"Mudasir\" == \"mWDCSKR\"\nStacktrace:\n [1] macro expansion\n\
    \   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1ui088dh.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1ui088dh.jl:18\ntest set: Test\
    \ Failed at /tmp/tmp1ui088dh.jl:21\n  Expression: candidate(\"YES\") == \"ygs\"\
    \n   Evaluated: \"YES\" == \"ygs\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1ui088dh.jl:21 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1ui088dh.jl:18\ntest set: Test\
    \ Failed at /tmp/tmp1ui088dh.jl:22\n  Expression: candidate(\"This is a message\"\
    ) == \"tHKS KS C MGSSCGG\"\n   Evaluated: \"This is a message\" == \"tHKS KS C\
    \ MGSSCGG\"\nStacktrace:\n [1] macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp1ui088dh.jl:22 [inlined]\n [3]\
    \ macro expansion\n   @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp1ui088dh.jl:18\ntest set: Test\
    \ Failed at /tmp/tmp1ui088dh.jl:23\n  Expression: candidate(\"I DoNt KnOw WhAt\
    \ tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\n   Evaluated: \"I"
  timestamp: 1659747128
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130
- exit_code: 1
  program: "\"\"\"\n    Write a function that takes a message, and encodes in such\
    \ a \n    way that it swaps case of all letters, replaces all vowels in \n   \
    \ the message with the letter that appears 2 places ahead of that \n    vowel\
    \ in the english alphabet. \n    Assume only letters. \n    \n    Examples:\n\
    \            \"\"\"\nfunction encode(message::String)::String \n    # your code\
    \ here\nend\nusing Test\n\n@testset begin\n\ncandidate = encode;\n\t@test(candidate(\"\
    TEST\") == \"tgst\")\n\t@test(candidate(\"Mudasir\") == \"mWDCSKR\")\n\t@test(candidate(\"\
    YES\") == \"ygs\")\n\t@test(candidate(\"This is a message\") == \"tHKS KS C MGSSCGG\"\
    )\n\t@test(candidate(\"I DoNt KnOw WhAt tO WrItE\") == \"k dQnT kNqW wHcT Tq wRkTg\"\
    )\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxxnqu539.jl:15

    '
  stdout: "test set: Error During Test at /tmp/tmpxxnqu539.jl:18\n  Test threw exception\n\
    \  Expression: candidate(\"TEST\") == \"tgst\"\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type String\n  Closest candidates\
    \ are:\n    convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:18 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxxnqu539.jl:17\ntest set:\
    \ Error During Test at /tmp/tmpxxnqu539.jl:19\n  Test threw exception\n  Expression:\
    \ candidate(\"Mudasir\") == \"mWDCSKR\"\n  MethodError: Cannot `convert` an object\
    \ of type Nothing to an object of type String\n  Closest candidates are:\n   \
    \ convert(::Type{String}, !Matched::String) at /shared/centos7/julia/1.7.3/share/julia/base/essentials.jl:223\n\
    \    convert(::Type{T}, !Matched::T) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:231\n\
    \    convert(::Type{T}, !Matched::AbstractString) where T<:AbstractString at /shared/centos7/julia/1.7.3/share/julia/base/strings/basic.jl:232\n\
    \    ...\n  Stacktrace:\n   [1] encode(message::String)\n     @ Main /tmp/tmpxxnqu539.jl:12\n\
    \   [2] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxxnqu539.jl:19 [inlined]\n\
    \   [4] macro expansion\n     @ /shared/centos7/julia/1.7.3/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5"
  timestamp: 1659747130

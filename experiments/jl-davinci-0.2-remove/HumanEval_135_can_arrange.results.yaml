language: jl
name: HumanEval_135_can_arrange
results:
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] >= arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp6ng67k90.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp6ng67k90.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp6ng67k90.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp6ng67k90.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp6ng67k90.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp6ng67k90.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp6ng67k90.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp6ng67k90.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp6ng67k90.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp6ng67k90.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp6ng67k90.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp6ng67k90.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp6ng67k90.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp6ng67k90.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] >= arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp6ng67k90.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp6ng67k90.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp6ng67k90.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp6ng67k90.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp6ng67k90.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp6ng67k90.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp6ng67k90.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp6ng67k90.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp6ng67k90.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp6ng67k90.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp6ng67k90.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp6ng67k90.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp6ng67k90.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp6ng67k90.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] >= arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp6ng67k90.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp6ng67k90.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp6ng67k90.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp6ng67k90.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp6ng67k90.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp6ng67k90.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp6ng67k90.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp6ng67k90.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp6ng67k90.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp6ng67k90.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp6ng67k90.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp6ng67k90.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp6ng67k90.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp6ng67k90.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if i == 1\n            continue\n        end\n        if arr[i] <= arr[i-1]\n\
    \            return i-1\n        end\n    end\n    return -1\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1, 2, 4, 3, 5])\
    \ == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1, 4, 2, 5,\
    \ 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t@test(candidate(Vector{Int64}([]))\
    \ == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpm99a532i.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpm99a532i.jl:27\n  Expression: candidate([4,\
    \ 8, 5, 7, 3]) == 4\n   Evaluated: 2 == 4\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpm99a532i.jl:27 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpm99a532i.jl:23\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    4     1      5\n"
  timestamp: 1659792583
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if i == 1\n            continue\n        end\n        if arr[i] < arr[i-1]\n\
    \            return i-1\n        end\n    end\n    return -1\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1, 2, 4, 3, 5])\
    \ == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1, 4, 2, 5,\
    \ 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t@test(candidate(Vector{Int64}([]))\
    \ == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxj7edjc0.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxj7edjc0.jl:27\n  Expression: candidate([4,\
    \ 8, 5, 7, 3]) == 4\n   Evaluated: 2 == 4\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpxj7edjc0.jl:27 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpxj7edjc0.jl:23\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    4     1      5\n"
  timestamp: 1659792583
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] >= arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp6ng67k90.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp6ng67k90.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp6ng67k90.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp6ng67k90.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp6ng67k90.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp6ng67k90.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp6ng67k90.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp6ng67k90.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp6ng67k90.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp6ng67k90.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp6ng67k90.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp6ng67k90.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp6ng67k90.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp6ng67k90.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    # your code here\n    return -1\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpfysfq67b.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmpfysfq67b.jl:17\n  Expression: candidate([1,\
    \ 2, 4, 3, 5]) == 3\n   Evaluated: -1 == 3\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpfysfq67b.jl:17 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpfysfq67b.jl:16\ntest set: Test Failed at /tmp/tmpfysfq67b.jl:19\n\
    \  Expression: candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n   Evaluated: -1\
    \ == 2\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfysfq67b.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfysfq67b.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpfysfq67b.jl:20\n  Expression: candidate([4, 8, 5, 7, 3]) ==\
    \ 4\n   Evaluated: -1 == 4\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfysfq67b.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfysfq67b.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  timestamp: 1659792583
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] >= arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp6ng67k90.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp6ng67k90.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp6ng67k90.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp6ng67k90.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp6ng67k90.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp6ng67k90.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp6ng67k90.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp6ng67k90.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp6ng67k90.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp6ng67k90.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp6ng67k90.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp6ng67k90.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp6ng67k90.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp6ng67k90.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    # Your code here\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1, 2, 4, 3, 5])\
    \ == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1, 4, 2, 5,\
    \ 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t@test(candidate(Vector{Int64}([]))\
    \ == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxnqgqqxu.jl:13

    '
  stdout: "test set: Error During Test at /tmp/tmpxnqgqqxu.jl:16\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::Ptr) where T<:Integer at ~/.conda/envs/polyglot/share/julia/base/pointer.jl:23\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:7\n\
    \    ...\n  Stacktrace:\n   [1] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmpxnqgqqxu.jl:10\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxnqgqqxu.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxnqgqqxu.jl:15\ntest set:\
    \ Error During Test at /tmp/tmpxnqgqqxu.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::Ptr) where T<:Integer at ~/.conda/envs/polyglot/share/julia/base/pointer.jl:23\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:7\n\
    \    ...\n  Stacktrace:\n   [1] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmpxnqgqqxu.jl:10\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxnqgqqxu.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxnqgqqxu.jl:15\ntest set:\
    \ Error During Test at /tmp/tmpxnqgqqxu.jl:18\n  Test t"
  timestamp: 1659792585
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    n = length(arr)\n    for i in 1:n-1\n\
    \        if arr[i] > arr[i+1]\n            return i\n        end\n    end\n  \
    \  return -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t\
    @test(candidate([1, 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\
    \t@test(candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8,\
    \ 5, 7, 3]) == 4)\n\t@test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp_j1ao_c1.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp_j1ao_c1.jl:25\n  Expression: candidate([4,\
    \ 8, 5, 7, 3]) == 4\n   Evaluated: 2 == 4\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp_j1ao_c1.jl:25 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp_j1ao_c1.jl:21\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    4     1      5\n"
  timestamp: 1659792583
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] >= arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp6ng67k90.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp6ng67k90.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp6ng67k90.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp6ng67k90.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp6ng67k90.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp6ng67k90.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp6ng67k90.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp6ng67k90.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp6ng67k90.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp6ng67k90.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp6ng67k90.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp6ng67k90.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp6ng67k90.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp6ng67k90.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    # your code here\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1, 2, 4, 3, 5])\
    \ == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1, 4, 2, 5,\
    \ 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t@test(candidate(Vector{Int64}([]))\
    \ == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpamhzcgmz.jl:13

    '
  stdout: "test set: Error During Test at /tmp/tmpamhzcgmz.jl:16\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::Ptr) where T<:Integer at ~/.conda/envs/polyglot/share/julia/base/pointer.jl:23\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:7\n\
    \    ...\n  Stacktrace:\n   [1] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmpamhzcgmz.jl:10\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpamhzcgmz.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpamhzcgmz.jl:15\ntest set:\
    \ Error During Test at /tmp/tmpamhzcgmz.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::Ptr) where T<:Integer at ~/.conda/envs/polyglot/share/julia/base/pointer.jl:23\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:7\n\
    \    ...\n  Stacktrace:\n   [1] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmpamhzcgmz.jl:10\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpamhzcgmz.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpamhzcgmz.jl:15\ntest set:\
    \ Error During Test at /tmp/tmpamhzcgmz.jl:18\n  Test t"
  timestamp: 1659792585
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    # your code here\n    return -1\n\
    end\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 2 passed, 3 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpfysfq67b.jl:14

    '
  stdout: "test set: Test Failed at /tmp/tmpfysfq67b.jl:17\n  Expression: candidate([1,\
    \ 2, 4, 3, 5]) == 3\n   Evaluated: -1 == 3\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpfysfq67b.jl:17 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpfysfq67b.jl:16\ntest set: Test Failed at /tmp/tmpfysfq67b.jl:19\n\
    \  Expression: candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n   Evaluated: -1\
    \ == 2\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfysfq67b.jl:19 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfysfq67b.jl:16\ntest set: Test\
    \ Failed at /tmp/tmpfysfq67b.jl:20\n  Expression: candidate([4, 8, 5, 7, 3]) ==\
    \ 4\n   Evaluated: -1 == 4\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpfysfq67b.jl:20 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpfysfq67b.jl:16\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    2     3      5\n"
  timestamp: 1659792583
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    n = length(arr)\n    for i in 1:n-1\n\
    \        if arr[i] > arr[i+1]\n            return i\n        end\n    end\n  \
    \  return -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t\
    @test(candidate([1, 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\
    \t@test(candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8,\
    \ 5, 7, 3]) == 4)\n\t@test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp_j1ao_c1.jl:19

    '
  stdout: "test set: Test Failed at /tmp/tmp_j1ao_c1.jl:25\n  Expression: candidate([4,\
    \ 8, 5, 7, 3]) == 4\n   Evaluated: 2 == 4\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp_j1ao_c1.jl:25 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp_j1ao_c1.jl:21\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    4     1      5\n"
  timestamp: 1659792583
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    # your code here\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1, 2, 4, 3, 5])\
    \ == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1, 4, 2, 5,\
    \ 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t@test(candidate(Vector{Int64}([]))\
    \ == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpamhzcgmz.jl:13

    '
  stdout: "test set: Error During Test at /tmp/tmpamhzcgmz.jl:16\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::Ptr) where T<:Integer at ~/.conda/envs/polyglot/share/julia/base/pointer.jl:23\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:7\n\
    \    ...\n  Stacktrace:\n   [1] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmpamhzcgmz.jl:10\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpamhzcgmz.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpamhzcgmz.jl:15\ntest set:\
    \ Error During Test at /tmp/tmpamhzcgmz.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::Ptr) where T<:Integer at ~/.conda/envs/polyglot/share/julia/base/pointer.jl:23\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:7\n\
    \    ...\n  Stacktrace:\n   [1] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmpamhzcgmz.jl:10\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpamhzcgmz.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpamhzcgmz.jl:15\ntest set:\
    \ Error During Test at /tmp/tmpamhzcgmz.jl:18\n  Test t"
  timestamp: 1659792585
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    # Your code here\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1, 2, 4, 3, 5])\
    \ == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1, 4, 2, 5,\
    \ 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t@test(candidate(Vector{Int64}([]))\
    \ == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxnqgqqxu.jl:13

    '
  stdout: "test set: Error During Test at /tmp/tmpxnqgqqxu.jl:16\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::Ptr) where T<:Integer at ~/.conda/envs/polyglot/share/julia/base/pointer.jl:23\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:7\n\
    \    ...\n  Stacktrace:\n   [1] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmpxnqgqqxu.jl:10\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxnqgqqxu.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxnqgqqxu.jl:15\ntest set:\
    \ Error During Test at /tmp/tmpxnqgqqxu.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::Ptr) where T<:Integer at ~/.conda/envs/polyglot/share/julia/base/pointer.jl:23\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:7\n\
    \    ...\n  Stacktrace:\n   [1] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmpxnqgqqxu.jl:10\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxnqgqqxu.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxnqgqqxu.jl:15\ntest set:\
    \ Error During Test at /tmp/tmpxnqgqqxu.jl:18\n  Test t"
  timestamp: 1659792585
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if i == 1\n            continue\n        end\n        if arr[i] < arr[i-1]\n\
    \            return i-1\n        end\n    end\n    return -1\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1, 2, 4, 3, 5])\
    \ == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1, 4, 2, 5,\
    \ 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t@test(candidate(Vector{Int64}([]))\
    \ == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpxj7edjc0.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpxj7edjc0.jl:27\n  Expression: candidate([4,\
    \ 8, 5, 7, 3]) == 4\n   Evaluated: 2 == 4\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpxj7edjc0.jl:27 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpxj7edjc0.jl:23\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    4     1      5\n"
  timestamp: 1659792583
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in eachindex(arr)\n     \
    \   if i == 1\n            continue\n        end\n        if arr[i] <= arr[i-1]\n\
    \            return i-1\n        end\n    end\n    return -1\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1, 2, 4, 3, 5])\
    \ == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1, 4, 2, 5,\
    \ 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t@test(candidate(Vector{Int64}([]))\
    \ == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpuph9q7fo.jl:21

    '
  stdout: "test set: Test Failed at /tmp/tmpuph9q7fo.jl:27\n  Expression: candidate([4,\
    \ 8, 5, 7, 3]) == 4\n   Evaluated: 2 == 4\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpuph9q7fo.jl:27 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpuph9q7fo.jl:23\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    4     1      5\n"
  timestamp: 1659792583
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    # Your code here\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1, 2, 4, 3, 5])\
    \ == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1, 4, 2, 5,\
    \ 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t@test(candidate(Vector{Int64}([]))\
    \ == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpxnqgqqxu.jl:13

    '
  stdout: "test set: Error During Test at /tmp/tmpxnqgqqxu.jl:16\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::Ptr) where T<:Integer at ~/.conda/envs/polyglot/share/julia/base/pointer.jl:23\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:7\n\
    \    ...\n  Stacktrace:\n   [1] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmpxnqgqqxu.jl:10\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxnqgqqxu.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxnqgqqxu.jl:15\ntest set:\
    \ Error During Test at /tmp/tmpxnqgqqxu.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::Ptr) where T<:Integer at ~/.conda/envs/polyglot/share/julia/base/pointer.jl:23\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:7\n\
    \    ...\n  Stacktrace:\n   [1] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmpxnqgqqxu.jl:10\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpxnqgqqxu.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpxnqgqqxu.jl:15\ntest set:\
    \ Error During Test at /tmp/tmpxnqgqqxu.jl:18\n  Test t"
  timestamp: 1659792585
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 2:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 4 passed, 1 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpfyk5pvsv.jl:18

    '
  stdout: "test set: Test Failed at /tmp/tmpfyk5pvsv.jl:24\n  Expression: candidate([4,\
    \ 8, 5, 7, 3]) == 4\n   Evaluated: 2 == 4\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpfyk5pvsv.jl:24 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpfyk5pvsv.jl:20\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    4     1      5\n"
  timestamp: 1659792583
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    # your code here\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1, 2, 4, 3, 5])\
    \ == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1, 4, 2, 5,\
    \ 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t@test(candidate(Vector{Int64}([]))\
    \ == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 0 failed, 5 errored,
    0 broken.

    in expression starting at /tmp/tmpamhzcgmz.jl:13

    '
  stdout: "test set: Error During Test at /tmp/tmpamhzcgmz.jl:16\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  MethodError: Cannot `convert`\
    \ an object of type Nothing to an object of type Int64\n  Closest candidates are:\n\
    \    convert(::Type{T}, !Matched::Ptr) where T<:Integer at ~/.conda/envs/polyglot/share/julia/base/pointer.jl:23\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:7\n\
    \    ...\n  Stacktrace:\n   [1] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmpamhzcgmz.jl:10\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpamhzcgmz.jl:16 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpamhzcgmz.jl:15\ntest set:\
    \ Error During Test at /tmp/tmpamhzcgmz.jl:17\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  MethodError: Cannot `convert` an object of\
    \ type Nothing to an object of type Int64\n  Closest candidates are:\n    convert(::Type{T},\
    \ !Matched::Ptr) where T<:Integer at ~/.conda/envs/polyglot/share/julia/base/pointer.jl:23\n\
    \    convert(::Type{T}, !Matched::T) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:6\n\
    \    convert(::Type{T}, !Matched::Number) where T<:Number at ~/.conda/envs/polyglot/share/julia/base/number.jl:7\n\
    \    ...\n  Stacktrace:\n   [1] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmpamhzcgmz.jl:10\n\
    \   [2] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [3] macro expansion\n     @ /tmp/tmpamhzcgmz.jl:17 [inlined]\n\
    \   [4] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [5] top-level scope\n     @ /tmp/tmpamhzcgmz.jl:15\ntest set:\
    \ Error During Test at /tmp/tmpamhzcgmz.jl:18\n  Test t"
  timestamp: 1659792585
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584
- exit_code: 1
  program: "\"\"\"Create a function which returns the largest index of an element\
    \ which\n    is not greater than or equal to the element immediately preceding\
    \ it. If\n    no such element exists then return -1. The given array will not\
    \ contain\n    duplicate values.\n\n    Examples:\n            \"\"\"\nfunction\
    \ can_arrange(arr::Vector{Int64})::Int64 \n    for i in 1:length(arr)\n      \
    \  if arr[i] < arr[i-1]\n            return i-1\n        end\n    end\n    return\
    \ -1\nend\nusing Test\n\n@testset begin\n\ncandidate = can_arrange;\n\t@test(candidate([1,\
    \ 2, 4, 3, 5]) == 3)\n\t@test(candidate([1, 2, 4, 5]) == -1)\n\t@test(candidate([1,\
    \ 4, 2, 5, 6, 7, 8, 9, 10]) == 2)\n\t@test(candidate([4, 8, 5, 7, 3]) == 4)\n\t\
    @test(candidate(Vector{Int64}([])) == -1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 1 passed, 0 failed, 4 errored,
    0 broken.

    in expression starting at /tmp/tmp1fk0u5fy.jl:18

    '
  stdout: "test set: Error During Test at /tmp/tmp1fk0u5fy.jl:21\n  Test threw exception\n\
    \  Expression: candidate([1, 2, 4, 3, 5]) == 3\n  BoundsError: attempt to access\
    \ 5-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:21 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:22\n  Test threw exception\n  Expression:\
    \ candidate([1, 2, 4, 5]) == -1\n  BoundsError: attempt to access 4-element Vector{Int64}\
    \ at index [0]\n  Stacktrace:\n   [1] getindex\n     @ ./array.jl:861 [inlined]\n\
    \   [2] can_arrange(arr::Vector{Int64})\n     @ Main /tmp/tmp1fk0u5fy.jl:10\n\
    \   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:22 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:23\n  Test threw exception\n  Expression:\
    \ candidate([1, 4, 2, 5, 6, 7, 8, 9, 10]) == 2\n  BoundsError: attempt to access\
    \ 9-element Vector{Int64} at index [0]\n  Stacktrace:\n   [1] getindex\n     @\
    \ ./array.jl:861 [inlined]\n   [2] can_arrange(arr::Vector{Int64})\n     @ Main\
    \ /tmp/tmp1fk0u5fy.jl:10\n   [3] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n   [4] macro expansion\n     @ /tmp/tmp1fk0u5fy.jl:23 [inlined]\n\
    \   [5] macro expansion\n     @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n   [6] top-level scope\n     @ /tmp/tmp1fk0u5fy.jl:20\ntest set:\
    \ Error During Test at /tmp/tmp1fk0u5fy.jl:"
  timestamp: 1659792584

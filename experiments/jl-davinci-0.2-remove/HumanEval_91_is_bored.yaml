name: HumanEval_91_is_bored
language: jl
prompt: "\"\"\"\n    You'll be given a string of words, and your task is to count\
  \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
  \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
  \            \"\"\"\nfunction is_bored(S::String)::Int64 \n"
tests: "using Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"\
  Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"\
  I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel\
  \ good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"\
  You and I are going for a walk\") == 0)\nend\n"
completions: ["    return length(split(S, r\"I\")) - 1\nend", "    boredoms = 0\n\
    \    for sentence in split(S, r\"[.?!]\")\n        if startswith(sentence, \"\
    I\")\n            boredoms += 1\n        end\n    end\n    return boredoms\nend",
  "    return count(s->s==\"I\", split(S, r\"\\.|\\?|\\!\"))\nend", "    boredoms\
    \ = 0\n    for sentence in split(S, r\"[.?!]\")\n        if startswith(sentence,\
    \ \"I\")\n            boredoms += 1\n        end\n    end\n    return boredoms\n\
    end", "    return count(x->x==\"I\", split(S, r\"[.?!]\"))\nend", "    boredoms\
    \ = 0\n    for word in split(S, r\"[.?!]\")\n        if word[1] == 'I'\n     \
    \       boredoms += 1\n        end\n    end\n    return boredoms\nend", "    boredoms\
    \ = 0\n    for sentence in split(S, \"!|\\\\.|\\\\?\")\n        if startswith(sentence,\
    \ \"I\")\n            boredoms += 1\n        end\n    end\n    return boredoms\n\
    end", "    # your code here\nend", "    # your code here\nend", "    boredoms\
    \ = 0\n    for word in split(S, r\"[.?!]\")\n        if startswith(word, \"I\"\
    )\n            boredoms += 1\n        end\n    end\n    return boredoms\nend",
  "    boredoms = 0\n    for word in split(S, r\"[.?!]\")\n        if startswith(word,\
    \ \"I\")\n            boredoms += 1\n        end\n    end\n    return boredoms\n\
    end", "    return count(S, \"I\")\nend", "    return count(s->s[1]=='I',split(S,'[.?!]'))\n\
    end", "    boredoms = 0\n    for sentence in split(S, r\"[.?!]\")\n        if\
    \ startswith(sentence, \"I\")\n            boredoms += 1\n        end\n    end\n\
    \    return boredoms\nend", "    return count(x->x==\"I\", split(S, r\"\\.|\\\
    ?|\\!\"))\nend", "    count = 0\n    for i in 1:length(S)\n        if S[i] ==\
    \ 'I'\n            count += 1\n        end\n    end\n    return count\nend", " \
    \   count = 0\n    for i in 1:length(S)\n        if S[i] == 'I'\n            count\
    \ += 1\n        end\n    end\n    return count\nend", "    boredoms = 0\n    for\
    \ word in split(S, r\"[.?!]\")\n        if startswith(word, \"I\")\n         \
    \   boredoms += 1\n        end\n    end\n    return boredoms\nend", "    # your\
    \ code here\nend", "    # Split the string into sentences\n    sentences = split(S,\
    \ ['.', '?', '!'])\n    # Count the number of sentences that start with \"I\"\n\
    \    return count(s -> startswith(s, \"I\"), sentences)\nend", "    boredoms =\
    \ 0\n    for word in split(S, r\"[.?!]\")\n        if startswith(word, \"I\")\n\
    \            boredoms += 1\n        end\n    end\n    return boredoms\nend", " \
    \   return length(split(S, r\"I\")) - 1\nend", "    count = 0\n    for i in 1:length(S)\n\
    \        if S[i] == 'I'\n            count += 1\n        end\n    end\n    return\
    \ count\nend", "    count = 0\n    for i in 1:length(S)\n        if S[i] == 'I'\n\
    \            count += 1\n        end\n    end\n    return count\nend", "    boredoms\
    \ = 0\n    for word in split(S, ['.', '?', '!'])\n        if word[1] == 'I'\n\
    \            boredoms += 1\n        end\n    end\n    return boredoms\nend", " \
    \   boredoms = 0\n    for sentence in split(S, r\"[.?!]\")\n        if startswith(sentence,\
    \ \"I\")\n            boredoms += 1\n        end\n    end\n    return boredoms\n\
    end", "    boredoms = 0\n    for sentence in split(S, \".\")\n        if startswith(sentence,\
    \ \"I\")\n            boredoms += 1\n        end\n    end\n    return boredoms\n\
    end", "    boredoms = 0\n    for sentence in split(S, r\"[.?!]\")\n        if\
    \ startswith(sentence, \"I\")\n            boredoms += 1\n        end\n    end\n\
    \    return boredoms\nend", "    return length(split(S, r\"\\.\")) - 1\nend",
  "    return length(split(S, r\"\\bI\\b\")) - 1\nend", "    boredoms = 0\n    for\
    \ sentence in split(S, r\"[.?!]\")\n        if startswith(sentence, \"I\")\n \
    \           boredoms += 1\n        end\n    end\n    return boredoms\nend", " \
    \   boredoms = 0\n    for word in split(S, r\"[.?!]\")\n        if startswith(word,\
    \ \"I\")\n            boredoms += 1\n        end\n    end\n    return boredoms\n\
    end", "    count = 0\n    for i in 1:length(S)\n        if S[i] == 'I'\n     \
    \       count += 1\n        end\n    end\n    return count\nend", "    return\
    \ count(S, \"I\")\nend", "    return count(x->x==\"I\", split(S, r\"[.?!]\"))\n\
    end", "    boredoms = 0\n    for word in split(S, \" \")\n        if word == \"\
    I\"\n            boredoms += 1\n        end\n    end\n    return boredoms\nend",
  "    boredoms = 0\n    for word in split(S, r\"[.?!]\")\n        if startswith(word,\
    \ \"I\")\n            boredoms += 1\n        end\n    end\n    return boredoms\n\
    end", "    boredoms = 0\n    for word in split(S, r\"[.?!]\")\n        if word[1]\
    \ == 'I'\n            boredoms += 1\n        end\n    end\n    return boredoms\n\
    end", "    # your code goes here\n    return 0\nend", "    boredoms = 0\n    for\
    \ word in split(S, r\"[.?!]\")\n        if first(split(word)) == \"I\"\n     \
    \       boredoms += 1\n        end\n    end\n    return boredoms\nend", "    boredoms\
    \ = 0\n    sentences = split(S, ['.', '?', '!'])\n    for sentence in sentences\n\
    \        if startswith(sentence, \"I\")\n            boredoms += 1\n        end\n\
    \    end\n    return boredoms\nend", "    count = 0\n    for i in 1:length(S)\n\
    \        if S[i] == 'I'\n            count += 1\n        end\n    end\n    return\
    \ count\nend", "    return count(S, \"I\")\nend", "    boredoms = 0\n    for sentence\
    \ in split(S, r\"[.?!]\")\n        if startswith(sentence, \"I\")\n          \
    \  boredoms += 1\n        end\n    end\n    return boredoms\nend", "    boredoms\
    \ = 0\n    for sentence in split(S, r\"[.?!]\")\n        if startswith(sentence,\
    \ \"I\")\n            boredoms += 1\n        end\n    end\n    return boredoms\n\
    end", "    boredoms = 0\n    for word in split(S, r\"[.?!]\")\n        if startswith(word,\
    \ \"I\")\n            boredoms += 1\n        end\n    end\n    return boredoms\n\
    end", "    return length(split(S, r\"\\bI\\b\")) - 1\nend", "    boredoms = 0\n\
    \    for sentence in split(S, r\"[.?!]\")\n        if startswith(sentence, \"\
    I\")\n            boredoms += 1\n        end\n    end\n    return boredoms\nend",
  "    boredoms = 0\n    for sentence in split(S, r\"[.?!]\")\n        if startswith(sentence,\
    \ \"I\")\n            boredoms += 1\n        end\n    end\n    return boredoms\n\
    end", "    n = 0\n    for s in split(S, \".\")\n        if s[1] == 'I'\n     \
    \       n += 1\n        end\n    end\n    return n\nend", "    count = 0\n   \
    \ for i in split(S, r\"[.?!]\")\n        if startswith(i, \"I\")\n           \
    \ count += 1\n        end\n    end\n    return count\nend", "    return count(S,\
    \ r\"I\\s\")\nend", "    return length(split(S, r\"\\.\")) - 1\nend", "    boredoms\
    \ = 0\n    for sentence in split(S, r\"[.?!]\")\n        if startswith(sentence,\
    \ \"I\")\n            boredoms += 1\n        end\n    end\n    return boredoms\n\
    end", "    boredoms = 0\n    for word in split(S, r\"[.?!]\")\n        if startswith(word,\
    \ \"I\")\n            boredoms += 1\n        end\n    end\n    return boredoms\n\
    end", "    boredoms = 0\n    for sentence in split(S, r\"[.?!]\")\n        if\
    \ startswith(sentence, \"I\")\n            boredoms += 1\n        end\n    end\n\
    \    return boredoms\nend", "    return count(x->x==\"I\", split(S, r\"[.?!]\"\
    ))\nend", "    return count(S, \"I\")\nend", "    return count(x->x==\"I\", split(S,\
    \ r\"\\.|\\?|\\!\"))\nend", "    return count(S, \"I\")\nend", "    boredoms =\
    \ 0\n    for sentence in split(S, r\"[.?!]\")\n        if startswith(sentence,\
    \ \"I\")\n            boredoms += 1\n        end\n    end\n    return boredoms\n\
    end", "    boredoms = 0\n    for word in split(S, \" \")\n        if word == \"\
    I\"\n            boredoms += 1\n        end\n    end\n    return boredoms\nend",
  "    return length(split(S, r\"I\")) - 1\nend", "    # your code here\nend", " \
    \   boredoms = 0\n    for word in split(S, r\"[.?!]\")\n        if startswith(word,\
    \ \"I\")\n            boredoms += 1\n        end\n    end\n    return boredoms\n\
    end", "    return count(S, \"I\")\nend", "    boredoms = 0\n    for sentence in\
    \ split(S, r\"[.?!]\")\n        if startswith(sentence, \"I\")\n            boredoms\
    \ += 1\n        end\n    end\n    return boredoms\nend", "    count = 0\n    for\
    \ word in split(S, r\"[.?!]\")\n        if startswith(word, \"I\")\n         \
    \   count += 1\n        end\n    end\n    return count\nend", "    return count(x->x==\"\
    I\", split(S, r\"[.?!]\"))\nend", "    count = 0\n    for i in 1:length(S)\n \
    \       if S[i] == 'I'\n            count += 1\n        end\n    end\n    return\
    \ count\nend", "    count = 0\n    for word in split(S, [\".\", \"?\", \"!\"])\n\
    \        if word[1] == 'I'\n            count += 1\n        end\n    end\n   \
    \ return count\nend", "    return count(S, \"I\")\nend", "    boredoms = 0\n \
    \   for word in split(S, r\"\\s+\")\n        if word == \"I\"\n            boredoms\
    \ += 1\n        end\n    end\n    return boredoms\nend", "    return count(x->x==\"\
    I\", split(S, r\"\\.|\\?|\\!\"))\nend", "    # your code here\nend", "    count\
    \ = 0\n    for i in 1:length(S)\n        if S[i] == 'I'\n            count +=\
    \ 1\n        end\n    end\n    return count\nend", "    # Count the number of\
    \ boredoms in the string S.\n    # A boredom is a sentence that starts with the\
    \ word \"I\".\n    # Sentences are delimited by '.', '?' or '!'.\n    # For example:\n\
    \    #     \"I am bored. I am not.\" -> 2\n    #     \"I am not bored. I am not.\"\
    \ -> 1\n    #     \"I am not bored. I am not!\" -> 1\n    #     \"I am not bored.\
    \ I am not?\" -> 1\n    #     \"I am not bored. I am not! I am not?\" -> 2\n \
    \   #     \"I am not bored. I am not! I am not? I am not.\" -> 3\n    #     \"\
    I am not bored. I am not! I am not? I am not. I am not.\" -> 4\n    #     \"I\
    \ am not bored. I am not! I am not? I am not. I am not. I am not.\" -> 5\n   \
    \ #     \"I am not bored. I am not! I am not? I am not. I am not. I am not. I\
    \ am not.\" -> 6\n    #     \"I am not bored. I am not! I am not? I am not. I\
    \ am not. I am not. I am not. I am not.\" -> 7\n    #     \"I am not bored. I\
    \ am not! I am not? I am not. I am not. I am not. I am not. I am not. I am not.\"\
    \ -> 8\n    #     \"I am not bored. I am not! I am not? I am not. I am not. I\
    \ am not. I am not. I am not. I am not. I am not.\" -> 9\n    #     \"I am not\
    \ bored. I am not! I am not? I am not. I am not. I am not. I am not. I am not.\
    \ I am not. I am not. I am not.\" -> 10\n    #     \"I am not bored. I am not!\
    \ I am not? I am not. I am not. I am not. I am not. I am not. I am not. I am not.\
    \ I am not. I am not.\" -> 11\n    #     \"I am not bored. I am not! I", "   \
    \ boredoms = 0\n    for word in split(S, r\"[.?!]\")\n        if word[1] == 'I'\n\
    \            boredoms += 1\n        end\n    end\n    return boredoms\nend", " \
    \   return count(S, \"I\")\nend", "    return count(s -> s == \"I\", split(S,\
    \ r\"[.?!]\"))\nend", "    boredoms = 0\n    for word in split(S, r\"[.?!]\")\n\
    \        if startswith(word, \"I\")\n            boredoms += 1\n        end\n\
    \    end\n    return boredoms\nend", "    return count(x->x==\"I\", split(S, r\"\
    [.?!]\"))\nend", "    boredoms = 0\n    for word in split(S, r\"[.?!]\")\n   \
    \     if word[1] == 'I'\n            boredoms += 1\n        end\n    end\n   \
    \ return boredoms\nend", "    return count(x->x==\"I\", split(S, r\"\\.|\\?|\\\
    !\"))\nend", "    boredoms = 0\n    for sentence in split(S, r\"[.?!]\")\n   \
    \     if startswith(sentence, \"I\")\n            boredoms += 1\n        end\n\
    \    end\n    return boredoms\nend", "    return length(split(S, r\"I\")) - 1\n\
    end", "    return sum(1 for s in split(S, r\"[.?!]\") if startswith(s, \"I\"))\n\
    end", "    # your code here\nend", "    return count(S, r\"I\")\nend", "    boredoms\
    \ = 0\n    for sentence in split(S, r\"[.?!]\")\n        if startswith(sentence,\
    \ \"I\")\n            boredoms += 1\n        end\n    end\n    return boredoms\n\
    end", "    boredoms = 0\n    for word in split(S, \" \")\n        if word == \"\
    I\"\n            boredoms += 1\n        end\n    end\n    return boredoms\nend",
  "    boredoms = 0\n    for sentence in split(S, r\"[.?!]\")\n        if startswith(sentence,\
    \ \"I\")\n            boredoms += 1\n        end\n    end\n    return boredoms\n\
    end", "    count = 0\n    for i in 1:length(S)\n        if S[i] == 'I'\n     \
    \       count += 1\n        end\n    end\n    return count\nend", "    boredoms\
    \ = 0\n    for sentence in split(S, r\"[.?!]\")\n        if startswith(sentence,\
    \ \"I\")\n            boredoms += 1\n        end\n    end\n    return boredoms\n\
    end", "    boredoms = 0\n    for sentence in split(S, r\"[.!?]\")\n        if\
    \ startswith(sentence, \"I\")\n            boredoms += 1\n        end\n    end\n\
    \    return boredoms\nend", "    count = 0\n    for i in 1:length(S)\n       \
    \ if S[i] == 'I'\n            count += 1\n        end\n    end\n    return count\n\
    end", "    return length(split(S, r\"\\.\")) - 1\nend", "    boredoms = 0\n  \
    \  for sentence in split(S, r\"[.?!]\")\n        if startswith(sentence, \"I\"\
    )\n            boredoms += 1\n        end\n    end\n    return boredoms\nend",
  "    count = 0\n    for i in 1:length(S)\n        if S[i] == 'I'\n            count\
    \ += 1\n        end\n    end\n    return count\nend", "    boredoms = 0\n    for\
    \ sentence in split(S, r\"[.?!]\")\n        if startswith(sentence, \"I\")\n \
    \           boredoms += 1\n        end\n    end\n    return boredoms\nend", " \
    \   boredoms = 0\n    for word in split(S, r\"[.?!]\")\n        if startswith(word,\
    \ \"I\")\n            boredoms += 1\n        end\n    end\n    return boredoms\n\
    end", "    boredoms = 0\n    for sentence in split(S, r\"[.?!]\")\n        if\
    \ startswith(sentence, \"I\")\n            boredoms += 1\n        end\n    end\n\
    \    return boredoms\nend", "    boredoms = 0\n    for word in split(S, \" \"\
    )\n        if word == \"I\"\n            boredoms += 1\n        end\n    end\n\
    \    return boredoms\nend", "    boredoms = 0\n    for word in split(S, \" \"\
    )\n        if word == \"I\"\n            boredoms += 1\n        end\n    end\n\
    \    return boredoms\nend", "    boredoms = 0\n    for word in split(S, \" \"\
    )\n        if word == \"I\"\n            boredoms += 1\n        end\n    end\n\
    \    return boredoms\nend", "    count = 0\n    for s in split(S, ['.', '?', '!'])\n\
    \        if startswith(s, \"I\")\n            count += 1\n        end\n    end\n\
    \    return count\nend", "    boredoms = 0\n    for word in split(S, r\"[.?!]\"\
    )\n        if startswith(word, \"I\")\n            boredoms += 1\n        end\n\
    \    end\n    return boredoms\nend", "    boredoms = 0\n    for word in split(S,\
    \ \" \")\n        if word == \"I\"\n            boredoms += 1\n        end\n \
    \   end\n    return boredoms\nend", "    return count(S, \"I\")\nend", "    count\
    \ = 0\n    for s in split(S, ['.', '?', '!'])\n        if s[1] == 'I'\n      \
    \      count += 1\n        end\n    end\n    return count\nend", "    boredoms\
    \ = 0\n    for sentence in split(S, r\"[.?!]\")\n        if startswith(sentence,\
    \ \"I\")\n            boredoms += 1\n        end\n    end\n    return boredoms\n\
    end", "    boredoms = 0\n    sentences = split(S, [\".\", \"?\", \"!\"])\n   \
    \ for sentence in sentences\n        if sentence[1] == 'I'\n            boredoms\
    \ += 1\n        end\n    end\n    return boredoms\nend", "    # your code here\n\
    end", "    boredoms = 0\n    for word in split(S, ['.', '?', '!'])\n        if\
    \ word[1] == 'I'\n            boredoms += 1\n        end\n    end\n    return\
    \ boredoms\nend", "    boredoms = 0\n    for word in split(S, r\"[.?!]\")\n  \
    \      if startswith(word, \"I\")\n            boredoms += 1\n        end\n  \
    \  end\n    return boredoms\nend", "    return length(split(S, \"I\")) - 1\nend",
  "    boredoms = 0\n    for word in split(S, ['.', '?', '!'])\n        if word[1]\
    \ == 'I'\n            boredoms += 1\n        end\n    end\n    return boredoms\n\
    end", "    return count(x->x==\"I\", split(S, r\"[.?!]\"))\nend", "    boredoms\
    \ = 0\n    for sentence in split(S, r\"[.?!]\")\n        if startswith(sentence,\
    \ \"I\")\n            boredoms += 1\n        end\n    end\n    return boredoms\n\
    end", "    count = 0\n    for i in 1:length(S)\n        if S[i] == 'I'\n     \
    \       count += 1\n        end\n    end\n    return count\nend", "    return\
    \ count(x->x==\"I\", split(S, r\"[.?!]\"))\nend", "    # your code here\nend",
  "    boredoms = 0\n    for word in split(S, r\"[.?!]\")\n        if startswith(word,\
    \ \"I\")\n            boredoms += 1\n        end\n    end\n    return boredoms\n\
    end", "    # your code here\n    return 0\nend", "    boredoms = 0\n    for sentence\
    \ in split(S, r\"[.?!]\")\n        if startswith(sentence, \"I\")\n          \
    \  boredoms += 1\n        end\n    end\n    return boredoms\nend", "    return\
    \ count(s -> s[1] == 'I', split(S, r\"[.?!]\"))\nend", "    boredoms = 0\n   \
    \ for word in split(S, r\"[.?!]\")\n        if word[1] == 'I'\n            boredoms\
    \ += 1\n        end\n    end\n    return boredoms\nend", "    boredoms = 0\n \
    \   for sentence in split(S, r\"[.?!]\")\n        if startswith(sentence, \"I\"\
    )\n            boredoms += 1\n        end\n    end\n    return boredoms\nend",
  "    count = 0\n    for i in 1:length(S)\n        if S[i] == 'I'\n            count\
    \ += 1\n        end\n    end\n    return count\nend", "    return count(x->x==\"\
    I\",split(S,\".!?\"))\nend", "    return length(split(S, r\"I \")) - 1\nend",
  "    return count(S, r\"I\")\nend", "    return count(x->x==\"I\", split(S, r\"\\\
    .|\\?|\\!\"))\nend", "    return length(split(S, r\"I\")) - 1\nend", "    return\
    \ length(split(S, r\"I\")) - 1\nend", "    # your code here\nend", "    return\
    \ count(eachindex(S), i -> S[i] == 'I')\nend", "    boredoms = 0\n    for sentence\
    \ in split(S, r\"[.?!]\")\n        if startswith(sentence, \"I\")\n          \
    \  boredoms += 1\n        end\n    end\n    return boredoms\nend", "    boredoms\
    \ = 0\n    for sentence in split(S, r\"[.?!]\")\n        if startswith(sentence,\
    \ \"I\")\n            boredoms += 1\n        end\n    end\n    return boredoms\n\
    end", "    # your code here\n    return 0\nend", "    boredoms = 0\n    for word\
    \ in split(S, \" \")\n        if word == \"I\"\n            boredoms += 1\n  \
    \      end\n    end\n    return boredoms\nend", "    boredoms = 0\n    for sentence\
    \ in split(S, r\"[.?!]\")\n        if startswith(sentence, \"I\")\n          \
    \  boredoms += 1\n        end\n    end\n    return boredoms\nend", "    boredoms\
    \ = 0\n    for word in split(S, r\"[.?!]\")\n        if startswith(word, \"I\"\
    )\n            boredoms += 1\n        end\n    end\n    return boredoms\nend",
  "    boredoms = 0\n    for word in split(S, ['.', '?', '!'])\n        if word[1]\
    \ == 'I'\n            boredoms += 1\n        end\n    end\n    return boredoms\n\
    end", "    return count(s -> s[1] == 'I', split(S, r\"[.?!]\"))\nend", "    #\
    \ your code here\nend", "    # split the string into sentences\n    sentences\
    \ = split(S, r\"[.?!]\")\n    # count the number of sentences that start with\
    \ \"I\"\n    return sum(s -> startswith(s, \"I\"), sentences)\nend", "    count\
    \ = 0\n    for word in split(S, r\"[.?!]\")\n        if startswith(word, \"I\"\
    )\n            count += 1\n        end\n    end\n    return count\nend", "   \
    \ boredoms = 0\n    for sentence in split(S, r\"[.?!]\")\n        if startswith(sentence,\
    \ \"I\")\n            boredoms += 1\n        end\n    end\n    return boredoms\n\
    end", "    boredoms = 0\n    for word in split(S, r\"[.?!]\")\n        if word[1]\
    \ == 'I'\n            boredoms += 1\n        end\n    end\n    return boredoms\n\
    end", "    boredoms = 0\n    for word in split(S, \" \")\n        if word == \"\
    I\"\n            boredoms += 1\n        end\n    end\n    return boredoms\nend",
  "    return count(S, \"I\")\nend", "    count = 0\n    for i in 1:length(S)\n  \
    \      if S[i] == 'I'\n            count += 1\n        end\n    end\n    return\
    \ count\nend", "    boredoms = 0\n    for word in split(S, ['.', '?', '!'])\n\
    \        if word[1] == 'I'\n            boredoms += 1\n        end\n    end\n\
    \    return boredoms\nend", "    boredoms = 0\n    for word in split(S, r\"[.?!]\"\
    )\n        if startswith(word, \"I\")\n            boredoms += 1\n        end\n\
    \    end\n    return boredoms\nend", "    return count(x->x==\"I\", split(S, r\"\
    [.?!]\"))\nend", "    boredoms = 0\n    for word in split(S, r\"[.?!]\")\n   \
    \     if startswith(word, \"I\")\n            boredoms += 1\n        end\n   \
    \ end\n    return boredoms\nend", "    # your code here\nend", "    count = 0\n\
    \    for i in 1:length(S)\n        if S[i] == 'I'\n            count += 1\n  \
    \      end\n    end\n    return count\nend", "    boredoms = 0\n    for word in\
    \ split(S, \" \")\n        if word == \"I\"\n            boredoms += 1\n     \
    \   end\n    end\n    return boredoms\nend", "    boredoms = 0\n    for word in\
    \ split(S, r\"[.?!]\")\n        if startswith(word, \"I\")\n            boredoms\
    \ += 1\n        end\n    end\n    return boredoms\nend", "    boredoms = 0\n \
    \   for word in split(S, r\"[.?!]\")\n        if startswith(word, \"I\")\n   \
    \         boredoms += 1\n        end\n    end\n    return boredoms\nend", "  \
    \  # your code here\nend", "    boredoms = 0\n    for word in split(S, r\"[.?!]\"\
    )\n        if word[1] == 'I'\n            boredoms += 1\n        end\n    end\n\
    \    return boredoms\nend", "    boredoms = 0\n    for word in split(S, \" \"\
    )\n        if word[1] == 'I'\n            boredoms += 1\n        end\n    end\n\
    \    return boredoms\nend", "    boredoms = 0\n    sentences = split(S, ['.',\
    \ '?', '!'])\n    for sentence in sentences\n        if startswith(sentence, \"\
    I\")\n            boredoms += 1\n        end\n    end\n    return boredoms\nend",
  "    count = 0\n    for word in split(S, r\"[.!?]\")\n        if startswith(word,\
    \ \"I\")\n            count += 1\n        end\n    end\n    return count\nend",
  "    return count(x->x==\"I\", split(S, r\"\\.|\\?|\\!\"))\nend", "    boredoms\
    \ = 0\n    for word in split(S, r\"[.?!]\")\n        if startswith(word, \"I\"\
    )\n            boredoms += 1\n        end\n    end\n    return boredoms\nend",
  "    boredoms = 0\n    for sentence in split(S, r\"[.?!]\")\n        if startswith(sentence,\
    \ \"I\")\n            boredoms += 1\n        end\n    end\n    return boredoms\n\
    end", "    boredoms = 0\n    for sentence in split(S, r\"[.?!]\")\n        if\
    \ startswith(sentence, \"I\")\n            boredoms += 1\n        end\n    end\n\
    \    return boredoms\nend", "    return count(x->x==\"I\",split(S,\".!?\"))\n\
    end", "    boredoms = 0\n    for sentence in split(S, r\"[.?!]\")\n        if\
    \ startswith(sentence, \"I\")\n            boredoms += 1\n        end\n    end\n\
    \    return boredoms\nend", "    count = 0\n    for i in 1:length(S)\n       \
    \ if S[i] == 'I'\n            count += 1\n        end\n    end\n    return count\n\
    end", "    boredoms = 0\n    for word in split(S, ['.', '?', '!'])\n        if\
    \ word[1] == 'I'\n            boredoms += 1\n        end\n    end\n    return\
    \ boredoms\nend", "    words = split(S, r\"\\s+\")\n    boredoms = 0\n    for\
    \ word in words\n        if word == \"I\"\n            boredoms += 1\n       \
    \ end\n    end\n    return boredoms\nend", "    boredoms = 0\n    for word in\
    \ split(S, r\"[.?!]\")\n        if word[1] == 'I'\n            boredoms += 1\n\
    \        end\n    end\n    return boredoms\nend", "    boredoms = 0\n    for word\
    \ in split(S, r\"[.?!]\")\n        if startswith(word, \"I\")\n            boredoms\
    \ += 1\n        end\n    end\n    return boredoms\nend", "    return count(S,\
    \ \"I\")\nend", "    # your code here\nend", "    boredoms = 0\n    for word in\
    \ split(S, r\"[.?!]\")\n        if startswith(word, \"I\")\n            boredoms\
    \ += 1\n        end\n    end\n    return boredoms\nend", "    boredoms = 0\n \
    \   for word in split(S, r\"[.?!]\")\n        if startswith(word, \"I\")\n   \
    \         boredoms += 1\n        end\n    end\n    return boredoms\nend", "  \
    \  return length(split(S, \"I\")) - 1\nend", "    boredoms = 0\n    for word in\
    \ split(S, \" \")\n        if word == \"I\"\n            boredoms += 1\n     \
    \   end\n    end\n    return boredoms\nend", "    boredoms = 0\n    for word in\
    \ split(S, r\"[.?!]\")\n        if startswith(word, \"I\")\n            boredoms\
    \ += 1\n        end\n    end\n    return boredoms\nend", "    boredoms = 0\n \
    \   for word in split(S, r\"[.?!]\")\n        if word[1] == 'I'\n            boredoms\
    \ += 1\n        end\n    end\n    return boredoms\nend", "    return length(split(S,\
    \ r\"\\bI\\b\")) - 1\nend", "    return count(x->x==\"I\", split(S, r\"[.?!]\"\
    ))\nend", "    count = 0\n    for i in 1:length(S)\n        if S[i] == 'I'\n \
    \           count += 1\n        end\n    end\n    return count\nend", "    return\
    \ count(s -> s[1] == 'I', split(S, r\"[.?!]\"))\nend", "    count = 0\n    for\
    \ i in 1:length(S)\n        if S[i] == 'I'\n            count += 1\n        end\n\
    \    end\n    return count\nend", "    count = 0\n    for word in split(S, \"\
    \ \")\n        if word == \"I\"\n            count += 1\n        end\n    end\n\
    \    return count\nend", "    # your code here\nend", "    boredoms = 0\n    for\
    \ word in split(S, \" \")\n        if word == \"I\"\n            boredoms += 1\n\
    \        end\n    end\n    return boredoms\nend", "    boredoms = 0\n    for word\
    \ in split(S, r\"[.?!]\")\n        if word[1] == 'I'\n            boredoms +=\
    \ 1\n        end\n    end\n    return boredoms\nend", "    boredoms = 0\n    for\
    \ sentence in split(S, r\"[.?!]\")\n        if startswith(sentence, \"I\")\n \
    \           boredoms += 1\n        end\n    end\n    return boredoms\nend", " \
    \   boredoms = 0\n    for word in split(S, r\"[\\.\\?\\!]\")\n        if startswith(word,\
    \ \"I\")\n            boredoms += 1\n        end\n    end\n    return boredoms\n\
    end", "    boredoms = 0\n    for sentence in split(S, r\"[.?!]\")\n        if\
    \ startswith(sentence, \"I\")\n            boredoms += 1\n        end\n    end\n\
    \    return boredoms\nend", "    # your code here\nend", "    boredoms = 0\n \
    \   for word in split(S, r\"[.?!]\")\n        if word[1] == 'I'\n            boredoms\
    \ += 1\n        end\n    end\n    return boredoms\nend"]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

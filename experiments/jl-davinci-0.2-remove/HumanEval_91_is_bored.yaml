name: HumanEval_91_is_bored
language: jl
prompt: "\"\"\"\n    You'll be given a string of words, and your task is to count\
  \ the number\n    of boredoms. A boredom is a sentence that starts with the word\
  \ \"I\".\n    Sentences are delimited by '.', '?' or '!'.\n   \n    For example:\n\
  \            \"\"\"\nfunction is_bored(S::String)::Int64 \n"
tests: "using Test\n\n@testset begin\n\ncandidate = is_bored;\n\t@test(candidate(\"\
  Hello world\") == 0)\n\t@test(candidate(\"Is the sky blue?\") == 0)\n\t@test(candidate(\"\
  I love It !\") == 1)\n\t@test(candidate(\"bIt\") == 0)\n\t@test(candidate(\"I feel\
  \ good today. I will be productive. will kill It\") == 2)\n\t@test(candidate(\"\
  You and I are going for a walk\") == 0)\nend\n"
completions: ["    return count(x->x==\"I\", split(S, r\"[.?!]\"))\nend", "    boredoms\
    \ = 0\n    sentences = split(S, \".\")\n    for sentence in sentences\n      \
    \  words = split(sentence, \" \")\n        if words[1] == \"I\"\n            boredoms\
    \ += 1\n        end\n    end\n    return boredoms\nend", "    count = 0\n    for\
    \ i in 1:length(S)\n        if S[i] == 'I'\n            count += 1\n        end\n\
    \    end\n    return count\nend", "    # your code here\nend", "    boredoms =\
    \ 0\n    for word in split(S, r\"\\s\")\n        if word == \"I\"\n          \
    \  boredoms += 1\n        end\n    end\n    return boredoms\nend", "    count\
    \ = 0\n    for word in split(S, r\"[.?!]\")\n        if startswith(word, \"I\"\
    )\n            count += 1\n        end\n    end\n    return count\nend", "   \
    \ boredoms = 0\n    for word in split(S, \" \")\n        if word == \"I\"\n  \
    \          boredoms += 1\n        end\n    end\n    return boredoms\nend", " \
    \   return length(split(S, r\"\\bI\\b\")) - 1\nend", "    boredoms = 0\n    for\
    \ sentence in split(S, r\"[.?!]\")\n        if startswith(sentence, \"I\")\n \
    \           boredoms += 1\n        end\n    end\n    return boredoms\nend", " \
    \   boredoms = 0\n    for word in split(S, r\"\\W+\")\n        if word == \"I\"\
    \n            boredoms += 1\n        end\n    end\n    return boredoms\nend",
  "    return length(split(S, \"I\")) - 1\nend", "    boredoms = 0\n    for word in\
    \ split(S, \" \")\n        if word == \"I\"\n            boredoms += 1\n     \
    \   end\n    end\n    return boredoms\nend", "    boredoms = 0\n    for word in\
    \ split(S, r\"[.?!]\")\n        if word[1] == 'I'\n            boredoms += 1\n\
    \        end\n    end\n    return boredoms\nend", "    boredoms = 0\n    for word\
    \ in split(S, r\"[\\.\\?\\!]\")\n        if word[1] == 'I'\n            boredoms\
    \ += 1\n        end\n    end\n    return boredoms\nend", "    boredoms = 0\n \
    \   for sentence in split(S, r\"[.?!]\")\n        if startswith(sentence, \"I\"\
    )\n            boredoms += 1\n        end\n    end\n    return boredoms\nend",
  "    # your code here\nend", "    boredoms = 0\n    for sentence in split(S, r\"\
    [.?!]\")\n        if startswith(sentence, \"I\")\n            boredoms += 1\n\
    \        end\n    end\n    return boredoms\nend", "    boredoms = 0\n    for word\
    \ in split(S, r\"[.?!]\")\n        if startswith(word, \"I\")\n            boredoms\
    \ += 1\n        end\n    end\n    return boredoms\nend", "    boredoms = 0\n \
    \   for word in split(S, r\"[.?!]\")\n        if word[1] == 'I'\n            boredoms\
    \ += 1\n        end\n    end\n    return boredoms\nend", "    # Split the string\
    \ into sentences\n    sentences = split(S, r\"[.?!]\")\n    # Count the number\
    \ of sentences that start with \"I\"\n    count = 0\n    for sentence in sentences\n\
    \        if startswith(sentence, \"I\")\n            count += 1\n        end\n\
    \    end\n    return count\nend", "    # your code goes here\nend", "    # count\
    \ the number of boredoms in the string S\n    # a boredom is a sentence that starts\
    \ with the word \"I\"\n    # sentences are delimited by '.', '?' or '!'\n    #\
    \ for example:\n    # is_bored(\"I am bored.\") == 1\n    # is_bored(\"I am bored.\
    \ I am bored. I am bored.\") == 3\n    # is_bored(\"I am bored! I am bored? I\
    \ am bored.\") == 3\n    # is_bored(\"I am bored. I am not bored. I am bored.\"\
    ) == 2\n    # is_bored(\"I am bored. I am not bored. I am bored. I am not bored.\
    \ I am bored.\") == 3\n    # is_bored(\"I am bored. I am not bored. I am bored.\
    \ I am not bored. I am bored. I am not bored. I am bored.\") == 4\n    # is_bored(\"\
    I am bored. I am not bored. I am bored. I am not bored. I am bored. I am not bored.\
    \ I am bored. I am not bored. I am bored.\") == 5\n    # is_bored(\"I am bored.\
    \ I am not bored. I am bored. I am not bored. I am bored. I am not bored. I am\
    \ bored. I am not bored. I am bored. I am not bored. I am bored.\") == 6\n   \
    \ # is_bored(\"I am bored. I am not bored. I am bored. I am not bored. I am bored.\
    \ I am not bored. I am bored. I am not bored. I am bored. I am not bored. I am\
    \ bored. I am not bored. I am bored.\") == 7\n    # is_bored(\"I am bored. I am\
    \ not bored. I am bored. I am not bored. I am bored. I am not bored. I am bored.\
    \ I am not bored. I am bored. I am not bored. I am bored. I am not bored. I am\
    \ bored. I am not bored. I am bored.\") == 8\n    # is_bored(\"I am bored. I am\
    \ not bored. I am bored. I am not bored. I am bored. I am not bored. I am bored.\
    \ I am not bored. I am bored. I am not bored.", "    boredoms = 0\n    for word\
    \ in split(S, r\"[.?!]\")\n        if startswith(word, \"I\")\n            boredoms\
    \ += 1\n        end\n    end\n    return boredoms\nend", "    return count(s ->\
    \ s == \"I\", split(S, r\"[.?!]\"))\nend", "    boredoms = 0\n    for sentence\
    \ in split(S, r\"\\.|\\?|!\")\n        if startswith(sentence, \"I\")\n      \
    \      boredoms += 1\n        end\n    end\n    return boredoms\nend", "    return\
    \ count(x->x==\"I\", split(S, r\"\\.|\\?|\\!\"))\nend", "    boredoms = 0\n  \
    \  for word in split(S, [\".\", \"?\", \"!\"])\n        if word[1] == 'I'\n  \
    \          boredoms += 1\n        end\n    end\n    return boredoms\nend", " \
    \   boredoms = 0\n    for sentence in split(S, r\"[.?!]\")\n        if startswith(sentence,\
    \ \"I\")\n            boredoms += 1\n        end\n    end\n    return boredoms\n\
    end", "    boredoms = 0\n    for word in split(S, r\"[.?!]\")\n        if word[1]\
    \ == 'I'\n            boredoms += 1\n        end\n    end\n    return boredoms\n\
    end", "    boredoms = 0\n    for sentence in split(S, \".\")\n        if startswith(sentence,\
    \ \"I\")\n            boredoms += 1\n        end\n    end\n    return boredoms\n\
    end", "    return count(x->x==\"I\", split(S, r\"[.?!]\"))\nend", "    return\
    \ count(s->s[1]=='I', split(S, r\"[.?!]\"))\nend", "    boredoms = 0\n    for\
    \ sentence in split(S, r\"[.?!]\")\n        if startswith(sentence, \"I\")\n \
    \           boredoms += 1\n        end\n    end\n    return boredoms\nend", " \
    \   return count(S, \"I\")\nend", "    boredoms = 0\n    for sentence in split(S,\
    \ r\"[.?!]\")\n        if startswith(sentence, \"I\")\n            boredoms +=\
    \ 1\n        end\n    end\n    return boredoms\nend", "    boredoms = 0\n    for\
    \ sentence in split(S, r\"[.?!]\")\n        if startswith(sentence, \"I\")\n \
    \           boredoms += 1\n        end\n    end\n    return boredoms\nend", " \
    \   boredoms = 0\n    for word in split(S, ['.', '?', '!'])\n        if word[1]\
    \ == 'I'\n            boredoms += 1\n        end\n    end\n    return boredoms\n\
    end", "    boredoms = 0\n    for word in split(S, ['.', '?', '!'])\n        if\
    \ word[1] == 'I'\n            boredoms += 1\n        end\n    end\n    return\
    \ boredoms\nend", "    boredoms = 0\n    for sentence in split(S, r\"[.?!]\")\n\
    \        if startswith(sentence, \"I\")\n            boredoms += 1\n        end\n\
    \    end\n    return boredoms\nend", "    boredoms = 0\n    for sentence in split(S,\
    \ r\"[.?!]\")\n        if startswith(sentence, \"I\")\n            boredoms +=\
    \ 1\n        end\n    end\n    return boredoms\nend", "    boredoms = 0\n    for\
    \ sentence in split(S, r\"[.?!]\")\n        if startswith(sentence, \"I\")\n \
    \           boredoms += 1\n        end\n    end\n    return boredoms\nend", " \
    \   boredoms = 0\n    for sentence in split(S, r\"[.?!]\")\n        if startswith(sentence,\
    \ \"I\")\n            boredoms += 1\n        end\n    end\n    return boredoms\n\
    end", "    boredoms = 0\n    for word in split(S, ['.', '?', '!'])\n        if\
    \ word[1] == 'I'\n            boredoms += 1\n        end\n    end\n    return\
    \ boredoms\nend", "    boredoms = 0\n    for sentence in split(S, r\"[.?!]\")\n\
    \        if startswith(sentence, \"I\")\n            boredoms += 1\n        end\n\
    \    end\n    return boredoms\nend", "    # split the string into sentences\n\
    \    sentences = split(S, r\"[.?!]\")\n    boredoms = 0\n    for sentence in sentences\n\
    \        # split the sentence into words\n        words = split(sentence)\n  \
    \      if words[1] == \"I\"\n            boredoms += 1\n        end\n    end\n\
    \    return boredoms\nend", "    return length(split(S, r\"\\bI\\b\")) - 1\nend",
  "    boredoms = 0\n    for sentence in split(S, r\"[.?!]\")\n        if startswith(sentence,\
    \ \"I\")\n            boredoms += 1\n        end\n    end\n    return boredoms\n\
    end", "    boredoms = 0\n    for sentence in split(S, r\"[.?!]\")\n        if\
    \ startswith(sentence, \"I\")\n            boredoms += 1\n        end\n    end\n\
    \    return boredoms\nend", "    boredoms = 0\n    for sentence in split(S, r\"\
    [.?!]\")\n        if startswith(sentence, \"I\")\n            boredoms += 1\n\
    \        end\n    end\n    return boredoms\nend", "    boredoms = 0\n    for word\
    \ in split(S, r\"[.?!]\")\n        if startswith(word, \"I\")\n            boredoms\
    \ += 1\n        end\n    end\n    return boredoms\nend", "    return count(S,\
    \ \"I\")\nend", "    boredoms = 0\n    for s in split(S, \".\")\n        if s[1]\
    \ == 'I'\n            boredoms += 1\n        end\n    end\n    return boredoms\n\
    end", "    count = 0\n    for word in split(S, \" \")\n        if word == \"I\"\
    \n            count += 1\n        end\n    end\n    return count\nend", "    return\
    \ length(split(S, \"I\")) - 1\nend", "    boredoms = 0\n    for word in split(S,\
    \ \" \")\n        if word == \"I\"\n            boredoms += 1\n        end\n \
    \   end\n    return boredoms\nend", "    boredoms = 0\n    for word in split(S,\
    \ r\"[.?!]\")\n        if startswith(word, \"I\")\n            boredoms += 1\n\
    \        end\n    end\n    return boredoms\nend", "    # your code here\nend",
  "    count = 0\n    for i in 1:length(S)\n        if S[i] == 'I'\n            count\
    \ += 1\n        end\n    end\n    return count\nend", "    boredoms = 0\n    for\
    \ word in split(S, r\"[.?!]\")\n        if word[1] == 'I'\n            boredoms\
    \ += 1\n        end\n    end\n    return boredoms\nend", "    return length(split(S,\
    \ r\"I\")) - 1\nend", "    boredoms = 0\n    for word in split(S, ['.', '?', '!'])\n\
    \        if word[1] == 'I'\n            boredoms += 1\n        end\n    end\n\
    \    return boredoms\nend", "    # your code goes here\nend", "    return count(S,\
    \ \"I\")\nend", "    # Split the string into sentences\n    sentences = split(S,\
    \ r\"[.?!]\")\n    # Count the number of sentences that start with \"I\"\n   \
    \ return count(s -> startswith(s, \"I\"), sentences)\nend", "    boredoms = 0\n\
    \    for sentence in split(S, r\"[.?!]\")\n        if startswith(sentence, \"\
    I\")\n            boredoms += 1\n        end\n    end\n    return boredoms\nend",
  "    count = 0\n    for i in 1:length(S)\n        if S[i] == 'I'\n            count\
    \ += 1\n        end\n    end\n    return count\nend", "    boredoms = 0\n    for\
    \ word in split(S, r\"[.?!]\")\n        if word[1] == 'I'\n            boredoms\
    \ += 1\n        end\n    end\n    return boredoms\nend", "    return count(x->x==\"\
    I\", split(S, r\"[.?!]\"))\nend", "    boredoms = 0\n    for sentence in split(S,\
    \ r\"[.?!]\")\n        if startswith(sentence, \"I\")\n            boredoms +=\
    \ 1\n        end\n    end\n    return boredoms\nend", "    boredoms = 0\n    for\
    \ word in split(S, r\"[.?!]\")\n        if occursin(\"I\", word)\n           \
    \ boredoms += 1\n        end\n    end\n    return boredoms\nend", "    words =\
    \ split(S, \" \")\n    boredoms = 0\n    for i in 1:length(words)\n        if\
    \ words[i] == \"I\"\n            boredoms += 1\n        end\n    end\n    return\
    \ boredoms\nend", "    boredoms = 0\n    for word in split(S, r\"\\s+\")\n   \
    \     if word == \"I\"\n            boredoms += 1\n        end\n    end\n    return\
    \ boredoms\nend", "    return count(s -> s[1] == 'I', split(S, r\"[.?!]\"))\n\
    end", "    return count(S, \"I\")\nend", "    count = 0\n    for i in 1:length(S)\n\
    \        if S[i] == 'I'\n            count += 1\n        end\n    end\n    return\
    \ count\nend", "    # your code goes here\n    return 0\nend", "    boredoms =\
    \ 0\n    for word in split(S)\n        if word == \"I\"\n            boredoms\
    \ += 1\n        end\n    end\n    return boredoms\nend", "    # your code here\n\
    end", "    # your code here\nend", "    boredoms = 0\n    for word in split(S,\
    \ \" \")\n        if word == \"I\"\n            boredoms += 1\n        end\n \
    \   end\n    return boredoms\nend", "    count = 0\n    for word in split(S, ['.',\
    \ '?', '!'])\n        if word[1] == 'I'\n            count += 1\n        end\n\
    \    end\n    return count\nend", "    return length(split(S, r\"\\bI\\b\")) -\
    \ 1\nend", "    boredoms = 0\n    for sentence in split(S, r\"[.?!]\")\n     \
    \   if startswith(sentence, \"I\")\n            boredoms += 1\n        end\n \
    \   end\n    return boredoms\nend", "    return length(split(S, r\"I\")) - 1\n\
    end", "    boredoms = 0\n    for word in split(S, r\"[.?!]\")\n        if startswith(word,\
    \ \"I\")\n            boredoms += 1\n        end\n    end\n    return boredoms\n\
    end", "    return length(split(S, r\"I\")) - 1\nend", "    # your code here\n\
    end", "    count = 0\n    for word in split(S, \" \")\n        if word == \"I\"\
    \n            count += 1\n        end\n    end\n    return count\nend", "    return\
    \ count(S, \"I\")\nend", "    return count(s -> s[1] == 'I', split(S, r\"[.?!]\"\
    ))\nend", "    boredoms = 0\n    for word in split(S, r\"[.?!]\")\n        if\
    \ word[1] == 'I'\n            boredoms += 1\n        end\n    end\n    return\
    \ boredoms\nend", "    return length(split(S, \"I\")) - 1\nend", "    count =\
    \ 0\n    for i in 1:length(S)\n        if S[i] == 'I'\n            count += 1\n\
    \        end\n    end\n    return count\nend", "    boredoms = 0\n    for word\
    \ in split(S, \" \")\n        if word == \"I\"\n            boredoms += 1\n  \
    \      end\n    end\n    return boredoms\nend", "    boredoms = 0\n    for word\
    \ in split(S, ['.', '?', '!'])\n        if word[1] == 'I'\n            boredoms\
    \ += 1\n        end\n    end\n    return boredoms\nend", "    return count(x->x==\"\
    I\", split(S, r\"[.?!]\"))\nend", "    boredoms = 0\n    for sentence in split(S,\
    \ r\"[.?!]\")\n        if startswith(sentence, \"I\")\n            boredoms +=\
    \ 1\n        end\n    end\n    return boredoms\nend", "    # split the string\
    \ into sentences\n    sentences = split(S, ['.', '?', '!'])\n    # count the number\
    \ of sentences that start with \"I\"\n    count = 0\n    for sentence in sentences\n\
    \        if startswith(sentence, \"I\")\n            count += 1\n        end\n\
    \    end\n    return count\nend", "    return count(x->x==\"I\", split(S, r\"\
    [.?!]\"))\nend", "    return length(split(S, r\"I\"))-1\nend", "    count = 0\n\
    \    for i in 1:length(S)\n        if S[i] == 'I'\n            count += 1\n  \
    \      end\n    end\n    return count\nend", "    return count(s->s[1]=='I',split(S,r\"\
    [.?!]\"))\nend", "    boredoms = 0\n    for word in split(S)\n        if word\
    \ == \"I\"\n            boredoms += 1\n        end\n    end\n    return boredoms\n\
    end", "    count = 0\n    for i in 1:length(S)\n        if S[i] == 'I'\n     \
    \       count += 1\n        end\n    end\n    return count\nend", "    return\
    \ count(x->x[1]=='I',split(S,r\"[.?!]\"))\nend", "    return count(S, \"I\")\n\
    end", "    boredoms = 0\n    for word in split(S, r\"[.!?]\")\n        if startswith(word,\
    \ \"I\")\n            boredoms += 1\n        end\n    end\n    return boredoms\n\
    end", "    boredoms = 0\n    for sentence in split(S, r\"[.?!]\")\n        if\
    \ ismatch(r\"^I\", sentence)\n            boredoms += 1\n        end\n    end\n\
    \    return boredoms\nend", "    count = 0\n    for s in split(S, r\"[.?!]\")\n\
    \        if startswith(s, \"I\")\n            count += 1\n        end\n    end\n\
    \    return count\nend", "    boredoms = 0\n    for word in split(S, ['.', '?',\
    \ '!'])\n        if word[1] == 'I'\n            boredoms += 1\n        end\n \
    \   end\n    return boredoms\nend", "    return count(s->s==\"I\", split(S, r\"\
    \\.|\\?|\\!\"))\nend", "    boredoms = 0\n    for word in split(S, r\"[.?!]\"\
    )\n        if startswith(word, \"I\")\n            boredoms += 1\n        end\n\
    \    end\n    return boredoms\nend", "    boredoms = 0\n    for word in split(S,\
    \ r\"[.?!]\")\n        if word[1] == 'I'\n            boredoms += 1\n        end\n\
    \    end\n    return boredoms\nend", "    boredoms = 0\n    for word in split(S,\
    \ r\"[.?!]\")\n        if word[1] == 'I'\n            boredoms += 1\n        end\n\
    \    end\n    return boredoms\nend", "    boredoms = 0\n    for word in split(S,\
    \ r\"[.?!]\")\n        if startswith(word, \"I\")\n            boredoms += 1\n\
    \        end\n    end\n    return boredoms\nend", "    # your code here\nend",
  "    boredoms = 0\n    for word in split(S, r\"[.?!]\")\n        if word[1] == 'I'\n\
    \            boredoms += 1\n        end\n    end\n    return boredoms\nend", " \
    \   boredoms = 0\n    for word in split(S, ['.', '?', '!'])\n        if word[1]\
    \ == 'I'\n            boredoms += 1\n        end\n    end\n    return boredoms\n\
    end", "    boredoms = 0\n    for word in split(S, r\"[.?!]\")\n        if word[1]\
    \ == 'I'\n            boredoms += 1\n        end\n    end\n    return boredoms\n\
    end", "    count = 0\n    for s in split(S, ['.', '?', '!'])\n        if startswith(s,\
    \ \"I\")\n            count += 1\n        end\n    end\n    return count\nend",
  "    # your code here\nend", "    boredoms = 0\n    for word in split(S, r\"[.?!]\"\
    )\n        if word[1] == 'I'\n            boredoms += 1\n        end\n    end\n\
    \    return boredoms\nend", "    boredoms = 0\n    for sentence in split(S, r\"\
    [.?!]\")\n        if startswith(sentence, \"I\")\n            boredoms += 1\n\
    \        end\n    end\n    return boredoms\nend", "    boredoms = 0\n    for sentence\
    \ in split(S, r\"(?<=[.?!])\\s*\")\n        if startswith(sentence, \"I\")\n \
    \           boredoms += 1\n        end\n    end\n    return boredoms\nend", " \
    \   return count(s -> s == \"I\", split(S, ['.', '?', '!']))\nend", "    boredoms\
    \ = 0\n    for sentence in split(S, r\"[.?!]\")\n        if startswith(sentence,\
    \ \"I\")\n            boredoms += 1\n        end\n    end\n    return boredoms\n\
    end", "    count = 0\n    for i in 1:length(S)\n        if S[i] == 'I'\n     \
    \       count += 1\n        end\n    end\n    return count\nend", "    return\
    \ count(x->x==\"I\", split(S, r\"\\.|\\?|\\!\"))\nend", "    boredoms = 0\n  \
    \  for word in split(S, r\"[.?!]\")\n        if word[1] == 'I'\n            boredoms\
    \ += 1\n        end\n    end\n    return boredoms\nend", "    # your code here\n\
    end", "    return count(s->s==\"I\", split(S, r\"\\.|\\?|\\!\"))\nend", "    #\
    \ your code here\nend", "    boredoms = 0\n    for sentence in split(S, r\"[.?!]\"\
    )\n        if startswith(sentence, \"I\")\n            boredoms += 1\n       \
    \ end\n    end\n    return boredoms\nend", "    return count(x->x==\"I\", split(S,\
    \ r\"[.?!]\"))\nend", "    count = 0\n    for word in split(S, \" \")\n      \
    \  if word == \"I\"\n            count += 1\n        end\n    end\n    return\
    \ count\nend", "    # your code here\nend", "    boredoms = 0\n    for sentence\
    \ in split(S, r\"[.?!]\")\n        if startswith(sentence, \"I\")\n          \
    \  boredoms += 1\n        end\n    end\n    return boredoms\nend", "    # your\
    \ code goes here\n    return 0\nend", "    # your code here\nend", "    boredoms\
    \ = 0\n    for sentence in split(S, r\"[.?!]\")\n        if startswith(sentence,\
    \ \"I\")\n            boredoms += 1\n        end\n    end\n    return boredoms\n\
    end", "    boredoms = 0\n    for word in split(S, ['.', '?', '!'])\n        if\
    \ word[1] == 'I'\n            boredoms += 1\n        end\n    end\n    return\
    \ boredoms\nend", "    boredoms = 0\n    for word in split(S, r\"[.?!]\")\n  \
    \      if startswith(word, \"I\")\n            boredoms += 1\n        end\n  \
    \  end\n    return boredoms\nend", "    boredoms = 0\n    for word in split(S,\
    \ r\"[.!?]\")\n        if startswith(word, \"I\")\n            boredoms += 1\n\
    \        end\n    end\n    return boredoms\nend", "    boredoms = 0\n    for word\
    \ in split(S, r\"[.?!]\")\n        if startswith(word, \"I\")\n            boredoms\
    \ += 1\n        end\n    end\n    return boredoms\nend", "    boredoms = 0\n \
    \   for sentence in split(S, r\"[.?!]\")\n        if startswith(sentence, \"I\"\
    )\n            boredoms += 1\n        end\n    end\n    return boredoms\nend",
  "    boredoms = 0\n    for word in split(S, r\"[.?!]\")\n        if startswith(word,\
    \ \"I\")\n            boredoms += 1\n        end\n    end\n    return boredoms\n\
    end", "    count = 0\n    for i in 1:length(S)\n        if S[i] == 'I'\n     \
    \       count += 1\n        end\n    end\n    return count\nend", "    # Your\
    \ code here\nend", "    return count(x->x==\"I\", split(S, r\"\\.|\\?|\\!\"))\n\
    end", "    boredoms = 0\n    for word in split(S, r\"\\s+\")\n        if word\
    \ == \"I\"\n            boredoms += 1\n        end\n    end\n    return boredoms\n\
    end", "    return count(s -> s[1] == 'I', split(S, r\"[.?!]\"))\nend", "    boredoms\
    \ = 0\n    for sentence in split(S, r\"[.?!]\")\n        if startswith(sentence,\
    \ \"I\")\n            boredoms += 1\n        end\n    end\n    return boredoms\n\
    end", "    return count(S, \"I\")\nend", "    # your code here\nend", "    return\
    \ count(S, r\"I\")\nend", "    return count(x->x==\"I\", split(S, r\"\\.|\\?|\\\
    !\"))\nend", "    count = 0\n    for i in 1:length(S)\n        if S[i] == 'I'\n\
    \            count += 1\n        end\n    end\n    return count\nend", "    return\
    \ count(x->x==\"I\", split(S, r\"[.?!]\"))\nend", "    # your code here\nend",
  "    boredoms = 0\n    for word in split(S, r\"[\\.\\?\\!]\")\n        if word[1]\
    \ == 'I'\n            boredoms += 1\n        end\n    end\n    return boredoms\n\
    end", "    # your code here\nend", "    boredoms = 0\n    for word in split(S,\
    \ r\"[.?!]\")\n        if startswith(word, \"I\")\n            boredoms += 1\n\
    \        end\n    end\n    return boredoms\nend", "    # Your code here\nend",
  "    boredoms = 0\n    for word in split(S, r\"[.?!]\")\n        if startswith(word,\
    \ \"I\")\n            boredoms += 1\n        end\n    end\n    return boredoms\n\
    end", "    return sum(1 for s in split(S, r\"[.?!]\") if occursin(\"I\", s))\n\
    end", "    boredoms = 0\n    for sentence in split(S, \".\")\n        if split(sentence,\
    \ \" \")[1] == \"I\"\n            boredoms += 1\n        end\n    end\n    return\
    \ boredoms\nend", "    boredoms = 0\n    for word in split(S, ['.', '?', '!'])\n\
    \        if word[1] == 'I'\n            boredoms += 1\n        end\n    end\n\
    \    return boredoms\nend", "    boredoms = 0\n    sentences = split(S, [\".\"\
    , \"?\", \"!\"])\n    for sentence in sentences\n        if startswith(sentence,\
    \ \"I\")\n            boredoms += 1\n        end\n    end\n    return boredoms\n\
    end", "    boredoms = 0\n    for sentence in split(S, r\"[.?!]\")\n        if\
    \ startswith(sentence, \"I\")\n            boredoms += 1\n        end\n    end\n\
    \    return boredoms\nend", "    boredoms = 0\n    for word in split(S, r\"[.?!]\"\
    )\n        if startswith(word, \"I\")\n            boredoms += 1\n        end\n\
    \    end\n    return boredoms\nend", "    boredoms = 0\n    sentences = split(S,\
    \ r\"[.?!]\")\n    for sentence in sentences\n        if startswith(sentence,\
    \ \"I\")\n            boredoms += 1\n        end\n    end\n    return boredoms\n\
    end", "    boredoms = 0\n    for word in split(S, r\"[.?!]\")\n        if word[1]\
    \ == 'I'\n            boredoms += 1\n        end\n    end\n    return boredoms\n\
    end", "    boredoms = 0\n    for word in split(S, r\"[.?!]\")\n        if startswith(word,\
    \ \"I\")\n            boredoms += 1\n        end\n    end\n    return boredoms\n\
    end", "    return count(S, \"I\")\nend", "    boredoms = 0\n    for word in split(S,\
    \ r\"[.?!]\")\n        if startswith(word, \"I\")\n            boredoms += 1\n\
    \        end\n    end\n    return boredoms\nend", "    boredoms = 0\n    for sentence\
    \ in split(S, r\"[.?!]\")\n        if startswith(sentence, \"I\")\n          \
    \  boredoms += 1\n        end\n    end\n    return boredoms\nend", "    boredoms\
    \ = 0\n    for word in split(S, \" \")\n        if word[1] == 'I'\n          \
    \  boredoms += 1\n        end\n    end\n    return boredoms\nend", "    # your\
    \ code here\nend", "    boredoms = 0\n    for word in split(S, ['.', '?', '!'])\n\
    \        if startswith(word, \"I\")\n            boredoms += 1\n        end\n\
    \    end\n    return boredoms\nend", "    boredoms = 0\n    for word in split(S,\
    \ ['.', '?', '!'])\n        if word[1] == 'I'\n            boredoms += 1\n   \
    \     end\n    end\n    return boredoms\nend", "    boredoms = 0\n    for sentence\
    \ in split(S, \".\")\n        if startswith(sentence, \"I\")\n            boredoms\
    \ += 1\n        end\n    end\n    return boredoms\nend", "    boredoms = 0\n \
    \   for word in split(S, r\"[.?!]\")\n        if startswith(word, \"I\")\n   \
    \         boredoms += 1\n        end\n    end\n    return boredoms\nend", "  \
    \  # your code here\nend", "    count = 0\n    for word in split(S, ['.', '?',\
    \ '!'])\n        if word[1] == 'I'\n            count += 1\n        end\n    end\n\
    \    return count\nend", "    boredoms = 0\n    for word in split(S, r\"[.?!]\"\
    )\n        if startswith(word, \"I\")\n            boredoms += 1\n        end\n\
    \    end\n    return boredoms\nend", "    return count(x->x==\"I\",split(S,r\"\
    [.?!]\"))\nend", "    count = 0\n    for i in 1:length(S)\n        if S[i] ==\
    \ 'I'\n            count += 1\n        end\n    end\n    return count\nend", " \
    \   count = 0\n    for i in 1:length(S)\n        if S[i] == 'I'\n            count\
    \ += 1\n        end\n    end\n    return count\nend", "    boredoms = 0\n    for\
    \ sentence in split(S, r\"[.?!]\")\n        if startswith(sentence, \"I\")\n \
    \           boredoms += 1\n        end\n    end\n    return boredoms\nend", " \
    \   return count(S, \"I\")\nend", "    boredoms = 0\n    for sentence in split(S,\
    \ r\"[.?!]\")\n        if startswith(sentence, \"I\")\n            boredoms +=\
    \ 1\n        end\n    end\n    return boredoms\nend", "    count = 0\n    for\
    \ word in split(S, \" \")\n        if word == \"I\"\n            count += 1\n\
    \        end\n    end\n    return count\nend", "    boredoms = 0\n    for sentence\
    \ in split(S, r\"[.?!]\")\n        if startswith(sentence, \"I\")\n          \
    \  boredoms += 1\n        end\n    end\n    return boredoms\nend", "    # your\
    \ code here\nend", "    count = 0\n    for word in split(S, ['.', '?', '!'])\n\
    \        if word[1] == 'I'\n            count += 1\n        end\n    end\n   \
    \ return count\nend", "    boredoms = 0\n    for i in 1:length(S)\n        if\
    \ S[i] == 'I'\n            boredoms += 1\n        end\n    end\n    return boredoms\n\
    end", "    return count(x->x==\"I\",split(S,\".!?\"))\nend", "    count = 0\n\
    \    for s in split(S, \".\")\n        if startswith(s, \"I\")\n            count\
    \ += 1\n        end\n    end\n    return count\nend", "    boredoms = 0\n    for\
    \ word in split(S, \" \")\n        if word == \"I\"\n            boredoms += 1\n\
    \        end\n    end\n    return boredoms\nend", "    \"\"\"\n    Count the number\
    \ of boredoms in the string S.\n    \"\"\"\n    boredoms = 0\n    for sentence\
    \ in split(S, r\"[.?!]\")\n        if startswith(sentence, \"I\")\n          \
    \  boredoms += 1\n        end\n    end\n    return boredoms\nend"]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"

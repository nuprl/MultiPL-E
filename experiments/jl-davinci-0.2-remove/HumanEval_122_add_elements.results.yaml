language: jl
name: HumanEval_122_add_elements
results:
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    result = 0\n    for i in 1:k\n        if arr[i] < 10\n\
    \            result += arr[i]\n        elseif arr[i] < 100\n            result\
    \ += arr[i]\n        end\n    end\n    return result\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76,\
    \ 87, 88, 99], 3) == -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\
    \t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if length(string(arr[i]))\
    \ <= 2\n            sum += arr[i]\n        end\n    end\n    return sum\nend\n\
    using Test\n\n@testset begin\n\ncandidate = add_elements;\n\t@test(candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111, 121, 3,\
    \ 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8, 9], 4)\
    \ == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\t\
    @test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 1
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    # Initialize sum\n    sum = 0\n    # Loop through the\
    \ first k elements of arr\n    for i in 1:k\n        # If the element is less\
    \ than 10, add it to the sum\n        if arr[i] < 10\n            sum += arr[i]\n\
    \        # If the element is less than 100, add the tens digit to the sum\n  \
    \      elseif arr[i] < 100\n            sum += div(arr[i], 10)\n        end\n\
    \    end\n    # Return the sum\n    return sum\nend\nusing Test\n\n@testset begin\n\
    \ncandidate = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88,\
    \ 99], 3) == -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpbwna8a76.jl:30

    '
  stdout: "test set: Test Failed at /tmp/tmpbwna8a76.jl:35\n  Expression: candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125\n   Evaluated: 15 == 125\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpbwna8a76.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpbwna8a76.jl:32\ntest set: Test\
    \ Failed at /tmp/tmpbwna8a76.jl:36\n  Expression: candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24\n   Evaluated: 5 == 24\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpbwna8a76.jl:36 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpbwna8a76.jl:32\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    3     2      5\n"
  timestamp: 1659978974
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 1
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpy581mje4.jl:1\nin expression starting at /tmp/tmpy581mje4.jl:1\n"
  stdout: ''
  timestamp: 1659978973
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    total = 0\n    for i in 1:k\n        if arr[i] < 10\n\
    \            total += arr[i]\n        elseif arr[i] < 100\n            total +=\
    \ arr[i]\n        end\n    end\n    return total\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76,\
    \ 87, 88, 99], 3) == -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\
    \t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 1
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] > 9\n  \
    \          sum += arr[i]\n        end\n    end\n    return sum\nend\nusing Test\n\
    \n@testset begin\n\ncandidate = add_elements;\n\t@test(candidate([1, -2, -3, 41,\
    \ 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6],\
    \ 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 0 passed, 5 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmp_zy_wept.jl:23

    '
  stdout: "test set: Test Failed at /tmp/tmp_zy_wept.jl:26\n  Expression: candidate([1,\
    \ -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4\n   Evaluated: 0 == -4\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_zy_wept.jl:26 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_zy_wept.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp_zy_wept.jl:27\n  Expression: candidate([111, 121, 3, 4000,\
    \ 5, 6], 2) == 0\n   Evaluated: 232 == 0\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmp_zy_wept.jl:27 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmp_zy_wept.jl:25\ntest set: Test Failed at /tmp/tmp_zy_wept.jl:28\n\
    \  Expression: candidate([11, 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125\n   Evaluated:\
    \ 122 == 125\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_zy_wept.jl:28 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_zy_wept.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp_zy_wept.jl:29\n  Expression: candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24\n   Evaluated: 4132 == 24\nStacktrace:\n [1] macro\
    \ expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmp_zy_wept.jl:29 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmp_zy_wept.jl:25\ntest set: Test\
    \ Failed at /tmp/tmp_zy_wept.jl:30\n  Expression: candidate([1], 1) == 1\n   Evaluated:\
    \ 0 == 1\nStacktrace:\n [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/std"
  timestamp: 1659978974
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 1
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpy581mje4.jl:1\nin expression starting at /tmp/tmpy581mje4.jl:1\n"
  stdout: ''
  timestamp: 1659978973
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    total = 0\n    for i in 1:k\n        if arr[i] < 10\n\
    \            total += arr[i]\n        elseif arr[i] < 100\n            total +=\
    \ arr[i]\n        end\n    end\n    return total\nend\nusing Test\n\n@testset\
    \ begin\n\ncandidate = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76,\
    \ 87, 88, 99], 3) == -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\
    \t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 1
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    # Initialize the sum\n    sum = 0\n    # Iterate over\
    \ the first k elements of the array\n    for i in 1:k\n        # If the element\
    \ is less than 10, add it to the sum\n        if arr[i] < 10\n            sum\
    \ += arr[i]\n        # If the element is less than 100, add the first digit to\
    \ the sum\n        elseif arr[i] < 100\n            sum += div(arr[i], 10)\n \
    \       end\n    end\n    # Return the sum\n    return sum\nend\nusing Test\n\n\
    @testset begin\n\ncandidate = add_elements;\n\t@test(candidate([1, -2, -3, 41,\
    \ 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6],\
    \ 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111,\
    \ 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpiaqlmc2n.jl:30

    '
  stdout: "test set: Test Failed at /tmp/tmpiaqlmc2n.jl:35\n  Expression: candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125\n   Evaluated: 15 == 125\nStacktrace:\n\
    \ [1] macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpiaqlmc2n.jl:35 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpiaqlmc2n.jl:32\ntest set: Test\
    \ Failed at /tmp/tmpiaqlmc2n.jl:36\n  Expression: candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24\n   Evaluated: 5 == 24\nStacktrace:\n [1] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445 [inlined]\n\
    \ [2] macro expansion\n   @ /tmp/tmpiaqlmc2n.jl:36 [inlined]\n [3] macro expansion\n\
    \   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283 [inlined]\n\
    \ [4] top-level scope\n   @ /tmp/tmpiaqlmc2n.jl:32\nTest Summary: | Pass  Fail\
    \  Total\ntest set      |    3     2      5\n"
  timestamp: 1659978974
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 1
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpy581mje4.jl:1\nin expression starting at /tmp/tmpy581mje4.jl:1\n"
  stdout: ''
  timestamp: 1659978973
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 1
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    # Initialize a counter to keep track of the number of\
    \ elements\n    # we have added to the sum\n    counter = 0\n    # Initialize\
    \ a variable to keep track of the sum\n    sum = 0\n    # Iterate over the array\n\
    \    for i in arr\n        # If the counter is less than k, add the element to\
    \ the sum\n        if counter < k\n            sum += i\n            counter +=\
    \ 1\n        # If the counter is greater than or equal to k, break out of the\
    \ loop\n        else\n            break\n        end\n    end\n    # Return the\
    \ sum\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  status: SyntaxError
  stderr: 'ERROR: LoadError: Some tests did not pass: 3 passed, 2 failed, 0 errored,
    0 broken.

    in expression starting at /tmp/tmpjp98nd2a.jl:34

    '
  stdout: "test set: Test Failed at /tmp/tmpjp98nd2a.jl:38\n  Expression: candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0\n   Evaluated: 232 == 0\nStacktrace:\n [1] macro\
    \ expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjp98nd2a.jl:38 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjp98nd2a.jl:36\ntest set: Test\
    \ Failed at /tmp/tmpjp98nd2a.jl:40\n  Expression: candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24\n   Evaluated: 4135 == 24\nStacktrace:\n [1] macro\
    \ expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:445\
    \ [inlined]\n [2] macro expansion\n   @ /tmp/tmpjp98nd2a.jl:40 [inlined]\n [3]\
    \ macro expansion\n   @ ~/.conda/envs/polyglot/share/julia/stdlib/v1.7/Test/src/Test.jl:1283\
    \ [inlined]\n [4] top-level scope\n   @ /tmp/tmpjp98nd2a.jl:36\nTest Summary:\
    \ | Pass  Fail  Total\ntest set      |    3     2      5\n"
  timestamp: 1659978974
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 1
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpy581mje4.jl:1\nin expression starting at /tmp/tmpy581mje4.jl:1\n"
  stdout: ''
  timestamp: 1659978973
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 1
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    \"\"\"\n    Given a non-empty array of integers arr and\
    \ an integer k, return\n    the sum of the elements with at most two digits from\
    \ the first k elements of arr.\nusing Test\n\n@testset begin\n\ncandidate = add_elements;\n\
    \t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) == -4)\n\t@test(candidate([111,\
    \ 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11, 21, 3, 90, 5, 6, 7, 8,\
    \ 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000, 5, 6, 7, 8, 9], 4) == 24)\n\
    \t@test(candidate([1], 1) == 1)\nend\n"
  status: SyntaxError
  stderr: "ERROR: LoadError: syntax: incomplete: invalid string syntax\nStacktrace:\n\
    \ [1] top-level scope\n   @ /tmp/tmpy581mje4.jl:1\nin expression starting at /tmp/tmpy581mje4.jl:1\n"
  stdout: ''
  timestamp: 1659978973
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972
- exit_code: 0
  program: "\"\"\"\n    Given a non-empty array of integers arr and an integer k,\
    \ return\n    the sum of the elements with at most two digits from the first k\
    \ elements of arr.\n\n    Example:\n\n    \n    Constraints:\n        1. 1 <=\
    \ len(arr) <= 100\n        2. 1 <= k <= len(arr)\n    \"\"\"\nfunction add_elements(arr::Vector{Int64},\
    \ k::Int64)::Int64 \n    sum = 0\n    for i in 1:k\n        if arr[i] < 10\n \
    \           sum += arr[i]\n        elseif arr[i] < 100\n            sum += arr[i]\n\
    \        end\n    end\n    return sum\nend\nusing Test\n\n@testset begin\n\ncandidate\
    \ = add_elements;\n\t@test(candidate([1, -2, -3, 41, 57, 76, 87, 88, 99], 3) ==\
    \ -4)\n\t@test(candidate([111, 121, 3, 4000, 5, 6], 2) == 0)\n\t@test(candidate([11,\
    \ 21, 3, 90, 5, 6, 7, 8, 9], 4) == 125)\n\t@test(candidate([111, 21, 3, 4000,\
    \ 5, 6, 7, 8, 9], 4) == 24)\n\t@test(candidate([1], 1) == 1)\nend\n"
  status: OK
  stderr: 'Test Summary: | Pass  Total

    test set      |    5      5

    '
  stdout: ''
  timestamp: 1659978972

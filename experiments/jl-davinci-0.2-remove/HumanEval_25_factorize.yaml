name: HumanEval_25_factorize
language: jl
prompt: "\"\"\" Return list of prime factors of given integer in the order from smallest\
  \ to largest.\n    Each of the factors should be listed number of times corresponding\
  \ to how many times it appeares in factorization.\n    Input number should be equal\
  \ to the product of all factors\n                \"\"\"\nfunction factorize(n::Int64)::Vector{Int64}\
  \ \n"
tests: "using Test\n\n@testset begin\n\ncandidate = factorize;\n\t@test(candidate(2)\
  \ == [2])\n\t@test(candidate(4) == [2, 2])\n\t@test(candidate(8) == [2, 2, 2])\n\
  \t@test(candidate(57) == [3, 19])\n\t@test(candidate(3249) == [3, 3, 19, 19])\n\t\
  @test(candidate(185193) == [3, 3, 3, 19, 19, 19])\n\t@test(candidate(20577) == [3,\
  \ 19, 19, 19])\n\t@test(candidate(18) == [2, 3, 3])\nend\n"
completions: ["    factors = []\n    while n % 2 == 0\n        push!(factors, 2)\n\
    \        n /= 2\n    end\n    for i in 3:2:floor(Int64, sqrt(n))\n        while\
    \ n % i == 0\n            push!(factors, i)\n            n /= i\n        end\n\
    \    end\n    if n > 2\n        push!(factors, n)\n    end\n    return factors\n\
    end", "    factors = []\n    i = 2\n    while n > 1\n        while n % i == 0\n\
    \            push!(factors, i)\n            n /= i\n        end\n        i +=\
    \ 1\n    end\n    return factors\nend", "    factors = []\n    i = 2\n    while\
    \ n > 1\n        while n % i == 0\n            push!(factors, i)\n           \
    \ n /= i\n        end\n        i += 1\n    end\n    return factors\nend", "  \
    \  factors = []\n    for i in 2:n\n        while n % i == 0\n            push!(factors,\
    \ i)\n            n /= i\n        end\n    end\n    return factors\nend", "  \
    \  factors = []\n    i = 2\n    while n > 1\n        while n % i == 0\n      \
    \      push!(factors, i)\n            n /= i\n        end\n        i += 1\n  \
    \  end\n    return factors\nend", "    # your code here\nend", "    factors =\
    \ []\n    i = 2\n    while n > 1\n        while n % i == 0\n            push!(factors,\
    \ i)\n            n /= i\n        end\n        i += 1\n    end\n    return factors\n\
    end", "    factors = []\n    for i in 2:n\n        while n % i == 0\n        \
    \    push!(factors, i)\n            n /= i\n        end\n    end\n    return factors\n\
    end", "    factors = []\n    i = 2\n    while n > 1\n        while n % i == 0\n\
    \            push!(factors, i)\n            n /= i\n        end\n        i +=\
    \ 1\n    end\n    return factors\nend", "    factors = []\n    for i in 2:n\n\
    \        while n % i == 0\n            push!(factors, i)\n            n /= i\n\
    \        end\n    end\n    return factors\nend", "    factors = []\n    i = 2\n\
    \    while n > 1\n        while n % i == 0\n            push!(factors, i)\n  \
    \          n /= i\n        end\n        i += 1\n    end\n    return factors\n\
    end", "    factors = []\n    i = 2\n    while n > 1\n        while n % i == 0\n\
    \            push!(factors, i)\n            n /= i\n        end\n        i +=\
    \ 1\n    end\n    return factors\nend", "    # Your code here\nend", "    factors\
    \ = []\n    for i in 2:n\n        if n % i == 0\n            push!(factors, i)\n\
    \            n = n / i\n            i = i - 1\n        end\n    end\n    return\
    \ factors\nend", "    factors = []\n    while n % 2 == 0\n        push!(factors,\
    \ 2)\n        n /= 2\n    end\n    for i in 3:2:floor(Int64, sqrt(n))\n      \
    \  while n % i == 0\n            push!(factors, i)\n            n /= i\n     \
    \   end\n    end\n    if n > 2\n        push!(factors, n)\n    end\n    return\
    \ factors\nend", "    if n < 2\n        return []\n    end\n    factors = []\n\
    \    while n % 2 == 0\n        push!(factors, 2)\n        n /= 2\n    end\n  \
    \  for i in 3:2:floor(Int64, sqrt(n))\n        while n % i == 0\n            push!(factors,\
    \ i)\n            n /= i\n        end\n    end\n    if n > 2\n        push!(factors,\
    \ n)\n    end\n    return factors\nend", "    factors = []\n    i = 2\n    while\
    \ n > 1\n        while n % i == 0\n            push!(factors, i)\n           \
    \ n /= i\n        end\n        i += 1\n    end\n    return factors\nend", "  \
    \  factors = []\n    for i in 2:n\n        while n % i == 0\n            push!(factors,\
    \ i)\n            n /= i\n        end\n    end\n    return factors\nend", "  \
    \  factors = []\n    while n % 2 == 0\n        push!(factors, 2)\n        n /=\
    \ 2\n    end\n    for i = 3:2:floor(Int64, sqrt(n))\n        while n % i == 0\n\
    \            push!(factors, i)\n            n /= i\n        end\n    end\n   \
    \ if n > 2\n        push!(factors, n)\n    end\n    return factors\nend", "  \
    \  factors = []\n    for i = 2:n\n        while n % i == 0\n            push!(factors,\
    \ i)\n            n /= i\n        end\n    end\n    return factors\nend", "  \
    \  factors = []\n    for i in 2:n\n        if n % i == 0\n            push!(factors,\
    \ i)\n            n /= i\n            i -= 1\n        end\n    end\n    return\
    \ factors\nend", "    factors = []\n    while n % 2 == 0\n        push!(factors,\
    \ 2)\n        n /= 2\n    end\n    i = 3\n    while i <= sqrt(n)\n        while\
    \ n % i == 0\n            push!(factors, i)\n            n /= i\n        end\n\
    \        i += 2\n    end\n    if n > 2\n        push!(factors, n)\n    end\n \
    \   return factors\nend", "    factors = []\n    i = 2\n    while n > 1\n    \
    \    while n % i == 0\n            push!(factors, i)\n            n /= i\n   \
    \     end\n        i += 1\n    end\n    return factors\nend", "    factors = []\n\
    \    i = 2\n    while n > 1\n        while n % i == 0\n            push!(factors,\
    \ i)\n            n /= i\n        end\n        i += 1\n    end\n    return factors\n\
    end", "    factors = []\n    i = 2\n    while n > 1\n        while n % i == 0\n\
    \            push!(factors, i)\n            n /= i\n        end\n        i +=\
    \ 1\n    end\n    return factors\nend", "    factors = []\n    while n % 2 ==\
    \ 0\n        push!(factors, 2)\n        n /= 2\n    end\n    i = 3\n    while\
    \ i <= sqrt(n)\n        while n % i == 0\n            push!(factors, i)\n    \
    \        n /= i\n        end\n        i += 2\n    end\n    if n > 2\n        push!(factors,\
    \ n)\n    end\n    return factors\nend", "    factors = []\n    i = 2\n    while\
    \ n > 1\n        if n % i == 0\n            push!(factors, i)\n            n =\
    \ n / i\n        else\n            i += 1\n        end\n    end\n    return factors\n\
    end", "    factors = []\n    i = 2\n    while n > 1\n        while n % i == 0\n\
    \            push!(factors, i)\n            n /= i\n        end\n        i +=\
    \ 1\n    end\n    return factors\nend", "    factors = []\n    for i in 2:n\n\
    \        while n % i == 0\n            push!(factors, i)\n            n /= i\n\
    \        end\n    end\n    return factors\nend", "    factors = []\n    i = 2\n\
    \    while n > 1\n        while n % i == 0\n            push!(factors, i)\n  \
    \          n /= i\n        end\n        i += 1\n    end\n    return factors\n\
    end", "    factors = []\n    i = 2\n    while n != 1\n        if n % i == 0\n\
    \            push!(factors, i)\n            n = n / i\n        else\n        \
    \    i += 1\n        end\n    end\n    return factors\nend", "    factors = []\n\
    \    while n % 2 == 0\n        push!(factors, 2)\n        n /= 2\n    end\n  \
    \  for i = 3:2:floor(Int64, sqrt(n))\n        while n % i == 0\n            push!(factors,\
    \ i)\n            n /= i\n        end\n    end\n    if n > 2\n        push!(factors,\
    \ n)\n    end\n    return factors\nend", "    factors = []\n    while n % 2 ==\
    \ 0\n        push!(factors, 2)\n        n /= 2\n    end\n    for i in 3:2:floor(Int64,\
    \ sqrt(n))\n        while n % i == 0\n            push!(factors, i)\n        \
    \    n /= i\n        end\n    end\n    if n > 2\n        push!(factors, n)\n \
    \   end\n    return factors\nend", "    factors = []\n    while n % 2 == 0\n \
    \       push!(factors, 2)\n        n /= 2\n    end\n    i = 3\n    while i <=\
    \ sqrt(n)\n        while n % i == 0\n            push!(factors, i)\n         \
    \   n /= i\n        end\n        i += 2\n    end\n    if n > 2\n        push!(factors,\
    \ n)\n    end\n    return factors\nend", "    factors = []\n    while n % 2 ==\
    \ 0\n        push!(factors, 2)\n        n /= 2\n    end\n    for i in 3:2:floor(Int64,\
    \ sqrt(n))\n        while n % i == 0\n            push!(factors, i)\n        \
    \    n /= i\n        end\n    end\n    if n > 2\n        push!(factors, n)\n \
    \   end\n    return factors\nend", "    factors = []\n    while n % 2 == 0\n \
    \       push!(factors, 2)\n        n /= 2\n    end\n    for i in 3:2:floor(Int64,\
    \ sqrt(n))\n        while n % i == 0\n            push!(factors, i)\n        \
    \    n /= i\n        end\n    end\n    if n > 2\n        push!(factors, n)\n \
    \   end\n    return factors\nend", "    factors = []\n    i = 2\n    while n >\
    \ 1\n        while n % i == 0\n            push!(factors, i)\n            n /=\
    \ i\n        end\n        i += 1\n    end\n    return factors\nend", "    factors\
    \ = []\n    i = 2\n    while n > 1\n        if n % i == 0\n            push!(factors,\
    \ i)\n            n = n / i\n        else\n            i += 1\n        end\n \
    \   end\n    return factors\nend", "    factors = []\n    while n % 2 == 0\n \
    \       push!(factors, 2)\n        n /= 2\n    end\n    i = 3\n    while i <=\
    \ sqrt(n)\n        while n % i == 0\n            push!(factors, i)\n         \
    \   n /= i\n        end\n        i += 2\n    end\n    if n > 2\n        push!(factors,\
    \ n)\n    end\n    return factors\nend", "    factors = []\n    i = 2\n    while\
    \ n > 1\n        if n % i == 0\n            push!(factors, i)\n            n =\
    \ n / i\n        else\n            i += 1\n        end\n    end\n    return factors\n\
    end", "    factors = []\n    i = 2\n    while n > 1\n        while n % i == 0\n\
    \            push!(factors, i)\n            n /= i\n        end\n        i +=\
    \ 1\n    end\n    return factors\nend", "    factors = []\n    for i in 2:n\n\
    \        if n%i == 0\n            push!(factors, i)\n            n = n/i\n   \
    \         i = i-1\n        end\n    end\n    return factors\nend", "    factors\
    \ = []\n    i = 2\n    while n > 1\n        while n % i == 0\n            push!(factors,\
    \ i)\n            n /= i\n        end\n        i += 1\n    end\n    return factors\n\
    end", "    factors = Int64[]\n    while n % 2 == 0\n        push!(factors, 2)\n\
    \        n /= 2\n    end\n    for i = 3:2:floor(Int, sqrt(n))\n        while n\
    \ % i == 0\n            push!(factors, i)\n            n /= i\n        end\n \
    \   end\n    if n > 2\n        push!(factors, n)\n    end\n    return factors\n\
    end", "    factors = []\n    i = 2\n    while n > 1\n        while n % i == 0\n\
    \            push!(factors, i)\n            n /= i\n        end\n        i +=\
    \ 1\n    end\n    return factors\nend", "    factors = []\n    while n % 2 ==\
    \ 0\n        push!(factors, 2)\n        n /= 2\n    end\n    for i in 3:2:floor(Int64,\
    \ sqrt(n))\n        while n % i == 0\n            push!(factors, i)\n        \
    \    n /= i\n        end\n    end\n    if n > 2\n        push!(factors, n)\n \
    \   end\n    return factors\nend", "    factors = []\n    i = 2\n    while n >\
    \ 1\n        while n % i == 0\n            push!(factors, i)\n            n /=\
    \ i\n        end\n        i += 1\n    end\n    return factors\nend", "    factors\
    \ = []\n    i = 2\n    while n > 1\n        while n % i == 0\n            push!(factors,\
    \ i)\n            n /= i\n        end\n        i += 1\n    end\n    return factors\n\
    end", "    factors = []\n    i = 2\n    while n > 1\n        while n % i == 0\n\
    \            push!(factors, i)\n            n /= i\n        end\n        i +=\
    \ 1\n    end\n    return factors\nend", "    factors = []\n    while n > 1\n \
    \       for i in 2:n\n            if n % i == 0\n                push!(factors,\
    \ i)\n                n = n / i\n                break\n            end\n    \
    \    end\n    end\n    return factors\nend", "    factors = []\n    i = 2\n  \
    \  while n > 1\n        while n % i == 0\n            push!(factors, i)\n    \
    \        n /= i\n        end\n        i += 1\n    end\n    return factors\nend",
  "    factors = []\n    i = 2\n    while n > 1\n        while n % i == 0\n      \
    \      push!(factors, i)\n            n /= i\n        end\n        i += 1\n  \
    \  end\n    return factors\nend", "    factors = []\n    while n % 2 == 0\n  \
    \      push!(factors, 2)\n        n /= 2\n    end\n    for i in 3:2:floor(Int64,\
    \ sqrt(n))\n        while n % i == 0\n            push!(factors, i)\n        \
    \    n /= i\n        end\n    end\n    if n > 2\n        push!(factors, n)\n \
    \   end\n    return factors\nend", "    factors = []\n    i = 2\n    while n >\
    \ 1\n        while n % i == 0\n            push!(factors, i)\n            n /=\
    \ i\n        end\n        i += 1\n    end\n    return factors\nend", "    factors\
    \ = []\n    while n % 2 == 0\n        push!(factors, 2)\n        n /= 2\n    end\n\
    \    i = 3\n    while i <= sqrt(n)\n        while n % i == 0\n            push!(factors,\
    \ i)\n            n /= i\n        end\n        i += 2\n    end\n    if n > 2\n\
    \        push!(factors, n)\n    end\n    return factors\nend", "    factors =\
    \ []\n    i = 2\n    while n > 1\n        while n % i == 0\n            push!(factors,\
    \ i)\n            n /= i\n        end\n        i += 1\n    end\n    return factors\n\
    end", "    factors = []\n    while n % 2 == 0\n        push!(factors, 2)\n   \
    \     n /= 2\n    end\n    for i = 3:2:floor(Int64, sqrt(n))\n        while n\
    \ % i == 0\n            push!(factors, i)\n            n /= i\n        end\n \
    \   end\n    if n > 2\n        push!(factors, n)\n    end\n    return factors\n\
    end", "    factors = []\n    while n % 2 == 0\n        push!(factors, 2)\n   \
    \     n /= 2\n    end\n    i = 3\n    while i <= sqrt(n)\n        while n % i\
    \ == 0\n            push!(factors, i)\n            n /= i\n        end\n     \
    \   i += 2\n    end\n    if n > 2\n        push!(factors, n)\n    end\n    return\
    \ factors\nend", "    factors = []\n    i = 2\n    while n != 1\n        if n\
    \ % i == 0\n            push!(factors, i)\n            n = n / i\n        else\n\
    \            i += 1\n        end\n    end\n    return factors\nend", "    # Your\
    \ code here\n    # You can use `isprime` function\nend", "    factors = []\n \
    \   i = 2\n    while n > 1\n        while n % i == 0\n            push!(factors,\
    \ i)\n            n /= i\n        end\n        i += 1\n    end\n    return factors\n\
    end", "    factors = []\n    i = 2\n    while n > 1\n        while n % i == 0\n\
    \            push!(factors, i)\n            n /= i\n        end\n        i +=\
    \ 1\n    end\n    return factors\nend", "    factors = []\n    for i in 2:n\n\
    \        while n % i == 0\n            push!(factors, i)\n            n /= i\n\
    \        end\n    end\n    return factors\nend", "    factors = []\n    i = 2\n\
    \    while n > 1\n        while n % i == 0\n            push!(factors, i)\n  \
    \          n /= i\n        end\n        i += 1\n    end\n    return factors\n\
    end", "    factors = []\n    i = 2\n    while n > 1\n        if n % i == 0\n \
    \           push!(factors, i)\n            n = n / i\n        else\n         \
    \   i += 1\n        end\n    end\n    return factors\nend", "    factors = []\n\
    \    i = 2\n    while n > 1\n        while n % i == 0\n            push!(factors,\
    \ i)\n            n /= i\n        end\n        i += 1\n    end\n    return factors\n\
    end", "    factors = Int64[]\n    while n % 2 == 0\n        push!(factors, 2)\n\
    \        n /= 2\n    end\n    i = 3\n    while i <= sqrt(n)\n        while n %\
    \ i == 0\n            push!(factors, i)\n            n /= i\n        end\n   \
    \     i += 2\n    end\n    if n > 2\n        push!(factors, n)\n    end\n    return\
    \ factors\nend", "    factors = []\n    i = 2\n    while n > 1\n        while\
    \ n % i == 0\n            push!(factors, i)\n            n /= i\n        end\n\
    \        i += 1\n    end\n    return factors\nend", "    factors = Int64[]\n \
    \   for i in 2:n\n        while n % i == 0\n            push!(factors, i)\n  \
    \          n /= i\n        end\n    end\n    return factors\nend", "    factors\
    \ = []\n    while n % 2 == 0\n        push!(factors, 2)\n        n /= 2\n    end\n\
    \    for i in 3:2:floor(Int64, sqrt(n))\n        while n % i == 0\n          \
    \  push!(factors, i)\n            n /= i\n        end\n    end\n    if n > 2\n\
    \        push!(factors, n)\n    end\n    return factors\nend", "    factors =\
    \ []\n    for i in 2:n\n        while n % i == 0\n            push!(factors, i)\n\
    \            n /= i\n        end\n    end\n    return factors\nend", "    factors\
    \ = []\n    i = 2\n    while n != 1\n        while n % i == 0\n            push!(factors,\
    \ i)\n            n = n / i\n        end\n        i += 1\n    end\n    return\
    \ factors\nend", "    factors = []\n    for i in 2:n\n        if n % i == 0\n\
    \            push!(factors, i)\n            n = n / i\n            i = i - 1\n\
    \        end\n    end\n    return factors\nend", "    factors = []\n    i = 2\n\
    \    while n > 1\n        while n % i == 0\n            push!(factors, i)\n  \
    \          n /= i\n        end\n        i += 1\n    end\n    return factors\n\
    end", "    factors = Int64[]\n    i = 2\n    while n > 1\n        while n % i\
    \ == 0\n            push!(factors, i)\n            n /= i\n        end\n     \
    \   i += 1\n    end\n    return factors\nend", "    factors = []\n    i = 2\n\
    \    while n > 1\n        while n % i == 0\n            push!(factors, i)\n  \
    \          n /= i\n        end\n        i += 1\n    end\n    return factors\n\
    end", "    factors = []\n    i = 2\n    while n > 1\n        while n % i == 0\n\
    \            push!(factors, i)\n            n /= i\n        end\n        i +=\
    \ 1\n    end\n    return factors\nend", "    factors = []\n    for i in 2:n\n\
    \        while n % i == 0\n            push!(factors, i)\n            n /= i\n\
    \        end\n    end\n    return factors\nend", "    if n == 1\n        return\
    \ [1]\n    end\n    factors = []\n    while n % 2 == 0\n        push!(factors,\
    \ 2)\n        n = n / 2\n    end\n    for i = 3:2:floor(Int64, sqrt(n))\n    \
    \    while n % i == 0\n            push!(factors, i)\n            n = n / i\n\
    \        end\n    end\n    if n > 2\n        push!(factors, n)\n    end\n    return\
    \ factors\nend", "    factors = []\n    i = 2\n    while n > 1\n        while\
    \ n % i == 0\n            push!(factors, i)\n            n /= i\n        end\n\
    \        i += 1\n    end\n    return factors\nend", "    factors = []\n    while\
    \ n % 2 == 0\n        push!(factors, 2)\n        n /= 2\n    end\n    for i in\
    \ 3:2:floor(Int64, sqrt(n))\n        while n % i == 0\n            push!(factors,\
    \ i)\n            n /= i\n        end\n    end\n    if n > 2\n        push!(factors,\
    \ n)\n    end\n    return factors\nend", "    factors = []\n    while n > 1\n\
    \        for i = 2:n\n            if n % i == 0\n                push!(factors,\
    \ i)\n                n = n / i\n                break\n            end\n    \
    \    end\n    end\n    return factors\nend", "    factors = []\n    i = 2\n  \
    \  while n > 1\n        while n % i == 0\n            push!(factors, i)\n    \
    \        n /= i\n        end\n        i += 1\n    end\n    return factors\nend",
  "    factors = []\n    while n % 2 == 0\n        push!(factors, 2)\n        n /=\
    \ 2\n    end\n    for i in 3:2:floor(Int64, sqrt(n))\n        while n % i == 0\n\
    \            push!(factors, i)\n            n /= i\n        end\n    end\n   \
    \ if n > 2\n        push!(factors, n)\n    end\n    return factors\nend", "  \
    \  # YOUR CODE HERE\n    factors = []\n    for i in 2:n\n        if n%i == 0\n\
    \            push!(factors, i)\n            n = n/i\n            i = 1\n     \
    \   end\n    end\n    return factors\nend", "    factors = []\n    for i in 2:n\n\
    \        while n % i == 0\n            push!(factors, i)\n            n /= i\n\
    \        end\n    end\n    return factors\nend", "    if n < 2\n        return\
    \ []\n    end\n    factors = []\n    i = 2\n    while n > 1\n        while n %\
    \ i == 0\n            push!(factors, i)\n            n /= i\n        end\n   \
    \     i += 1\n    end\n    return factors\nend", "    factors = []\n    i = 2\n\
    \    while n > 1\n        while n % i == 0\n            push!(factors, i)\n  \
    \          n /= i\n        end\n        i += 1\n    end\n    return factors\n\
    end", "    factors = []\n    i = 2\n    while n > 1\n        while n % i == 0\n\
    \            push!(factors, i)\n            n /= i\n        end\n        i +=\
    \ 1\n    end\n    return factors\nend", "    factors = []\n    i = 2\n    while\
    \ n > 1\n        while n % i == 0\n            push!(factors, i)\n           \
    \ n /= i\n        end\n        i += 1\n    end\n    return factors\nend", "  \
    \  factors = []\n    for i in 2:n\n        while n % i == 0\n            push!(factors,\
    \ i)\n            n /= i\n        end\n    end\n    return factors\nend", "  \
    \  # your code here\nend", "    # your code here\n    factors = []\n    for i\
    \ in 2:n\n        if n % i == 0\n            push!(factors, i)\n            n\
    \ = n / i\n            i = i - 1\n        end\n    end\n    return factors\nend",
  "    factors = []\n    i = 2\n    while n > 1\n        while n % i == 0\n      \
    \      push!(factors, i)\n            n /= i\n        end\n        i += 1\n  \
    \  end\n    return factors\nend", "    # your code here\nend", "    factors =\
    \ []\n    i = 2\n    while n > 1\n        while n % i == 0\n            push!(factors,\
    \ i)\n            n /= i\n        end\n        i += 1\n    end\n    return factors\n\
    end", "    factors = []\n    i = 2\n    while n > 1\n        while n % i == 0\n\
    \            push!(factors, i)\n            n /= i\n        end\n        i +=\
    \ 1\n    end\n    return factors\nend", "    factors = []\n    i = 2\n    while\
    \ n > 1\n        if n % i == 0\n            push!(factors, i)\n            n =\
    \ n / i\n        else\n            i += 1\n        end\n    end\n    return factors\n\
    end", "    # Your code here\nend", "    # your code here\nend", "    factors =\
    \ []\n    while n % 2 == 0\n        push!(factors, 2)\n        n /= 2\n    end\n\
    \    for i in 3:2:floor(Int64, sqrt(n))\n        while n % i == 0\n          \
    \  push!(factors, i)\n            n /= i\n        end\n    end\n    if n > 2\n\
    \        push!(factors, n)\n    end\n    return factors\nend", "    factors =\
    \ []\n    while n % 2 == 0\n        push!(factors, 2)\n        n /= 2\n    end\n\
    \    for i in 3:2:floor(Int64, sqrt(n))\n        while n % i == 0\n          \
    \  push!(factors, i)\n            n /= i\n        end\n    end\n    if n > 2\n\
    \        push!(factors, n)\n    end\n    return factors\nend", "    factors =\
    \ []\n    while n % 2 == 0\n        push!(factors, 2)\n        n /= 2\n    end\n\
    \    i = 3\n    while i <= sqrt(n)\n        while n % i == 0\n            push!(factors,\
    \ i)\n            n /= i\n        end\n        i += 2\n    end\n    if n > 2\n\
    \        push!(factors, n)\n    end\n    return factors\nend", "    factors =\
    \ []\n    i = 2\n    while n > 1\n        while n % i == 0\n            push!(factors,\
    \ i)\n            n /= i\n        end\n        i += 1\n    end\n    return factors\n\
    end", "    factors = []\n    i = 2\n    while n > 1\n        while n % i == 0\n\
    \            push!(factors, i)\n            n /= i\n        end\n        i +=\
    \ 1\n    end\n    return factors\nend", "    factors = []\n    while n > 1\n \
    \       for i in 2:n\n            if n % i == 0\n                push!(factors,\
    \ i)\n                n = n / i\n                break\n            end\n    \
    \    end\n    end\n    return factors\nend", "    factors = []\n    while n >\
    \ 1\n        for i in 2:n\n            if isprime(i) && n % i == 0\n         \
    \       push!(factors, i)\n                n = n / i\n                break\n\
    \            end\n        end\n    end\n    return factors\nend", "    if n <\
    \ 2\n        return []\n    end\n    factors = []\n    while n % 2 == 0\n    \
    \    push!(factors, 2)\n        n /= 2\n    end\n    i = 3\n    while i <= sqrt(n)\n\
    \        while n % i == 0\n            push!(factors, i)\n            n /= i\n\
    \        end\n        i += 2\n    end\n    if n > 2\n        push!(factors, n)\n\
    \    end\n    return factors\nend", "    if n < 2\n        return []\n    end\n\
    \    factors = []\n    for i = 2:n\n        while n % i == 0\n            push!(factors,\
    \ i)\n            n /= i\n        end\n    end\n    return factors\nend", "  \
    \  factors = []\n    i = 2\n    while n > 1\n        while n % i == 0\n      \
    \      push!(factors, i)\n            n /= i\n        end\n        i += 1\n  \
    \  end\n    return factors\nend", "    factors = []\n    i = 2\n    while n >\
    \ 1\n        while n % i == 0\n            push!(factors, i)\n            n /=\
    \ i\n        end\n        i += 1\n    end\n    return factors\nend", "    factors\
    \ = []\n    i = 2\n    while n > 1\n        while n % i == 0\n            push!(factors,\
    \ i)\n            n /= i\n        end\n        i += 1\n    end\n    return factors\n\
    end", "    factors = []\n    while n > 1\n        for i in 2:n\n            if\
    \ n % i == 0\n                push!(factors, i)\n                n = n / i\n \
    \               break\n            end\n        end\n    end\n    return factors\n\
    end", "    factors = []\n    while n % 2 == 0\n        push!(factors, 2)\n   \
    \     n /= 2\n    end\n    i = 3\n    while i <= sqrt(n)\n        while n % i\
    \ == 0\n            push!(factors, i)\n            n /= i\n        end\n     \
    \   i += 2\n    end\n    if n > 2\n        push!(factors, n)\n    end\n    return\
    \ factors\nend", "    factors = []\n    i = 2\n    while n > 1\n        while\
    \ n % i == 0\n            push!(factors, i)\n            n /= i\n        end\n\
    \        i += 1\n    end\n    return factors\nend", "    factors = []\n    i =\
    \ 2\n    while n > 1\n        while n % i == 0\n            push!(factors, i)\n\
    \            n /= i\n        end\n        i += 1\n    end\n    return factors\n\
    end", "    factors = []\n    i = 2\n    while n > 1\n        while n % i == 0\n\
    \            push!(factors, i)\n            n /= i\n        end\n        i +=\
    \ 1\n    end\n    return factors\nend", "    factors = []\n    while n % 2 ==\
    \ 0\n        push!(factors, 2)\n        n /= 2\n    end\n    for i in 3:2:floor(Int64,\
    \ sqrt(n))\n        while n % i == 0\n            push!(factors, i)\n        \
    \    n /= i\n        end\n    end\n    if n > 2\n        push!(factors, n)\n \
    \   end\n    return factors\nend", "    factors = []\n    i = 2\n    while n >\
    \ 1\n        while n % i == 0\n            push!(factors, i)\n            n /=\
    \ i\n        end\n        i += 1\n    end\n    return factors\nend", "    factors\
    \ = []\n    while n % 2 == 0\n        push!(factors, 2)\n        n /= 2\n    end\n\
    \    for i in 3:2:floor(Int64, sqrt(n))\n        while n % i == 0\n          \
    \  push!(factors, i)\n            n /= i\n        end\n    end\n    if n > 2\n\
    \        push!(factors, n)\n    end\n    return factors\nend", "    # your code\
    \ here\nend", "    factors = []\n    i = 2\n    while n > 1\n        while n %\
    \ i == 0\n            push!(factors, i)\n            n /= i\n        end\n   \
    \     i += 1\n    end\n    return factors\nend", "    # your code here\nend",
  "    # your code here\nend", "    # your code here\nend", "    factors = []\n  \
    \  i = 2\n    while n > 1\n        while n % i == 0\n            push!(factors,\
    \ i)\n            n /= i\n        end\n        i += 1\n    end\n    return factors\n\
    end", "    factors = []\n    i = 2\n    while n > 1\n        while n % i == 0\n\
    \            n /= i\n            push!(factors, i)\n        end\n        i +=\
    \ 1\n    end\n    return factors\nend", "    factors = []\n    for i in 2:n\n\
    \        while n % i == 0\n            push!(factors, i)\n            n /= i\n\
    \        end\n    end\n    return factors\nend", "    factors = []\n    while\
    \ n % 2 == 0\n        push!(factors, 2)\n        n /= 2\n    end\n    for i in\
    \ 3:2:floor(Int64, sqrt(n))\n        while n % i == 0\n            push!(factors,\
    \ i)\n            n /= i\n        end\n    end\n    if n > 2\n        push!(factors,\
    \ n)\n    end\n    return factors\nend", "    # your code here\nend", "    factors\
    \ = []\n    while n % 2 == 0\n        push!(factors, 2)\n        n /= 2\n    end\n\
    \    for i in 3:2:floor(Int64, sqrt(n))\n        while n % i == 0\n          \
    \  push!(factors, i)\n            n /= i\n        end\n    end\n    if n > 2\n\
    \        push!(factors, n)\n    end\n    return factors\nend", "    factors =\
    \ []\n    while n % 2 == 0\n        push!(factors, 2)\n        n /= 2\n    end\n\
    \    for i in 3:2:floor(Int64, sqrt(n))\n        while n % i == 0\n          \
    \  push!(factors, i)\n            n /= i\n        end\n    end\n    if n > 2\n\
    \        push!(factors, n)\n    end\n    return factors\nend", "    # Your code\
    \ here\nend", "    factors = []\n    while n % 2 == 0\n        push!(factors,\
    \ 2)\n        n /= 2\n    end\n    for i in 3:2:floor(Int64, sqrt(n))\n      \
    \  while n % i == 0\n            push!(factors, i)\n            n /= i\n     \
    \   end\n    end\n    if n > 2\n        push!(factors, n)\n    end\n    return\
    \ factors\nend", "    factors = []\n    while n % 2 == 0\n        push!(factors,\
    \ 2)\n        n /= 2\n    end\n    for i in 3:2:floor(Int64, sqrt(n))\n      \
    \  while n % i == 0\n            push!(factors, i)\n            n /= i\n     \
    \   end\n    end\n    if n > 2\n        push!(factors, n)\n    end\n    return\
    \ factors\nend", "    factors = []\n    for i in 2:n\n        while n % i == 0\n\
    \            push!(factors, i)\n            n /= i\n        end\n    end\n   \
    \ return factors\nend", "    # your code here\nend", "    factors = []\n    while\
    \ n % 2 == 0\n        push!(factors, 2)\n        n /= 2\n    end\n    for i in\
    \ 3:2:floor(Int64, sqrt(n))\n        while n % i == 0\n            push!(factors,\
    \ i)\n            n /= i\n        end\n    end\n    if n > 2\n        push!(factors,\
    \ n)\n    end\n    return factors\nend", "    factors = []\n    for i in 2:n\n\
    \        while n % i == 0\n            push!(factors, i)\n            n /= i\n\
    \        end\n    end\n    return factors\nend", "    # your code here\nend",
  "    factors = []\n    i = 2\n    while n > 1\n        while n % i == 0\n      \
    \      push!(factors, i)\n            n /= i\n        end\n        i += 1\n  \
    \  end\n    return factors\nend", "    # your code here\n    factors = []\n  \
    \  i = 2\n    while n > 1\n        if n % i == 0\n            push!(factors, i)\n\
    \            n = n / i\n        else\n            i += 1\n        end\n    end\n\
    \    return factors\nend", "    factors = []\n    i = 2\n    while n > 1\n   \
    \     while n % i == 0\n            push!(factors, i)\n            n /= i\n  \
    \      end\n        i += 1\n    end\n    return factors\nend", "    factors =\
    \ []\n    while n % 2 == 0\n        push!(factors, 2)\n        n /= 2\n    end\n\
    \    i = 3\n    while i <= sqrt(n)\n        while n % i == 0\n            push!(factors,\
    \ i)\n            n /= i\n        end\n        i += 2\n    end\n    if n > 2\n\
    \        push!(factors, n)\n    end\n    return factors\nend", "    factors =\
    \ []\n    for i in 2:n\n        while n % i == 0\n            push!(factors, i)\n\
    \            n /= i\n        end\n    end\n    return factors\nend", "    factors\
    \ = []\n    i = 2\n    while n > 1\n        while n % i == 0\n            push!(factors,\
    \ i)\n            n /= i\n        end\n        i += 1\n    end\n    return factors\n\
    end", "    # YOUR CODE HERE\n    factors = []\n    while n % 2 == 0\n        push!(factors,\
    \ 2)\n        n = n / 2\n    end\n    for i in 3:2:sqrt(n)\n        while n %\
    \ i == 0\n            push!(factors, i)\n            n = n / i\n        end\n\
    \    end\n    if n > 2\n        push!(factors, n)\n    end\n    return factors\n\
    end", "    factors = []\n    i = 2\n    while n > 1\n        while n % i == 0\n\
    \            push!(factors, i)\n            n /= i\n        end\n        i +=\
    \ 1\n    end\n    return factors\nend", "    factors = []\n    i = 2\n    while\
    \ n > 1\n        while n % i == 0\n            push!(factors, i)\n           \
    \ n /= i\n        end\n        i += 1\n    end\n    return factors\nend", "  \
    \  factors = []\n    for i in 2:n\n        while n % i == 0\n            push!(factors,\
    \ i)\n            n /= i\n        end\n    end\n    return factors\nend", "  \
    \  if n < 2\n        return []\n    end\n    factors = []\n    while n % 2 ==\
    \ 0\n        push!(factors, 2)\n        n /= 2\n    end\n    for i in 3:2:floor(Int64,\
    \ sqrt(n))\n        while n % i == 0\n            push!(factors, i)\n        \
    \    n /= i\n        end\n    end\n    if n > 2\n        push!(factors, n)\n \
    \   end\n    return factors\nend", "    factors = []\n    i = 2\n    while n >\
    \ 1\n        while n % i == 0\n            push!(factors, i)\n            n /=\
    \ i\n        end\n        i += 1\n    end\n    return factors\nend", "    factors\
    \ = []\n    while n % 2 == 0\n        push!(factors, 2)\n        n /= 2\n    end\n\
    \    i = 3\n    while i <= sqrt(n)\n        while n % i == 0\n            push!(factors,\
    \ i)\n            n /= i\n        end\n        i += 2\n    end\n    if n > 2\n\
    \        push!(factors, n)\n    end\n    return factors\nend", "    # your code\
    \ here\n    factors = []\n    i = 2\n    while n > 1\n        if n % i == 0\n\
    \            push!(factors, i)\n            n = n / i\n        else\n        \
    \    i += 1\n        end\n    end\n    return factors\nend", "    factors = []\n\
    \    i = 2\n    while n > 1\n        if n % i == 0\n            push!(factors,\
    \ i)\n            n = n / i\n        else\n            i += 1\n        end\n \
    \   end\n    return factors\nend", "    factors = []\n    i = 2\n    while n >\
    \ 1\n        while n % i == 0\n            push!(factors, i)\n            n /=\
    \ i\n        end\n        i += 1\n    end\n    return factors\nend", "    factors\
    \ = []\n    while n % 2 == 0\n        push!(factors, 2)\n        n /= 2\n    end\n\
    \    i = 3\n    while i <= sqrt(n)\n        while n % i == 0\n            push!(factors,\
    \ i)\n            n /= i\n        end\n        i += 2\n    end\n    if n > 2\n\
    \        push!(factors, n)\n    end\n    return factors\nend", "    factors =\
    \ []\n    i = 2\n    while n > 1\n        while n % i == 0\n            push!(factors,\
    \ i)\n            n /= i\n        end\n        i += 1\n    end\n    return factors\n\
    end", "    factors = []\n    i = 2\n    while n > 1\n        while n % i == 0\n\
    \            push!(factors, i)\n            n /= i\n        end\n        i +=\
    \ 1\n    end\n    return factors\nend", "    # your code here\nend", "    factors\
    \ = []\n    i = 2\n    while n > 1\n        while n % i == 0\n            push!(factors,\
    \ i)\n            n /= i\n        end\n        i += 1\n    end\n    return factors\n\
    end", "    factors = []\n    while n % 2 == 0\n        push!(factors, 2)\n   \
    \     n /= 2\n    end\n    for i in 3:2:floor(Int64, sqrt(n))\n        while n\
    \ % i == 0\n            push!(factors, i)\n            n /= i\n        end\n \
    \   end\n    if n > 2\n        push!(factors, n)\n    end\n    return factors\n\
    end", "    factors = []\n    i = 2\n    while n > 1\n        while n % i == 0\n\
    \            push!(factors, i)\n            n /= i\n        end\n        i +=\
    \ 1\n    end\n    return factors\nend", "    factors = []\n    i = 2\n    while\
    \ n > 1\n        while n % i == 0\n            push!(factors, i)\n           \
    \ n /= i\n        end\n        i += 1\n    end\n    return factors\nend", "  \
    \  if n < 2\n        return []\n    end\n    factors = []\n    while n % 2 ==\
    \ 0\n        push!(factors, 2)\n        n = n / 2\n    end\n    i = 3\n    while\
    \ i <= sqrt(n)\n        while n % i == 0\n            push!(factors, i)\n    \
    \        n = n / i\n        end\n        i += 2\n    end\n    if n > 2\n     \
    \   push!(factors, n)\n    end\n    return factors\nend", "    # your code here\n\
    end", "    factors = []\n    for i in 2:n\n        while n % i == 0\n        \
    \    push!(factors, i)\n            n /= i\n        end\n    end\n    return factors\n\
    end", "    factors = Int64[]\n    while n % 2 == 0\n        push!(factors, 2)\n\
    \        n /= 2\n    end\n    for i in 3:2:floor(Int64, sqrt(n))\n        while\
    \ n % i == 0\n            push!(factors, i)\n            n /= i\n        end\n\
    \    end\n    if n > 2\n        push!(factors, n)\n    end\n    return factors\n\
    end", "    factors = []\n    for i in 2:n\n        while n % i == 0\n        \
    \    push!(factors, i)\n            n /= i\n        end\n    end\n    return factors\n\
    end", "    # your code here\nend", "    factors = []\n    i = 2\n    while n >\
    \ 1\n        while n % i == 0\n            push!(factors, i)\n            n /=\
    \ i\n        end\n        i += 1\n    end\n    return factors\nend", "    factors\
    \ = Int64[]\n    for i in 2:n\n        while n % i == 0\n            push!(factors,\
    \ i)\n            n /= i\n        end\n    end\n    return factors\nend", "  \
    \  factors = []\n    i = 2\n    while n > 1\n        while n % i == 0\n      \
    \      push!(factors, i)\n            n /= i\n        end\n        i += 1\n  \
    \  end\n    return factors\nend", "    factors = []\n    for i in 2:n\n      \
    \  while n % i == 0\n            push!(factors, i)\n            n /= i\n     \
    \   end\n    end\n    return factors\nend", "    factors = []\n    while n % 2\
    \ == 0\n        push!(factors, 2)\n        n /= 2\n    end\n    i = 3\n    while\
    \ i*i <= n\n        while n % i == 0\n            push!(factors, i)\n        \
    \    n /= i\n        end\n        i += 2\n    end\n    if n > 2\n        push!(factors,\
    \ n)\n    end\n    return factors\nend", "    factors = []\n    while n % 2 ==\
    \ 0\n        push!(factors, 2)\n        n /= 2\n    end\n    i = 3\n    while\
    \ i <= sqrt(n)\n        while n % i == 0\n            push!(factors, i)\n    \
    \        n /= i\n        end\n        i += 2\n    end\n    if n > 2\n        push!(factors,\
    \ n)\n    end\n    return factors\nend", "    factors = []\n    i = 2\n    while\
    \ n > 1\n        if n % i == 0\n            push!(factors, i)\n            n =\
    \ n / i\n        else\n            i += 1\n        end\n    end\n    return factors\n\
    end", "    factors = []\n    while n % 2 == 0\n        push!(factors, 2)\n   \
    \     n /= 2\n    end\n    for i in 3:2:floor(Int64, sqrt(n))\n        while n\
    \ % i == 0\n            push!(factors, i)\n            n /= i\n        end\n \
    \   end\n    if n > 2\n        push!(factors, n)\n    end\n    return factors\n\
    end", "    factors = []\n    i = 2\n    while n != 1\n        if n % i == 0\n\
    \            push!(factors, i)\n            n = n / i\n        else\n        \
    \    i += 1\n        end\n    end\n    return factors\nend", "    factors = []\n\
    \    i = 2\n    while n > 1\n        while n % i == 0\n            push!(factors,\
    \ i)\n            n /= i\n        end\n        i += 1\n    end\n    return factors\n\
    end", "    factors = []\n    i = 2\n    while n > 1\n        while n % i == 0\n\
    \            push!(factors, i)\n            n /= i\n        end\n        i +=\
    \ 1\n    end\n    return factors\nend", "    factors = []\n    while n % 2 ==\
    \ 0\n        push!(factors, 2)\n        n /= 2\n    end\n    for i in 3:2:floor(Int64,\
    \ sqrt(n))\n        while n % i == 0\n            push!(factors, i)\n        \
    \    n /= i\n        end\n    end\n    if n > 2\n        push!(factors, n)\n \
    \   end\n    return factors\nend", "    factors = []\n    i = 2\n    while n >\
    \ 1\n        while n % i == 0\n            push!(factors, i)\n            n /=\
    \ i\n        end\n        i += 1\n    end\n    return factors\nend", "    factors\
    \ = []\n    i = 2\n    while n > 1\n        while n % i == 0\n            push!(factors,\
    \ i)\n            n /= i\n        end\n        i += 1\n    end\n    return factors\n\
    end", "    factors = Int64[]\n    while n % 2 == 0\n        push!(factors, 2)\n\
    \        n /= 2\n    end\n    for i = 3:2:floor(Int, sqrt(n))\n        while n\
    \ % i == 0\n            push!(factors, i)\n            n /= i\n        end\n \
    \   end\n    if n > 2\n        push!(factors, n)\n    end\n    return factors\n\
    end", "    # TODO: Implement this function\n    # Hint: You can use `isprime`\
    \ function from `Primes` package\n    # Hint: You can use `push!` function to\
    \ add element to the end of vector\n    # Hint: You can use `pop!` function to\
    \ remove last element from vector\n    # Hint: You can use `*` operator to multiply\
    \ numbers\n    # Hint: You can use `==` operator to compare numbers\n    # Hint:\
    \ You can use `^` operator to raise number to power\n    # Hint: You can use `sqrt`\
    \ function to calculate square root\n    # Hint: You can use `round` function\
    \ to round number to nearest integer\n    # Hint: You can use `div` function to\
    \ calculate integer division\n    # Hint: You can use `mod` function to calculate\
    \ remainder of integer division\n    # Hint: You can use `push!` function to add\
    \ element to the end of vector\n    # Hint: You can use `pop!` function to remove\
    \ last element from vector\n    # Hint: You can use `*` operator to multiply numbers\n\
    \    # Hint: You can use `==` operator to compare numbers\n    # Hint: You can\
    \ use `^` operator to raise number to power\n    # Hint: You can use `sqrt` function\
    \ to calculate square root\n    # Hint: You can use `round` function to round\
    \ number to nearest integer\n    # Hint: You can use `div` function to calculate\
    \ integer division\n    # Hint: You can use `mod` function to calculate remainder\
    \ of integer division\n    # Hint: You can use `push!` function to add element\
    \ to the end of vector\n    # Hint: You can use `pop!` function to remove last\
    \ element from vector\n    # Hint: You can use `*` operator to multiply numbers\n\
    \    # Hint: You can use `==` operator to compare numbers\n    # Hint: You can\
    \ use `^` operator to raise number to power\n    # Hint: You can use `sqrt` function\
    \ to calculate square root\n    # Hint: You can use `round` function to round\
    \ number to nearest integer\n    # Hint: You can use `div` function to calculate\
    \ integer division\n    # Hint: You", "    factors = []\n    i = 2\n    while\
    \ n > 1\n        while n % i == 0\n            push!(factors, i)\n           \
    \ n /= i\n        end\n        i += 1\n    end\n    return factors\nend", "  \
    \  factors = []\n    while n % 2 == 0\n        push!(factors, 2)\n        n /=\
    \ 2\n    end\n    i = 3\n    while i <= sqrt(n)\n        while n % i == 0\n  \
    \          push!(factors, i)\n            n /= i\n        end\n        i += 2\n\
    \    end\n    if n > 2\n        push!(factors, n)\n    end\n    return factors\n\
    end", "    factors = []\n    i = 2\n    while n > 1\n        while n % i == 0\n\
    \            push!(factors, i)\n            n /= i\n        end\n        i +=\
    \ 1\n    end\n    return factors\nend", "    # your code here\nend", "    factors\
    \ = []\n    for i in 2:n\n        while n % i == 0\n            push!(factors,\
    \ i)\n            n /= i\n        end\n    end\n    return factors\nend", "  \
    \  factors = []\n    i = 2\n    while n > 1\n        while n % i == 0\n      \
    \      push!(factors, i)\n            n /= i\n        end\n        i += 1\n  \
    \  end\n    return factors\nend", "    factors = []\n    for i in 2:n\n      \
    \  while n % i == 0\n            push!(factors, i)\n            n /= i\n     \
    \   end\n    end\n    return factors\nend", "    if n < 2\n        return []\n\
    \    end\n    factors = []\n    for i = 2:n\n        while n % i == 0\n      \
    \      push!(factors, i)\n            n /= i\n        end\n    end\n    return\
    \ factors\nend", "    factors = []\n    i = 2\n    while n > 1\n        if n %\
    \ i == 0\n            push!(factors, i)\n            n = n / i\n        else\n\
    \            i += 1\n        end\n    end\n    return factors\nend", "    factors\
    \ = []\n    i = 2\n    while n > 1\n        while n % i == 0\n            push!(factors,\
    \ i)\n            n /= i\n        end\n        i += 1\n    end\n    return factors\n\
    end", "    if n == 1\n        return [1]\n    end\n    factors = []\n    i = 2\n\
    \    while n > 1\n        while n % i == 0\n            push!(factors, i)\n  \
    \          n /= i\n        end\n        i += 1\n    end\n    return factors\n\
    end", "    factors = Int64[]\n    i = 2\n    while n > 1\n        while n % i\
    \ == 0\n            push!(factors, i)\n            n /= i\n        end\n     \
    \   i += 1\n    end\n    return factors\nend", "    factors = []\n    while n\
    \ % 2 == 0\n        push!(factors, 2)\n        n /= 2\n    end\n    for i in 3:2:floor(Int64,\
    \ sqrt(n))\n        while n % i == 0\n            push!(factors, i)\n        \
    \    n /= i\n        end\n    end\n    if n > 2\n        push!(factors, n)\n \
    \   end\n    return factors\nend", "    factors = []\n    for i in 2:n\n     \
    \   while n % i == 0\n            push!(factors, i)\n            n /= i\n    \
    \    end\n    end\n    return factors\nend"]
stop_tokens:
- "\nfunction"
- "\nmacro"
- "\n\n"
